d:d2002r1
D2002R1


consolidated fixes for defaulted comparison wording issues
https://wg21.link/d2002r1




-
d:d2003r1
D2003R1


(Untitled)
https://wg21.link/d2003r1




-
d:d2006r1
D2006R1


connect/start as more efficient basis operations for sender/receiver
https://wg21.link/d2006r1




-
d:d2014r1
D2014R1


(Untitled)
https://wg21.link/d2014r1




-
d:d2014r2
D2014R2


D2014R2 - align_val_t support for coroutine state allocation
https://wg21.link/d2014r2




-
d:d2029r1
D2029R1


Proposed resolution for core issues 411, 1656, and 2333; numeric and universal character escapes in character and string literals
https://wg21.link/d2029r1




-
d:d2034r1
D2034R1


(Untitled)
https://wg21.link/d2034r1




-
d:d2045r1
D2045R1


Missing Mandates for the standard library
https://wg21.link/d2045r1




-
d:d2066r1
D2066R1


Minimal Transactional Memory
https://wg21.link/d2066r1




-
d:d2066r10
D2066R10


(Untitled)
https://wg21.link/d2066r10




-
d:d2077r3
D2077R3


(Untitled)
https://wg21.link/d2077r3




-
d:d2081r1
D2081R1


Draft revision of P2081: Rebase the LFTSv3 on C++20
https://wg21.link/d2081r1




-
d:d2082r1
D2082R1


Fixing CTAD for aggregates
https://wg21.link/d2082r1




-
d:d2085r0
D2085R0


Consistent defaulted comparisons
https://wg21.link/d2085r0




-
d:d2089r0
D2089R0


Function parameter constraints are fragile (a response to P1733)
https://wg21.link/d2089r0




-
d:d2091r0
D2091R0


Issues with Range Access CPOs
https://wg21.link/d2091r0




-
d:d2095r0
D2095R0


Resolve lambda init-capture pack grammar (CWG2378)
https://wg21.link/d2095r0




-
d:d2096r0
D2096R0


Generalized wording for partial specializations
https://wg21.link/d2096r0




-
d:d2100
D2100


a response to US062 and FR066
https://wg21.link/d2100




-
d:d2101r0
D2101R0


“Models” subsumes “satisfies” (Wording for US298 and US300)
https://wg21.link/d2101r0




-
d:d2102r0
D2102R0


Make “implicit expression variations” more explicit (Wording for US185)
https://wg21.link/d2102r0




-
d:d2103r0
D2103R0


Omnibus NB comment resolutions
https://wg21.link/d2103r0




-
d:d2104r0
D2104R0


Resolution for GB046 - Disallow changing concept values
https://wg21.link/d2104r0




-
d:d2106r0
D2106R0


Alternative wording for GB315 and GB316
https://wg21.link/d2106r0




-
d:d2108r0
D2108R0


CWG "ready" issue resolutions
https://wg21.link/d2108r0




-
d:d2116r0
D2116R0


Remove tuple-like protocol support from fixed-extent span
https://wg21.link/d2116r0




-
d:d2308r0
D2308R0


Template parameter initialization
https://wg21.link/d2308r0




-
d:d2314r4
D2314R4


(Untitled)
https://wg21.link/d2314r4




-
d:d2361
D2361


unevaluated strings
https://wg21.link/d2361




-
d:d2415r2
D2415R2


What is a view?
https://wg21.link/d2415r2




-
d:d2418r2
D2418R2


P2418R2 Add support for std::generator-like types to std::format
https://wg21.link/d2418r2




-
d:d2432r1
D2432R1


P2432R1: fix istream_view
https://wg21.link/d2432r1




-
d:d2450r0
D2450R0


Library Issues to be moved at plenary
https://wg21.link/d2450r0




-
d:d2460
D2460


p2460 inner-scope namespace entitities
https://wg21.link/d2460




-
d:d2462r0
D2462R0


Resolutions for CWG "ready" issues
https://wg21.link/d2462r0




-
d:d2530r3
D2530R3


Changes based on LWG 2023-02-07 review
https://wg21.link/d2530r3




-
d:d2572r1
D2572R1


P2572R1: std::format() fill character allowances
https://wg21.link/d2572r1




-
d:d2609r3
D2609R3


P2609R3
https://wg21.link/d2609r3




-
d:d2616r4
D2616R4


(Untitled)
https://wg21.link/d2616r4




-
d:d2621
D2621


UB? In My Lexer?
https://wg21.link/d2621




-
d:d2652r2
D2652R2


Disallow User Specialization of allocator_traits (Bug fix from R1)
https://wg21.link/d2652r2




-
d:d2674r1
D2674R1


A trait for implicit lifetime types
https://wg21.link/d2674r1




-
d:d2679r2
D2679R2


Fixing std::start_lifetime_as and std::start_lifetime_as_array
https://wg21.link/d2679r2




-
d:d2693r1
D2693R1


Formatting thread::id and stacktrace
https://wg21.link/d2693r1




-
d:d2736r2
D2736R2


Referencing The Unicode Standard
https://wg21.link/d2736r2




-
d:d2770r0
D2770R0


Stashing stashing iterators for proper flattening
https://wg21.link/d2770r0




-
d:d2786r0
D2786R0


trivial relocation proposal in response to P1144R6
https://wg21.link/d2786r0




-
d:d2787r1
D2787R1


pmr::generator - Promise Types are not Values
https://wg21.link/d2787r1




-
d:d2788r0
D2788R0


Linkage for modular constants
https://wg21.link/d2788r0




-
d:d2789r0
D2789R0


C++ Standard Library Ready Issues to be moved in Issaquah, Feb. 2023
https://wg21.link/d2789r0




-
d:d2790r0
D2790R0


Standard Library Immediate Issues
https://wg21.link/d2790r0




-
d:d2796r0
D2796R0


Core Language Working Group "ready" Issues for the February, 2023 meeting
https://wg21.link/d2796r0




-
d:d2797r0
D2797R0


2692, 2687 Static and explicit object member functions with the same parameter-type-lists
https://wg21.link/d2797r0




-
d:d2808r0
D2808R0


Internal linkage in the global module
https://wg21.link/d2808r0




-
