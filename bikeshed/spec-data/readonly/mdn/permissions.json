{
    "dom-permissionstatus-onchange": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/PermissionStatus.json",
            "name": "onchange",
            "slug": "API/PermissionStatus/onchange",
            "summary": "The onchange event handler of the PermissionStatus interface is called whenever the PermissionStatus.state property changes.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": {
                    "version_added": "43"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PermissionStatus.onchange"
        }
    ],
    "dom-permissionstatus-state": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/PermissionStatus.json",
            "name": "state",
            "slug": "API/PermissionStatus/state",
            "summary": "The state read-only property of the PermissionStatus interface returns the state of a requested permission. This property returns one of 'granted', 'denied', or 'prompt'.",
            "support": {
                "chrome": [
                    {
                        "version_added": "44"
                    },
                    {
                        "alternative_name": "status",
                        "version_added": "43",
                        "version_removed": "44"
                    }
                ],
                "chrome_android": [
                    {
                        "version_added": "44"
                    },
                    {
                        "alternative_name": "status",
                        "version_added": "43",
                        "version_removed": "44"
                    }
                ],
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "alternative_name": "status",
                        "version_added": false,
                        "version_removed": "44"
                    }
                ]
            },
            "title": "PermissionStatus.state"
        }
    ],
    "status-of-a-permission": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/PermissionStatus.json",
            "name": "PermissionStatus",
            "slug": "API/PermissionStatus",
            "summary": "The PermissionStatus interface of the Permissions API provides the state of an object and an event handler for monitoring changes to said state.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": {
                    "version_added": "43"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": false,
                    "notes": "See <a href='https://crbug.com/490120'>bug 490120</a>"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "PermissionStatus"
        }
    ],
    "dom-permissions-query": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/Permissions.json",
            "name": "query",
            "slug": "API/Permissions/query",
            "summary": "The Permissions.query() method of the Permissions interface returns the state of a user permission on the global scope.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": {
                    "version_added": "43"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Permissions.query()"
        }
    ],
    "permissions-interface": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/Permissions.json",
            "name": "Permissions",
            "slug": "API/Permissions",
            "summary": "The Permissions interface of the Permissions API provides the core Permission API functionality, such as methods for querying and revoking permissions",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": {
                    "version_added": "43"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": {
                    "version_added": "46"
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": true
                },
                "opera_android": {
                    "version_added": true
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "4.0"
                },
                "webview_android": {
                    "version_added": false,
                    "notes": "See <a href='https://crbug.com/490120'>bug 490120</a>"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Permissions"
        }
    ],
    "accelerometer": [
        {
            "engines": [
                "blink"
            ],
            "needsflag": [
                "blink"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "accelerometer",
            "slug": "HTTP/Headers/Feature-Policy/accelerometer",
            "summary": "The HTTP Feature-Policy header accelerometer directive controls whether the current document is allowed to gather information about the acceleration of the device through the Accelerometer interface.",
            "support": {
                "chrome": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "chrome_android": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "56",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "opera_android": {
                    "version_added": "48",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                }
            },
            "title": "Feature-Policy: accelerometer"
        }
    ],
    "ambient-light-sensor": [
        {
            "engines": [
                "blink"
            ],
            "needsflag": [
                "blink"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "ambient-light-sensor",
            "slug": "HTTP/Headers/Feature-Policy/ambient-light-sensor",
            "summary": "The HTTP Feature-Policy header ambient-light-sensor directive controls whether the current document is allowed to gather information about the amount of light in the environment around the device through the AmbientLightSensor interface.",
            "support": {
                "chrome": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "chrome_android": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "56",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "opera_android": {
                    "version_added": "48",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                }
            },
            "title": "Feature-Policy: ambient-light-sensor"
        }
    ],
    "media-devices": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "camera",
            "slug": "HTTP/Headers/Feature-Policy/camera",
            "summary": "The HTTP Feature-Policy header camera directive controls whether the current document is allowed to use video input devices. When this policy is enabled, the Promise returned by MediaDevices.getUserMedia() will reject with a NotAllowedError.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": {
                    "version_added": "60"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": "11.1"
                },
                "safari_ios": {
                    "version_added": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "60"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: camera"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "microphone",
            "slug": "HTTP/Headers/Feature-Policy/microphone",
            "summary": "The HTTP Feature-Policy header microphone directive controls whether the current document is allowed to use audio input devices. When this policy is enabled, the Promise returned by MediaDevices.getUserMedia() will reject with a NotAllowedError.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": {
                    "version_added": "60"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": "11.1"
                },
                "safari_ios": {
                    "version_added": "11.3"
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "60"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: microphone"
        }
    ],
    "screen-capture": [
        {
            "engines": [
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "display-capture",
            "slug": "HTTP/Headers/Feature-Policy/display-capture",
            "summary": "The HTTP Feature-Policy header display-capture directive controls whether or not the document is permitted to use Screen Capture API, i.e.,getDisplayMedia() to capture the screen's contents.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "67",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "67",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "Feature-Policy: display-capture"
        }
    ],
    "geolocation": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "geolocation",
            "slug": "HTTP/Headers/Feature-Policy/geolocation",
            "summary": "The HTTP Feature-Policy header geolocation directive controls whether the current document is allowed to use the Geolocation Interface. When this policy is enabled, calls to getCurrentPosition() and watchPosition() will cause those functions' callbacks to be invoked with a GeolocationPositionError code of PERMISSION_DENIED.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": {
                    "version_added": "60"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "47"
                },
                "opera_android": {
                    "version_added": "44"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "60"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: geolocation"
        }
    ],
    "gyroscope": [
        {
            "engines": [
                "blink"
            ],
            "needsflag": [
                "blink"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "gyroscope",
            "slug": "HTTP/Headers/Feature-Policy/gyroscope",
            "summary": "The HTTP Feature-Policy header gyroscope directive controls whether the current document is allowed to gather information about the orientation of the device through the Gyroscope interface.",
            "support": {
                "chrome": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "chrome_android": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "56",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "opera_android": {
                    "version_added": "48",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                }
            },
            "title": "Feature-Policy: gyroscope"
        }
    ],
    "magnetometer": [
        {
            "engines": [
                "blink"
            ],
            "needsflag": [
                "blink"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "magnetometer",
            "slug": "HTTP/Headers/Feature-Policy/magnetometer",
            "summary": "The HTTP Feature-Policy header magnetometer directive controls whether the current document is allowed to gather information about the orientation of the device through the Magnetometer interface.",
            "support": {
                "chrome": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "chrome_android": {
                    "version_added": "69",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "56",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "opera_android": {
                    "version_added": "48",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": false
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "#enable-experimental-productivity-features",
                            "value_to_set": "Enabled"
                        }
                    ]
                }
            },
            "title": "Feature-Policy: magnetometer"
        }
    ],
    "midi": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "needsflag": [
                "gecko"
            ],
            "filename": "http/headers/feature-policy.json",
            "name": "midi",
            "slug": "HTTP/Headers/Feature-Policy/midi",
            "summary": "The HTTP Feature-Policy header midi directive controls whether the current document is allowed to use the Web MIDI API. When this policy is enabled, the Promise returned by Navigator.requestMIDIAccess() will reject with a DOMException.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": {
                    "version_added": "60"
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "firefox_android": {
                    "version_added": "65",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.security.featurePolicy.header.enabled",
                            "value_to_set": "true"
                        }
                    ]
                },
                "ie": {
                    "version_added": false
                },
                "opera": {
                    "version_added": "47"
                },
                "opera_android": {
                    "version_added": "44"
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": {
                    "version_added": "60"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: midi"
        }
    ]
}
