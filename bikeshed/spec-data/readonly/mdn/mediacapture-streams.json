{
    "dom-inputdeviceinfo-getcapabilities": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/InputDeviceInfo.json",
            "name": "getCapabilities",
            "slug": "API/InputDeviceInfo/getCapabilities",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/InputDeviceInfo/getCapabilities",
            "summary": "The getCapabilities() method of the InputDeviceInfo interface returns a MediaTrackCapabilities object describing the primary audio or video track of the device's MediaStream.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "InputDeviceInfo.getCapabilities()"
        }
    ],
    "dom-inputdeviceinfo": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/InputDeviceInfo.json",
            "name": "InputDeviceInfo",
            "slug": "API/InputDeviceInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/InputDeviceInfo",
            "summary": "The InputDeviceInfo interface of the Media Streams API gives access to the capabilities of the input device that it represents.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "InputDeviceInfo"
        }
    ],
    "dom-mediadeviceinfo-deviceid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDeviceInfo.json",
            "name": "deviceId",
            "slug": "API/MediaDeviceInfo/deviceId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/deviceId",
            "summary": "The deviceId readonly property of the MediaDeviceInfo interface returns a string that is an identifier for the represented device and is persisted across sessions.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDeviceInfo.deviceId"
        }
    ],
    "dom-mediadeviceinfo-groupid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDeviceInfo.json",
            "name": "groupId",
            "slug": "API/MediaDeviceInfo/groupId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/groupId",
            "summary": "The groupId readonly property of the MediaDeviceInfo interface returns a string that is a group identifier.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "39",
                    "notes": "Before Firefox 67, related devices are not actually grouped together by <code>groupId</code>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDeviceInfo.groupId"
        }
    ],
    "dom-mediadeviceinfo-kind": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDeviceInfo.json",
            "name": "kind",
            "slug": "API/MediaDeviceInfo/kind",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/kind",
            "summary": "The kind readonly property of the MediaDeviceInfo interface returns an enumerated value, that is either \"videoinput\", \"audioinput\" or \"audiooutput\".",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDeviceInfo.kind"
        }
    ],
    "dom-mediadeviceinfo-label": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDeviceInfo.json",
            "name": "label",
            "slug": "API/MediaDeviceInfo/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo/label",
            "summary": "The label ReadOnlyInline property of the MediaDeviceInfo interface returns a string describing this device (for example \"External USB Webcam\").",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDeviceInfo.label"
        }
    ],
    "device-info": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDeviceInfo.json",
            "name": "MediaDeviceInfo",
            "slug": "API/MediaDeviceInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo",
            "summary": "The MediaDeviceInfo interface contains information that describes a single media input or output device.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDeviceInfo"
        }
    ],
    "event-mediadevices-devicechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDevices.json",
            "name": "devicechange_event",
            "slug": "API/MediaDevices/devicechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/devicechange_event",
            "summary": "A devicechange event is sent to a MediaDevices instance whenever a media device such as a camera, microphone, or speaker is connected to or removed from the system.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDevices: devicechange event"
        }
    ],
    "dom-mediadevices-ondevicechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDevices.json",
            "name": "devicechange_event",
            "slug": "API/MediaDevices/devicechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/devicechange_event",
            "summary": "A devicechange event is sent to a MediaDevices instance whenever a media device such as a camera, microphone, or speaker is connected to or removed from the system.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "34"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDevices: devicechange event"
        }
    ],
    "dom-mediadevices-enumeratedevices": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDevices.json",
            "name": "enumerateDevices",
            "slug": "API/MediaDevices/enumerateDevices",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/enumerateDevices",
            "summary": "The MediaDevices method enumerateDevices() requests a list of the available media input and output devices, such as microphones, cameras, headsets, and so forth. The returned Promise is resolved with a MediaDeviceInfo array describing the devices.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "39"
                    },
                    {
                        "version_added": "63",
                        "flags": [
                            {
                                "type": "preference",
                                "name": "media.setsinkid.enabled",
                                "value_to_set": "true"
                            }
                        ],
                        "notes": "Before Firefox 63, <code>enumerateDevices()</code> only returned input devices. Starting with Firefox 63, output devices are also included if the <code>media.setsinkid.enabled</code> preference is enabled."
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDevices.enumerateDevices()"
        }
    ],
    "dom-mediadevices-getsupportedconstraints": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDevices.json",
            "name": "getSupportedConstraints",
            "slug": "API/MediaDevices/getSupportedConstraints",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getSupportedConstraints",
            "summary": "The getSupportedConstraints() method of the MediaDevices interface returns an object based on the MediaTrackSupportedConstraints dictionary, whose member fields each specify one of the constrainable properties the user agent understands.",
            "support": {
                "chrome": {
                    "version_added": "53"
                },
                "chrome_android": {
                    "version_added": "52"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "50"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "53"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDevices.getSupportedConstraints()"
        }
    ],
    "dom-mediadevices-getusermedia": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDevices.json",
            "name": "getUserMedia",
            "slug": "API/MediaDevices/getUserMedia",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices/getUserMedia",
            "summary": "The MediaDevices.getUserMedia() method prompts the user for permission to use a media input which produces a MediaStream with tracks containing the requested types of media.",
            "support": {
                "chrome": {
                    "version_added": "53",
                    "notes": "If you need this capability before version 53, refer to <code>navigator.webkitGetUserMedia</code>, a prefixed form of the deprecated <a href='https://developer.mozilla.org/docs/Web/API/Navigator/getUserMedia'><code>navigator.getUserMedia</code></a> API."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36",
                    "notes": [
                        "If you need this capability before version 36, refer to <code>navigator.mozGetUserMedia</code>, a prefixed form of the deprecated <a href='https://developer.mozilla.org/docs/Web/API/Navigator/getUserMedia'><code>navigator.getUserMedia</code></a> API.",
                        "Before Firefox 55, <code>getUserMedia()</code> incorrectly returns <code>NotSupportedError</code> when the list of constraints specified is empty, or has all constraints set to <code>false</code>. Starting in Firefox 55, this situation now correctly calls the failure handler with a <code>TypeError</code>.",
                        "When using the Firefox-specific <code>video</code> constraint called <code>mediaSource</code> to request display capture, Firefox 66 and later consider values of <code>screen</code> and <code>window</code> to both cause a list of screens <em>and</em> windows to be shown.",
                        "Starting in Firefox 66, <code>getUserMedia()</code> can no longer be used in sandboxed <code>&lt;iframe&gt;</code>s or <code>data</code> URLs entered in the address bar by the user."
                    ]
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": {
                    "version_added": "53"
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": "If you need this capability before version 53, refer to <code>navigator.webkitGetUserMedia</code>, a prefixed form of the deprecated <a href='https://developer.mozilla.org/docs/Web/API/Navigator/getUserMedia'><code>navigator.getUserMedia</code></a> API."
                }
            },
            "title": "MediaDevices.getUserMedia()"
        }
    ],
    "mediadevices": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaDevices.json",
            "name": "MediaDevices",
            "slug": "API/MediaDevices",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaDevices",
            "summary": "The MediaDevices interface provides access to connected media input devices like cameras and microphones, as well as screen sharing. In essence, it lets you obtain access to any hardware source of media data.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "33"
                },
                "firefox_android": {
                    "version_added": "36"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "30"
                },
                "opera_android": {
                    "version_added": "30"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaDevices"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Navigator.json",
            "name": "mediaDevices",
            "slug": "API/Navigator/mediaDevices",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/mediaDevices",
            "summary": "The Navigator.mediaDevices read-only property returns a MediaDevices object, which provides access to connected media input devices like cameras and microphones, as well as screen sharing.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Navigator.mediaDevices"
        }
    ],
    "dom-mediastream-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "MediaStream",
            "slug": "API/MediaStream/MediaStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/MediaStream",
            "summary": "The MediaStream() constructor returns a newly-created MediaStream, which serves as a collection of media tracks, each represented by a MediaStreamTrack object.",
            "support": {
                "chrome": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "21",
                        "prefix": "webkit"
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": "42"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "prefix": "webkit"
                    }
                ]
            },
            "title": "MediaStream()"
        }
    ],
    "dom-mediastream-active": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "active",
            "slug": "API/MediaStream/active",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/active",
            "summary": "The active read-only property of the MediaStream interface returns a Boolean value which is true if the stream is currently active; otherwise, it returns false. A stream is considered active if at least one of its MediaStreamTracks does not have its property MediaStreamTrack.readyState set to ended. Once every track has ended, the stream's active property becomes false.",
            "support": {
                "chrome": {
                    "version_added": "42"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.active"
        }
    ],
    "dom-mediastream-addtrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "addTrack",
            "slug": "API/MediaStream/addTrack",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/addTrack",
            "summary": "The MediaStream.addTrack() method adds a new track to the stream. The track is specified as a parameter of type MediaStreamTrack.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.addTrack()"
        }
    ],
    "event-mediastream-addtrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "addtrack_event",
            "slug": "API/MediaStream/addtrack_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/addtrack_event",
            "summary": "The addtrack event is fired when a new MediaStreamTrack object has been added to a MediaStream.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream: addtrack event"
        }
    ],
    "dom-mediastream-clone": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "clone",
            "slug": "API/MediaStream/clone",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/clone",
            "summary": "The clone() method of the MediaStream interface creates a duplicate of the MediaStream. This new MediaStream object has a new unique id and contains clones of every MediaStreamTrack contained by the MediaStream on which clone() was called.",
            "support": {
                "chrome": {
                    "version_added": "35"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.clone()"
        }
    ],
    "dom-mediastream-getaudiotracks": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "getAudioTracks",
            "slug": "API/MediaStream/getAudioTracks",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/getAudioTracks",
            "summary": "The getAudioTracks() method of the MediaStream interface returns a sequence that represents all the MediaStreamTrack objects in this stream's track set where MediaStreamTrack.kind is audio.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Before Firefox 64, this method returned an array of <code>AudioStreamTrack</code> objects. However, <code>MediaStreamTrack</code> has now subsumed that interface's functionality."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.getAudioTracks()"
        }
    ],
    "dom-mediastream-gettrackbyid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "getTrackById",
            "slug": "API/MediaStream/getTrackById",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/getTrackById",
            "summary": "The MediaStream.getTrackById() method returns a MediaStreamTrack object representing the track with the specified ID string. If there is no track with the specified ID, this method returns null.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.getTrackById()"
        }
    ],
    "dom-mediastream-gettracks": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "getTracks",
            "slug": "API/MediaStream/getTracks",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/getTracks",
            "summary": "The getTracks() method of the MediaStream interface returns a sequence that represents all the MediaStreamTrack objects in this stream's track set, regardless of MediaStreamTrack.kind.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.getTracks()"
        }
    ],
    "dom-mediastream-getvideotracks": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "getVideoTracks",
            "slug": "API/MediaStream/getVideoTracks",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/getVideoTracks",
            "summary": "The getVideoTracks() method of the MediaStream interface returns a sequence of MediaStreamTrack objects representing the video tracks in this stream.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Before Firefox 64, this method returned an array of <code>VideoStreamTrack</code> objects. However, <code>MediaStreamTrack</code> has now subsumed that interface's functionality."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.getVideoTracks()"
        }
    ],
    "dom-mediastream-id": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "id",
            "slug": "API/MediaStream/id",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/id",
            "summary": "The MediaStream.id read-only property is a string containing 36 characters denoting a unique identifier (GUID) for the object.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "41"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream.id"
        }
    ],
    "event-mediastream-removetrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "removetrack_event",
            "slug": "API/MediaStream/removetrack_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream/removetrack_event",
            "summary": "The removetrack event is fired when a new MediaStreamTrack object has been removed from a MediaStream.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "72"
                    },
                    {
                        "version_added": "59",
                        "version_removed": "72",
                        "partial_implementation": true,
                        "notes": "Before Firefox 72, the event handler was exposed but had no effect."
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStream: removetrack event"
        }
    ],
    "mediastream": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStream.json",
            "name": "MediaStream",
            "slug": "API/MediaStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStream",
            "summary": "The MediaStream interface represents a stream of media content. A stream consists of several tracks, such as video or audio tracks. Each track is specified as an instance of MediaStreamTrack.",
            "support": {
                "chrome": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "21",
                        "prefix": "webkit"
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "15"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "prefix": "webkit"
                    }
                ]
            },
            "title": "MediaStream"
        }
    ],
    "dom-mediastreamtrack-applyconstraints": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "applyConstraints",
            "slug": "API/MediaStreamTrack/applyConstraints",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/applyConstraints",
            "summary": "The applyConstraints() method of the MediaStreamTrack interface applies a set of constraints to the track; these constraints let the Web site or app establish ideal values and acceptable ranges of values for the constrainable properties of the track, such as frame rate, dimensions, echo cancellation, and so forth.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "43"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.applyConstraints()"
        }
    ],
    "dom-mediastreamtrack-clone": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "clone",
            "slug": "API/MediaStreamTrack/clone",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/clone",
            "summary": "The clone() method of the MediaStreamTrack interface creates a duplicate of the MediaStreamTrack. This new MediaStreamTrack object is identical except for its unique id.",
            "support": {
                "chrome": {
                    "version_added": "35"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.clone()"
        }
    ],
    "dom-mediastreamtrack-enabled": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "enabled",
            "slug": "API/MediaStreamTrack/enabled",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/enabled",
            "summary": "The enabled property on the MediaStreamTrack interface is a Boolean value which is true if the track is allowed to render the source stream or false if it is not. This can be used to intentionally mute a track.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.enabled"
        }
    ],
    "dom-mediastreamtrack-onended": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "ended_event",
            "slug": "API/MediaStreamTrack/ended_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/ended_event",
            "summary": "The ended event of the MediaStreamTrack interface is fired when playback or streaming has stopped because the end of the media was reached or because no further data is available.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack: ended event"
        }
    ],
    "dom-mediastreamtrack-getcapabilities": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "getCapabilities",
            "slug": "API/MediaStreamTrack/getCapabilities",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getCapabilities",
            "summary": "The getCapabilities() method of the MediaStreamTrack interface returns a MediaTrackCapabilities object which specifies the values or range of values which each constrainable property, based upon the platform and user agent.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.getCapabilities()"
        }
    ],
    "dom-mediastreamtrack-getconstraints": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "getConstraints",
            "slug": "API/MediaStreamTrack/getConstraints",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getConstraints",
            "summary": "The getConstraints() method of the MediaStreamTrack interface returns a MediaTrackConstraints object containing the set of constraints most recently established for the track using a prior call to applyConstraints(). These constraints indicate values and ranges of values that the Web site or application has specified are required or acceptable for the included constrainable properties.",
            "support": {
                "chrome": {
                    "version_added": "53"
                },
                "chrome_android": {
                    "version_added": "52"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "53"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.getConstraints()"
        }
    ],
    "dom-mediastreamtrack-getsettings": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "getSettings",
            "slug": "API/MediaStreamTrack/getSettings",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/getSettings",
            "summary": "The getSettings() method of the MediaStreamTrack interface returns a MediaTrackSettings object containing the current values of each of the constrainable properties for the current MediaStreamTrack.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.getSettings()"
        }
    ],
    "dom-mediastreamtrack-id": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "id",
            "slug": "API/MediaStreamTrack/id",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/id",
            "summary": "The MediaStreamTrack.id read-only property returns a string containing a unique identifier (GUID) for the track, which is generated by the user agent.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.id"
        }
    ],
    "dom-mediastreamtrack-kind": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "kind",
            "slug": "API/MediaStreamTrack/kind",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/kind",
            "summary": "The MediaStreamTrack.kind read-only property returns a string set to \"audio\" if the track is an audio track and to \"video\", if it is a video track. It doesn't change if the track is disassociated from its source.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.kind"
        }
    ],
    "dom-mediastreamtrack-label": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "label",
            "slug": "API/MediaStreamTrack/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/label",
            "summary": "The MediaStreamTrack.label read-only property returns a string containing a user agent-assigned label that identifies the track source, as in \"internal microphone\".",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.label"
        }
    ],
    "dom-mediastreamtrack-onmute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "mute_event",
            "slug": "API/MediaStreamTrack/mute_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/mute_event",
            "summary": "The mute event is sent to a MediaStreamTrack when the track's source is temporarily unable to provide media data.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack: mute event"
        }
    ],
    "dom-mediastreamtrack-muted": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "muted",
            "slug": "API/MediaStreamTrack/muted",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/muted",
            "summary": "The muted read-only property of the MediaStreamTrack interface returns a boolean value indicating whether or not the track is currently unable to provide media output.",
            "support": {
                "chrome": {
                    "version_added": "38"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.muted"
        }
    ],
    "dom-mediastreamtrack-readystate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "readyState",
            "slug": "API/MediaStreamTrack/readyState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/readyState",
            "summary": "The MediaStreamTrack.readyState read-only property returns an enumerated value giving the status of the track.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.readyState"
        }
    ],
    "dom-mediastreamtrack-stop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "stop",
            "slug": "API/MediaStreamTrack/stop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/stop",
            "summary": "The MediaStreamTrack.stop() method stops the track.",
            "support": {
                "chrome": {
                    "version_added": "32"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack.stop()"
        }
    ],
    "event-mediastreamtrack-unmute": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "unmute_event",
            "slug": "API/MediaStreamTrack/unmute_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack/unmute_event",
            "summary": "The unmute event is sent to a MediaStreamTrack when the track's source is once again able to provide media data after a period of not being able to do so.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack: unmute event"
        }
    ],
    "mediastreamtrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrack.json",
            "name": "MediaStreamTrack",
            "slug": "API/MediaStreamTrack",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrack",
            "summary": "The MediaStreamTrack interface represents a single media track within a stream; typically, these are audio or video tracks, but other track types may exist as well.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrack"
        }
    ],
    "dom-mediastreamtrackevent-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrackEvent.json",
            "name": "MediaStreamTrackEvent",
            "slug": "API/MediaStreamTrackEvent/MediaStreamTrackEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrackEvent/MediaStreamTrackEvent",
            "summary": "The MediaStreamTrackEvent() constructor returns a new MediaStreamTrackEvent object, which represents an event signaling that a MediaStreamTrack has been added to or removed from a MediaStream.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrackEvent()"
        }
    ],
    "mediastreamtrackevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaStreamTrackEvent.json",
            "name": "MediaStreamTrackEvent",
            "slug": "API/MediaStreamTrackEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaStreamTrackEvent",
            "summary": "The MediaStreamTrackEvent interface represents events which indicate that a MediaStream has had tracks added to or removed from the stream through calls to Media Stream API methods. These events are sent to the stream when these changes occur.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaStreamTrackEvent"
        }
    ],
    "dom-mediatrackconstraintset-aspectratio": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "aspectRatio",
            "slug": "API/MediaTrackConstraints/aspectRatio",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/aspectRatio",
            "summary": "The MediaTrackConstraints dictionary's aspectRatio property is a ConstrainDouble describing the requested or mandatory constraints placed upon the value of the aspectRatio constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": {
                    "version_added": "29"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.aspectRatio"
        }
    ],
    "dom-mediatrackconstraintset-autogaincontrol": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "autoGainControl",
            "slug": "API/MediaTrackConstraints/autoGainControl",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/autoGainControl",
            "summary": "The MediaTrackConstraints dictionary's autoGainControl property is a ConstrainBoolean describing the requested or mandatory constraints placed upon the value of the autoGainControl constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "46"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.autoGainControl"
        }
    ],
    "dom-mediatrackconstraintset-channelcount": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "channelCount",
            "slug": "API/MediaTrackConstraints/channelCount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/channelCount",
            "summary": "The MediaTrackConstraints dictionary's channelCount property is a ConstrainULong describing the requested or mandatory constraints placed upon the value of the channelCount constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.channelCount"
        }
    ],
    "dom-mediatrackconstraintset-deviceid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "deviceId",
            "slug": "API/MediaTrackConstraints/deviceId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/deviceId",
            "summary": "The MediaTrackConstraints dictionary's deviceId property is a ConstrainDOMString describing the requested or mandatory constraints placed upon the value of the deviceId constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "36",
                    "notes": "Before Firefox 69, Firefox only supported <code>deviceId</code> in constraints passed into <code>getUserMedia()</code>."
                },
                "firefox_android": {
                    "version_added": "36",
                    "notes": "Firefox for Android only supports <code>deviceId</code> when used in constraints passed into <code>getUserMedia()</code>."
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.deviceId"
        }
    ],
    "dom-mediatrackconstraintset-echocancellation": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "echoCancellation",
            "slug": "API/MediaTrackConstraints/echoCancellation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/echoCancellation",
            "summary": "The MediaTrackConstraints dictionary's echoCancellation property is a ConstrainBoolean describing the requested or mandatory constraints placed upon the value of the echoCancellation constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.echoCancellation"
        }
    ],
    "dom-mediatrackconstraintset-facingmode": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "facingMode",
            "slug": "API/MediaTrackConstraints/facingMode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/facingMode",
            "summary": "The MediaTrackConstraints dictionary's facingMode property is a ConstrainDOMString describing the requested or mandatory constraints placed upon the value of the facingMode constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.facingMode"
        }
    ],
    "dom-mediatrackconstraintset-framerate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "frameRate",
            "slug": "API/MediaTrackConstraints/frameRate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/frameRate",
            "summary": "The MediaTrackConstraints dictionary's frameRate property is a ConstrainDouble describing the requested or mandatory constraints placed upon the value of the frameRate constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.frameRate"
        }
    ],
    "dom-mediatrackconstraintset-groupid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "groupId",
            "slug": "API/MediaTrackConstraints/groupId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/groupId",
            "summary": "The MediaTrackConstraints dictionary's groupId property is a ConstrainDOMString describing the requested or mandatory constraints placed upon the value of the groupId constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "70"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.groupId"
        }
    ],
    "dom-mediatrackconstraintset-height": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "height",
            "slug": "API/MediaTrackConstraints/height",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/height",
            "summary": "The MediaTrackConstraints dictionary's height property is a ConstrainULong describing the requested or mandatory constraints placed upon the value of the height constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.height"
        }
    ],
    "dom-mediatrackconstraintset-latency": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "latency",
            "slug": "API/MediaTrackConstraints/latency",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/latency",
            "summary": "The MediaTrackConstraints dictionary's latency property is a ConstrainDouble describing the requested or mandatory constraints placed upon the value of the latency constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.latency"
        }
    ],
    "dom-mediatrackconstraintset-noisesuppression": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "noiseSuppression",
            "slug": "API/MediaTrackConstraints/noiseSuppression",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/noiseSuppression",
            "summary": "The MediaTrackConstraints dictionary's noiseSuppression property is a ConstrainBoolean describing the requested or mandatory constraints placed upon the value of the noiseSuppression constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "46"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.noiseSuppression"
        }
    ],
    "dom-mediatrackconstraintset-samplerate": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "sampleRate",
            "slug": "API/MediaTrackConstraints/sampleRate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/sampleRate",
            "summary": "The MediaTrackConstraints dictionary's sampleRate property is a ConstrainULong describing the requested or mandatory constraints placed upon the value of the sampleRate constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.sampleRate"
        }
    ],
    "dom-mediatrackconstraintset-samplesize": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "sampleSize",
            "slug": "API/MediaTrackConstraints/sampleSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/sampleSize",
            "summary": "The MediaTrackConstraints dictionary's sampleSize property is a ConstrainULong describing the requested or mandatory constraints placed upon the value of the sampleSize constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.sampleSize"
        }
    ],
    "dom-mediatrackconstraintset-width": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "width",
            "slug": "API/MediaTrackConstraints/width",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints/width",
            "summary": "The MediaTrackConstraints dictionary's width property is a ConstrainULong describing the requested or mandatory constraints placed upon the value of the width constrainable property.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints.width"
        }
    ],
    "dom-mediatrackconstraints": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackConstraints.json",
            "name": "MediaTrackConstraints",
            "slug": "API/MediaTrackConstraints",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackConstraints",
            "summary": "The MediaTrackConstraints dictionary is used to describe a set of capabilities and the value or values each can take on. A constraints dictionary is passed into applyConstraints() to allow a script to establish a set of exact (required) values or ranges and/or preferred values or ranges of values for the track, and the most recently-requested set of custom constraints can be retrieved by calling getConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "29"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackConstraints"
        }
    ],
    "dom-mediatracksettings-aspectratio": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "aspectRatio",
            "slug": "API/MediaTrackSettings/aspectRatio",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/aspectRatio",
            "summary": "The MediaTrackSettings dictionary's aspectRatio property is a double-precision floating-point number indicating the aspect ratio of the MediaStreamTrack as currently configured. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.aspectRatio property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.aspectRatio"
        }
    ],
    "dom-mediatracksettings-autogaincontrol": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "autoGainControl",
            "slug": "API/MediaTrackSettings/autoGainControl",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/autoGainControl",
            "summary": "The MediaTrackSettings dictionary's autoGainControl property is a Boolean value whose value indicates whether or not automatic gain control (AGC) is enabled on an audio track. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.autoGainControl property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "50",
                        "version_removed": "55",
                        "prefix": "moz"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.autoGainControl"
        }
    ],
    "dom-mediatracksettings-channelcount": [
        {
            "engines": [
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "channelCount",
            "slug": "API/MediaTrackSettings/channelCount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/channelCount",
            "summary": "The MediaTrackSettings dictionary's channelCount property is an integer indicating how many audio channels the MediaStreamTrack is currently configured to have. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.channelCount property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "MediaTrackSettings.channelCount"
        }
    ],
    "dom-mediatracksettings-deviceid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "deviceId",
            "slug": "API/MediaTrackSettings/deviceId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/deviceId",
            "summary": "The MediaTrackSettings dictionary's deviceId property is a string which uniquely identifies the source for the corresponding MediaStreamTrack for the origin corresponding to the browsing session. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.deviceId property you provided when calling either getUserMedia().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "69"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.deviceId"
        }
    ],
    "dom-mediatracksettings-echocancellation": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "echoCancellation",
            "slug": "API/MediaTrackSettings/echoCancellation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/echoCancellation",
            "summary": "The MediaTrackSettings dictionary's echoCancellation property is a Boolean value whose value indicates whether or not echo cancellation is enabled on an audio track. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.echoCancellation property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "50"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.echoCancellation"
        }
    ],
    "dom-mediatracksettings-facingmode": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "facingMode",
            "slug": "API/MediaTrackSettings/facingMode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/facingMode",
            "summary": "The MediaTrackSettings dictionary's facingMode property is a string indicating the direction in which the camera producing the video track represented by the MediaStreamTrack is currently facing. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.facingMode property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "69"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.facingMode"
        }
    ],
    "dom-mediatracksettings-framerate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "frameRate",
            "slug": "API/MediaTrackSettings/frameRate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/frameRate",
            "summary": "The MediaTrackSettings dictionary's frameRate property is a double-precision floating-point number indicating the frame rate, in frames per second, of the MediaStreamTrack as currently configured. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.frameRate property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.frameRate"
        }
    ],
    "dom-mediatracksettings-groupid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "groupId",
            "slug": "API/MediaTrackSettings/groupId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/groupId",
            "summary": "The MediaTrackSettings dictionary's groupId property is a browsing-session unique string which identifies the group of devices which includes the source for the MediaStreamTrack. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.groupId property you provided when calling either getUserMedia().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "69"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.groupId"
        }
    ],
    "dom-mediatracksettings-height": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "height",
            "slug": "API/MediaTrackSettings/height",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/height",
            "summary": "The MediaTrackSettings dictionary's height property is an integer indicating the number of pixels tall MediaStreamTrack is currently configured to be. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.height property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.height"
        }
    ],
    "dom-mediatracksettings-latency": [
        {
            "engines": [
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "latency",
            "slug": "API/MediaTrackSettings/latency",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/latency",
            "summary": "The MediaTrackSettings dictionary's latency property is a double-precision floating-point number indicating the estimated latency (specified in seconds) of the MediaStreamTrack as currently configured. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.latency property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "MediaTrackSettings.latency"
        }
    ],
    "dom-mediatracksettings-noisesuppression": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "noiseSuppression",
            "slug": "API/MediaTrackSettings/noiseSuppression",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/noiseSuppression",
            "summary": "The MediaTrackSettings dictionary's noiseSuppression property is a Boolean value whose value indicates whether or not noise suppression technology is enabled on an audio track. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.noiseSuppression property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "50",
                        "version_removed": "55",
                        "prefix": "moz"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.noiseSuppression"
        }
    ],
    "dom-mediatracksettings-samplerate": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "sampleRate",
            "slug": "API/MediaTrackSettings/sampleRate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/sampleRate",
            "summary": "The MediaTrackSettings dictionary's sampleRate property is an integer indicating how many audio samples per second the MediaStreamTrack is currently configured for. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.sampleRate property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.sampleRate"
        }
    ],
    "dom-mediatracksettings-samplesize": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "sampleSize",
            "slug": "API/MediaTrackSettings/sampleSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/sampleSize",
            "summary": "The MediaTrackSettings dictionary's sampleSize property is an integer indicating the linear sample size (in bits per sample) the MediaStreamTrack is currently configured for. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.sampleSize property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.sampleSize"
        }
    ],
    "dom-mediatracksettings-width": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "width",
            "slug": "API/MediaTrackSettings/width",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings/width",
            "summary": "The MediaTrackSettings dictionary's width property is an integer indicating the number of pixels wide MediaStreamTrack is currently configured to be. This lets you determine what value was selected to comply with your specified constraints for this property's value as described in the MediaTrackConstraints.width property you provided when calling either getUserMedia() or MediaStreamTrack.applyConstraints().",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings.width"
        }
    ],
    "media-track-settings": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSettings.json",
            "name": "MediaTrackSettings",
            "slug": "API/MediaTrackSettings",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSettings",
            "summary": "The MediaTrackSettings dictionary is used to return the current values configured for each of a MediaStreamTrack's settings. These values will adhere as closely as possible to any constraints previously described using a MediaTrackConstraints object and set using applyConstraints(), and will adhere to the default constraints for any properties whose constraints haven't been changed, or whose customized constraints couldn't be matched.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSettings"
        }
    ],
    "dom-mediatracksupportedconstraints-aspectratio": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "aspectRatio",
            "slug": "API/MediaTrackSupportedConstraints/aspectRatio",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/aspectRatio",
            "summary": "The MediaTrackSupportedConstraints dictionary's aspectRatio property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the aspectRatio constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.aspectRatio"
        }
    ],
    "dom-mediatracksupportedconstraints-autogaincontrol": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "autoGainControl",
            "slug": "API/MediaTrackSupportedConstraints/autoGainControl",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/autoGainControl",
            "summary": "The MediaTrackSupportedConstraints dictionary's autoGainControl property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the autoGainControl constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "prefix": "moz"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.autoGainControl"
        }
    ],
    "dom-mediatracksupportedconstraints-channelcount": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "channelCount",
            "slug": "API/MediaTrackSupportedConstraints/channelCount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/channelCount",
            "summary": "The MediaTrackSupportedConstraints dictionary's channelCount property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the channelCount constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "56"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.channelCount"
        }
    ],
    "dom-mediatracksupportedconstraints-deviceid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "deviceId",
            "slug": "API/MediaTrackSupportedConstraints/deviceId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/deviceId",
            "summary": "The MediaTrackSupportedConstraints dictionary's deviceId property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the deviceId constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.deviceId"
        }
    ],
    "dom-mediatracksupportedconstraints-echocancellation": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "echoCancellation",
            "slug": "API/MediaTrackSupportedConstraints/echoCancellation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/echoCancellation",
            "summary": "The MediaTrackSupportedConstraints dictionary's echoCancellation property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the echoCancellation constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.echoCancellation"
        }
    ],
    "dom-mediatracksupportedconstraints-facingmode": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "facingMode",
            "slug": "API/MediaTrackSupportedConstraints/facingMode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/facingMode",
            "summary": "The MediaTrackSupportedConstraints dictionary's facingMode property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the facingMode constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.facingMode"
        }
    ],
    "dom-mediatracksupportedconstraints-framerate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "frameRate",
            "slug": "API/MediaTrackSupportedConstraints/frameRate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/frameRate",
            "summary": "The MediaTrackSupportedConstraints dictionary's frameRate property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the frameRate constraint.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.frameRate"
        }
    ],
    "dom-mediatracksupportedconstraints-groupid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "groupId",
            "slug": "API/MediaTrackSupportedConstraints/groupId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/groupId",
            "summary": "The MediaTrackSupportedConstraints dictionary's groupId property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the groupId constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "70"
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.groupId"
        }
    ],
    "dom-mediatracksupportedconstraints-height": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "height",
            "slug": "API/MediaTrackSupportedConstraints/height",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/height",
            "summary": "The MediaTrackSupportedConstraints dictionary's height property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the height constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.height"
        }
    ],
    "dom-mediatracksupportedconstraints-latency": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "latency",
            "slug": "API/MediaTrackSupportedConstraints/latency",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/latency",
            "summary": "The MediaTrackSupportedConstraints dictionary's latency property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the latency constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.latency"
        }
    ],
    "dom-mediatracksupportedconstraints-noisesuppression": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "noiseSuppression",
            "slug": "API/MediaTrackSupportedConstraints/noiseSuppression",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/noiseSuppression",
            "summary": "The MediaTrackSupportedConstraints dictionary's noiseSuppression property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the noiseSuppression constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "55"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "55",
                        "prefix": "moz"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.noiseSuppression"
        }
    ],
    "dom-mediatracksupportedconstraints-samplerate": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "sampleRate",
            "slug": "API/MediaTrackSupportedConstraints/sampleRate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/sampleRate",
            "summary": "The MediaTrackSupportedConstraints dictionary's sampleRate property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the sampleRate constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.sampleRate"
        }
    ],
    "dom-mediatracksupportedconstraints-samplesize": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "sampleSize",
            "slug": "API/MediaTrackSupportedConstraints/sampleSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/sampleSize",
            "summary": "The MediaTrackSupportedConstraints dictionary's sampleSize property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the sampleSize constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.sampleSize"
        }
    ],
    "dom-mediatracksupportedconstraints-width": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "width",
            "slug": "API/MediaTrackSupportedConstraints/width",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints/width",
            "summary": "The MediaTrackSupportedConstraints dictionary's width property is a read-only Boolean value which is present (and set to true) in the object returned by MediaDevices.getSupportedConstraints() if and only if the user agent supports the width constraint. If the constraint isn't supported, it's not included in the list, so this value will never be false.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints.width"
        }
    ],
    "media-track-supported-constraints": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaTrackSupportedConstraints.json",
            "name": "MediaTrackSupportedConstraints",
            "slug": "API/MediaTrackSupportedConstraints",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaTrackSupportedConstraints",
            "summary": "The MediaTrackSupportedConstraints dictionary establishes the list of constrainable properties recognized by the user agent or browser in its implementation of the MediaStreamTrack object. An object conforming to MediaTrackSupportedConstraints is returned by MediaDevices.getSupportedConstraints().",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaTrackSupportedConstraints"
        }
    ],
    "dom-overconstrainederror": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/OverconstrainedError.json",
            "name": "OverconstrainedError",
            "slug": "API/OverconstrainedError/OverconstrainedError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/OverconstrainedError",
            "summary": "The OverconstrainedError constructor creates a new OverconstrainedError object which indicates that the set of desired capabilities for the current MediaStreamTrack cannot currently be met. When this event is thrown on a MediaStreamTrack, it is muted until either the current constraints can be established or until satisfiable constraints are applied.",
            "support": {
                "chrome": {
                    "version_added": "63"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "OverconstrainedError()"
        }
    ],
    "dom-overconstrainederror-constraint": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/OverconstrainedError.json",
            "name": "constraint",
            "slug": "API/OverconstrainedError/constraint",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError/constraint",
            "summary": "The constraint read-only property of the OverconstrainedError interface returns the constraint that was supplied in the constructor, meaning the constraint that was not satisfied.",
            "support": {
                "chrome": {
                    "version_added": "63"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "OverconstrainedError.constraint"
        }
    ],
    "overconstrainederror-interface": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/OverconstrainedError.json",
            "name": "OverconstrainedError",
            "slug": "API/OverconstrainedError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/OverconstrainedError",
            "summary": "The OverconstrainedError interface of the Media Capture and Streams API indicates that the set of desired capabilities for the current MediaStreamTrack cannot currently be met. When this event is thrown on a MediaStreamTrack, it is muted until either the current constraints can be established or until satisfiable constraints are applied.",
            "support": {
                "chrome": {
                    "version_added": "63"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "OverconstrainedError"
        }
    ],
    "dfn-camera": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "http/headers/Feature-Policy.json",
            "name": "camera",
            "slug": "HTTP/Headers/Feature-Policy/camera",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/camera",
            "summary": "The HTTP Feature-Policy header camera directive controls whether the current document is allowed to use video input devices. When this policy is enabled, the Promise returned by MediaDevices.getUserMedia() will reject with a NotAllowedError DOMException.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "74",
                    "partial_implementation": true,
                    "notes": "Only supported through the <code>allow</code> attribute on <code>&lt;iframe&gt;</code> elements."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": "11.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: camera"
        }
    ],
    "dfn-microphone": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "http/headers/Feature-Policy.json",
            "name": "microphone",
            "slug": "HTTP/Headers/Feature-Policy/microphone",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/microphone",
            "summary": "The HTTP Feature-Policy header microphone directive controls whether the current document is allowed to use audio input devices. When this policy is enabled, the Promise returned by MediaDevices.getUserMedia() will reject with a NotAllowedError.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "74",
                    "partial_implementation": true,
                    "notes": "Only supported through the <code>allow</code> attribute on <code>&lt;iframe&gt;</code> elements."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "48"
                },
                "opera_android": {
                    "version_added": "45"
                },
                "safari": {
                    "version_added": "11.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: microphone"
        }
    ]
}
