{
    "navigator-xr-attribute": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/Navigator.json",
            "name": "xr",
            "slug": "API/Navigator/xr",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/xr",
            "summary": "The read-only xr property provided by the Navigator interface returns an XRSystem object which can be used to access the WebXR Device API.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Navigator: xr property"
        }
    ],
    "dom-webglrenderingcontextbase-makexrcompatible": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "makeXRCompatible",
            "slug": "API/WebGLRenderingContext/makeXRCompatible",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible",
            "summary": "The WebGLRenderingContext method makeXRCompatible() ensures that the rendering context described by the WebGLRenderingContext is ready to render the scene for the immersive WebXR device on which it will be displayed. If necessary, the WebGL layer may reconfigure the context to be ready to render to a different device than it originally was.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: makeXRCompatible() method"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "makeXRCompatible",
            "slug": "API/WebGLRenderingContext/makeXRCompatible",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/makeXRCompatible",
            "summary": "The WebGLRenderingContext method makeXRCompatible() ensures that the rendering context described by the WebGLRenderingContext is ready to render the scene for the immersive WebXR device on which it will be displayed. If necessary, the WebGL layer may reconfigure the context to be ready to render to a different device than it originally was.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: makeXRCompatible() method"
        }
    ],
    "dom-xrboundedreferencespace-boundsgeometry": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRBoundedReferenceSpace.json",
            "name": "boundsGeometry",
            "slug": "API/XRBoundedReferenceSpace/boundsGeometry",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRBoundedReferenceSpace/boundsGeometry",
            "summary": "The read-only XRBoundedReferenceSpace property boundsGeometry is an array of DOMPointReadOnly objects which specifies the points making up a polygon inside which the viewer is allowed to move. Each point is treated as a two-dimensional point, and must be located at ground level (that is, its y coordinate must be 0).",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRBoundedReferenceSpace: boundsGeometry property"
        }
    ],
    "xrboundedreferencespace-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRBoundedReferenceSpace.json",
            "name": "XRBoundedReferenceSpace",
            "slug": "API/XRBoundedReferenceSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRBoundedReferenceSpace",
            "summary": "The WebXR Device API's XRBoundedReferenceSpace interface describes a virtual world reference space which has preset boundaries. This extends XRReferenceSpace, which describes an essentially unrestricted space around the viewer's position. These bounds are defined using an array of points, each of which defines a vertex in a polygon inside which the user is allowed to move.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRBoundedReferenceSpace"
        }
    ],
    "dom-xrframe-getpose": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRFrame.json",
            "name": "getPose",
            "slug": "API/XRFrame/getPose",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRFrame/getPose",
            "summary": "The XRFrame method getPose() returns the relative position and orientation—the pose—of one XRSpace to that of another space. With this, you can observe the motion of objects relative to each other and to fixed locations throughout the scene.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRFrame: getPose() method"
        }
    ],
    "dom-xrframe-getviewerpose": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRFrame.json",
            "name": "getViewerPose",
            "slug": "API/XRFrame/getViewerPose",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRFrame/getViewerPose",
            "summary": "The getViewerPose() method, a member of the XRFrame interface, returns a XRViewerPose object which describes the viewer's pose (position and orientation) relative to the specified reference space.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRFrame: getViewerPose() method"
        }
    ],
    "dom-xrframe-session": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRFrame.json",
            "name": "session",
            "slug": "API/XRFrame/session",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRFrame/session",
            "summary": "An XRFrame object's read-only session property returns the XRSession object that generated the frame.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRFrame: session property"
        }
    ],
    "xrframe-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRFrame.json",
            "name": "XRFrame",
            "slug": "API/XRFrame",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRFrame",
            "summary": "A WebXR Device API XRFrame object is passed into the requestAnimationFrame() callback function and provides access to the information needed in order to render a single frame of animation for an XRSession describing a VR or AR scene. Events which communicate the tracking state of objects also provide an XRFrame reference as part of their structure.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRFrame"
        }
    ],
    "dom-xrinputsource-gripspace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSource.json",
            "name": "gripSpace",
            "slug": "API/XRInputSource/gripSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/gripSpace",
            "summary": "The read-only XRInputSource property gripSpace returns an XRSpace whose native origin tracks the pose used to render virtual objects so they appear to be held in (or part of) the user's hand. For example, if a user were holding a virtual straight rod, the native origin of this XRSpace would be located at the approximate center of mass of the user's fist.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSource: gripSpace property"
        }
    ],
    "dom-xrinputsource-handedness": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSource.json",
            "name": "handedness",
            "slug": "API/XRInputSource/handedness",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/handedness",
            "summary": "The read-only XRInputSource property handedness indicates which of the user's hands the WebXR input source is associated with, or if it's not associated with a hand at all.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSource: handedness property"
        }
    ],
    "dom-xrinputsource-profiles": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSource.json",
            "name": "profiles",
            "slug": "API/XRInputSource/profiles",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/profiles",
            "summary": "The read-only XRInputSource property profiles returns an array of strings, each describing a configuration profile for the input source. The profile strings are listed in order of specificity, with the most specific profile listed first.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSource: profiles property"
        }
    ],
    "dom-xrinputsource-targetraymode": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSource.json",
            "name": "targetRayMode",
            "slug": "API/XRInputSource/targetRayMode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/targetRayMode",
            "summary": "The read-only XRInputSource property targetRayMode indicates the method by which the target ray for the input source should be generated and how it should be presented to the user.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSource: targetRayMode property"
        }
    ],
    "dom-xrinputsource-targetrayspace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSource.json",
            "name": "targetRaySpace",
            "slug": "API/XRInputSource/targetRaySpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource/targetRaySpace",
            "summary": "The read-only XRInputSource property targetRaySpace returns an XRSpace (typically an XRReferenceSpace) representing the position and orientation of the target ray in the virtual space. Its native origin tracks the position of the origin point of the target ray, and its orientation indicates the orientation of the controller device itself. These values, interpreted in the context of the input source's targetRayMode, can be used both to fully interpret the device as an input source.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSource: targetRaySpace property"
        }
    ],
    "xrinputsource-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSource.json",
            "name": "XRInputSource",
            "slug": "API/XRInputSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSource",
            "summary": "The WebXR Device API's XRInputSource interface describes a single source of control input which is part of the user's WebXR-compatible virtual or augmented reality system. The device is specific to the platform being used, but provides the direction in which it is being aimed and optionally may generate events if the user triggers performs actions using the device.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSource"
        }
    ],
    "dom-xrinputsourcearray-length": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourceArray.json",
            "name": "length",
            "slug": "API/XRInputSourceArray/length",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourceArray/length",
            "summary": "The read-only length property returns an integer value indicating the number of items in the input source list represented by the XRInputSourceArray object.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourceArray: length property"
        }
    ],
    "xrinputsourcearray-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourceArray.json",
            "name": "XRInputSourceArray",
            "slug": "API/XRInputSourceArray",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourceArray",
            "summary": "The interface XRInputSourceArray represents a live list of WebXR input sources, and is used as the return value of the XRSession property inputSources. Each entry is an XRInputSource representing one input device connected to the WebXR system.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourceArray"
        }
    ],
    "dom-xrinputsourceevent-xrinputsourceevent": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourceEvent.json",
            "name": "XRInputSourceEvent",
            "slug": "API/XRInputSourceEvent/XRInputSourceEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourceEvent/XRInputSourceEvent",
            "summary": "The XRInputSourceEvent() constructor creates and returns a new XRInputSourceEvent object describing an event (state change) which has occurred on a WebXR user input device represented by an XRInputSource.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourceEvent: XRInputSourceEvent() constructor"
        }
    ],
    "dom-xrinputsourceevent-frame": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourceEvent.json",
            "name": "frame",
            "slug": "API/XRInputSourceEvent/frame",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourceEvent/frame",
            "summary": "The read-only XRInputSourceEvent property frame specifies an XRFrame object representing the event frame during which a WebXR user input occurred. This may thus be an event which occurred in the past rather than a current or impending event.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourceEvent: frame property"
        }
    ],
    "dom-xrinputsourceevent-inputsource": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourceEvent.json",
            "name": "inputSource",
            "slug": "API/XRInputSourceEvent/inputSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourceEvent/inputSource",
            "summary": "The XRInputSourceEvent interface's read-only inputSource property specifies the XRInputSource which generated the input event. This information lets you handle the event appropriately given the particulars of the user input device being manipulated.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourceEvent: inputSource property"
        }
    ],
    "xrinputsourceevent-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourceEvent.json",
            "name": "XRInputSourceEvent",
            "slug": "API/XRInputSourceEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourceEvent",
            "summary": "The WebXR Device API's XRInputSourceEvent interface describes an event which has occurred on a WebXR user input device such as a hand controller, gaze tracking system, or motion tracking system. More specifically, they represent a change in the state of an XRInputSource.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourceEvent"
        }
    ],
    "dom-xrinputsourceschangeevent-xrinputsourceschangeevent": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourcesChangeEvent.json",
            "name": "XRInputSourcesChangeEvent",
            "slug": "API/XRInputSourcesChangeEvent/XRInputSourcesChangeEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourcesChangeEvent/XRInputSourcesChangeEvent",
            "summary": "The XRInputSourcesChangeEvent() constructor creates and returns a new XRInputSourcesChangeEvent object, representing an update to the list of available WebXR input devices. You won't typically call this constructor yourself, as these events are created and sent to you by the WebXR system.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourcesChangeEvent: XRInputSourcesChangeEvent() constructor"
        }
    ],
    "dom-xrinputsourceschangeevent-added": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourcesChangeEvent.json",
            "name": "added",
            "slug": "API/XRInputSourcesChangeEvent/added",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourcesChangeEvent/added",
            "summary": "The read-only XRInputSourcesChangeEvent property added is a list of zero or more input sources, each identified using an XRInputSource object, which have been newly made available for use.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourcesChangeEvent: added property"
        }
    ],
    "dom-xrinputsourceschangeevent-removed": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourcesChangeEvent.json",
            "name": "removed",
            "slug": "API/XRInputSourcesChangeEvent/removed",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourcesChangeEvent/removed",
            "summary": "The read-only XRInputSourcesChangeEvent property removed is an array of zero or more XRInputSource objects representing the input sources that have been removed from the XRSession.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourcesChangeEvent: removed property"
        }
    ],
    "dom-xrinputsourceschangeevent-session": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourcesChangeEvent.json",
            "name": "session",
            "slug": "API/XRInputSourcesChangeEvent/session",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourcesChangeEvent/session",
            "summary": "The XRInputSourcesChangeEvent property session specifies the XRSession to which the input source list change event applies.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourcesChangeEvent: session property"
        }
    ],
    "xrinputsourceschangeevent-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRInputSourcesChangeEvent.json",
            "name": "XRInputSourcesChangeEvent",
            "slug": "API/XRInputSourcesChangeEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRInputSourcesChangeEvent",
            "summary": "The WebXR Device API interface XRInputSourcesChangeEvent is used to represent the inputsourceschange event sent to an XRSession when the set of available WebXR input controllers changes.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRInputSourcesChangeEvent"
        }
    ],
    "xrlayer-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRLayer.json",
            "name": "XRLayer",
            "slug": "API/XRLayer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRLayer",
            "summary": "The XRLayer interface of the WebXR Device API is the base class for WebXR layer types. It inherits methods from EventTarget.",
            "support": {
                "chrome": {
                    "version_added": "84"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "84"
                }
            },
            "title": "XRLayer"
        }
    ],
    "dom-xrpose-angularvelocity": [
        {
            "engines": [],
            "filename": "api/XRPose.json",
            "name": "angularVelocity",
            "slug": "API/XRPose/angularVelocity",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRPose/angularVelocity",
            "summary": "The angularVelocity read-only property of the XRPose interface is a DOMPointReadOnly describing the angular velocity in radians per second relative to the base XRSpace.",
            "support": {
                "chrome": {
                    "version_added": false,
                    "impl_url": "https://crbug.com/1202213"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": {
                    "version_added": "15.0"
                },
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false,
                    "impl_url": "https://crbug.com/1202213"
                }
            },
            "title": "XRPose: angularVelocity property"
        }
    ],
    "dom-xrpose-emulatedposition": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRPose.json",
            "name": "emulatedPosition",
            "slug": "API/XRPose/emulatedPosition",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRPose/emulatedPosition",
            "summary": "The emulatedPosition read-only attribute of the XRPose interface is a Boolean value indicating whether or not both the position component of the pose's transform is directly taken from the XR device, or it's simulated or computed based on other sources.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRPose: emulatedPosition property"
        }
    ],
    "dom-xrpose-linearvelocity": [
        {
            "engines": [],
            "filename": "api/XRPose.json",
            "name": "linearVelocity",
            "slug": "API/XRPose/linearVelocity",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRPose/linearVelocity",
            "summary": "The linearVelocity read-only property of the XRPose interface is a DOMPointReadOnly describing the linear velocity in meters per second relative to the base XRSpace.",
            "support": {
                "chrome": {
                    "version_added": false,
                    "impl_url": "https://crbug.com/1202213"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": {
                    "version_added": "15.0"
                },
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": false,
                    "impl_url": "https://crbug.com/1202213"
                }
            },
            "title": "XRPose: linearVelocity property"
        }
    ],
    "dom-xrpose-transform": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRPose.json",
            "name": "transform",
            "slug": "API/XRPose/transform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRPose/transform",
            "summary": "The transform read-only attribute of the XRPose interface is a XRRigidTransform object providing the position and orientation of the pose relative to the base XRSpace as specified when the pose was obtained by calling XRFrame.getPose().",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRPose: transform property"
        }
    ],
    "xrpose-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRPose.json",
            "name": "XRPose",
            "slug": "API/XRPose",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRPose",
            "summary": "XRPose is a WebXR API interface representing a position and orientation in the 3D space, relative to the XRSpace within which it resides. The XRSpace—which is either an XRReferenceSpace or an XRBoundedReferenceSpace—defines the coordinate system used for the pose and, in the case of an XRViewerPose, its underlying views.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRPose"
        }
    ],
    "dom-xrreferencespace-getoffsetreferencespace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpace.json",
            "name": "getOffsetReferenceSpace",
            "slug": "API/XRReferenceSpace/getOffsetReferenceSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace/getOffsetReferenceSpace",
            "summary": "The XRReferenceSpace interface's getOffsetReferenceSpace() method returns a new reference space object which describes the relative difference in position between the object on which the method is called and a given point in 3D space. The object returned by getOffsetReferenceSpace() is an XRReferenceSpace if called on an XRReferenceSpace, or an XRBoundedReferenceSpace if called on an object of that type.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpace: getOffsetReferenceSpace() method"
        }
    ],
    "eventdef-xrreferencespace-reset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpace.json",
            "name": "reset_event",
            "slug": "API/XRReferenceSpace/reset_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace/reset_event",
            "summary": "The reset event is sent to an XRReferenceSpace object when a discontinuity is detected in either the native origin or the effective origin, causing a jump in the position or orientation of objects oriented using the reference space. This is common when the user calibrates or recalibrates an XR device, or if the device automatically changes its origin after losing tracking of the user, then re-gaining it.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpace: reset event"
        }
    ],
    "dom-xrreferencespace-onreset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpace.json",
            "name": "reset_event",
            "slug": "API/XRReferenceSpace/reset_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace/reset_event",
            "summary": "The reset event is sent to an XRReferenceSpace object when a discontinuity is detected in either the native origin or the effective origin, causing a jump in the position or orientation of objects oriented using the reference space. This is common when the user calibrates or recalibrates an XR device, or if the device automatically changes its origin after losing tracking of the user, then re-gaining it.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpace: reset event"
        }
    ],
    "xrreferencespace-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpace.json",
            "name": "XRReferenceSpace",
            "slug": "API/XRReferenceSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpace",
            "summary": "The WebXR Device API's XRReferenceSpace interface describes the coordinate system for a specific tracked entity or object within the virtual world using a specified tracking behavior. The tracking behavior is defined by the selected reference space type. It expands upon the base class, XRSpace, by adding support for several different tracking behaviors as well as to request a new reference space which describes the offset transform between the tracked object and another location in the world.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpace"
        }
    ],
    "dom-xrreferencespaceevent-xrreferencespaceevent": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpaceEvent.json",
            "name": "XRReferenceSpaceEvent",
            "slug": "API/XRReferenceSpaceEvent/XRReferenceSpaceEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpaceEvent/XRReferenceSpaceEvent",
            "summary": "The XRReferenceSpaceEvent() constructor is used to create a new XRReferenceSpaceEvent object, which represents an event regarding the state of a WebXR reference space object, XRReferenceSpace.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpaceEvent: XRReferenceSpaceEvent() constructor"
        }
    ],
    "dom-xrreferencespaceevent-referencespace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpaceEvent.json",
            "name": "referenceSpace",
            "slug": "API/XRReferenceSpaceEvent/referenceSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpaceEvent/referenceSpace",
            "summary": "The read-only XRReferenceSpaceEvent property referenceSpace specifies the reference space which is the originator of the event.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpaceEvent: referenceSpace property"
        }
    ],
    "dom-xrreferencespaceevent-transform": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpaceEvent.json",
            "name": "transform",
            "slug": "API/XRReferenceSpaceEvent/transform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpaceEvent/transform",
            "summary": "The read-only XRReferenceSpaceEvent property transform indicates the position and orientation of the affected referenceSpace's native origin after the changes the event represents are applied. The transform is defined using the old coordinate system, which allows it to be used to convert coordinates from the pre-event coordinate system to the post-event coordinate system.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpaceEvent: transform property"
        }
    ],
    "xrreferencespaceevent-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRReferenceSpaceEvent.json",
            "name": "XRReferenceSpaceEvent",
            "slug": "API/XRReferenceSpaceEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRReferenceSpaceEvent",
            "summary": "The WebXR Device API interface XRReferenceSpaceEvent represents an event sent to an XRReferenceSpace. Currently, the only event that uses this type is the reset event.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRReferenceSpaceEvent"
        }
    ],
    "dom-xrrenderstate-baselayer": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRenderState.json",
            "name": "baseLayer",
            "slug": "API/XRRenderState/baseLayer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRenderState/baseLayer",
            "summary": "The read-only baseLayer property of the XRRenderState interface returns the XRWebGLLayer instance that is the source of bitmap images and a description of how the image is to be rendered in the device.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRenderState: baseLayer property"
        }
    ],
    "dom-xrrenderstate-depthfar": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRenderState.json",
            "name": "depthFar",
            "slug": "API/XRRenderState/depthFar",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRenderState/depthFar",
            "summary": "The depthFar read-only property of the XRRenderState interface returns the distance in meters of the far clip plane from the viewer.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRenderState: depthFar property"
        }
    ],
    "dom-xrrenderstate-depthnear": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRenderState.json",
            "name": "depthNear",
            "slug": "API/XRRenderState/depthNear",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRenderState/depthNear",
            "summary": "The depthNear read-only property of the XRRenderState interface returns the distance in meters of the near clip plane from the viewer.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRenderState: depthNear property"
        }
    ],
    "dom-xrrenderstate-inlineverticalfieldofview": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRenderState.json",
            "name": "inlineVerticalFieldOfView",
            "slug": "API/XRRenderState/inlineVerticalFieldOfView",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRenderState/inlineVerticalFieldOfView",
            "summary": "The read-only inlineVerticalFieldOfView property of the XRRenderState interface returns the default vertical field of view for \"inline\" sessions and null for all immersive sessions.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRenderState: inlineVerticalFieldOfView property"
        }
    ],
    "xrrenderstate-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRenderState.json",
            "name": "XRRenderState",
            "slug": "API/XRRenderState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRenderState",
            "summary": "The XRRenderState interface of the WebXR Device API contains configurable values which affect how the imagery generated by an XRSession gets composited. These properties include the range of distances from the viewer within which content should be rendered, the vertical field of view (for inline presentations), and a reference to the XRWebGLLayer being used as the target for rendering the scene prior to it being presented on the XR device's display or displays.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRenderState"
        }
    ],
    "dom-xrrigidtransform-xrrigidtransform": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRigidTransform.json",
            "name": "XRRigidTransform",
            "slug": "API/XRRigidTransform/XRRigidTransform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/XRRigidTransform",
            "summary": "The XRRigidTransform() constructor creates a new XRRigidTransform object, representing the position and orientation of a point or object. Among other things, XRRigidTransform is used when providing a transform to translate between coordinate systems across spaces.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRigidTransform: XRRigidTransform() constructor"
        }
    ],
    "dom-xrrigidtransform-inverse": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRigidTransform.json",
            "name": "inverse",
            "slug": "API/XRRigidTransform/inverse",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/inverse",
            "summary": "The read-only inverse property of the XRRigidTransform interface returns another XRRigidTransform object which is the inverse of its owning transform. That is, you can always get the inverse of any XRRigidTransform using its inverse property, instead of having to explicitly generate it.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRigidTransform: inverse property"
        }
    ],
    "dom-xrrigidtransform-matrix": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRigidTransform.json",
            "name": "matrix",
            "slug": "API/XRRigidTransform/matrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/matrix",
            "summary": "The read-only XRRigidTransform property matrix returns the transform matrix represented by the object. The returned matrix can then be premultiplied with a column vector to rotate the vector by the 3D rotation specified by the orientation, then translate it by the position.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRigidTransform: matrix property"
        }
    ],
    "dom-xrrigidtransform-orientation": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRigidTransform.json",
            "name": "orientation",
            "slug": "API/XRRigidTransform/orientation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/orientation",
            "summary": "The read-only XRRigidTransform property orientation is a DOMPointReadOnly containing a normalized quaternion (also called a unit quaternion or versor) specifying the rotational component of the transform represented by the object. If you specify a quaternion whose length is not exactly 1.0 meters, it will be normalized for you.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRigidTransform: orientation property"
        }
    ],
    "dom-xrrigidtransform-position": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRigidTransform.json",
            "name": "position",
            "slug": "API/XRRigidTransform/position",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform/position",
            "summary": "The read-only XRRigidTransform property position is a DOMPointReadOnly object which provides the 3D point, specified in meters, describing the translation component of the transform.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRigidTransform: position property"
        }
    ],
    "xrrigidtransform-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRRigidTransform.json",
            "name": "XRRigidTransform",
            "slug": "API/XRRigidTransform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRRigidTransform",
            "summary": "The XRRigidTransform is a WebXR API interface that represents the 3D geometric transform described by a position and orientation.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRRigidTransform"
        }
    ],
    "dom-xrsession-cancelanimationframe": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "cancelAnimationFrame",
            "slug": "API/XRSession/cancelAnimationFrame",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/cancelAnimationFrame",
            "summary": "The cancelAnimationFrame() method of the XRSession interface cancels an animation frame which was previously requested by calling requestAnimationFrame.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: cancelAnimationFrame() method"
        }
    ],
    "dom-xrsession-end": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "end",
            "slug": "API/XRSession/end",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/end",
            "summary": "The end() method shuts down the XRSession on which it's called, returning a promise which resolves once the session has fully shut down.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: end() method"
        }
    ],
    "eventdef-xrsession-end": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "end_event",
            "slug": "API/XRSession/end_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/end_event",
            "summary": "An end event is fired at an XRSession object when the WebXR session has ended, either because the web application has chosen to stop the session, or because the user agent terminated the session.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: end event"
        }
    ],
    "dom-xrsession-onend": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "end_event",
            "slug": "API/XRSession/end_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/end_event",
            "summary": "An end event is fired at an XRSession object when the WebXR session has ended, either because the web application has chosen to stop the session, or because the user agent terminated the session.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: end event"
        }
    ],
    "dom-xrsession-inputsources": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "inputSources",
            "slug": "API/XRSession/inputSources",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/inputSources",
            "summary": "The read-only inputSources property of the XRSession interface returns an XRInputSourceArray object which lists all controllers and input devices which are expressly associated with the XR device and are currently available. These controllers may include handheld controllers, XR-equipped gloves, optically tracked hands, and gaze-based input methods. Keyboards, gamepads, and mice are not considered WebXR input sources.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: inputSources property"
        }
    ],
    "eventdef-xrsession-inputsourceschange": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "inputsourceschange_event",
            "slug": "API/XRSession/inputsourceschange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/inputsourceschange_event",
            "summary": "The inputsourceschange event is sent to an XRSession when the set of available WebXR input devices changes.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: inputsourceschange event"
        }
    ],
    "dom-xrsession-oninputsourceschange": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "inputsourceschange_event",
            "slug": "API/XRSession/inputsourceschange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/inputsourceschange_event",
            "summary": "The inputsourceschange event is sent to an XRSession when the set of available WebXR input devices changes.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: inputsourceschange event"
        }
    ],
    "dom-xrsession-renderstate": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "renderState",
            "slug": "API/XRSession/renderState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/renderState",
            "summary": "The read-only renderState property of an XRSession object indicates the returns a XRRenderState object describing how the user's environment which should be rendered. The information provided covers the minimum and maximum distance at which to render objects, the vertical field of view to use when rendering the in the inline session mode, and the XRWebGLLayer to render into for inline composition.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: renderState property"
        }
    ],
    "dom-xrsession-requestanimationframe": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "requestAnimationFrame",
            "slug": "API/XRSession/requestAnimationFrame",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/requestAnimationFrame",
            "summary": "The XRSession method requestAnimationFrame(), much like the Window method of the same name, schedules a callback to be executed the next time the browser is ready to paint the session's virtual environment to the XR display. The specified callback is executed once before the next repaint; if you wish for it to be executed for the following repaint, you must call requestAnimationFrame() again. This can be done from within the callback itself.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: requestAnimationFrame() method"
        }
    ],
    "dom-xrsession-requestreferencespace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "requestReferenceSpace",
            "slug": "API/XRSession/requestReferenceSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/requestReferenceSpace",
            "summary": "The requestReferenceSpace() method of the XRSession interface returns a promise that resolves with an instance of either XRReferenceSpace or XRBoundedReferenceSpace as appropriate given the type of reference space requested.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: requestReferenceSpace() method"
        }
    ],
    "eventdef-xrsession-select": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "select_event",
            "slug": "API/XRSession/select_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/select_event",
            "summary": "The WebXR select event is sent to an XRSession when one of the session's input sources has completed a primary action.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: select event"
        }
    ],
    "dom-xrsession-onselect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "select_event",
            "slug": "API/XRSession/select_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/select_event",
            "summary": "The WebXR select event is sent to an XRSession when one of the session's input sources has completed a primary action.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: select event"
        }
    ],
    "eventdef-xrsession-selectend": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "selectend_event",
            "slug": "API/XRSession/selectend_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectend_event",
            "summary": "The WebXR event selectend is sent to an XRSession when one of its input sources ends its primary action or when an input source that's in the process of handling an ongoing primary action is disconnected without successfully completing the action.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: selectend event"
        }
    ],
    "dom-xrsession-onselectend": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "selectend_event",
            "slug": "API/XRSession/selectend_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectend_event",
            "summary": "The WebXR event selectend is sent to an XRSession when one of its input sources ends its primary action or when an input source that's in the process of handling an ongoing primary action is disconnected without successfully completing the action.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: selectend event"
        }
    ],
    "eventdef-xrsession-selectstart": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "selectstart_event",
            "slug": "API/XRSession/selectstart_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectstart_event",
            "summary": "The WebXR selectstart event is sent to an XRSession when the user begins a primary action on one of its input sources.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: selectstart event"
        }
    ],
    "dom-xrsession-onselectstart": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "selectstart_event",
            "slug": "API/XRSession/selectstart_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/selectstart_event",
            "summary": "The WebXR selectstart event is sent to an XRSession when the user begins a primary action on one of its input sources.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: selectstart event"
        }
    ],
    "eventdef-xrsession-squeeze": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "squeeze_event",
            "slug": "API/XRSession/squeeze_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeeze_event",
            "summary": "The WebXR squeeze event is sent to an XRSession when one of the session's input sources has completed a primary squeeze action. Examples of common kinds of primary action are users pressing triggers or buttons, tapping a touchpad, speaking a command, or performing a recognizable gesture when using a video tracking system or handheld controller with an accelerometer.",
            "support": {
                "chrome": {
                    "version_added": "83"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "83"
                }
            },
            "title": "XRSession: squeeze event"
        }
    ],
    "dom-xrsession-onsqueeze": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "squeeze_event",
            "slug": "API/XRSession/squeeze_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeeze_event",
            "summary": "The WebXR squeeze event is sent to an XRSession when one of the session's input sources has completed a primary squeeze action. Examples of common kinds of primary action are users pressing triggers or buttons, tapping a touchpad, speaking a command, or performing a recognizable gesture when using a video tracking system or handheld controller with an accelerometer.",
            "support": {
                "chrome": {
                    "version_added": "83"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "83"
                }
            },
            "title": "XRSession: squeeze event"
        }
    ],
    "eventdef-xrsession-squeezeend": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "squeezeend_event",
            "slug": "API/XRSession/squeezeend_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezeend_event",
            "summary": "The WebXR event squeezeend is sent to an XRSession when one of its input sources ends its primary action or when an input source that's in the process of handling an ongoing primary action is disconnected without successfully completing the action.",
            "support": {
                "chrome": {
                    "version_added": "83"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "83"
                }
            },
            "title": "XRSession: squeezeend event"
        }
    ],
    "dom-xrsession-onsqueezeend": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "squeezeend_event",
            "slug": "API/XRSession/squeezeend_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezeend_event",
            "summary": "The WebXR event squeezeend is sent to an XRSession when one of its input sources ends its primary action or when an input source that's in the process of handling an ongoing primary action is disconnected without successfully completing the action.",
            "support": {
                "chrome": {
                    "version_added": "83"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "83"
                }
            },
            "title": "XRSession: squeezeend event"
        }
    ],
    "eventdef-xrsession-squeezestart": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "squeezestart_event",
            "slug": "API/XRSession/squeezestart_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezestart_event",
            "summary": "The WebXR event squeezestart is sent to an XRSession when the user begins a primary squeeze action on one of its input sources.",
            "support": {
                "chrome": {
                    "version_added": "83"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "83"
                }
            },
            "title": "XRSession: squeezestart event"
        }
    ],
    "dom-xrsession-onsqueezestart": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "squeezestart_event",
            "slug": "API/XRSession/squeezestart_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/squeezestart_event",
            "summary": "The WebXR event squeezestart is sent to an XRSession when the user begins a primary squeeze action on one of its input sources.",
            "support": {
                "chrome": {
                    "version_added": "83"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "83"
                }
            },
            "title": "XRSession: squeezestart event"
        }
    ],
    "dom-xrsession-updaterenderstate": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "updateRenderState",
            "slug": "API/XRSession/updateRenderState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/updateRenderState",
            "summary": "The updateRenderState() method of the XRSession interface of the WebXR API schedules changes to be applied to the active render state (XRRenderState) prior to rendering of the next frame.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: updateRenderState() method"
        }
    ],
    "eventdef-xrsession-visibilitychange": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "visibilitychange_event",
            "slug": "API/XRSession/visibilitychange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/visibilitychange_event",
            "summary": "The visibilitychange event is sent to an XRSession to inform it when it becomes visible or hidden, or when it becomes visible but not currently focused. Upon receiving the event, you can check the value of the session's visibilityState property to determine the new visibility state.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: visibilitychange event"
        }
    ],
    "dom-xrsession-onvisibilitychange": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "visibilitychange_event",
            "slug": "API/XRSession/visibilitychange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/visibilitychange_event",
            "summary": "The visibilitychange event is sent to an XRSession to inform it when it becomes visible or hidden, or when it becomes visible but not currently focused. Upon receiving the event, you can check the value of the session's visibilityState property to determine the new visibility state.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: visibilitychange event"
        }
    ],
    "dom-xrsession-visibilitystate": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "visibilityState",
            "slug": "API/XRSession/visibilityState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession/visibilityState",
            "summary": "The read-only visibilityState property of the XRSession interface is a string indicating whether the WebXR content is currently visible to the user, and if it is, whether it's the primary focus.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession: visibilityState property"
        }
    ],
    "xrsession-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSession.json",
            "name": "XRSession",
            "slug": "API/XRSession",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSession",
            "summary": "The WebXR Device API's XRSession interface represents an ongoing XR session, providing methods and properties used to interact with and control the session. To open a WebXR session, use the XRSystem interface's requestSession() method.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSession"
        }
    ],
    "dom-xrsessionevent-xrsessionevent": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSessionEvent.json",
            "name": "XRSessionEvent",
            "slug": "API/XRSessionEvent/XRSessionEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSessionEvent/XRSessionEvent",
            "summary": "The WebXR Device API's XRSessionEvent() constructor creates and returns a new XRSessionEvent object. These objects represent events announcing state changes in an XRSession representing an augmented or virtual reality session.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSessionEvent: XRSessionEvent() constructor"
        }
    ],
    "dom-xrsessionevent-session": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSessionEvent.json",
            "name": "session",
            "slug": "API/XRSessionEvent/session",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSessionEvent/session",
            "summary": "The read-only XRSessionEvent interface's session property indicates which XRSession the event is about.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSessionEvent: session property"
        }
    ],
    "xrsessionevent-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSessionEvent.json",
            "name": "XRSessionEvent",
            "slug": "API/XRSessionEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSessionEvent",
            "summary": "The WebXR Device API's XRSessionEvent interface describes an event which indicates the change of the state of an XRSession. These events occur, for example, when the session ends or the visibility of its context changes.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSessionEvent"
        }
    ],
    "xrspace-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSpace.json",
            "name": "XRSpace",
            "slug": "API/XRSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSpace",
            "summary": "The XRSpace interface of the WebXR Device API is an abstract interface providing a common basis for every class which represents a virtual coordinate system within the virtual world, in which its origin corresponds to a physical location. Spatial data in WebXR is always expressed relative to an object based upon one of the descendant interfaces of XRSpace, at the time at which a given XRFrame takes place.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSpace"
        }
    ],
    "eventdef-xrsystem-devicechange": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSystem.json",
            "name": "devicechange_event",
            "slug": "API/XRSystem/devicechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/devicechange_event",
            "summary": "A devicechange event is fired on an XRSystem object whenever the availability of immersive XR devices has changed; for example, a VR headset or AR goggles have been connected or disconnected. It's a generic Event with no added properties.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSystem: devicechange event"
        }
    ],
    "dom-xrsystem-ondevicechange": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSystem.json",
            "name": "devicechange_event",
            "slug": "API/XRSystem/devicechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/devicechange_event",
            "summary": "A devicechange event is fired on an XRSystem object whenever the availability of immersive XR devices has changed; for example, a VR headset or AR goggles have been connected or disconnected. It's a generic Event with no added properties.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSystem: devicechange event"
        }
    ],
    "dom-xrsystem-issessionsupported": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSystem.json",
            "name": "isSessionSupported",
            "slug": "API/XRSystem/isSessionSupported",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/isSessionSupported",
            "summary": "The XRSystem method isSessionSupported() returns a promise which resolves to true if the specified WebXR session mode is supported by the user's WebXR device. Otherwise, the promise resolves with false.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSystem: isSessionSupported() method"
        }
    ],
    "dom-xrsystem-requestsession": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSystem.json",
            "name": "requestSession",
            "slug": "API/XRSystem/requestSession",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSystem/requestSession",
            "summary": "The XRSystem interface's requestSession() method returns a promise which resolves to an XRSession object through which you can manage the requested type of WebXR session.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSystem: requestSession() method"
        }
    ],
    "xrsystem-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRSystem.json",
            "name": "XRSystem",
            "slug": "API/XRSystem",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRSystem",
            "summary": "The WebXR Device API interface XRSystem provides methods which let you get access to an XRSession object representing a WebXR session. With that XRSession in hand, you can use it to interact with the Augmented Reality (AR) or Virtual Reality (VR) device.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRSystem"
        }
    ],
    "dom-xrview-eye": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRView.json",
            "name": "eye",
            "slug": "API/XRView/eye",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRView/eye",
            "summary": "The XRView interface's read-only eye property is a string indicating which eye's viewpoint the XRView represents: left or right. For views which represent neither eye, such as monoscopic views, this property's value is none.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRView: eye property"
        }
    ],
    "dom-xrview-projectionmatrix": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRView.json",
            "name": "projectionMatrix",
            "slug": "API/XRView/projectionMatrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRView/projectionMatrix",
            "summary": "The XRView interface's read-only projectionMatrix property specifies the projection matrix to apply to the underlying view. This should be used to integrate perspective to everything in the scene, in order to ensure the result is consistent with what the eye expects to see.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRView: projectionMatrix property"
        }
    ],
    "dom-xrview-recommendedviewportscale": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRView.json",
            "name": "recommendedViewportScale",
            "slug": "API/XRView/recommendedViewportScale",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRView/recommendedViewportScale",
            "summary": "The read-only recommendedViewportScale property of the XRView interface is the recommended viewport scale value that you can use for XRView.requestViewportScale() if the user agent has such a recommendation; null otherwise.",
            "support": {
                "chrome": {
                    "version_added": "90"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "90"
                }
            },
            "title": "XRView: recommendedViewportScale property"
        }
    ],
    "dom-xrview-requestviewportscale": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRView.json",
            "name": "requestViewportScale",
            "slug": "API/XRView/requestViewportScale",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRView/requestViewportScale",
            "summary": "The requestViewportScale() method of the XRView interface requests that the user agent sets the requested viewport scale for this viewport to the given value. This is used for dynamic viewport scaling which allows rendering to a subset of the WebXR viewport using a scale factor that can be changed every animation frame.",
            "support": {
                "chrome": {
                    "version_added": "90"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "90"
                }
            },
            "title": "XRView: requestViewportScale() method"
        }
    ],
    "dom-xrview-transform": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRView.json",
            "name": "transform",
            "slug": "API/XRView/transform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRView/transform",
            "summary": "The read-only transform property of the XRView interface is an XRRigidTransform object which provides the position and orientation of the viewpoint relative to the XRReferenceSpace specified when the XRFrame.getViewerPose() method was called to obtain the view object.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRView: transform property"
        }
    ],
    "xrview-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRView.json",
            "name": "XRView",
            "slug": "API/XRView",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRView",
            "summary": "The WebXR Device API's XRView interface describes a single view into the XR scene for a specific frame, providing orientation and position information for the viewpoint. You can think of it as a description of a specific eye or camera and how it views the world. A 3D frame will involve two views, one for each eye, separated by an appropriate distance which approximates the distance between the viewer's eyes. This allows the two views, when projected in isolation into the appropriate eyes, to simulate a 3D world.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRView"
        }
    ],
    "dom-xrviewerpose-views": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRViewerPose.json",
            "name": "views",
            "slug": "API/XRViewerPose/views",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRViewerPose/views",
            "summary": "The read-only XRViewerPose property views returns an array which contains every XRView which must be rendered in order to fully represent the scene from the viewpoint defined by the viewer pose. For monoscopic devices, this array contains a single view.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRViewerPose: views property"
        }
    ],
    "xrviewerpose-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRViewerPose.json",
            "name": "XRViewerPose",
            "slug": "API/XRViewerPose",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRViewerPose",
            "summary": "The WebXR Device API interface XRViewerPose represents the pose (the position and orientation) of a viewer's point of view on the scene. Each XRViewerPose can have multiple views to represent, for example, the slight separation between the left and right eye.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRViewerPose"
        }
    ],
    "dom-xrviewport-height": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRViewport.json",
            "name": "height",
            "slug": "API/XRViewport/height",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRViewport/height",
            "summary": "The read-only XRViewport property height specifies the height, in pixels, of the viewport onto the drawing surface within which the WebXR view is to be rendered. Along with width and the origin point given by x and y, this defines the area within which rendered content will be drawn.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRViewport: height property"
        }
    ],
    "dom-xrviewport-width": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRViewport.json",
            "name": "width",
            "slug": "API/XRViewport/width",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRViewport/width",
            "summary": "The read-only XRViewport property width specifies the width of the viewport, in pixels, onto the drawing surface the 3D scene is to be rendered into. This is defined using this property along with the viewport's height and its origin given by its properties x and y.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRViewport: width property"
        }
    ],
    "dom-xrviewport-x": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRViewport.json",
            "name": "x",
            "slug": "API/XRViewport/x",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRViewport/x",
            "summary": "The read-only XRViewport interface's x property indicates the offset from the left edge of the destination surface (typically a XRWebGLLayer to the left edge of the viewport within the surface into which WebXR content is to be rendered. The viewport's y property identifies the y component of the origin, and its is given by the width and height properties.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRViewport: x property"
        }
    ],
    "dom-xrviewport-y": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRViewport.json",
            "name": "y",
            "slug": "API/XRViewport/y",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRViewport/y",
            "summary": "The read-only XRViewport interface's y property indicates the offset from the bottom edge of the destination surface (typically a XRWebGLLayer to the bottom edge of the viewport within the surface into which WebXR content is to be rendered. The viewport's x property identifies the x component of the origin, and its is given by the width and height properties.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRViewport: y property"
        }
    ],
    "xrviewport-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRViewport.json",
            "name": "XRViewport",
            "slug": "API/XRViewport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRViewport",
            "summary": "The WebXR Device API's XRViewport interface provides properties used to describe the size and position of the current viewport within the XRWebGLLayer being used to render the 3D scene.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRViewport"
        }
    ],
    "dom-xrwebgllayer-xrwebgllayer": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "XRWebGLLayer",
            "slug": "API/XRWebGLLayer/XRWebGLLayer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/XRWebGLLayer",
            "summary": "The WebXR Device API XRWebGLLayer() constructor creates and returns a new XRWebGLLayer object, providing the linkage between the WebXR device and the WebGL graphics layer used to render the 3D scene.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: XRWebGLLayer() constructor"
        }
    ],
    "dom-xrwebgllayer-antialias": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "antialias",
            "slug": "API/XRWebGLLayer/antialias",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/antialias",
            "summary": "The read-only XRWebGLLayer property antialias is a Boolean value which is true if the rendering layer's frame buffer supports anti-aliasing. Otherwise, this property's value is false. The specific anti-aliasing technique used is left to the user agent's discretion and cannot be specified by the website or web app.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: antialias property"
        }
    ],
    "dom-xrwebgllayer-fixedfoveation": [
        {
            "engines": [],
            "filename": "api/XRWebGLLayer.json",
            "name": "fixedFoveation",
            "slug": "API/XRWebGLLayer/fixedFoveation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/fixedFoveation",
            "summary": "The fixedFoveation property of the XRWebGLLayer interface is a number indicating the amount of foveation used by the XR compositor. Fixed Foveated Rendering (FFR) renders the edges of the eye textures at a lower resolution than the center and reduces the GPU load.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": {
                    "version_added": "8.0"
                },
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "XRWebGLLayer: fixedFoveation property"
        }
    ],
    "dom-xrwebgllayer-framebuffer": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "framebuffer",
            "slug": "API/XRWebGLLayer/framebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/framebuffer",
            "summary": "The read-only XRWebGLLayer property framebuffer is an opaque WebGLFramebuffer which is used to buffer the rendered image if the XR compositor is being used. Otherwise, this property's value is null. The opaque framebuffer is functionally nearly the same as a standard WebGL framebuffer, except for the differences covered in the section How opaque framebuffers are special below.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: framebuffer property"
        }
    ],
    "dom-xrwebgllayer-framebufferheight": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "framebufferHeight",
            "slug": "API/XRWebGLLayer/framebufferHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/framebufferHeight",
            "summary": "The read-only XRWebGLLayer property framebufferHeight indicates the height of the framebuffer, in pixels.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: framebufferHeight property"
        }
    ],
    "dom-xrwebgllayer-framebufferwidth": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "framebufferWidth",
            "slug": "API/XRWebGLLayer/framebufferWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/framebufferWidth",
            "summary": "The read-only XRWebGLLayer property framebufferWidth specifies the width of the framebuffer, in pixels.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: framebufferWidth property"
        }
    ],
    "dom-xrwebgllayer-getnativeframebufferscalefactor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "getNativeFramebufferScaleFactor_static",
            "slug": "API/XRWebGLLayer/getNativeFramebufferScaleFactor_static",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/getNativeFramebufferScaleFactor_static",
            "summary": "The static method XRWebGLLayer.getNativeFramebufferScaleFactor() returns a floating-point scaling factor by which one can multiply the specified XRSession's resolution to get the native resolution of the WebXR device's frame buffer.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: getNativeFramebufferScaleFactor() static method"
        }
    ],
    "dom-xrwebgllayer-getviewport": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "getViewport",
            "slug": "API/XRWebGLLayer/getViewport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/getViewport",
            "summary": "The XRWebGLLayer interface's getViewport() method returns the XRViewport that should be used to render the specified XRView into the WebGL layer. For WebXR devices which use a single framebuffer for both the left and right eyes, the returned viewport represents the region of the framebuffer into which the scene should be rendered for the eye represented by the view.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: getViewport() method"
        }
    ],
    "dom-xrwebgllayer-ignoredepthvalues": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "ignoreDepthValues",
            "slug": "API/XRWebGLLayer/ignoreDepthValues",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer/ignoreDepthValues",
            "summary": "The read-only XRWebGLLayer property ignoreDepthValues is a Boolean value which is true if the session has been configured to ignore the values in the depth buffer while rendering the scene. If the depth buffer is being used to determine the position of vertices, this property is false.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer: ignoreDepthValues property"
        }
    ],
    "xrwebgllayer-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/XRWebGLLayer.json",
            "name": "XRWebGLLayer",
            "slug": "API/XRWebGLLayer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/XRWebGLLayer",
            "summary": "The XRWebGLLayer interface of the WebXR Device API provides a linkage between the WebXR device (or simulated XR device, in the case of an inline session) and a WebGL context used to render the scene for display on the device. In particular, it provides access to the WebGL framebuffer and viewport to ease access to the context.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "11.2"
                },
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "XRWebGLLayer"
        }
    ],
    "permissions-policy": [
        {
            "engines": [
                "blink"
            ],
            "filename": "http/headers/Feature-Policy.json",
            "name": "xr-spatial-tracking",
            "slug": "HTTP/Headers/Feature-Policy/xr-spatial-tracking",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/xr-spatial-tracking",
            "summary": "The HTTP Permissions-Policy header xr-spatial-tracking directive controls whether the current document is allowed to use the WebXR Device API.",
            "support": {
                "chrome": {
                    "version_added": "79"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Permissions-Policy: xr-spatial-tracking"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "http/headers/Permissions-Policy.json",
            "name": "xr-spatial-tracking",
            "slug": "HTTP/Headers/Permissions-Policy/xr-spatial-tracking",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Permissions-Policy/xr-spatial-tracking",
            "summary": "The HTTP Permissions-Policy header xr-spatial-tracking directive controls whether the current document is allowed to use the WebXR Device API.",
            "support": {
                "chrome": [
                    {
                        "version_added": "88"
                    },
                    {
                        "version_added": "79",
                        "alternative_name": "Feature-Policy"
                    }
                ],
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": [
                    {
                        "version_added": "88"
                    },
                    {
                        "version_added": "79",
                        "alternative_name": "Feature-Policy"
                    }
                ]
            },
            "title": "Permissions-Policy: xr-spatial-tracking"
        }
    ]
}
