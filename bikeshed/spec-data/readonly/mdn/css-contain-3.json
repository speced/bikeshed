{
    "dom-csscontainerrule-containername": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSContainerRule.json",
            "name": "containerName",
            "slug": "API/CSSContainerRule/containerName",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSContainerRule/containerName",
            "summary": "The read-only containerName property of the CSSContainerRule interface represents the container name of the associated CSS @container at-rule.",
            "support": {
                "chrome": {
                    "version_added": "111"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "110"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "17"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "111"
                }
            },
            "title": "CSSContainerRule: containerName property"
        }
    ],
    "dom-csscontainerrule-containerquery": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSContainerRule.json",
            "name": "containerQuery",
            "slug": "API/CSSContainerRule/containerQuery",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSContainerRule/containerQuery",
            "summary": "The read-only containerQuery property of the CSSContainerRule interface returns a string representing the container conditions that are evaluated when the container changes size in order to determine if the styles in the associated @container are applied.",
            "support": {
                "chrome": {
                    "version_added": "111"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "110"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "17"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "111"
                }
            },
            "title": "CSSContainerRule: containerQuery property"
        }
    ],
    "the-csscontainerrule-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSContainerRule.json",
            "name": "CSSContainerRule",
            "slug": "API/CSSContainerRule",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSContainerRule",
            "summary": "The CSSContainerRule interface represents a single CSS @container rule.",
            "support": {
                "chrome": {
                    "version_added": "105"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "110"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "105"
                }
            },
            "title": "CSSContainerRule"
        }
    ],
    "style-container": [
        {
            "engines": [
                "blink"
            ],
            "filename": "css/at-rules/container.json",
            "name": "style_queries_for_custom_properties",
            "slug": "CSS/@container",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@container",
            "summary": "The @container CSS at-rule is a conditional group rule that applies styles to a containment context. Style declarations are filtered by a condition and applied to the container if the condition is true. The condition is evaluated when the container changes size.",
            "support": {
                "chrome": {
                    "version_added": "111"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "111"
                }
            },
            "title": "@container"
        }
    ],
    "container-rule": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/at-rules/container.json",
            "name": "container",
            "slug": "CSS/@container",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@container",
            "summary": "The @container CSS at-rule is a conditional group rule that applies styles to a containment context. Style declarations are filtered by a condition and applied to the container if the condition is true. The condition is evaluated when the container changes size.",
            "support": {
                "chrome": {
                    "version_added": "105"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "110"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "105"
                }
            },
            "title": "@container"
        }
    ],
    "valdef-contain-inline-size": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/properties/contain.json",
            "name": "inline-size",
            "slug": "CSS/contain#inline-size",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/contain#inline-size",
            "summary": "The contain CSS property indicates that an element and its contents are, as much as possible, independent from the rest of the document tree. Containment enables isolating a subsection of the DOM, providing performance benefits by limiting calculations of layout, style, paint, size, or any combination to a DOM subtree rather than the entire page. Containment can also be used to scope CSS counters and quotes.",
            "support": {
                "chrome": {
                    "version_added": "105"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "101"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "105"
                }
            },
            "title": "contain"
        }
    ],
    "container-name": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/properties/container-name.json",
            "name": "container-name",
            "slug": "CSS/container-name",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/container-name",
            "summary": "The container-name CSS property specifies a list of query container names used by the @container at-rule in a container query. A container query will apply styles to elements based on the size of the nearest ancestor with a containment context. When a containment context is given a name, it can be specifically targeted using the @container at-rule instead of the nearest ancestor with containment.",
            "support": {
                "chrome": {
                    "version_added": "105"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "110"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "105"
                }
            },
            "title": "container-name"
        }
    ],
    "container-type": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/properties/container-type.json",
            "name": "container-type",
            "slug": "CSS/container-type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/container-type",
            "summary": "The container-type CSS property is used to define the type of containment used in a container query.",
            "support": {
                "chrome": {
                    "version_added": "105"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "110"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "105"
                }
            },
            "title": "container-type"
        }
    ],
    "container-shorthand": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/properties/container.json",
            "name": "container",
            "slug": "CSS/container",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/container",
            "summary": "The container shorthand CSS property establishes the element as a query container and specifies the name or name for the containment context used in a container query.",
            "support": {
                "chrome": {
                    "version_added": "105"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "110"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "105"
                }
            },
            "title": "container"
        }
    ]
}
