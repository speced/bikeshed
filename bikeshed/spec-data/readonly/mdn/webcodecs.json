{
    "dom-audiodata-audiodata": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "AudioData",
            "slug": "API/AudioData/AudioData",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/AudioData",
            "summary": "The AudioData() constructor creates a new AudioData object which represents an individual audio sample.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData()"
        }
    ],
    "dom-audiodata-allocationsize": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "allocationSize",
            "slug": "API/AudioData/allocationSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/allocationSize",
            "summary": "The allocationSize() method of the AudioData interface returns the size in bytes required to hold the current sample as filtered by options passed into the method.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.allocationSize()"
        }
    ],
    "dom-audiodata-clone": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "clone",
            "slug": "API/AudioData/clone",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/clone",
            "summary": "The clone() method of the AudioData interface creates a new AudioData object with reference to the same media resource as the original.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.clone()"
        }
    ],
    "dom-audiodata-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "close",
            "slug": "API/AudioData/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/close",
            "summary": "The close() method of the AudioData interface clears all states and releases the reference to the media resource.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.close()"
        }
    ],
    "dom-audiodata-copyto": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "copyTo",
            "slug": "API/AudioData/copyTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/copyTo",
            "summary": "The copyTo() method of the AudioData interface copies a plane of an AudioData object to a destination buffer.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.copyTo()"
        }
    ],
    "dom-audiodata-duration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "duration",
            "slug": "API/AudioData/duration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/duration",
            "summary": "The duration read-only property of the AudioData interface returns the duration in microseconds of this AudioData object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.duration"
        }
    ],
    "dom-audiodata-format": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "format",
            "slug": "API/AudioData/format",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/format",
            "summary": "The format read-only property of the AudioData interface returns the sample format of the AudioData object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.format"
        }
    ],
    "dom-audiodata-numberofchannels": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "numberOfChannels",
            "slug": "API/AudioData/numberOfChannels",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/numberOfChannels",
            "summary": "The numberOfChannels read-only property of the AudioData interface returns the number of channels in the AudioData object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.numberOfChannels"
        }
    ],
    "dom-audiodata-numberofframes": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "numberOfFrames",
            "slug": "API/AudioData/numberOfFrames",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/numberOfFrames",
            "summary": "The numberOfFrames read-only property of the AudioData interface returns the number of frames in the AudioData object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.numberOfFrames"
        }
    ],
    "dom-audiodata-samplerate": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "sampleRate",
            "slug": "API/AudioData/sampleRate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/sampleRate",
            "summary": "The sampleRate read-only property of the AudioData interface returns the sample rate in Hz.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.sampleRate"
        }
    ],
    "dom-audiodata-timestamp": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "timestamp",
            "slug": "API/AudioData/timestamp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData/timestamp",
            "summary": "The duration read-only property of the AudioData interface returns the timestamp of this AudioData object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData.timestamp"
        }
    ],
    "audiodata-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioData.json",
            "name": "AudioData",
            "slug": "API/AudioData",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioData",
            "summary": "The AudioData interface of the WebCodecs API represents an audio sample.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioData"
        }
    ],
    "audiodecoder": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "AudioDecoder",
            "slug": "API/AudioDecoder/AudioDecoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/AudioDecoder",
            "summary": "The AudioDecoder() constructor creates a new AudioDecoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the AudioDecoder.state set to \"unconfigured\".",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.AudioDecoder()"
        }
    ],
    "dom-audiodecoder-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "close",
            "slug": "API/AudioDecoder/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/close",
            "summary": "The close() method of the AudioDecoder interface ends all pending work and releases system resources.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.close()"
        }
    ],
    "dom-audiodecoder-configure": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "configure",
            "slug": "API/AudioDecoder/configure",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/configure",
            "summary": "The configure() method of the AudioDecoder interface enqueues a control message to configure the audio decoder for decoding chunks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.configure()"
        }
    ],
    "dom-audiodecoder-decode": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "decode",
            "slug": "API/AudioDecoder/decode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/decode",
            "summary": "The decode() method of the AudioDecoder interface enqueues a control message to decode a given chunk of audio.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.decode()"
        }
    ],
    "dom-audiodecoder-decodequeuesize": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "decodeQueueSize",
            "slug": "API/AudioDecoder/decodeQueueSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/decodeQueueSize",
            "summary": "The decodeQueueSize read-only property of the AudioDecoder interface returns the number of pending decode requests in the queue.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.decodeQueueSize"
        }
    ],
    "dom-audiodecoder-flush": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "flush",
            "slug": "API/AudioDecoder/flush",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/flush",
            "summary": "The flush() method of the AudioDecoder interface returns a Promise that resolves once all pending messages in the queue have been completed.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.flush()"
        }
    ],
    "dom-audiodecoder-reset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "reset",
            "slug": "API/AudioDecoder/reset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/reset",
            "summary": "The reset() method of the AudioDecoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.reset()"
        }
    ],
    "dom-audiodecoder-state": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "state",
            "slug": "API/AudioDecoder/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder/state",
            "summary": "The state read-only property of the AudioDecoder interface returns the current state of the underlying codec.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder.state"
        }
    ],
    "audiodecoder-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioDecoder.json",
            "name": "AudioDecoder",
            "slug": "API/AudioDecoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioDecoder",
            "summary": "The AudioDecoder interface of the WebCodecs API decodes chunks of audio.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioDecoder"
        }
    ],
    "dom-audioencoder-audioencoder": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "AudioEncoder",
            "slug": "API/AudioEncoder/AudioEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/AudioEncoder",
            "summary": "The AudioEncoder() constructor creates a new AudioEncoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the AudioEncoder.state set to \"unconfigured\".",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.AudioEncoder()"
        }
    ],
    "dom-audioencoder-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "close",
            "slug": "API/AudioEncoder/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/close",
            "summary": "The close() method of the AudioEncoder interface ends all pending work and releases system resources.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.close()"
        }
    ],
    "dom-audioencoder-configure": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "configure",
            "slug": "API/AudioEncoder/configure",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/configure",
            "summary": "The configure() method of the AudioEncoder interface enqueues a control message to configure the audio encoder for encoding chunks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.configure()"
        }
    ],
    "dom-audioencoder-encode": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "encode",
            "slug": "API/AudioEncoder/encode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/encode",
            "summary": "The encode() method of the AudioEncoder interface enqueues a control message to encode a given AudioData object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.encode()"
        }
    ],
    "dom-audioencoder-encodequeuesize": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "encodeQueueSize",
            "slug": "API/AudioEncoder/encodeQueueSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/encodeQueueSize",
            "summary": "The encodeQueueSize read-only property of the AudioEncoder interface returns the number of pending encode requests in the queue.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.encodeQueueSize"
        }
    ],
    "dom-audioencoder-flush": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "flush",
            "slug": "API/AudioEncoder/flush",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/flush",
            "summary": "The flush() method of the AudioEncoder interface returns a Promise that resolves once all pending messages in the queue have been completed.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.flush()"
        }
    ],
    "dom-audioencoder-reset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "reset",
            "slug": "API/AudioEncoder/reset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/reset",
            "summary": "The reset() method of the AudioEncoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.reset()"
        }
    ],
    "dom-audioencoder-state": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "state",
            "slug": "API/AudioEncoder/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder/state",
            "summary": "The state read-only property of the AudioEncoder interface returns the current state of the underlying codec.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder.state"
        }
    ],
    "audioencoder-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/AudioEncoder.json",
            "name": "AudioEncoder",
            "slug": "API/AudioEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/AudioEncoder",
            "summary": "Creates a new AudioEncoder object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "AudioEncoder"
        }
    ],
    "dom-encodedaudiochunk-encodedaudiochunk": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedAudioChunk.json",
            "name": "EncodedAudioChunk",
            "slug": "API/EncodedAudioChunk/EncodedAudioChunk",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedAudioChunk/EncodedAudioChunk",
            "summary": "The EncodedAudioChunk() constructor creates a new EncodedAudioChunk object representing a chunk of encoded audio.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedAudioChunk()"
        }
    ],
    "dom-encodedaudiochunk-bytelength": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedAudioChunk.json",
            "name": "byteLength",
            "slug": "API/EncodedAudioChunk/byteLength",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedAudioChunk/byteLength",
            "summary": "The byteLength read-only property of the EncodedAudioChunk interface returns the length in bytes of the encoded audio data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedAudioChunk.byteLength"
        }
    ],
    "dom-encodedaudiochunk-copyto": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedAudioChunk.json",
            "name": "copyTo",
            "slug": "API/EncodedAudioChunk/copyTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedAudioChunk/copyTo",
            "summary": "The copyTo() method of the EncodedAudioChunk interface copies the encoded chunk of audio data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedAudioChunk.copyTo()"
        }
    ],
    "dom-encodedaudiochunk-duration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedAudioChunk.json",
            "name": "duration",
            "slug": "API/EncodedAudioChunk/duration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedAudioChunk/duration",
            "summary": "The duration read-only property of the EncodedAudioChunk interface returns an integer indicating the duration of the audio in microseconds.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedAudioChunk.duration"
        }
    ],
    "dom-encodedaudiochunk-timestamp": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedAudioChunk.json",
            "name": "timestamp",
            "slug": "API/EncodedAudioChunk/timestamp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedAudioChunk/timestamp",
            "summary": "The timestamp read-only property of the EncodedAudioChunk interface returns an integer indicating the timestamp of the audio in microseconds.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedAudioChunk.timestamp"
        }
    ],
    "dom-encodedaudiochunk-type": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedAudioChunk.json",
            "name": "type",
            "slug": "API/EncodedAudioChunk/type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedAudioChunk/type",
            "summary": "The type read-only property of the EncodedAudioChunk interface returns a value indicating whether the audio chunk is a key chunk, which does not relying on other frames for decoding.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedAudioChunk.type"
        }
    ],
    "encodedaudiochunk-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedAudioChunk.json",
            "name": "EncodedAudioChunk",
            "slug": "API/EncodedAudioChunk",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedAudioChunk",
            "summary": "The EncodedAudioChunk interface of the WebCodecs API represents a chunk of encoded audio data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedAudioChunk"
        }
    ],
    "dom-encodedvideochunk-encodedvideochunk": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedVideoChunk.json",
            "name": "EncodedVideoChunk",
            "slug": "API/EncodedVideoChunk/EncodedVideoChunk",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedVideoChunk/EncodedVideoChunk",
            "summary": "The EncodedVideoChunk() constructor creates a new EncodedVideoChunk object representing a chunk of encoded video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedVideoChunk()"
        }
    ],
    "dom-encodedvideochunk-bytelength": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedVideoChunk.json",
            "name": "byteLength",
            "slug": "API/EncodedVideoChunk/byteLength",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedVideoChunk/byteLength",
            "summary": "The byteLength read-only property of the EncodedVideoChunk interface returns the length in bytes of the encoded video data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedVideoChunk.byteLength"
        }
    ],
    "dom-encodedvideochunk-copyto": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedVideoChunk.json",
            "name": "copyTo",
            "slug": "API/EncodedVideoChunk/copyTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedVideoChunk/copyTo",
            "summary": "The copyTo() method of the EncodedVideoChunk interface copies the encoded chunk of video data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedVideoChunk.copyTo()"
        }
    ],
    "dom-encodedvideochunk-duration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedVideoChunk.json",
            "name": "duration",
            "slug": "API/EncodedVideoChunk/duration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedVideoChunk/duration",
            "summary": "The duration read-only property of the EncodedVideoChunk interface returns an integer indicating the duration of the video in microseconds.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedVideoChunk.duration"
        }
    ],
    "dom-encodedvideochunk-timestamp": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedVideoChunk.json",
            "name": "timestamp",
            "slug": "API/EncodedVideoChunk/timestamp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedVideoChunk/timestamp",
            "summary": "The timestamp read-only property of the EncodedVideoChunk interface returns an integer indicating the timestamp of the video in microseconds.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedVideoChunk.timestamp"
        }
    ],
    "dom-encodedvideochunk-type": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedVideoChunk.json",
            "name": "type",
            "slug": "API/EncodedVideoChunk/type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedVideoChunk/type",
            "summary": "The type read-only property of the EncodedVideoChunk interface returns a value indicating whether the video chunk is a key chunk, which does not rely on other frames for decoding.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedVideoChunk.type"
        }
    ],
    "encodedvideochunk-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/EncodedVideoChunk.json",
            "name": "EncodedVideoChunk",
            "slug": "API/EncodedVideoChunk",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/EncodedVideoChunk",
            "summary": "The EncodedVideoChunk interface of the WebCodecs API represents a chunk of encoded video data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "EncodedVideoChunk"
        }
    ],
    "dom-imagedecoder-imagedecoder": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageDecoder.json",
            "name": "ImageDecoder",
            "slug": "API/ImageDecoder/ImageDecoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageDecoder/ImageDecoder",
            "summary": "The ImageDecoder() constructor creates a new ImageDecoder object which unpacks and decodes image data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageDecoder()"
        }
    ],
    "dom-imagedecoder-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageDecoder.json",
            "name": "close",
            "slug": "API/ImageDecoder/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageDecoder/close",
            "summary": "The close() method of the ImageDecoder interface ends all pending work and releases system resources.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageDecoder.close()"
        }
    ],
    "dom-imagedecoder-complete": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageDecoder.json",
            "name": "complete",
            "slug": "API/ImageDecoder/complete",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageDecoder/complete",
            "summary": "The complete read-only property of the ImageDecoder interface returns true if encoded data has completed buffering.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageDecoder.complete"
        }
    ],
    "dom-imagedecoder-completed": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageDecoder.json",
            "name": "completed",
            "slug": "API/ImageDecoder/completed",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageDecoder/completed",
            "summary": "The completed read-only property of the ImageDecoder interface returns a promise that resolves once encoded data has finished buffering.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageDecoder.completed"
        }
    ],
    "dom-imagedecoder-reset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageDecoder.json",
            "name": "reset",
            "slug": "API/ImageDecoder/reset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageDecoder/reset",
            "summary": "The reset() method of the ImageDecoder interface aborts all pending decode() operations; rejecting all pending promises. All other state will be unchanged. Class methods can continue to be invoked after reset(). E.g., calling decode() after reset() is permitted.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageDecoder.reset()"
        }
    ],
    "dom-imagedecoder-tracks": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageDecoder.json",
            "name": "tracks",
            "slug": "API/ImageDecoder/tracks",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageDecoder/tracks",
            "summary": "The tracks read-only property of the ImageDecoder interface returns a list of the tracks in the encoded image data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageDecoder.tracks"
        }
    ],
    "imagedecoder-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageDecoder.json",
            "name": "ImageDecoder",
            "slug": "API/ImageDecoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageDecoder",
            "summary": "The ImageDecoder interface of the WebCodecs API provides a way to unpack and decode encoded image data.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageDecoder"
        }
    ],
    "dom-imagetrack-animated": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrack.json",
            "name": "animated",
            "slug": "API/ImageTrack/animated",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrack/animated",
            "summary": "The animated property of the ImageTrack interface returns true if the track is animated and therefore has multiple frames.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrack.animated"
        }
    ],
    "dom-imagetrack-framecount": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrack.json",
            "name": "frameCount",
            "slug": "API/ImageTrack/frameCount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrack/frameCount",
            "summary": "The frameCount property of the ImageTrack interface returns the number of frames in the track.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrack.frameCount"
        }
    ],
    "dom-imagetrack-repetitioncount": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrack.json",
            "name": "repetitionCount",
            "slug": "API/ImageTrack/repetitionCount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrack/repetitionCount",
            "summary": "The repetitionCount property of the ImageTrack interface returns the number of repetitions of this track.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrack.repetitionCount"
        }
    ],
    "dom-imagetrack-selected": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrack.json",
            "name": "selected",
            "slug": "API/ImageTrack/selected",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrack/selected",
            "summary": "The selected property of the ImageTrack interface returns true if the track is selected for decoding.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrack.selected"
        }
    ],
    "imagetrack-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrack.json",
            "name": "ImageTrack",
            "slug": "API/ImageTrack",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrack",
            "summary": "The ImageTrack interface of the WebCodecs API represents an individual image track.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrack"
        }
    ],
    "dom-imagetracklist-length": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrackList.json",
            "name": "length",
            "slug": "API/ImageTrackList/length",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrackList/length",
            "summary": "The length property of the ImageTrackList interface returns the length of the ImageTrackList.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrackList.length"
        }
    ],
    "dom-imagetracklist-ready": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrackList.json",
            "name": "ready",
            "slug": "API/ImageTrackList/ready",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrackList/ready",
            "summary": "The ready property of the ImageTrackList interface returns a Promise that resolves when the ImageTrackList is populated with tracks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrackList.ready"
        }
    ],
    "dom-imagetracklist-selectedindex": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrackList.json",
            "name": "selectedIndex",
            "slug": "API/ImageTrackList/selectedIndex",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrackList/selectedIndex",
            "summary": "The selectedIndex property of the ImageTrackList interface returns the index of the selected track.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrackList.selectedIndex"
        }
    ],
    "dom-imagetracklist-selectedtrack": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrackList.json",
            "name": "selectedTrack",
            "slug": "API/ImageTrackList/selectedTrack",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrackList/selectedTrack",
            "summary": "The selectedTrack property of the ImageTrackList interface returns an ImageTrack object representing the currently selected track.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrackList.selectedTrack"
        }
    ],
    "imagetracklist-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/ImageTrackList.json",
            "name": "ImageTrackList",
            "slug": "API/ImageTrackList",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ImageTrackList",
            "summary": "The ImageTrackList interface of the WebCodecs API represents a list of image tracks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "ImageTrackList"
        }
    ],
    "dom-videocolorspace-videocolorspace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoColorSpace.json",
            "name": "VideoColorSpace",
            "slug": "API/VideoColorSpace/VideoColorSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoColorSpace/VideoColorSpace",
            "summary": "The VideoColorSpace() constructor creates a new VideoColorSpace object which represents a video color space.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoColorSpace()"
        }
    ],
    "dom-videocolorspace-fullrange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/VideoColorSpace.json",
            "name": "fullRange",
            "slug": "API/VideoColorSpace/fullRange",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoColorSpace/fullRange",
            "summary": "The fullRange read-only property of the VideoColorSpace interface returns true if full-range color values are used.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoColorSpace.fullRange"
        }
    ],
    "dom-videocolorspace-matrix": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/VideoColorSpace.json",
            "name": "matrix",
            "slug": "API/VideoColorSpace/matrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoColorSpace/matrix",
            "summary": "The matrix read-only property of the VideoColorSpace interface returns the matrix coefficient of the video. Matrix coefficients describe the relationship between sample component values and color coordinates.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoColorSpace.matrix"
        }
    ],
    "dom-videocolorspace-primaries": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/VideoColorSpace.json",
            "name": "primaries",
            "slug": "API/VideoColorSpace/primaries",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoColorSpace/primaries",
            "summary": "The primaries read-only property of the VideoColorSpace interface returns the color gamut of the video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoColorSpace.primaries"
        }
    ],
    "dom-videocolorspace-tojson": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/VideoColorSpace.json",
            "name": "toJSON",
            "slug": "API/VideoColorSpace/toJSON",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoColorSpace/toJSON",
            "summary": "The toJSON() method of the VideoColorSpace interface is a serializer that returns a JSON representation of the VideoColorSpace object.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoColorSpace.toJSON()"
        }
    ],
    "dom-videocolorspace-transfer": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/VideoColorSpace.json",
            "name": "transfer",
            "slug": "API/VideoColorSpace/transfer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoColorSpace/transfer",
            "summary": "The transfer read-only property of the VideoColorSpace interface returns the opto-electronic transfer characteristics of the video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoColorSpace.transfer"
        }
    ],
    "videocolorspace": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/VideoColorSpace.json",
            "name": "VideoColorSpace",
            "slug": "API/VideoColorSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoColorSpace",
            "summary": "The VideoColorSpace interface of the WebCodecs API represents the color space of a video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoColorSpace"
        }
    ],
    "dom-videodecoder-videodecoder": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "VideoDecoder",
            "slug": "API/VideoDecoder/VideoDecoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/VideoDecoder",
            "summary": "The VideoDecoder() constructor creates a new VideoDecoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the VideoDecoder.state set to \"unconfigured\".",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder()"
        }
    ],
    "dom-videodecoder-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "close",
            "slug": "API/VideoDecoder/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/close",
            "summary": "The close() method of the VideoDecoder interface ends all pending work and releases system resources.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder.close()"
        }
    ],
    "dom-videodecoder-configure": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "configure",
            "slug": "API/VideoDecoder/configure",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/configure",
            "summary": "The configure() method of the VideoDecoder interface enqueues a control message to configure the video decoder for decoding chunks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder.configure()"
        }
    ],
    "dom-videodecoder-decode": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "decode",
            "slug": "API/VideoDecoder/decode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/decode",
            "summary": "The decode() method of the VideoDecoder interface enqueues a control message to decode a given chunk of video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder.decode()"
        }
    ],
    "dom-videodecoder-decodequeuesize": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "decodeQueueSize",
            "slug": "API/VideoDecoder/decodeQueueSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/decodeQueueSize",
            "summary": "The decodeQueueSize read-only property of the VideoDecoder interface returns the number of pending decode requests in the queue.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder.decodeQueueSize"
        }
    ],
    "dom-videodecoder-flush": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "flush",
            "slug": "API/VideoDecoder/flush",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/flush",
            "summary": "The flush() method of the VideoDecoder interface returns a Promise that resolves once all pending messages in the queue have been completed.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder.flush()"
        }
    ],
    "dom-videodecoder-reset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "reset",
            "slug": "API/VideoDecoder/reset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/reset",
            "summary": "The reset() method of the VideoDecoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder.reset()"
        }
    ],
    "dom-videodecoder-state": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "state",
            "slug": "API/VideoDecoder/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder/state",
            "summary": "The state property of the VideoDecoder interface returns the current state of the underlying codec.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder.state"
        }
    ],
    "videodecoder-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoDecoder.json",
            "name": "VideoDecoder",
            "slug": "API/VideoDecoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoDecoder",
            "summary": "The VideoDecoder interface of the WebCodecs API decodes chunks of video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoDecoder"
        }
    ],
    "dom-videoencoder-videoencoder": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "VideoEncoder",
            "slug": "API/VideoEncoder/VideoEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder/VideoEncoder",
            "summary": "The VideoEncoder() constructor creates a new VideoEncoder object with the provided init.output callback assigned as the output callback, the provided init.error callback as the error callback, and the VideoEncoder.state set to \"unconfigured\".",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder()"
        }
    ],
    "dom-videoencoder-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "close",
            "slug": "API/VideoEncoder/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder/close",
            "summary": "The close() method of the VideoEncoder interface ends all pending work and releases system resources.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder.close()"
        }
    ],
    "dom-videoencoder-configure": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "configure",
            "slug": "API/VideoEncoder/configure",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder/configure",
            "summary": "The configure() method of the VideoEncoder interface enqueues a control message to configure the video encoder for encoding chunks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder.configure()"
        }
    ],
    "dom-videoencoder-encode": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "encode",
            "slug": "API/VideoEncoder/encode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder/encode",
            "summary": "The encode() method of the VideoEncoder interface enqueues a control message to encode a given VideoFrame.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder.encode()"
        }
    ],
    "dom-videoencoder-encodequeuesize": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "encodeQueueSize",
            "slug": "API/VideoEncoder/encodeQueueSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder/encodeQueueSize",
            "summary": "The encodeQueueSize read-only property of the VideoEncoder interface returns the number of pending encode requests in the queue.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder.encodeQueueSize"
        }
    ],
    "dom-videoencoder-reset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "reset",
            "slug": "API/VideoEncoder/reset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder/reset",
            "summary": "The reset() method of the VideoEncoder interface resets all states including configuration, control messages in the control message queue, and all pending callbacks.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder.reset()"
        }
    ],
    "dom-videoencoder-state": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "state",
            "slug": "API/VideoEncoder/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder/state",
            "summary": "The state read-only property of the VideoEncoder interface returns the current state of the underlying codec.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder.state"
        }
    ],
    "videoencoder-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoEncoder.json",
            "name": "VideoEncoder",
            "slug": "API/VideoEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoEncoder",
            "summary": "The VideoEncoder interface of the WebCodecs API encodes VideoFrame objects.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoEncoder"
        }
    ],
    "dom-videoframe-videoframe": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "VideoFrame",
            "slug": "API/VideoFrame/VideoFrame",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/VideoFrame",
            "summary": "The VideoFrame() constructor creates a new VideoFrame object representing a frame of a video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame()"
        }
    ],
    "dom-videoframe-allocationsize": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "allocationSize",
            "slug": "API/VideoFrame/allocationSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/allocationSize",
            "summary": "The allocationSize() method of the VideoFrame interface returns the number of bytes required to hold the video as filtered by options passed into the method.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.allocationSize()"
        }
    ],
    "dom-videoframe-clone": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "clone",
            "slug": "API/VideoFrame/clone",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/clone",
            "summary": "The clone() method of the VideoFrame interface creates a new VideoFrame object with reference to the same media resource as the original.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.clone()"
        }
    ],
    "dom-videoframe-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "close",
            "slug": "API/VideoFrame/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/close",
            "summary": "The close() method of the VideoFrame interface clears all states and releases the reference to the media resource.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.close()"
        }
    ],
    "dom-videoframe-codedheight": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "codedHeight",
            "slug": "API/VideoFrame/codedHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/codedHeight",
            "summary": "The codedHeight property of the VideoFrame interface returns the height of the VideoFrame in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.codedHeight"
        }
    ],
    "dom-videoframe-codedrect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "codedRect",
            "slug": "API/VideoFrame/codedRect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/codedRect",
            "summary": "The codedRect property of the VideoFrame interface returns a DOMRectReadOnly with the width and height matching VideoFrame.codedWidth and VideoFrame.codedHeight.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.codedRect"
        }
    ],
    "dom-videoframe-codedwidth": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "codedWidth",
            "slug": "API/VideoFrame/codedWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/codedWidth",
            "summary": "The codedWidth property of the VideoFrame interface returns the width of the VideoFrame in pixels, potentially including non-visible padding, and prior to considering potential ratio adjustments.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.codedWidth"
        }
    ],
    "dom-videoframe-colorspace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "colorSpace",
            "slug": "API/VideoFrame/colorSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/colorSpace",
            "summary": "The colorSpace property of the VideoFrame interface returns a VideoColorSpace object representing the color space of the video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.colorSpace"
        }
    ],
    "dom-videoframe-displayheight": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "displayHeight",
            "slug": "API/VideoFrame/displayHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/displayHeight",
            "summary": "The displayHeight property of the VideoFrame interface returns the height of the VideoFrame after applying aspect ratio adjustments.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.displayHeight"
        }
    ],
    "dom-videoframe-displaywidth": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "displayWidth",
            "slug": "API/VideoFrame/displayWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/displayWidth",
            "summary": "The displayWidth property of the VideoFrame interface returns the width of the VideoFrame after applying aspect ratio adjustments.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.displayWidth"
        }
    ],
    "dom-videoframe-duration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "duration",
            "slug": "API/VideoFrame/duration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/duration",
            "summary": "The duration property of the VideoFrame interface returns an integer indicating the duration of the video in microseconds.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.duration"
        }
    ],
    "dom-videoframe-format": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "format",
            "slug": "API/VideoFrame/format",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/format",
            "summary": "The format property of the VideoFrame interface returns the pixel format of the VideoFrame.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.format"
        }
    ],
    "dom-videoframe-timestamp": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "timestamp",
            "slug": "API/VideoFrame/timestamp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/timestamp",
            "summary": "The timestamp property of the VideoFrame interface returns an integer indicating the timestamp of the video in microseconds.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.timestamp"
        }
    ],
    "dom-videoframe-visiblerect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "visibleRect",
            "slug": "API/VideoFrame/visibleRect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame/visibleRect",
            "summary": "The visibleRect property of the VideoFrame interface returns a DOMRectReadOnly describing the visible rectangle of pixels for this VideoFrame.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame.visibleRect"
        }
    ],
    "videoframe-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/VideoFrame.json",
            "name": "VideoFrame",
            "slug": "API/VideoFrame",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VideoFrame",
            "summary": "The VideoFrame interface of the Web Codecs API represents a frame of a video.",
            "support": {
                "chrome": {
                    "version_added": "94"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "94"
                }
            },
            "title": "VideoFrame"
        }
    ]
}
