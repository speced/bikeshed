{
    "5.15.4": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLCanvasElement.json",
            "name": "webglcontextcreationerror_event",
            "slug": "API/HTMLCanvasElement/webglcontextcreationerror_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextcreationerror_event",
            "summary": "The webglcontextcreationerror event of the WebGL API is fired if the user agent is unable to create a WebGLRenderingContext context.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLCanvasElement: webglcontextcreationerror event"
        }
    ],
    "5.15.2": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLCanvasElement.json",
            "name": "webglcontextlost_event",
            "slug": "API/HTMLCanvasElement/webglcontextlost_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextlost_event",
            "summary": "The webglcontextlost event of the WebGL API is fired if the user agent detects that the drawing buffer associated with a WebGLRenderingContext object has been lost.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLCanvasElement: webglcontextlost event"
        }
    ],
    "5.15.3": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLCanvasElement.json",
            "name": "webglcontextrestored_event",
            "slug": "API/HTMLCanvasElement/webglcontextrestored_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLCanvasElement/webglcontextrestored_event",
            "summary": "The webglcontextrestored event of the WebGL API is fired if the user agent restores the drawing buffer for a WebGLRenderingContext object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLCanvasElement: webglcontextrestored event"
        }
    ],
    "5.14.3": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "activeTexture",
            "slug": "API/WebGLRenderingContext/activeTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/activeTexture",
            "summary": "The WebGLRenderingContext.activeTexture() method of the WebGL API specifies which texture unit to make active.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: activeTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "blendColor",
            "slug": "API/WebGLRenderingContext/blendColor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendColor",
            "summary": "The WebGLRenderingContext.blendColor() method of the WebGL API is used to set the source and destination blending factors.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendColor() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "blendEquation",
            "slug": "API/WebGLRenderingContext/blendEquation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquation",
            "summary": "The WebGLRenderingContext.blendEquation() method of the WebGL API is used to set both the RGB blend equation and alpha blend equation to a single equation.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendEquation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "blendEquationSeparate",
            "slug": "API/WebGLRenderingContext/blendEquationSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquationSeparate",
            "summary": "The WebGLRenderingContext.blendEquationSeparate() method of the WebGL API is used to set the RGB blend equation and alpha blend equation separately.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendEquationSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "blendFunc",
            "slug": "API/WebGLRenderingContext/blendFunc",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFunc",
            "summary": "The WebGLRenderingContext.blendFunc() method of the WebGL API defines which function is used for blending pixel arithmetic.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendFunc() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "blendFuncSeparate",
            "slug": "API/WebGLRenderingContext/blendFuncSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFuncSeparate",
            "summary": "The WebGLRenderingContext.blendFuncSeparate() method of the WebGL API defines which function is used for blending pixel arithmetic for RGB and alpha components separately.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendFuncSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "clearColor",
            "slug": "API/WebGLRenderingContext/clearColor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearColor",
            "summary": "The WebGLRenderingContext.clearColor() method of the WebGL API specifies the color values used when clearing color buffers.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clearColor() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "clearDepth",
            "slug": "API/WebGLRenderingContext/clearDepth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearDepth",
            "summary": "The WebGLRenderingContext.clearDepth() method of the WebGL API specifies the clear value for the depth buffer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clearDepth() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "clearStencil",
            "slug": "API/WebGLRenderingContext/clearStencil",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearStencil",
            "summary": "The WebGLRenderingContext.clearStencil() method of the WebGL API specifies the clear value for the stencil buffer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clearStencil() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "colorMask",
            "slug": "API/WebGLRenderingContext/colorMask",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/colorMask",
            "summary": "The WebGLRenderingContext.colorMask() method of the WebGL API sets which color components to enable or to disable when drawing or rendering to a WebGLFramebuffer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: colorMask() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "cullFace",
            "slug": "API/WebGLRenderingContext/cullFace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace",
            "summary": "The WebGLRenderingContext.cullFace() method of the WebGL API specifies whether or not front- and/or back-facing polygons can be culled.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: cullFace() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "depthFunc",
            "slug": "API/WebGLRenderingContext/depthFunc",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthFunc",
            "summary": "The WebGLRenderingContext.depthFunc() method of the WebGL API specifies a function that compares incoming pixel depth to the current depth buffer value.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: depthFunc() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "depthMask",
            "slug": "API/WebGLRenderingContext/depthMask",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthMask",
            "summary": "The WebGLRenderingContext.depthMask() method of the WebGL API sets whether writing into the depth buffer is enabled or disabled.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: depthMask() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "depthRange",
            "slug": "API/WebGLRenderingContext/depthRange",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthRange",
            "summary": "The WebGLRenderingContext.depthRange() method of the WebGL API specifies the depth range mapping from normalized device coordinates to window or viewport coordinates.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: depthRange() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "disable",
            "slug": "API/WebGLRenderingContext/disable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/disable",
            "summary": "The WebGLRenderingContext.disable() method of the WebGL API disables specific WebGL capabilities for this context.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: disable() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "enable",
            "slug": "API/WebGLRenderingContext/enable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/enable",
            "summary": "The WebGLRenderingContext.enable() method of the WebGL API enables specific WebGL capabilities for this context.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: enable() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "frontFace",
            "slug": "API/WebGLRenderingContext/frontFace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace",
            "summary": "The WebGLRenderingContext.frontFace() method of the WebGL API specifies whether polygons are front- or back-facing by setting a winding orientation.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: frontFace() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getError",
            "slug": "API/WebGLRenderingContext/getError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getError",
            "summary": "The WebGLRenderingContext.getError() method of the WebGL API returns error information.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getError() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getParameter",
            "slug": "API/WebGLRenderingContext/getParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getParameter",
            "summary": "The WebGLRenderingContext.getParameter() method of the WebGL API returns a value for the passed parameter name.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "hint",
            "slug": "API/WebGLRenderingContext/hint",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/hint",
            "summary": "The WebGLRenderingContext.hint() method of the WebGL API specifies hints for certain behaviors. The interpretation of these hints depend on the implementation.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: hint() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isEnabled",
            "slug": "API/WebGLRenderingContext/isEnabled",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isEnabled",
            "summary": "The WebGLRenderingContext.isEnabled() method of the WebGL API tests whether a specific WebGL capability is enabled or not for this context.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isEnabled() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "pixelStorei",
            "slug": "API/WebGLRenderingContext/pixelStorei",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei",
            "summary": "The WebGLRenderingContext.pixelStorei() method of the WebGL API specifies the pixel storage modes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: pixelStorei() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "polygonOffset",
            "slug": "API/WebGLRenderingContext/polygonOffset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/polygonOffset",
            "summary": "The WebGLRenderingContext.polygonOffset() method of the WebGL API specifies the scale factors and units to calculate depth values.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: polygonOffset() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "sampleCoverage",
            "slug": "API/WebGLRenderingContext/sampleCoverage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/sampleCoverage",
            "summary": "The WebGLRenderingContext.sampleCoverage() method of the WebGL API specifies multi-sample coverage parameters for anti-aliasing effects.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: sampleCoverage() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "stencilFunc",
            "slug": "API/WebGLRenderingContext/stencilFunc",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilFunc",
            "summary": "The WebGLRenderingContext.stencilFunc() method of the WebGL API sets the front and back function and reference value for stencil testing.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilFunc() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "stencilFuncSeparate",
            "slug": "API/WebGLRenderingContext/stencilFuncSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilFuncSeparate",
            "summary": "The WebGLRenderingContext.stencilFuncSeparate() method of the WebGL API sets the front and/or back function and reference value for stencil testing.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilFuncSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "stencilMask",
            "slug": "API/WebGLRenderingContext/stencilMask",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMask",
            "summary": "The WebGLRenderingContext.stencilMask() method of the WebGL API controls enabling and disabling of both the front and back writing of individual bits in the stencil planes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilMask() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "stencilMaskSeparate",
            "slug": "API/WebGLRenderingContext/stencilMaskSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMaskSeparate",
            "summary": "The WebGLRenderingContext.stencilMaskSeparate() method of the WebGL API controls enabling and disabling of front and/or back writing of individual bits in the stencil planes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilMaskSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "stencilOp",
            "slug": "API/WebGLRenderingContext/stencilOp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOp",
            "summary": "The WebGLRenderingContext.stencilOp() method of the WebGL API sets both the front and back-facing stencil test actions.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilOp() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "stencilOpSeparate",
            "slug": "API/WebGLRenderingContext/stencilOpSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate",
            "summary": "The WebGLRenderingContext.stencilOpSeparate() method of the WebGL API sets the front and/or back-facing stencil test actions.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilOpSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "activeTexture",
            "slug": "API/WebGLRenderingContext/activeTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/activeTexture",
            "summary": "The WebGLRenderingContext.activeTexture() method of the WebGL API specifies which texture unit to make active.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: activeTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "blendColor",
            "slug": "API/WebGLRenderingContext/blendColor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendColor",
            "summary": "The WebGLRenderingContext.blendColor() method of the WebGL API is used to set the source and destination blending factors.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendColor() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "blendEquation",
            "slug": "API/WebGLRenderingContext/blendEquation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquation",
            "summary": "The WebGLRenderingContext.blendEquation() method of the WebGL API is used to set both the RGB blend equation and alpha blend equation to a single equation.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendEquation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "blendEquationSeparate",
            "slug": "API/WebGLRenderingContext/blendEquationSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquationSeparate",
            "summary": "The WebGLRenderingContext.blendEquationSeparate() method of the WebGL API is used to set the RGB blend equation and alpha blend equation separately.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendEquationSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "blendFunc",
            "slug": "API/WebGLRenderingContext/blendFunc",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFunc",
            "summary": "The WebGLRenderingContext.blendFunc() method of the WebGL API defines which function is used for blending pixel arithmetic.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendFunc() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "blendFuncSeparate",
            "slug": "API/WebGLRenderingContext/blendFuncSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendFuncSeparate",
            "summary": "The WebGLRenderingContext.blendFuncSeparate() method of the WebGL API defines which function is used for blending pixel arithmetic for RGB and alpha components separately.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: blendFuncSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "clearColor",
            "slug": "API/WebGLRenderingContext/clearColor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearColor",
            "summary": "The WebGLRenderingContext.clearColor() method of the WebGL API specifies the color values used when clearing color buffers.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clearColor() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "clearDepth",
            "slug": "API/WebGLRenderingContext/clearDepth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearDepth",
            "summary": "The WebGLRenderingContext.clearDepth() method of the WebGL API specifies the clear value for the depth buffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clearDepth() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "clearStencil",
            "slug": "API/WebGLRenderingContext/clearStencil",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clearStencil",
            "summary": "The WebGLRenderingContext.clearStencil() method of the WebGL API specifies the clear value for the stencil buffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clearStencil() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "colorMask",
            "slug": "API/WebGLRenderingContext/colorMask",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/colorMask",
            "summary": "The WebGLRenderingContext.colorMask() method of the WebGL API sets which color components to enable or to disable when drawing or rendering to a WebGLFramebuffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: colorMask() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "cullFace",
            "slug": "API/WebGLRenderingContext/cullFace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/cullFace",
            "summary": "The WebGLRenderingContext.cullFace() method of the WebGL API specifies whether or not front- and/or back-facing polygons can be culled.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: cullFace() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "depthFunc",
            "slug": "API/WebGLRenderingContext/depthFunc",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthFunc",
            "summary": "The WebGLRenderingContext.depthFunc() method of the WebGL API specifies a function that compares incoming pixel depth to the current depth buffer value.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: depthFunc() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "depthMask",
            "slug": "API/WebGLRenderingContext/depthMask",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthMask",
            "summary": "The WebGLRenderingContext.depthMask() method of the WebGL API sets whether writing into the depth buffer is enabled or disabled.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: depthMask() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "depthRange",
            "slug": "API/WebGLRenderingContext/depthRange",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/depthRange",
            "summary": "The WebGLRenderingContext.depthRange() method of the WebGL API specifies the depth range mapping from normalized device coordinates to window or viewport coordinates.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: depthRange() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "disable",
            "slug": "API/WebGLRenderingContext/disable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/disable",
            "summary": "The WebGLRenderingContext.disable() method of the WebGL API disables specific WebGL capabilities for this context.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: disable() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "enable",
            "slug": "API/WebGLRenderingContext/enable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/enable",
            "summary": "The WebGLRenderingContext.enable() method of the WebGL API enables specific WebGL capabilities for this context.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: enable() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "frontFace",
            "slug": "API/WebGLRenderingContext/frontFace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/frontFace",
            "summary": "The WebGLRenderingContext.frontFace() method of the WebGL API specifies whether polygons are front- or back-facing by setting a winding orientation.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: frontFace() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getError",
            "slug": "API/WebGLRenderingContext/getError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getError",
            "summary": "The WebGLRenderingContext.getError() method of the WebGL API returns error information.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getError() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getParameter",
            "slug": "API/WebGLRenderingContext/getParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getParameter",
            "summary": "The WebGLRenderingContext.getParameter() method of the WebGL API returns a value for the passed parameter name.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "hint",
            "slug": "API/WebGLRenderingContext/hint",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/hint",
            "summary": "The WebGLRenderingContext.hint() method of the WebGL API specifies hints for certain behaviors. The interpretation of these hints depend on the implementation.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: hint() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isEnabled",
            "slug": "API/WebGLRenderingContext/isEnabled",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isEnabled",
            "summary": "The WebGLRenderingContext.isEnabled() method of the WebGL API tests whether a specific WebGL capability is enabled or not for this context.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isEnabled() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "lineWidth",
            "slug": "API/WebGLRenderingContext/lineWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/lineWidth",
            "summary": "The WebGLRenderingContext.lineWidth() method of the WebGL API sets the line width of rasterized lines.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: lineWidth() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "pixelStorei",
            "slug": "API/WebGLRenderingContext/pixelStorei",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei",
            "summary": "The WebGLRenderingContext.pixelStorei() method of the WebGL API specifies the pixel storage modes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: pixelStorei() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "polygonOffset",
            "slug": "API/WebGLRenderingContext/polygonOffset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/polygonOffset",
            "summary": "The WebGLRenderingContext.polygonOffset() method of the WebGL API specifies the scale factors and units to calculate depth values.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: polygonOffset() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "sampleCoverage",
            "slug": "API/WebGLRenderingContext/sampleCoverage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/sampleCoverage",
            "summary": "The WebGLRenderingContext.sampleCoverage() method of the WebGL API specifies multi-sample coverage parameters for anti-aliasing effects.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: sampleCoverage() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "stencilFunc",
            "slug": "API/WebGLRenderingContext/stencilFunc",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilFunc",
            "summary": "The WebGLRenderingContext.stencilFunc() method of the WebGL API sets the front and back function and reference value for stencil testing.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilFunc() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "stencilFuncSeparate",
            "slug": "API/WebGLRenderingContext/stencilFuncSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilFuncSeparate",
            "summary": "The WebGLRenderingContext.stencilFuncSeparate() method of the WebGL API sets the front and/or back function and reference value for stencil testing.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilFuncSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "stencilMask",
            "slug": "API/WebGLRenderingContext/stencilMask",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMask",
            "summary": "The WebGLRenderingContext.stencilMask() method of the WebGL API controls enabling and disabling of both the front and back writing of individual bits in the stencil planes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilMask() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "stencilMaskSeparate",
            "slug": "API/WebGLRenderingContext/stencilMaskSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilMaskSeparate",
            "summary": "The WebGLRenderingContext.stencilMaskSeparate() method of the WebGL API controls enabling and disabling of front and/or back writing of individual bits in the stencil planes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilMaskSeparate() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "stencilOp",
            "slug": "API/WebGLRenderingContext/stencilOp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOp",
            "summary": "The WebGLRenderingContext.stencilOp() method of the WebGL API sets both the front and back-facing stencil test actions.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilOp() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "stencilOpSeparate",
            "slug": "API/WebGLRenderingContext/stencilOpSeparate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/stencilOpSeparate",
            "summary": "The WebGLRenderingContext.stencilOpSeparate() method of the WebGL API sets the front and/or back-facing stencil test actions.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: stencilOpSeparate() method"
        }
    ],
    "5.14.9": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "attachShader",
            "slug": "API/WebGLRenderingContext/attachShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/attachShader",
            "summary": "The WebGLRenderingContext.attachShader() method of the WebGL API attaches either a fragment or vertex WebGLShader to a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: attachShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "bindAttribLocation",
            "slug": "API/WebGLRenderingContext/bindAttribLocation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindAttribLocation",
            "summary": "The WebGLRenderingContext.bindAttribLocation() method of the WebGL API binds a generic vertex index to an attribute variable.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindAttribLocation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "compileShader",
            "slug": "API/WebGLRenderingContext/compileShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compileShader",
            "summary": "The WebGLRenderingContext.compileShader() method of the WebGL API compiles a GLSL shader into binary data so that it can be used by a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: compileShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "createProgram",
            "slug": "API/WebGLRenderingContext/createProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createProgram",
            "summary": "The WebGLRenderingContext.createProgram() method of the WebGL API creates and initializes a WebGLProgram object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "createShader",
            "slug": "API/WebGLRenderingContext/createShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createShader",
            "summary": "The WebGLRenderingContext method createShader() of the WebGL API creates a WebGLShader that can then be configured further using WebGLRenderingContext.shaderSource() and WebGLRenderingContext.compileShader().",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "deleteProgram",
            "slug": "API/WebGLRenderingContext/deleteProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteProgram",
            "summary": "The WebGLRenderingContext.deleteProgram() method of the WebGL API deletes a given WebGLProgram object. This method has no effect if the program has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "deleteShader",
            "slug": "API/WebGLRenderingContext/deleteShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteShader",
            "summary": "The WebGLRenderingContext.deleteShader() method of the WebGL API marks a given WebGLShader object for deletion. It will then be deleted whenever the shader is no longer in use. This method has no effect if the shader has already been deleted, and the WebGLShader is automatically marked for deletion when it is destroyed by the garbage collector.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "detachShader",
            "slug": "API/WebGLRenderingContext/detachShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/detachShader",
            "summary": "The WebGLRenderingContext.detachShader() method of the WebGL API detaches a previously attached WebGLShader from a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: detachShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getAttachedShaders",
            "slug": "API/WebGLRenderingContext/getAttachedShaders",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getAttachedShaders",
            "summary": "The WebGLRenderingContext.getAttachedShaders() method of the WebGL API returns a list of WebGLShader objects attached to a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getAttachedShaders() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getProgramInfoLog",
            "slug": "API/WebGLRenderingContext/getProgramInfoLog",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getProgramInfoLog",
            "summary": "The WebGLRenderingContext.getProgramInfoLog returns the information log for the specified WebGLProgram object. It contains errors that occurred during failed linking or validation of WebGLProgram objects.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getProgramInfoLog() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getProgramParameter",
            "slug": "API/WebGLRenderingContext/getProgramParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getProgramParameter",
            "summary": "The WebGLRenderingContext.getProgramParameter() method of the WebGL API returns information about the given program.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getProgramParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getShaderInfoLog",
            "slug": "API/WebGLRenderingContext/getShaderInfoLog",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderInfoLog",
            "summary": "The WebGLRenderingContext.getShaderInfoLog returns the information log for the specified WebGLShader object. It contains warnings, debugging and compile information.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderInfoLog() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getShaderParameter",
            "slug": "API/WebGLRenderingContext/getShaderParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderParameter",
            "summary": "The WebGLRenderingContext.getShaderParameter() method of the WebGL API returns information about the given shader.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getShaderPrecisionFormat",
            "slug": "API/WebGLRenderingContext/getShaderPrecisionFormat",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat",
            "summary": "The WebGLRenderingContext.getShaderPrecisionFormat() method of the WebGL API returns a new WebGLShaderPrecisionFormat object describing the range and precision for the specified shader numeric format.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderPrecisionFormat() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getShaderSource",
            "slug": "API/WebGLRenderingContext/getShaderSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderSource",
            "summary": "The WebGLRenderingContext.getShaderSource() method of the WebGL API returns the source code of a WebGLShader as a string.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderSource() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isProgram",
            "slug": "API/WebGLRenderingContext/isProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isProgram",
            "summary": "The WebGLRenderingContext.isProgram() method of the WebGL API returns true if the passed WebGLProgram is valid, false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isShader",
            "slug": "API/WebGLRenderingContext/isShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isShader",
            "summary": "The WebGLRenderingContext.isShader() method of the WebGL API returns true if the passed WebGLShader is valid, false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "linkProgram",
            "slug": "API/WebGLRenderingContext/linkProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/linkProgram",
            "summary": "The WebGLRenderingContext interface's linkProgram() method links a given WebGLProgram, completing the process of preparing the GPU code for the program's fragment and vertex shaders.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: linkProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "shaderSource",
            "slug": "API/WebGLRenderingContext/shaderSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/shaderSource",
            "summary": "The WebGLRenderingContext.shaderSource() method of the WebGL API sets the source code of a WebGLShader.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: shaderSource() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "useProgram",
            "slug": "API/WebGLRenderingContext/useProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/useProgram",
            "summary": "The WebGLRenderingContext.useProgram() method of the WebGL API sets the specified WebGLProgram as part of the current rendering state.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: useProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "validateProgram",
            "slug": "API/WebGLRenderingContext/validateProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/validateProgram",
            "summary": "The WebGLRenderingContext.validateProgram() method of the WebGL API validates a WebGLProgram. It checks if it is successfully linked and if it can be used in the current WebGL state.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: validateProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "attachShader",
            "slug": "API/WebGLRenderingContext/attachShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/attachShader",
            "summary": "The WebGLRenderingContext.attachShader() method of the WebGL API attaches either a fragment or vertex WebGLShader to a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: attachShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "bindAttribLocation",
            "slug": "API/WebGLRenderingContext/bindAttribLocation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindAttribLocation",
            "summary": "The WebGLRenderingContext.bindAttribLocation() method of the WebGL API binds a generic vertex index to an attribute variable.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindAttribLocation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "compileShader",
            "slug": "API/WebGLRenderingContext/compileShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compileShader",
            "summary": "The WebGLRenderingContext.compileShader() method of the WebGL API compiles a GLSL shader into binary data so that it can be used by a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: compileShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "createProgram",
            "slug": "API/WebGLRenderingContext/createProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createProgram",
            "summary": "The WebGLRenderingContext.createProgram() method of the WebGL API creates and initializes a WebGLProgram object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "createShader",
            "slug": "API/WebGLRenderingContext/createShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createShader",
            "summary": "The WebGLRenderingContext method createShader() of the WebGL API creates a WebGLShader that can then be configured further using WebGLRenderingContext.shaderSource() and WebGLRenderingContext.compileShader().",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "deleteProgram",
            "slug": "API/WebGLRenderingContext/deleteProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteProgram",
            "summary": "The WebGLRenderingContext.deleteProgram() method of the WebGL API deletes a given WebGLProgram object. This method has no effect if the program has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "deleteShader",
            "slug": "API/WebGLRenderingContext/deleteShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteShader",
            "summary": "The WebGLRenderingContext.deleteShader() method of the WebGL API marks a given WebGLShader object for deletion. It will then be deleted whenever the shader is no longer in use. This method has no effect if the shader has already been deleted, and the WebGLShader is automatically marked for deletion when it is destroyed by the garbage collector.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "detachShader",
            "slug": "API/WebGLRenderingContext/detachShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/detachShader",
            "summary": "The WebGLRenderingContext.detachShader() method of the WebGL API detaches a previously attached WebGLShader from a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: detachShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getAttachedShaders",
            "slug": "API/WebGLRenderingContext/getAttachedShaders",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getAttachedShaders",
            "summary": "The WebGLRenderingContext.getAttachedShaders() method of the WebGL API returns a list of WebGLShader objects attached to a WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getAttachedShaders() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getProgramInfoLog",
            "slug": "API/WebGLRenderingContext/getProgramInfoLog",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getProgramInfoLog",
            "summary": "The WebGLRenderingContext.getProgramInfoLog returns the information log for the specified WebGLProgram object. It contains errors that occurred during failed linking or validation of WebGLProgram objects.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getProgramInfoLog() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getProgramParameter",
            "slug": "API/WebGLRenderingContext/getProgramParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getProgramParameter",
            "summary": "The WebGLRenderingContext.getProgramParameter() method of the WebGL API returns information about the given program.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getProgramParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getShaderInfoLog",
            "slug": "API/WebGLRenderingContext/getShaderInfoLog",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderInfoLog",
            "summary": "The WebGLRenderingContext.getShaderInfoLog returns the information log for the specified WebGLShader object. It contains warnings, debugging and compile information.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderInfoLog() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getShaderParameter",
            "slug": "API/WebGLRenderingContext/getShaderParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderParameter",
            "summary": "The WebGLRenderingContext.getShaderParameter() method of the WebGL API returns information about the given shader.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getShaderPrecisionFormat",
            "slug": "API/WebGLRenderingContext/getShaderPrecisionFormat",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderPrecisionFormat",
            "summary": "The WebGLRenderingContext.getShaderPrecisionFormat() method of the WebGL API returns a new WebGLShaderPrecisionFormat object describing the range and precision for the specified shader numeric format.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderPrecisionFormat() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getShaderSource",
            "slug": "API/WebGLRenderingContext/getShaderSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getShaderSource",
            "summary": "The WebGLRenderingContext.getShaderSource() method of the WebGL API returns the source code of a WebGLShader as a string.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getShaderSource() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isProgram",
            "slug": "API/WebGLRenderingContext/isProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isProgram",
            "summary": "The WebGLRenderingContext.isProgram() method of the WebGL API returns true if the passed WebGLProgram is valid, false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isShader",
            "slug": "API/WebGLRenderingContext/isShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isShader",
            "summary": "The WebGLRenderingContext.isShader() method of the WebGL API returns true if the passed WebGLShader is valid, false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isShader() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "linkProgram",
            "slug": "API/WebGLRenderingContext/linkProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/linkProgram",
            "summary": "The WebGLRenderingContext interface's linkProgram() method links a given WebGLProgram, completing the process of preparing the GPU code for the program's fragment and vertex shaders.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: linkProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "shaderSource",
            "slug": "API/WebGLRenderingContext/shaderSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/shaderSource",
            "summary": "The WebGLRenderingContext.shaderSource() method of the WebGL API sets the source code of a WebGLShader.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: shaderSource() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "useProgram",
            "slug": "API/WebGLRenderingContext/useProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/useProgram",
            "summary": "The WebGLRenderingContext.useProgram() method of the WebGL API sets the specified WebGLProgram as part of the current rendering state.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: useProgram() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "validateProgram",
            "slug": "API/WebGLRenderingContext/validateProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/validateProgram",
            "summary": "The WebGLRenderingContext.validateProgram() method of the WebGL API validates a WebGLProgram. It checks if it is successfully linked and if it can be used in the current WebGL state.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: validateProgram() method"
        }
    ],
    "5.14.5": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "bindBuffer",
            "slug": "API/WebGLRenderingContext/bindBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer",
            "summary": "The WebGLRenderingContext.bindBuffer() method of the WebGL API binds a given WebGLBuffer to a target.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindBuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "bufferData",
            "slug": "API/WebGLRenderingContext/bufferData",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData",
            "summary": "The WebGLRenderingContext.bufferData() method of the WebGL API initializes and creates the buffer object's data store.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bufferData() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "bufferSubData",
            "slug": "API/WebGLRenderingContext/bufferSubData",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData",
            "summary": "The WebGLRenderingContext.bufferSubData() method of the WebGL API updates a subset of a buffer object's data store.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bufferSubData() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "createBuffer",
            "slug": "API/WebGLRenderingContext/createBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createBuffer",
            "summary": "The WebGLRenderingContext.createBuffer() method of the WebGL API creates and initializes a WebGLBuffer storing data such as vertices or colors.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createBuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "deleteBuffer",
            "slug": "API/WebGLRenderingContext/deleteBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteBuffer",
            "summary": "The WebGLRenderingContext.deleteBuffer() method of the WebGL API deletes a given WebGLBuffer. This method has no effect if the buffer has already been deleted. Normally you don't need to call this method yourself, when the buffer object is dereferenced it will be marked as free.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteBuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getBufferParameter",
            "slug": "API/WebGLRenderingContext/getBufferParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getBufferParameter",
            "summary": "The WebGLRenderingContext.getBufferParameter() method of the WebGL API returns information about the buffer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getBufferParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isBuffer",
            "slug": "API/WebGLRenderingContext/isBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isBuffer",
            "summary": "The WebGLRenderingContext.isBuffer() method of the WebGL API returns true if the passed WebGLBuffer is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isBuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "bindBuffer",
            "slug": "API/WebGLRenderingContext/bindBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindBuffer",
            "summary": "The WebGLRenderingContext.bindBuffer() method of the WebGL API binds a given WebGLBuffer to a target.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindBuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "bufferData",
            "slug": "API/WebGLRenderingContext/bufferData",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferData",
            "summary": "The WebGLRenderingContext.bufferData() method of the WebGL API initializes and creates the buffer object's data store.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bufferData() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "bufferSubData",
            "slug": "API/WebGLRenderingContext/bufferSubData",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bufferSubData",
            "summary": "The WebGLRenderingContext.bufferSubData() method of the WebGL API updates a subset of a buffer object's data store.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bufferSubData() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "createBuffer",
            "slug": "API/WebGLRenderingContext/createBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createBuffer",
            "summary": "The WebGLRenderingContext.createBuffer() method of the WebGL API creates and initializes a WebGLBuffer storing data such as vertices or colors.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createBuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "deleteBuffer",
            "slug": "API/WebGLRenderingContext/deleteBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteBuffer",
            "summary": "The WebGLRenderingContext.deleteBuffer() method of the WebGL API deletes a given WebGLBuffer. This method has no effect if the buffer has already been deleted. Normally you don't need to call this method yourself, when the buffer object is dereferenced it will be marked as free.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteBuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getBufferParameter",
            "slug": "API/WebGLRenderingContext/getBufferParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getBufferParameter",
            "summary": "The WebGLRenderingContext.getBufferParameter() method of the WebGL API returns information about the buffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getBufferParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isBuffer",
            "slug": "API/WebGLRenderingContext/isBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isBuffer",
            "summary": "The WebGLRenderingContext.isBuffer() method of the WebGL API returns true if the passed WebGLBuffer is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isBuffer() method"
        }
    ],
    "5.14.6": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "bindFramebuffer",
            "slug": "API/WebGLRenderingContext/bindFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer",
            "summary": "The WebGLRenderingContext.bindFramebuffer() method of the WebGL API binds to the specified target the provided WebGLFramebuffer, or, if the framebuffer argument is null, the default WebGLFramebuffer, which is associated with the canvas rendering context.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindFramebuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "checkFramebufferStatus",
            "slug": "API/WebGLRenderingContext/checkFramebufferStatus",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/checkFramebufferStatus",
            "summary": "The WebGLRenderingContext.checkFramebufferStatus() method of the WebGL API returns the completeness status of the WebGLFramebuffer object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: checkFramebufferStatus() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "createFramebuffer",
            "slug": "API/WebGLRenderingContext/createFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createFramebuffer",
            "summary": "The WebGLRenderingContext.createFramebuffer() method of the WebGL API creates and initializes a WebGLFramebuffer object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createFramebuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "deleteFramebuffer",
            "slug": "API/WebGLRenderingContext/deleteFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteFramebuffer",
            "summary": "The WebGLRenderingContext.deleteFramebuffer() method of the WebGL API deletes a given WebGLFramebuffer object. This method has no effect if the frame buffer has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteFramebuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "framebufferRenderbuffer",
            "slug": "API/WebGLRenderingContext/framebufferRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferRenderbuffer",
            "summary": "The WebGLRenderingContext.framebufferRenderbuffer() method of the WebGL API attaches a WebGLRenderbuffer object to a WebGLFramebuffer object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: framebufferRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "framebufferTexture2D",
            "slug": "API/WebGLRenderingContext/framebufferTexture2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D",
            "summary": "The WebGLRenderingContext.framebufferTexture2D() method of the WebGL API attaches a texture to a WebGLFramebuffer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: framebufferTexture2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getFramebufferAttachmentParameter",
            "slug": "API/WebGLRenderingContext/getFramebufferAttachmentParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter",
            "summary": "The WebGLRenderingContext.getFramebufferAttachmentParameter() method of the WebGL API returns information about a framebuffer's attachment.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getFramebufferAttachmentParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isFramebuffer",
            "slug": "API/WebGLRenderingContext/isFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isFramebuffer",
            "summary": "The WebGLRenderingContext.isFramebuffer() method of the WebGL API returns true if the passed WebGLFramebuffer is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isFramebuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "bindFramebuffer",
            "slug": "API/WebGLRenderingContext/bindFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindFramebuffer",
            "summary": "The WebGLRenderingContext.bindFramebuffer() method of the WebGL API binds to the specified target the provided WebGLFramebuffer, or, if the framebuffer argument is null, the default WebGLFramebuffer, which is associated with the canvas rendering context.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindFramebuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "checkFramebufferStatus",
            "slug": "API/WebGLRenderingContext/checkFramebufferStatus",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/checkFramebufferStatus",
            "summary": "The WebGLRenderingContext.checkFramebufferStatus() method of the WebGL API returns the completeness status of the WebGLFramebuffer object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: checkFramebufferStatus() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "createFramebuffer",
            "slug": "API/WebGLRenderingContext/createFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createFramebuffer",
            "summary": "The WebGLRenderingContext.createFramebuffer() method of the WebGL API creates and initializes a WebGLFramebuffer object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createFramebuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "deleteFramebuffer",
            "slug": "API/WebGLRenderingContext/deleteFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteFramebuffer",
            "summary": "The WebGLRenderingContext.deleteFramebuffer() method of the WebGL API deletes a given WebGLFramebuffer object. This method has no effect if the frame buffer has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteFramebuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "framebufferRenderbuffer",
            "slug": "API/WebGLRenderingContext/framebufferRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferRenderbuffer",
            "summary": "The WebGLRenderingContext.framebufferRenderbuffer() method of the WebGL API attaches a WebGLRenderbuffer object to a WebGLFramebuffer object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: framebufferRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "framebufferTexture2D",
            "slug": "API/WebGLRenderingContext/framebufferTexture2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/framebufferTexture2D",
            "summary": "The WebGLRenderingContext.framebufferTexture2D() method of the WebGL API attaches a texture to a WebGLFramebuffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: framebufferTexture2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getFramebufferAttachmentParameter",
            "slug": "API/WebGLRenderingContext/getFramebufferAttachmentParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getFramebufferAttachmentParameter",
            "summary": "The WebGLRenderingContext.getFramebufferAttachmentParameter() method of the WebGL API returns information about a framebuffer's attachment.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getFramebufferAttachmentParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isFramebuffer",
            "slug": "API/WebGLRenderingContext/isFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isFramebuffer",
            "summary": "The WebGLRenderingContext.isFramebuffer() method of the WebGL API returns true if the passed WebGLFramebuffer is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isFramebuffer() method"
        }
    ],
    "5.14.7": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "bindRenderbuffer",
            "slug": "API/WebGLRenderingContext/bindRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindRenderbuffer",
            "summary": "The WebGLRenderingContext.bindRenderbuffer() method of the WebGL API binds a given WebGLRenderbuffer to a target, which must be gl.RENDERBUFFER.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "createRenderbuffer",
            "slug": "API/WebGLRenderingContext/createRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createRenderbuffer",
            "summary": "The WebGLRenderingContext.createRenderbuffer() method of the WebGL API creates and initializes a WebGLRenderbuffer object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "deleteRenderbuffer",
            "slug": "API/WebGLRenderingContext/deleteRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteRenderbuffer",
            "summary": "The WebGLRenderingContext.deleteRenderbuffer() method of the WebGL API deletes a given WebGLRenderbuffer object. This method has no effect if the render buffer has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getRenderbufferParameter",
            "slug": "API/WebGLRenderingContext/getRenderbufferParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter",
            "summary": "The WebGLRenderingContext.getRenderbufferParameter() method of the WebGL API returns information about the renderbuffer.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getRenderbufferParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isRenderbuffer",
            "slug": "API/WebGLRenderingContext/isRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isRenderbuffer",
            "summary": "The WebGLRenderingContext.isRenderbuffer() method of the WebGL API returns true if the passed WebGLRenderbuffer is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "renderbufferStorage",
            "slug": "API/WebGLRenderingContext/renderbufferStorage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage",
            "summary": "The WebGLRenderingContext.renderbufferStorage() method of the WebGL API creates and initializes a renderbuffer object's data store.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: renderbufferStorage() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "bindRenderbuffer",
            "slug": "API/WebGLRenderingContext/bindRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindRenderbuffer",
            "summary": "The WebGLRenderingContext.bindRenderbuffer() method of the WebGL API binds a given WebGLRenderbuffer to a target, which must be gl.RENDERBUFFER.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "createRenderbuffer",
            "slug": "API/WebGLRenderingContext/createRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createRenderbuffer",
            "summary": "The WebGLRenderingContext.createRenderbuffer() method of the WebGL API creates and initializes a WebGLRenderbuffer object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "deleteRenderbuffer",
            "slug": "API/WebGLRenderingContext/deleteRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteRenderbuffer",
            "summary": "The WebGLRenderingContext.deleteRenderbuffer() method of the WebGL API deletes a given WebGLRenderbuffer object. This method has no effect if the render buffer has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getRenderbufferParameter",
            "slug": "API/WebGLRenderingContext/getRenderbufferParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getRenderbufferParameter",
            "summary": "The WebGLRenderingContext.getRenderbufferParameter() method of the WebGL API returns information about the renderbuffer.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getRenderbufferParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isRenderbuffer",
            "slug": "API/WebGLRenderingContext/isRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isRenderbuffer",
            "summary": "The WebGLRenderingContext.isRenderbuffer() method of the WebGL API returns true if the passed WebGLRenderbuffer is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isRenderbuffer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "renderbufferStorage",
            "slug": "API/WebGLRenderingContext/renderbufferStorage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/renderbufferStorage",
            "summary": "The WebGLRenderingContext.renderbufferStorage() method of the WebGL API creates and initializes a renderbuffer object's data store.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: renderbufferStorage() method"
        }
    ],
    "5.14.8": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "bindTexture",
            "slug": "API/WebGLRenderingContext/bindTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindTexture",
            "summary": "The WebGLRenderingContext.bindTexture() method of the WebGL API binds a given WebGLTexture to a target (binding point).",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "copyTexImage2D",
            "slug": "API/WebGLRenderingContext/copyTexImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexImage2D",
            "summary": "The WebGLRenderingContext.copyTexImage2D() method of the WebGL API copies pixels from the current WebGLFramebuffer into a 2D texture image.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: copyTexImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "copyTexSubImage2D",
            "slug": "API/WebGLRenderingContext/copyTexSubImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D",
            "summary": "The WebGLRenderingContext.copyTexSubImage2D() method of the WebGL API copies pixels from the current WebGLFramebuffer into an existing 2D texture sub-image.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: copyTexSubImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "createTexture",
            "slug": "API/WebGLRenderingContext/createTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createTexture",
            "summary": "The WebGLRenderingContext.createTexture() method of the WebGL API creates and initializes a WebGLTexture object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "deleteTexture",
            "slug": "API/WebGLRenderingContext/deleteTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteTexture",
            "summary": "The WebGLRenderingContext.deleteTexture() method of the WebGL API deletes a given WebGLTexture object. This method has no effect if the texture has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "generateMipmap",
            "slug": "API/WebGLRenderingContext/generateMipmap",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/generateMipmap",
            "summary": "The WebGLRenderingContext.generateMipmap() method of the WebGL API generates a set of mipmaps for a WebGLTexture object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: generateMipmap() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getTexParameter",
            "slug": "API/WebGLRenderingContext/getTexParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getTexParameter",
            "summary": "The WebGLRenderingContext.getTexParameter() method of the WebGL API returns information about the given texture.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getTexParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isTexture",
            "slug": "API/WebGLRenderingContext/isTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isTexture",
            "summary": "The WebGLRenderingContext.isTexture() method of the WebGL API returns true if the passed WebGLTexture is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "texImage2D",
            "slug": "API/WebGLRenderingContext/texImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D",
            "summary": "The WebGLRenderingContext.texImage2D() method of the WebGL API specifies a two-dimensional texture image.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "texParameterf",
            "slug": "API/WebGLRenderingContext/texParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter",
            "summary": "The WebGLRenderingContext.texParameter[fi]() methods of the WebGL API set texture parameters.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texParameter[fi]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "texParameteri",
            "slug": "API/WebGLRenderingContext/texParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter",
            "summary": "The WebGLRenderingContext.texParameter[fi]() methods of the WebGL API set texture parameters.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texParameter[fi]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "bindTexture",
            "slug": "API/WebGLRenderingContext/bindTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/bindTexture",
            "summary": "The WebGLRenderingContext.bindTexture() method of the WebGL API binds a given WebGLTexture to a target (binding point).",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: bindTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "copyTexImage2D",
            "slug": "API/WebGLRenderingContext/copyTexImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexImage2D",
            "summary": "The WebGLRenderingContext.copyTexImage2D() method of the WebGL API copies pixels from the current WebGLFramebuffer into a 2D texture image.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: copyTexImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "copyTexSubImage2D",
            "slug": "API/WebGLRenderingContext/copyTexSubImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/copyTexSubImage2D",
            "summary": "The WebGLRenderingContext.copyTexSubImage2D() method of the WebGL API copies pixels from the current WebGLFramebuffer into an existing 2D texture sub-image.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: copyTexSubImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "createTexture",
            "slug": "API/WebGLRenderingContext/createTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/createTexture",
            "summary": "The WebGLRenderingContext.createTexture() method of the WebGL API creates and initializes a WebGLTexture object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: createTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "deleteTexture",
            "slug": "API/WebGLRenderingContext/deleteTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/deleteTexture",
            "summary": "The WebGLRenderingContext.deleteTexture() method of the WebGL API deletes a given WebGLTexture object. This method has no effect if the texture has already been deleted.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: deleteTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "generateMipmap",
            "slug": "API/WebGLRenderingContext/generateMipmap",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/generateMipmap",
            "summary": "The WebGLRenderingContext.generateMipmap() method of the WebGL API generates a set of mipmaps for a WebGLTexture object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: generateMipmap() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getTexParameter",
            "slug": "API/WebGLRenderingContext/getTexParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getTexParameter",
            "summary": "The WebGLRenderingContext.getTexParameter() method of the WebGL API returns information about the given texture.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getTexParameter() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isTexture",
            "slug": "API/WebGLRenderingContext/isTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isTexture",
            "summary": "The WebGLRenderingContext.isTexture() method of the WebGL API returns true if the passed WebGLTexture is valid and false otherwise.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isTexture() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "texImage2D",
            "slug": "API/WebGLRenderingContext/texImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texImage2D",
            "summary": "The WebGLRenderingContext.texImage2D() method of the WebGL API specifies a two-dimensional texture image.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "texParameterf",
            "slug": "API/WebGLRenderingContext/texParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter",
            "summary": "The WebGLRenderingContext.texParameter[fi]() methods of the WebGL API set texture parameters.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texParameter[fi]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "texParameteri",
            "slug": "API/WebGLRenderingContext/texParameter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texParameter",
            "summary": "The WebGLRenderingContext.texParameter[fi]() methods of the WebGL API set texture parameters.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texParameter[fi]() method"
        }
    ],
    "DOM-WebGLRenderingContext-canvas": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "canvas",
            "slug": "API/WebGLRenderingContext/canvas",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/canvas",
            "summary": "The WebGLRenderingContext.canvas property is a read-only reference to the HTMLCanvasElement or OffscreenCanvas object that is associated with the context. It might be null if it is not associated with a <canvas> element or an OffscreenCanvas object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: canvas property"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "canvas",
            "slug": "API/WebGLRenderingContext/canvas",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/canvas",
            "summary": "The WebGLRenderingContext.canvas property is a read-only reference to the HTMLCanvasElement or OffscreenCanvas object that is associated with the context. It might be null if it is not associated with a <canvas> element or an OffscreenCanvas object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: canvas property"
        }
    ],
    "5.14.11": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "clear",
            "slug": "API/WebGLRenderingContext/clear",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clear",
            "summary": "The WebGLRenderingContext.clear() method of the WebGL API clears buffers to preset values.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clear() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "drawArrays",
            "slug": "API/WebGLRenderingContext/drawArrays",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawArrays",
            "summary": "The WebGLRenderingContext.drawArrays() method of the WebGL API renders primitives from array data.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawArrays() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "drawElements",
            "slug": "API/WebGLRenderingContext/drawElements",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements",
            "summary": "The WebGLRenderingContext.drawElements() method of the WebGL API renders primitives from array data.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawElements() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "finish",
            "slug": "API/WebGLRenderingContext/finish",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/finish",
            "summary": "The WebGLRenderingContext.finish() method of the WebGL API blocks execution until all previously called commands are finished.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: finish() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "flush",
            "slug": "API/WebGLRenderingContext/flush",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/flush",
            "summary": "The WebGLRenderingContext.flush() method of the WebGL API empties different buffer commands, causing all commands to be executed as quickly as possible.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: flush() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "clear",
            "slug": "API/WebGLRenderingContext/clear",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/clear",
            "summary": "The WebGLRenderingContext.clear() method of the WebGL API clears buffers to preset values.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: clear() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "drawArrays",
            "slug": "API/WebGLRenderingContext/drawArrays",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawArrays",
            "summary": "The WebGLRenderingContext.drawArrays() method of the WebGL API renders primitives from array data.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawArrays() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "drawElements",
            "slug": "API/WebGLRenderingContext/drawElements",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawElements",
            "summary": "The WebGLRenderingContext.drawElements() method of the WebGL API renders primitives from array data.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawElements() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "finish",
            "slug": "API/WebGLRenderingContext/finish",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/finish",
            "summary": "The WebGLRenderingContext.finish() method of the WebGL API blocks execution until all previously called commands are finished.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: finish() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "flush",
            "slug": "API/WebGLRenderingContext/flush",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/flush",
            "summary": "The WebGLRenderingContext.flush() method of the WebGL API empties different buffer commands, causing all commands to be executed as quickly as possible.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: flush() method"
        }
    ],
    "COMPRESSEDTEXIMAGE2D": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "compressedTexImage2D",
            "slug": "API/WebGLRenderingContext/compressedTexImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compressedTexImage2D",
            "summary": "The WebGLRenderingContext.compressedTexImage2D() and WebGL2RenderingContext.compressedTexImage3D() methods of the WebGL API specify a two- or three-dimensional texture image in a compressed format.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: compressedTexImage[23]D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "compressedTexImage2D",
            "slug": "API/WebGLRenderingContext/compressedTexImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compressedTexImage2D",
            "summary": "The WebGLRenderingContext.compressedTexImage2D() and WebGL2RenderingContext.compressedTexImage3D() methods of the WebGL API specify a two- or three-dimensional texture image in a compressed format.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: compressedTexImage[23]D() method"
        }
    ],
    "COMPRESSEDTEXSUBIMAGE2D": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "compressedTexSubImage2D",
            "slug": "API/WebGLRenderingContext/compressedTexSubImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D",
            "summary": "The WebGLRenderingContext.compressedTexSubImage2D() method of the WebGL API specifies a two-dimensional sub-rectangle for a texture image in a compressed format.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: compressedTexSubImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "compressedTexSubImage2D",
            "slug": "API/WebGLRenderingContext/compressedTexSubImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/compressedTexSubImage2D",
            "summary": "The WebGLRenderingContext.compressedTexSubImage2D() method of the WebGL API specifies a two-dimensional sub-rectangle for a texture image in a compressed format.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: compressedTexSubImage2D() method"
        }
    ],
    "5.14.10": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "disableVertexAttribArray",
            "slug": "API/WebGLRenderingContext/disableVertexAttribArray",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/disableVertexAttribArray",
            "summary": "The WebGLRenderingContext.disableVertexAttribArray() method of the WebGL API turns the generic vertex attribute array off at a given index position.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: disableVertexAttribArray() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "enableVertexAttribArray",
            "slug": "API/WebGLRenderingContext/enableVertexAttribArray",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/enableVertexAttribArray",
            "summary": "The WebGLRenderingContext method enableVertexAttribArray(), part of the WebGL API, turns on the generic vertex attribute array at the specified index into the list of attribute arrays.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: enableVertexAttribArray() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getActiveAttrib",
            "slug": "API/WebGLRenderingContext/getActiveAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getActiveAttrib",
            "summary": "The WebGLRenderingContext.getActiveAttrib() method of the WebGL API returns a WebGLActiveInfo object containing size, type, and name of a vertex attribute. It is generally used when querying unknown attributes either for debugging or generic library creation.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getActiveAttrib() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getActiveUniform",
            "slug": "API/WebGLRenderingContext/getActiveUniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getActiveUniform",
            "summary": "The WebGLRenderingContext.getActiveUniform() method of the WebGL API returns a WebGLActiveInfo object containing size, type, and name of a uniform attribute. It is generally used when querying unknown uniforms either for debugging or generic library creation.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getActiveUniform() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getAttribLocation",
            "slug": "API/WebGLRenderingContext/getAttribLocation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getAttribLocation",
            "summary": "The WebGLRenderingContext.getAttribLocation() method of the WebGL API returns the location of an attribute variable in a given WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getAttribLocation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getUniform",
            "slug": "API/WebGLRenderingContext/getUniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniform",
            "summary": "The WebGLRenderingContext.getUniform() method of the WebGL API returns the value of a uniform variable at a given location.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getUniform() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getUniformLocation",
            "slug": "API/WebGLRenderingContext/getUniformLocation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniformLocation",
            "summary": "Part of the WebGL API, the WebGLRenderingContext method getUniformLocation() returns the location of a specific uniform variable which is part of a given WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getUniformLocation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getVertexAttrib",
            "slug": "API/WebGLRenderingContext/getVertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttrib",
            "summary": "The WebGLRenderingContext.getVertexAttrib() method of the WebGL API returns information about a vertex attribute at a given position.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getVertexAttrib() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getVertexAttribOffset",
            "slug": "API/WebGLRenderingContext/getVertexAttribOffset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset",
            "summary": "The WebGLRenderingContext.getVertexAttribOffset() method of the WebGL API returns the address of a specified vertex attribute.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getVertexAttribOffset() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform1f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform1fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform1i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform1iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform2f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform2fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform2i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform2iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform3f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform3fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform3i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform3iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform4f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform4fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform4i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniform4iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniformMatrix2fv",
            "slug": "API/WebGLRenderingContext/uniformMatrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix",
            "summary": "The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniformMatrix[234]fv() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniformMatrix3fv",
            "slug": "API/WebGLRenderingContext/uniformMatrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix",
            "summary": "The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniformMatrix[234]fv() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "uniformMatrix4fv",
            "slug": "API/WebGLRenderingContext/uniformMatrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix",
            "summary": "The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniformMatrix[234]fv() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib1f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib1fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib2f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib2fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib3f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib3fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib4f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttrib4fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "vertexAttribPointer",
            "slug": "API/WebGLRenderingContext/vertexAttribPointer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer",
            "summary": "The WebGLRenderingContext.vertexAttribPointer() method of the WebGL API binds the buffer currently bound to gl.ARRAY_BUFFER to a generic vertex attribute of the current vertex buffer object and specifies its layout.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttribPointer() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "disableVertexAttribArray",
            "slug": "API/WebGLRenderingContext/disableVertexAttribArray",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/disableVertexAttribArray",
            "summary": "The WebGLRenderingContext.disableVertexAttribArray() method of the WebGL API turns the generic vertex attribute array off at a given index position.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: disableVertexAttribArray() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "enableVertexAttribArray",
            "slug": "API/WebGLRenderingContext/enableVertexAttribArray",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/enableVertexAttribArray",
            "summary": "The WebGLRenderingContext method enableVertexAttribArray(), part of the WebGL API, turns on the generic vertex attribute array at the specified index into the list of attribute arrays.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: enableVertexAttribArray() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getActiveAttrib",
            "slug": "API/WebGLRenderingContext/getActiveAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getActiveAttrib",
            "summary": "The WebGLRenderingContext.getActiveAttrib() method of the WebGL API returns a WebGLActiveInfo object containing size, type, and name of a vertex attribute. It is generally used when querying unknown attributes either for debugging or generic library creation.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getActiveAttrib() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getActiveUniform",
            "slug": "API/WebGLRenderingContext/getActiveUniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getActiveUniform",
            "summary": "The WebGLRenderingContext.getActiveUniform() method of the WebGL API returns a WebGLActiveInfo object containing size, type, and name of a uniform attribute. It is generally used when querying unknown uniforms either for debugging or generic library creation.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getActiveUniform() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getAttribLocation",
            "slug": "API/WebGLRenderingContext/getAttribLocation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getAttribLocation",
            "summary": "The WebGLRenderingContext.getAttribLocation() method of the WebGL API returns the location of an attribute variable in a given WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getAttribLocation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getUniform",
            "slug": "API/WebGLRenderingContext/getUniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniform",
            "summary": "The WebGLRenderingContext.getUniform() method of the WebGL API returns the value of a uniform variable at a given location.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getUniform() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getUniformLocation",
            "slug": "API/WebGLRenderingContext/getUniformLocation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getUniformLocation",
            "summary": "Part of the WebGL API, the WebGLRenderingContext method getUniformLocation() returns the location of a specific uniform variable which is part of a given WebGLProgram.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getUniformLocation() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getVertexAttrib",
            "slug": "API/WebGLRenderingContext/getVertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttrib",
            "summary": "The WebGLRenderingContext.getVertexAttrib() method of the WebGL API returns information about a vertex attribute at a given position.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getVertexAttrib() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getVertexAttribOffset",
            "slug": "API/WebGLRenderingContext/getVertexAttribOffset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getVertexAttribOffset",
            "summary": "The WebGLRenderingContext.getVertexAttribOffset() method of the WebGL API returns the address of a specified vertex attribute.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getVertexAttribOffset() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform1f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform1fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform1i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform1iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform2f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform2fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform2i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform2iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform3f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform3fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform3i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform3iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform4f",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform4fv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform4i",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniform4iv",
            "slug": "API/WebGLRenderingContext/uniform",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniform",
            "summary": "The WebGLRenderingContext.uniform[1234][fi][v]() methods of the WebGL API specify values of uniform variables. All active uniform variables defined in a program object are initialized to 0 when the program object is linked successfully. They retain the values assigned to them by a call to this method until the next successful link operation occurs on the program object, when they are once again initialized to 0.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniform[1234][fi][v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniformMatrix2fv",
            "slug": "API/WebGLRenderingContext/uniformMatrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix",
            "summary": "The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniformMatrix[234]fv() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniformMatrix3fv",
            "slug": "API/WebGLRenderingContext/uniformMatrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix",
            "summary": "The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniformMatrix[234]fv() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "uniformMatrix4fv",
            "slug": "API/WebGLRenderingContext/uniformMatrix",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/uniformMatrix",
            "summary": "The WebGLRenderingContext.uniformMatrix[234]fv() methods of the WebGL API specify matrix values for uniform variables.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: uniformMatrix[234]fv() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib1f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib1fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib2f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib2fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib3f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib3fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib4f",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttrib4fv",
            "slug": "API/WebGLRenderingContext/vertexAttrib",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttrib",
            "summary": "The WebGLRenderingContext.vertexAttrib[1234]f[v]() methods of the WebGL API specify constant values for generic vertex attributes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttrib[1234]f[v]() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "vertexAttribPointer",
            "slug": "API/WebGLRenderingContext/vertexAttribPointer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/vertexAttribPointer",
            "summary": "The WebGLRenderingContext.vertexAttribPointer() method of the WebGL API binds the buffer currently bound to gl.ARRAY_BUFFER to a generic vertex attribute of the current vertex buffer object and specifies its layout.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: vertexAttribPointer() method"
        }
    ],
    "DOM-WebGLRenderingContext-drawingBufferHeight": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "drawingBufferHeight",
            "slug": "API/WebGLRenderingContext/drawingBufferHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferHeight",
            "summary": "The read-only WebGLRenderingContext.drawingBufferHeight property represents the actual height of the current drawing buffer. It should match the height attribute of the <canvas> element associated with this context, but might differ if the implementation is not able to provide the requested height.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawingBufferHeight property"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "drawingBufferHeight",
            "slug": "API/WebGLRenderingContext/drawingBufferHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferHeight",
            "summary": "The read-only WebGLRenderingContext.drawingBufferHeight property represents the actual height of the current drawing buffer. It should match the height attribute of the <canvas> element associated with this context, but might differ if the implementation is not able to provide the requested height.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawingBufferHeight property"
        }
    ],
    "DOM-WebGLRenderingContext-drawingBufferWidth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "drawingBufferWidth",
            "slug": "API/WebGLRenderingContext/drawingBufferWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferWidth",
            "summary": "The read-only WebGLRenderingContext.drawingBufferWidth property represents the actual width of the current drawing buffer. It should match the width attribute of the <canvas> element associated with this context, but might differ if the implementation is not able to provide the requested width.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawingBufferWidth property"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "drawingBufferWidth",
            "slug": "API/WebGLRenderingContext/drawingBufferWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferWidth",
            "summary": "The read-only WebGLRenderingContext.drawingBufferWidth property represents the actual width of the current drawing buffer. It should match the width attribute of the <canvas> element associated with this context, but might differ if the implementation is not able to provide the requested width.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: drawingBufferWidth property"
        }
    ],
    "5.14.2": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getContextAttributes",
            "slug": "API/WebGLRenderingContext/getContextAttributes",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getContextAttributes",
            "summary": "The WebGLRenderingContext.getContextAttributes() method returns a WebGLContextAttributes object that contains the actual context parameters. Might return null, if the context is lost.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getContextAttributes() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getContextAttributes",
            "slug": "API/WebGLRenderingContext/getContextAttributes",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getContextAttributes",
            "summary": "The WebGLRenderingContext.getContextAttributes() method returns a WebGLContextAttributes object that contains the actual context parameters. Might return null, if the context is lost.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getContextAttributes() method"
        }
    ],
    "5.14.14": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getExtension",
            "slug": "API/WebGLRenderingContext/getExtension",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getExtension",
            "summary": "The WebGLRenderingContext.getExtension() method enables a WebGL extension.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getExtension() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "getSupportedExtensions",
            "slug": "API/WebGLRenderingContext/getSupportedExtensions",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getSupportedExtensions",
            "summary": "The WebGLRenderingContext.getSupportedExtensions() method returns a list of all the supported WebGL extensions.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getSupportedExtensions() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getExtension",
            "slug": "API/WebGLRenderingContext/getExtension",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getExtension",
            "summary": "The WebGLRenderingContext.getExtension() method enables a WebGL extension.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getExtension() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "getSupportedExtensions",
            "slug": "API/WebGLRenderingContext/getSupportedExtensions",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/getSupportedExtensions",
            "summary": "The WebGLRenderingContext.getSupportedExtensions() method returns a list of all the supported WebGL extensions.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: getSupportedExtensions() method"
        }
    ],
    "5.14.13": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "isContextLost",
            "slug": "API/WebGLRenderingContext/isContextLost",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isContextLost",
            "summary": "The WebGLRenderingContext.isContextLost() method returns a boolean value indicating whether or not the WebGL context has been lost and must be re-established before rendering can resume.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isContextLost() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "isContextLost",
            "slug": "API/WebGLRenderingContext/isContextLost",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/isContextLost",
            "summary": "The WebGLRenderingContext.isContextLost() method returns a boolean value indicating whether or not the WebGL context has been lost and must be re-established before rendering can resume.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: isContextLost() method"
        }
    ],
    "PIXEL_STORAGE_PARAMETERS": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "pixelStorei",
            "slug": "API/WebGLRenderingContext/pixelStorei",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei",
            "summary": "The WebGLRenderingContext.pixelStorei() method of the WebGL API specifies the pixel storage modes.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: pixelStorei() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "pixelStorei",
            "slug": "API/WebGLRenderingContext/pixelStorei",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixelStorei",
            "summary": "The WebGLRenderingContext.pixelStorei() method of the WebGL API specifies the pixel storage modes.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: pixelStorei() method"
        }
    ],
    "5.14.12": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "readPixels",
            "slug": "API/WebGLRenderingContext/readPixels",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels",
            "summary": "The WebGLRenderingContext.readPixels() method of the WebGL API reads a block of pixels from a specified rectangle of the current color framebuffer into a TypedArray or a DataView object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: readPixels() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "readPixels",
            "slug": "API/WebGLRenderingContext/readPixels",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/readPixels",
            "summary": "The WebGLRenderingContext.readPixels() method of the WebGL API reads a block of pixels from a specified rectangle of the current color framebuffer into a TypedArray or a DataView object.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: readPixels() method"
        }
    ],
    "5.14.4": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "scissor",
            "slug": "API/WebGLRenderingContext/scissor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/scissor",
            "summary": "The WebGLRenderingContext.scissor() method of the WebGL API sets a scissor box, which limits the drawing to a specified rectangle.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: scissor() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "viewport",
            "slug": "API/WebGLRenderingContext/viewport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/viewport",
            "summary": "The WebGLRenderingContext.viewport() method of the WebGL API sets the viewport, which specifies the affine transformation of x and y from normalized device coordinates to window coordinates.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: viewport() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "scissor",
            "slug": "API/WebGLRenderingContext/scissor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/scissor",
            "summary": "The WebGLRenderingContext.scissor() method of the WebGL API sets a scissor box, which limits the drawing to a specified rectangle.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: scissor() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "viewport",
            "slug": "API/WebGLRenderingContext/viewport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/viewport",
            "summary": "The WebGLRenderingContext.viewport() method of the WebGL API sets the viewport, which specifies the affine transformation of x and y from normalized device coordinates to window coordinates.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: viewport() method"
        }
    ],
    "TEXSUBIMAGE2D": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGL2RenderingContext.json",
            "name": "texSubImage2D",
            "slug": "API/WebGLRenderingContext/texSubImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D",
            "summary": "The WebGLRenderingContext.texSubImage2D() method of the WebGL API specifies a sub-rectangle of the current texture.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": {
                    "version_added": "58"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "51"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texSubImage2D() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "texSubImage2D",
            "slug": "API/WebGLRenderingContext/texSubImage2D",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/texSubImage2D",
            "summary": "The WebGLRenderingContext.texSubImage2D() method of the WebGL API specifies a sub-rectangle of the current texture.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext: texSubImage2D() method"
        }
    ],
    "DOM-WebGLActiveInfo-name": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLActiveInfo.json",
            "name": "name",
            "slug": "API/WebGLActiveInfo/name",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLActiveInfo/name",
            "summary": "The read-only WebGLActiveInfo.name property represents the name of the requested data returned by calling the getActiveAttrib() or getActiveUniform() methods.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLActiveInfo: name property"
        }
    ],
    "DOM-WebGLActiveInfo-size": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLActiveInfo.json",
            "name": "size",
            "slug": "API/WebGLActiveInfo/size",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLActiveInfo/size",
            "summary": "The read-only WebGLActiveInfo.size property is a Number representing the size of the requested data returned by calling the getActiveAttrib() or getActiveUniform() methods.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLActiveInfo: size property"
        }
    ],
    "DOM-WebGLActiveInfo-type": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLActiveInfo.json",
            "name": "type",
            "slug": "API/WebGLActiveInfo/type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLActiveInfo/type",
            "summary": "The read-only WebGLActiveInfo.type property represents the type of the requested data returned by calling the getActiveAttrib() or getActiveUniform() methods.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLActiveInfo: type property"
        }
    ],
    "5.11": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLActiveInfo.json",
            "name": "WebGLActiveInfo",
            "slug": "API/WebGLActiveInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLActiveInfo",
            "summary": "The WebGLActiveInfo interface is part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getActiveAttrib() and WebGLRenderingContext.getActiveUniform() methods.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLActiveInfo"
        }
    ],
    "5.4": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLBuffer.json",
            "name": "WebGLBuffer",
            "slug": "API/WebGLBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLBuffer",
            "summary": "The WebGLBuffer interface is part of the WebGL API and represents an opaque buffer object storing data such as vertices or colors.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLBuffer"
        }
    ],
    "5.15": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLContextEvent.json",
            "name": "WebGLContextEvent",
            "slug": "API/WebGLContextEvent/WebGLContextEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLContextEvent/WebGLContextEvent",
            "summary": "The WebGLContextEvent() constructor creates a new WebGLContextEvent object.",
            "support": {
                "chrome": {
                    "version_added": "17"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "6"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLContextEvent: WebGLContextEvent() constructor"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLContextEvent.json",
            "name": "WebGLContextEvent",
            "slug": "API/WebGLContextEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLContextEvent",
            "summary": "The WebContextEvent interface is part of the WebGL API and is an interface for an event that is generated in response to a status change to the WebGL rendering context.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLContextEvent"
        }
    ],
    "5.15.1": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLContextEvent.json",
            "name": "statusMessage",
            "slug": "API/WebGLContextEvent/statusMessage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLContextEvent/statusMessage",
            "summary": "The read-only WebGLContextEvent.statusMessage property contains additional event status information, or is an empty string if no additional information is available.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "49"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLContextEvent: statusMessage property"
        }
    ],
    "5.5": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLFramebuffer.json",
            "name": "WebGLFramebuffer",
            "slug": "API/WebGLFramebuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLFramebuffer",
            "summary": "The WebGLFramebuffer interface is part of the WebGL API and represents a collection of buffers that serve as a rendering destination.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLFramebuffer"
        }
    ],
    "5.6": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLProgram.json",
            "name": "WebGLProgram",
            "slug": "API/WebGLProgram",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLProgram",
            "summary": "The WebGLProgram is part of the WebGL API and is a combination of two compiled WebGLShaders consisting of a vertex shader and a fragment shader (both written in GLSL).",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLProgram"
        }
    ],
    "5.7": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderbuffer.json",
            "name": "WebGLRenderbuffer",
            "slug": "API/WebGLRenderbuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderbuffer",
            "summary": "The WebGLRenderbuffer interface is part of the WebGL API and represents a buffer that can contain an image, or that can be a source or target of a rendering operation.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderbuffer"
        }
    ],
    "DOM-WebGLRenderingContext-drawingBufferColorSpace": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "drawingBufferColorSpace",
            "slug": "API/WebGLRenderingContext/drawingBufferColorSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/drawingBufferColorSpace",
            "summary": "The WebGLRenderingContext.drawingBufferColorSpace property specifies the color space of the WebGL drawing buffer. Along with the default (srgb), the display-p3 color space can be used.",
            "support": {
                "chrome": {
                    "version_added": "104"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "104"
                }
            },
            "title": "WebGLRenderingContext: drawingBufferColorSpace property"
        }
    ],
    "DOM-WebGLRenderingContext-unpackColorSpace": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "unpackColorSpace",
            "slug": "API/WebGLRenderingContext/unpackColorSpace",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/unpackColorSpace",
            "summary": "The WebGLRenderingContext.unpackColorSpace property specifies the color space to convert to when importing textures. Along with the default (srgb), the display-p3 color space can be used.",
            "support": {
                "chrome": {
                    "version_added": "104"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "104"
                }
            },
            "title": "WebGLRenderingContext: unpackColorSpace property"
        }
    ],
    "5.14": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLRenderingContext.json",
            "name": "WebGLRenderingContext",
            "slug": "API/WebGLRenderingContext",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext",
            "summary": "The WebGLRenderingContext interface provides an interface to the OpenGL ES 2.0 graphics rendering context for the drawing surface of an HTML <canvas> element.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11",
                    "notes": "To access the WebGL context, use <code>experimental-webgl</code> rather than the standard <code>webgl</code> identifier."
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "4.4.3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLRenderingContext"
        }
    ],
    "5.8": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLShader.json",
            "name": "WebGLShader",
            "slug": "API/WebGLShader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLShader",
            "summary": "The WebGLShader is part of the WebGL API and can either be a vertex or a fragment shader. A WebGLProgram requires both types of shaders.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLShader"
        }
    ],
    "DOM-WebGLShaderPrecisionFormat-precision": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLShaderPrecisionFormat.json",
            "name": "precision",
            "slug": "API/WebGLShaderPrecisionFormat/precision",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat/precision",
            "summary": "The read-only WebGLShaderPrecisionFormat.precision property returns the number of bits of precision that can be represented.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLShaderPrecisionFormat: precision property"
        }
    ],
    "DOM-WebGLShaderPrecisionFormat-rangeMax": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLShaderPrecisionFormat.json",
            "name": "rangeMax",
            "slug": "API/WebGLShaderPrecisionFormat/rangeMax",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat/rangeMax",
            "summary": "The read-only WebGLShaderPrecisionFormat.rangeMax property returns the base 2 log of the absolute value of the maximum value that can be represented.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLShaderPrecisionFormat: rangeMax property"
        }
    ],
    "DOM-WebGLShaderPrecisionFormat-rangeMin": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLShaderPrecisionFormat.json",
            "name": "rangeMin",
            "slug": "API/WebGLShaderPrecisionFormat/rangeMin",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat/rangeMin",
            "summary": "The read-only WebGLShaderPrecisionFormat.rangeMin property returns the base 2 log of the absolute value of the minimum value that can be represented.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLShaderPrecisionFormat: rangeMin property"
        }
    ],
    "5.12": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLShaderPrecisionFormat.json",
            "name": "WebGLShaderPrecisionFormat",
            "slug": "API/WebGLShaderPrecisionFormat",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLShaderPrecisionFormat",
            "summary": "The WebGLShaderPrecisionFormat interface is part of the WebGL API and represents the information returned by calling the WebGLRenderingContext.getShaderPrecisionFormat() method.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLShaderPrecisionFormat"
        }
    ],
    "5.9": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLTexture.json",
            "name": "WebGLTexture",
            "slug": "API/WebGLTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLTexture",
            "summary": "The WebGLTexture interface is part of the WebGL API and represents an opaque texture object providing storage and state for texturing operations.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLTexture"
        }
    ],
    "5.10": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WebGLUniformLocation.json",
            "name": "WebGLUniformLocation",
            "slug": "API/WebGLUniformLocation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WebGLUniformLocation",
            "summary": "The WebGLUniformLocation interface is part of the WebGL API and represents the location of a uniform variable in a shader program.",
            "support": {
                "chrome": {
                    "version_added": "10"
                },
                "chrome_android": {
                    "version_added": "25"
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": {
                    "version_added": "8"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WebGLUniformLocation"
        }
    ]
}
