{
    "connect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USB.json",
            "name": "connect_event",
            "slug": "API/USB/connect_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USB/connect_event",
            "summary": "The connect event of the USB interface is fired whenever a paired device is connected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USB: connect event"
        }
    ],
    "ref-for-dom-usb-onconnect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USB.json",
            "name": "connect_event",
            "slug": "API/USB/connect_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USB/connect_event",
            "summary": "The connect event of the USB interface is fired whenever a paired device is connected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USB: connect event"
        }
    ],
    "disconnect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USB.json",
            "name": "disconnect_event",
            "slug": "API/USB/disconnect_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USB/disconnect_event",
            "summary": "The connect event of the USB interface is fired whenever a paired device is disconnected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USB: disconnect event"
        }
    ],
    "ref-for-dom-usb-ondisconnect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USB.json",
            "name": "disconnect_event",
            "slug": "API/USB/disconnect_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USB/disconnect_event",
            "summary": "The connect event of the USB interface is fired whenever a paired device is disconnected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USB: disconnect event"
        }
    ],
    "ref-for-dom-usb-getdevices②": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USB.json",
            "name": "getDevices",
            "slug": "API/USB/getDevices",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USB/getDevices",
            "summary": "The getDevices method of the USB interface returns a Promise that resolves with an array of USBDevice objects for paired attached devices. For information on pairing devices, see USB.requestDevice().",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USB.getDevices()"
        }
    ],
    "ref-for-dom-usb-requestdevice④": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USB.json",
            "name": "requestDevice",
            "slug": "API/USB/requestDevice",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USB/requestDevice",
            "summary": "The requestDevice() method of the USB interface returns a Promise that resolves with an instance of USBDevice if the specified device is found. Calling this function triggers the user agent's pairing flow.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USB.requestDevice()"
        }
    ],
    "usb": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USB.json",
            "name": "USB",
            "slug": "API/USB",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USB",
            "summary": "The USB interface of the WebUSB API provides attributes and methods for finding and connecting USB devices from a web page.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USB"
        }
    ],
    "usbalternateinterface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBAlternateInterface.json",
            "name": "USBAlternateInterface",
            "slug": "API/USBAlternateInterface",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBAlternateInterface",
            "summary": "The USBAlternateInterface interface of the WebUSB API provides information about a particular configuration of an interface provided by the USB device. An interface includes one or more alternate settings which can configure a set of endpoints based on the operating mode of the device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBAlternateInterface"
        }
    ],
    "dom-usbconfiguration-usbconfiguration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConfiguration.json",
            "name": "USBConfiguration",
            "slug": "API/USBConfiguration/USBConfiguration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConfiguration/USBConfiguration",
            "summary": "The USBConfiguration() constructor creates a new USBConfiguration object which contains information about the configuration on the provided USBDevice with the given configuration value.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConfiguration()"
        }
    ],
    "ref-for-dom-usbconfiguration-configurationname": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConfiguration.json",
            "name": "configurationName",
            "slug": "API/USBConfiguration/configurationName",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConfiguration/configurationName",
            "summary": "The configurationName read-only property of the USBConfiguration interface returns the name provided by the device to describe this configuration. This is equal to the value of the string descriptor with the index provided in the iConfiguration field of the configuration descriptor defining this configuration.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConfiguration.configurationName"
        }
    ],
    "ref-for-dom-usbconfiguration-configurationvalue": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConfiguration.json",
            "name": "configurationValue",
            "slug": "API/USBConfiguration/configurationValue",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConfiguration/configurationValue",
            "summary": "The configurationValue read-only property of the USBConfiguration interface null",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConfiguration.configurationValue"
        }
    ],
    "ref-for-dom-usbconfiguration-interfaces": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConfiguration.json",
            "name": "interfaces",
            "slug": "API/USBConfiguration/interfaces",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConfiguration/interfaces",
            "summary": "The interfaces read-only property of the USBConfiguration interface returns an array containing instances of the USBInterface describing each interface supported by this configuration.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConfiguration.interfaces"
        }
    ],
    "usbconfiguration-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConfiguration.json",
            "name": "USBConfiguration",
            "slug": "API/USBConfiguration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConfiguration",
            "summary": "The USBConfiguration interface of the WebUSB API provides information about a particular configuration of a USB device and the interfaces that it supports.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConfiguration"
        }
    ],
    "dom-usbconnectionevent-usbconnectionevent": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConnectionEvent.json",
            "name": "USBConnectionEvent",
            "slug": "API/USBConnectionEvent/USBConnectionEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConnectionEvent/USBConnectionEvent",
            "summary": "The USBConnectionEvent() constructor creates a new USBConnectionEvent object. This constructor is not typically used, it is created by the browser in response to the connection and disconnection of a USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConnectionEvent()"
        }
    ],
    "dom-usbconnectionevent-device": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConnectionEvent.json",
            "name": "device",
            "slug": "API/USBConnectionEvent/device",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConnectionEvent/device",
            "summary": "The device read-only property of the USBConnectionEvent interface returns a USBDevice object representing the device being connected or disconnected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConnectionEvent.device"
        }
    ],
    "usbconnectionevent": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBConnectionEvent.json",
            "name": "USBConnectionEvent",
            "slug": "API/USBConnectionEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBConnectionEvent",
            "summary": "The USBConnectionEvent interface of the WebUSB API is the event type passed to USB.onconnect and USB.ondisconnect when the user agent detects that a new USB device has been connected or disconnected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBConnectionEvent"
        }
    ],
    "ref-for-dom-usbdevice-claiminterface②": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "claimInterface",
            "slug": "API/USBDevice/claimInterface",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/claimInterface",
            "summary": "The claimInterface() method of the USBDevice interface returns a promise that resolves when the requested interface is claimed for exclusive access.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.claimInterface()"
        }
    ],
    "ref-for-dom-usbdevice-clearhalt①": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "clearHalt",
            "slug": "API/USBDevice/clearHalt",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/clearHalt",
            "summary": "The clearHalt() method of the USBDevice interface returns a promise that resolves when a halt condition is cleared. A halt condition is when a data transfer to or from the device has a status of 'stall', which requires the web page (the host system, in USB terminology) to clear that condition. See the for details.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.clearHalt()"
        }
    ],
    "ref-for-dom-usbdevice-close": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "close",
            "slug": "API/USBDevice/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/close",
            "summary": "The close() method of the USBDevice interface returns a promise that resolves when all open interfaces are released and the device session has ended.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.close()"
        }
    ],
    "ref-for-dom-usbdevice-configuration①": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "configuration",
            "slug": "API/USBDevice/configuration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configuration",
            "summary": "The configuration read only property of the USBDevice interface returns a USBConfiguration object for the currently selected interface for a paired USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.configuration"
        }
    ],
    "ref-for-dom-usbdevice-configurations①": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "configurations",
            "slug": "API/USBDevice/configurations",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/configurations",
            "summary": "The configurations read only property of the USBDevice interface an array of device-specific interfaces for controlling a paired USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.configurations"
        }
    ],
    "ref-for-dom-usbdevice-controltransferin": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "controlTransferIn",
            "slug": "API/USBDevice/controlTransferIn",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/controlTransferIn",
            "summary": "The controlTransferIn() method of the USBDevice interface returns a promise that resolves with a USBInTransferResult when the result of a command or status request has been received from the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.controlTransferIn()"
        }
    ],
    "ref-for-dom-usbdevice-controltransferout①": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "controlTransferOut",
            "slug": "API/USBDevice/controlTransferOut",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/controlTransferOut",
            "summary": "The controlTransferOut() method of the USBDevice interface returns a promise that resolves with a USBOutTransferResult when a command or status operation has been transmitted to the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.controlTransferOut()"
        }
    ],
    "ref-for-dom-usbdevice-deviceclass": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "deviceClass",
            "slug": "API/USBDevice/deviceClass",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceClass",
            "summary": "The deviceClass read only property of the USBDevice interface one of three properties that identify USB devices for the purpose of loading a USB driver that will work with that device. The other two properties are USBDevice.deviceSubclass and USBDevice.deviceprotocol.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.deviceClass"
        }
    ],
    "ref-for-dom-usbdevice-deviceprotocol": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "deviceProtocol",
            "slug": "API/USBDevice/deviceProtocol",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceProtocol",
            "summary": "The deviceProtocol read only property of the USBDevice interface one of three properties that identify USB devices for the purpose of loading a USB driver that will work with that device. The other two properties are USBDevice.deviceClass and USBDevice.deviceSubclass.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.deviceProtocol"
        }
    ],
    "ref-for-dom-usbdevice-devicesubclass": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "deviceSubclass",
            "slug": "API/USBDevice/deviceSubclass",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceSubclass",
            "summary": "The deviceSubclass read only property of the USBDevice interface one of three properties that identify USB devices for the purpose of loading a USB driver that will work with that device. The other two properties are USBDevice.deviceClass and USBDevice.deviceProtocol.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.deviceSubclass"
        }
    ],
    "ref-for-dom-usbdevice-deviceversionmajor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "deviceVersionMajor",
            "slug": "API/USBDevice/deviceVersionMajor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMajor",
            "summary": "The deviceVersionMajor read only property of the USBDevice interface he major version number of the device in a semantic versioning scheme.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.deviceVersionMajor"
        }
    ],
    "ref-for-dom-usbdevice-deviceversionminor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "deviceVersionMinor",
            "slug": "API/USBDevice/deviceVersionMinor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionMinor",
            "summary": "The deviceVersionMinor read only property of the USBDevice interface the minor version number of the device in a semantic versioning scheme.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.deviceVersionMinor"
        }
    ],
    "ref-for-dom-usbdevice-deviceversionsubminor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "deviceVersionSubminor",
            "slug": "API/USBDevice/deviceVersionSubminor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/deviceVersionSubminor",
            "summary": "The deviceVersionSubminor read only property of the USBDevice interface the patch version number of the device in a semantic versioning scheme.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.deviceVersionSubminor"
        }
    ],
    "ref-for-dom-usbdevice-isochronoustransferin": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "isochronousTransferIn",
            "slug": "API/USBDevice/isochronousTransferIn",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/isochronousTransferIn",
            "summary": "The isochronousTransferIn() method of the USBDevice interface returns a promise that resolves with a USBIsochronousInTransferResult when time sensitive information has been transmitted received from the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.isochronousTransferIn()"
        }
    ],
    "ref-for-dom-usbdevice-isochronoustransferout": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "isochronousTransferOut",
            "slug": "API/USBDevice/isochronousTransferOut",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/isochronousTransferOut",
            "summary": "The isochronousTransferOut() method of the USBDevice interface returns a promise that resolves with a USBIsochronousOutTransferResult when time sensitive information has been transmitted to the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.isochronousTransferOut()"
        }
    ],
    "ref-for-dom-usbdevice-manufacturername": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "manufacturerName",
            "slug": "API/USBDevice/manufacturerName",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/manufacturerName",
            "summary": "The manufacturerName read only property of the USBDevice interface the of the organization that manufactured the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.manufacturerName"
        }
    ],
    "ref-for-dom-usbdevice-open①": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "open",
            "slug": "API/USBDevice/open",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/open",
            "summary": "The open() method of the USBDevice interface returns a promise that resolves when a device session has started.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.open()"
        }
    ],
    "ref-for-dom-usbdevice-opened": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "opened",
            "slug": "API/USBDevice/opened",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/opened",
            "summary": "The opened read only property of the USBDevice interface indicates whether a session has been started with a paired USB device. A device must be opened before it can be controlled by a web page.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.opened"
        }
    ],
    "ref-for-dom-usbdevice-productid": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "productId",
            "slug": "API/USBDevice/productId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productId",
            "summary": "The productId read only property of the USBDevice interface the manufacturer-defined code that identifies a USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.productId"
        }
    ],
    "ref-for-dom-usbdevice-productname": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "productName",
            "slug": "API/USBDevice/productName",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/productName",
            "summary": "The productName read only property of the USBDevice interface the manufacturer-defined name that identifies a USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.productName"
        }
    ],
    "ref-for-dom-usbdevice-releaseinterface①": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "releaseInterface",
            "slug": "API/USBDevice/releaseInterface",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/releaseInterface",
            "summary": "The releaseInterface() method of the USBDevice interface returns a promise that resolves when a claimed interface is released from exclusive access.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.releaseInterface()"
        }
    ],
    "ref-for-dom-usbdevice-reset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "reset",
            "slug": "API/USBDevice/reset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/reset",
            "summary": "The reset() method of the USBDevice interface returns a promise that resolves when the device is reset and all app operations canceled and their promises rejected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.reset()"
        }
    ],
    "ref-for-dom-usbdevice-selectalternateinterface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "selectAlternateInterface",
            "slug": "API/USBDevice/selectAlternateInterface",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/selectAlternateInterface",
            "summary": "The selectAlternateInterface() method of the USBDevice interface returns a promise that resolves when the specified alternative endpoint is selected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.selectAlternateInterface()"
        }
    ],
    "dom-usbdevice-selectconfiguration": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "selectConfiguration",
            "slug": "API/USBDevice/selectConfiguration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/selectConfiguration",
            "summary": "The selectConfiguration() method of the USBDevice interface returns a promise that resolves when the specified configuration is selected.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.selectConfiguration()"
        }
    ],
    "ref-for-dom-usbdevice-serialnumber": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "serialNumber",
            "slug": "API/USBDevice/serialNumber",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/serialNumber",
            "summary": "The serialNumber read only property of the USBDevice interface is the manufacturer-defined serial number for the specific USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.serialNumber"
        }
    ],
    "ref-for-dom-usbdevice-transferin①": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "transferIn",
            "slug": "API/USBDevice/transferIn",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/transferIn",
            "summary": "The transferIn() method of the USBDevice interface returns a promise that resolves with a USBInTransferResult when bulk or interrupt data is received from the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.transferIn()"
        }
    ],
    "ref-for-dom-usbdevice-transferout": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "transferOut",
            "slug": "API/USBDevice/transferOut",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/transferOut",
            "summary": "The transferOut() method of the USBDevice interface returns a promise that resolves with a USBOutTransferResult when bulk or interrupt data is sent to the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.transferOut()"
        }
    ],
    "ref-for-dom-usbdevice-usbversionmajor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "usbVersionMajor",
            "slug": "API/USBDevice/usbVersionMajor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMajor",
            "summary": "The usbVersionMajor read only property of the USBDevice interface is one of three properties that declare the USB protocol version supported by the device. The other two properties are USBDevice.usbVersionMinor and USBDevice.usbVersionSubminor.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.usbVersionMajor"
        }
    ],
    "dom-usbdevice-usbversionminor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "usbVersionMinor",
            "slug": "API/USBDevice/usbVersionMinor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionMinor",
            "summary": "The usbVersionMinor read only property of the USBDevice interface is one of three properties that declare the USB protocol version supported by the device. The other two properties are USBDevice.usbVersionMajor and USBDevice.usbVersionSubminor.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.usbVersionMinor"
        }
    ],
    "ref-for-dom-usbdevice-usbversionsubminor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "usbVersionSubminor",
            "slug": "API/USBDevice/usbVersionSubminor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/usbVersionSubminor",
            "summary": "The usbVersionSubminor read only property of the USBDevice interface is one of three properties that declare the USB protocol version supported by the device. The other two properties are USBDevice.usbVersionMajor and USBDevice.usbVersionMinor.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.usbVersionSubminor"
        }
    ],
    "ref-for-dom-usbdevice-vendorid": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "vendorId",
            "slug": "API/USBDevice/vendorId",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice/vendorId",
            "summary": "The vendorId read only property of the USBDevice interface is the official usg.org-assigned vendor ID.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice.vendorId"
        }
    ],
    "device-usage": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBDevice.json",
            "name": "USBDevice",
            "slug": "API/USBDevice",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBDevice",
            "summary": "The USBDevice interface of the WebUSB API provides access to metadata about a paired USB device and methods for controlling it.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBDevice"
        }
    ],
    "usbendpoint-interface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBEndpoint.json",
            "name": "USBEndpoint",
            "slug": "API/USBEndpoint",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBEndpoint",
            "summary": "The USBEndpoint interface of the WebUSB API provides information about an endpoint provided by the USB device. An endpoint represents a unidirectional data stream into or out of a device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBEndpoint"
        }
    ],
    "usbintransferresult": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBInTransferResult.json",
            "name": "USBInTransferResult",
            "slug": "API/USBInTransferResult",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBInTransferResult",
            "summary": "The USBInTransferResult interface of the WebUSB API provides the result from a call to the transferIn() and controlTransferIn() methods of the USBDevice interface. It represents the result from requesting a transfer of data from the USB device to the USB host.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBInTransferResult"
        }
    ],
    "usbinterface": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBInterface.json",
            "name": "USBInterface",
            "slug": "API/USBInterface",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBInterface",
            "summary": "The USBInterface interface of the WebUSB API provides information about an interface provided by the USB device. An interface represents a feature of the device which implements a particular protocol and may contain endpoints for bidirectional communication.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBInterface"
        }
    ],
    "usbisochronousintransferpacket": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBIsochronousInTransferPacket.json",
            "name": "USBIsochronousInTransferPacket",
            "slug": "API/USBIsochronousInTransferPacket",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBIsochronousInTransferPacket",
            "summary": "The USBIsochronousInTransferPacket interface of the WebUSB API is part of the response from a call to the isochronousTransferIn() method of the USBDevice interface. It represents the status of an individual packet from a request to transfer data from the USB device to the USB host over an isochronous endpoint.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBIsochronousInTransferPacket"
        }
    ],
    "usbisochronousintransferresult": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBIsochronousInTransferResult.json",
            "name": "USBIsochronousInTransferResult",
            "slug": "API/USBIsochronousInTransferResult",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBIsochronousInTransferResult",
            "summary": "The USBIsochronousInTransferResult interface of the WebUSB API provides the result from a call to the isochronousTransferIn() method of the USBDevice interface. It represents the result from requesting a transfer of data from the USB device to the USB host.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBIsochronousInTransferResult"
        }
    ],
    "usbisochronousouttransferpacket": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBIsochronousOutTransferPacket.json",
            "name": "USBIsochronousOutTransferPacket",
            "slug": "API/USBIsochronousOutTransferPacket",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBIsochronousOutTransferPacket",
            "summary": "The USBIsochronousOutTransferPacket interface of the WebUSB API is part of the response from a call to the isochronousTransferOut() method of the USBDevice interface. It represents the status of an individual packet from a request to transfer data from the USB host to the USB device over an isochronous endpoint.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBIsochronousOutTransferPacket"
        }
    ],
    "usbisochronousouttransferresult": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBIsochronousOutTransferResult.json",
            "name": "USBIsochronousOutTransferResult",
            "slug": "API/USBIsochronousOutTransferResult",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBIsochronousOutTransferResult",
            "summary": "The USBIsochronousOutTransferResult interface of the WebUSB API provides the result from a call to the isochronousTransferOut() method of the USBDevice interface. It represents the result from requesting a transfer of data from the USB host to the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBIsochronousOutTransferResult"
        }
    ],
    "usbouttransferresult": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/USBOutTransferResult.json",
            "name": "USBOutTransferResult",
            "slug": "API/USBOutTransferResult",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/USBOutTransferResult",
            "summary": "The USBOutTransferResult interface of the WebUSB API provides the result from a call to the transferOut() and controlTransferOut() methods of the USBDevice interface. It represents the result from requesting a transfer of data from the USB host to the USB device.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false,
                    "notes": "WebView exposes this interface, but does not support WebUSB. See <a href='https://crbug.com/933055'>Chromium bug 933055</a>."
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "USBOutTransferResult"
        }
    ],
    "permissions-policy": [
        {
            "engines": [
                "blink"
            ],
            "filename": "http/headers/Feature-Policy.json",
            "name": "usb",
            "slug": "HTTP/Headers/Feature-Policy/usb",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy/usb",
            "summary": "The HTTP Feature-Policy header usb directive controls whether the current document is allowed to use the WebUSB API.",
            "support": {
                "chrome": {
                    "version_added": "60"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Feature-Policy: usb"
        }
    ]
}
