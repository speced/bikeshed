{
    "the-registerproperty-function": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSS.json",
            "name": "registerProperty_static",
            "slug": "API/CSS/registerProperty_static",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSS/registerProperty_static",
            "summary": "The CSS.registerProperty() static method registers custom properties, allowing for property type checking, default values, and properties that do or do not inherit their value.",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "CSS: registerProperty() static method"
        }
    ],
    "dom-csspropertyrule-inherits": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSPropertyRule.json",
            "name": "inherits",
            "slug": "API/CSSPropertyRule/inherits",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSPropertyRule/inherits",
            "summary": "The read-only inherits property of the CSSPropertyRule interface returns the inherit flag of the custom property registration represented by the @property rule, a boolean describing whether or not the property inherits by default.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "CSSPropertyRule: inherits property"
        }
    ],
    "dom-csspropertyrule-initialvalue": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSPropertyRule.json",
            "name": "initialValue",
            "slug": "API/CSSPropertyRule/initialValue",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSPropertyRule/initialValue",
            "summary": "The read-only initialValue nullable property of the CSSPropertyRule interface returns the initial value of the custom property registration represented by the @property rule, controlling the property's initial value.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "CSSPropertyRule: initialValue property"
        }
    ],
    "dom-csspropertyrule-name": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSPropertyRule.json",
            "name": "name",
            "slug": "API/CSSPropertyRule/name",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSPropertyRule/name",
            "summary": "The read-only name property of the CSSPropertyRule interface represents the property name, this being the serialization of the name given to the custom property in the @property rule's prelude.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "CSSPropertyRule: name property"
        }
    ],
    "dom-csspropertyrule-syntax": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSPropertyRule.json",
            "name": "syntax",
            "slug": "API/CSSPropertyRule/syntax",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSPropertyRule/syntax",
            "summary": "The read-only syntax property of the CSSPropertyRule interface returns the literal syntax of the custom property registration represented by the @property rule, controlling how the property's value is parsed at computed-value time.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "CSSPropertyRule: syntax property"
        }
    ],
    "the-css-property-rule-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CSSPropertyRule.json",
            "name": "CSSPropertyRule",
            "slug": "API/CSSPropertyRule",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CSSPropertyRule",
            "summary": "The CSSPropertyRule interface of the CSS Properties and Values API represents a single CSS @property rule.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "CSSPropertyRule"
        }
    ],
    "inherits-descriptor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/at-rules/property.json",
            "name": "inherits",
            "slug": "CSS/@property/inherits",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property/inherits",
            "summary": "The inherits CSS descriptor is required when using the @property at-rule and controls whether the custom property registration specified by @property inherits by default.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "inherits"
        }
    ],
    "initial-value-descriptor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/at-rules/property.json",
            "name": "initial-value",
            "slug": "CSS/@property/initial-value",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property/initial-value",
            "summary": "The initial-value CSS descriptor is required when using the @property at-rule unless the syntax accepts any valid token stream. It sets the initial-value for the property.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "initial-value"
        }
    ],
    "the-syntax-descriptor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/at-rules/property.json",
            "name": "syntax",
            "slug": "CSS/@property/syntax",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property/syntax",
            "summary": "The syntax CSS descriptor is required when using the @property at-rule and describes the allowable syntax for the property.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "syntax"
        }
    ],
    "at-property-rule": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "css/at-rules/property.json",
            "name": "property",
            "slug": "CSS/@property",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/CSS/@property",
            "summary": "The @property CSS at-rule is part of the CSS Houdini umbrella of APIs. It allows developers to explicitly define their CSS custom properties, allowing for property type checking and constraining, setting default values, and defining whether a custom property can inherit values or not.",
            "support": {
                "chrome": {
                    "version_added": "85"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "85"
                }
            },
            "title": "@property"
        }
    ]
}
