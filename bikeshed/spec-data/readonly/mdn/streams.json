{
    "blqs-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ByteLengthQueuingStrategy.json",
            "name": "ByteLengthQueuingStrategy",
            "slug": "API/ByteLengthQueuingStrategy/ByteLengthQueuingStrategy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ByteLengthQueuingStrategy/ByteLengthQueuingStrategy",
            "summary": "The ByteLengthQueuingStrategy() constructor creates and returns a ByteLengthQueuingStrategy object instance.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ByteLengthQueuingStrategy()"
        }
    ],
    "blqs-size": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ByteLengthQueuingStrategy.json",
            "name": "size",
            "slug": "API/ByteLengthQueuingStrategy/size",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ByteLengthQueuingStrategy/size",
            "summary": "The size() method of the ByteLengthQueuingStrategy interface returns the given chunk's byteLength property.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ByteLengthQueuingStrategy.size()"
        }
    ],
    "blqs-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ByteLengthQueuingStrategy.json",
            "name": "ByteLengthQueuingStrategy",
            "slug": "API/ByteLengthQueuingStrategy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ByteLengthQueuingStrategy",
            "summary": "The ByteLengthQueuingStrategy interface of the Streams API provides a built-in byte length queuing strategy that can be used when constructing streams.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ByteLengthQueuingStrategy"
        }
    ],
    "dom-generictransformstream-readable": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/CompressionStream.json",
            "name": "readable",
            "slug": "API/CompressionStream/readable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CompressionStream/readable",
            "summary": "The readable read-only property of the CompressionStream interface returns a ReadableStream.",
            "support": {
                "chrome": {
                    "version_added": "80"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.19"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "17.0.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "80"
                }
            },
            "title": "CompressionStream.readable"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "api/DecompressionStream.json",
            "name": "readable",
            "slug": "API/DecompressionStream/readable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/DecompressionStream/readable",
            "summary": "The readable read-only property of the DecompressionStream interface returns a ReadableStream.",
            "support": {
                "chrome": {
                    "version_added": "80"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.19"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "17.0.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "80"
                }
            },
            "title": "DecompressionStream.readable"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TextDecoderStream.json",
            "name": "readable",
            "slug": "API/TextDecoderStream/readable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TextDecoderStream/readable",
            "summary": "The readable read-only property of the TextDecoderStream interface returns a ReadableStream.",
            "support": {
                "chrome": {
                    "version_added": "71"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.11"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "105"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.6.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TextDecoderStream.readable"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TextEncoderStream.json",
            "name": "readable",
            "slug": "API/TextEncoderStream/readable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TextEncoderStream/readable",
            "summary": "The readable read-only property of the TextEncoderStream interface returns a ReadableStream.",
            "support": {
                "chrome": {
                    "version_added": "71"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.11"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "105"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.6.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TextEncoderStream.readable"
        }
    ],
    "dom-generictransformstream-writable": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/CompressionStream.json",
            "name": "writable",
            "slug": "API/CompressionStream/writable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CompressionStream/writable",
            "summary": "The writable read-only property of the CompressionStream interface returns a WritableStream.",
            "support": {
                "chrome": {
                    "version_added": "80"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.19"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "17.0.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "80"
                }
            },
            "title": "CompressionStream.writable"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "api/DecompressionStream.json",
            "name": "writable",
            "slug": "API/DecompressionStream/writable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/DecompressionStream/writable",
            "summary": "The writable read-only property of the DecompressionStream interface returns a WritableStream.",
            "support": {
                "chrome": {
                    "version_added": "80"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.19"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "17.0.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "80"
                }
            },
            "title": "DecompressionStream.writable"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TextDecoderStream.json",
            "name": "writable",
            "slug": "API/TextDecoderStream/writable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TextDecoderStream/writable",
            "summary": "The writable read-only property of the TextDecoderStream interface returns a WritableStream.",
            "support": {
                "chrome": {
                    "version_added": "71"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.11"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "105"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.6.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TextDecoderStream.writable"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TextEncoderStream.json",
            "name": "writable",
            "slug": "API/TextEncoderStream/writable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TextEncoderStream/writable",
            "summary": "The writable read-only property of the TextEncoderStream interface returns a WritableStream.",
            "support": {
                "chrome": {
                    "version_added": "71"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.11"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "105"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.6.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TextEncoderStream.writable"
        }
    ],
    "ref-for-cqs-constructor①": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CountQueuingStrategy.json",
            "name": "CountQueuingStrategy",
            "slug": "API/CountQueuingStrategy/CountQueuingStrategy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CountQueuingStrategy/CountQueuingStrategy",
            "summary": "The CountQueuingStrategy() constructor creates and returns a CountQueuingStrategy object instance.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "CountQueuingStrategy()"
        }
    ],
    "ref-for-cqs-size②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CountQueuingStrategy.json",
            "name": "size",
            "slug": "API/CountQueuingStrategy/size",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CountQueuingStrategy/size",
            "summary": "The size() method of the CountQueuingStrategy interface always returns 1, so that the total queue size is a count of the number of chunks in the queue.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "CountQueuingStrategy.size()"
        }
    ],
    "cqs-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/CountQueuingStrategy.json",
            "name": "CountQueuingStrategy",
            "slug": "API/CountQueuingStrategy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CountQueuingStrategy",
            "summary": "The CountQueuingStrategy interface of the Streams API provides a built-in chunk counting queuing strategy that can be used when constructing streams.",
            "support": {
                "chrome": {
                    "version_added": "52"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "CountQueuingStrategy"
        }
    ],
    "ref-for-rbs-controller-byob-request②": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableByteStreamController.json",
            "name": "byobRequest",
            "slug": "API/ReadableByteStreamController/byobRequest",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/byobRequest",
            "summary": "The byobRequest read-only property of the ReadableByteStreamController interface returns the current BYOB request, or null if there are no pending requests.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableByteStreamController.byobRequest"
        }
    ],
    "ref-for-rbs-controller-close①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableByteStreamController.json",
            "name": "close",
            "slug": "API/ReadableByteStreamController/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/close",
            "summary": "The close() method of the ReadableByteStreamController interface closes the associated stream.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableByteStreamController.close()"
        }
    ],
    "ref-for-rbs-controller-desired-size②": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableByteStreamController.json",
            "name": "desiredSize",
            "slug": "API/ReadableByteStreamController/desiredSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/desiredSize",
            "summary": "The desiredSize read-only property of the ReadableByteStreamController interface returns the number of bytes required to fill the stream's internal queue to its \"desired size\".",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableByteStreamController.desiredSize"
        }
    ],
    "ref-for-rbs-controller-enqueue①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableByteStreamController.json",
            "name": "enqueue",
            "slug": "API/ReadableByteStreamController/enqueue",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/enqueue",
            "summary": "The enqueue() method of the ReadableByteStreamController interface enqueues a given chunk on the associated readable byte stream (the chunk is copied into the stream's internal queues).",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableByteStreamController.enqueue()"
        }
    ],
    "ref-for-rbs-controller-error①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableByteStreamController.json",
            "name": "error",
            "slug": "API/ReadableByteStreamController/error",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController/error",
            "summary": "The error() method of the ReadableByteStreamController interface causes any future interactions with the associated stream to error with the specified reason.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableByteStreamController.error()"
        }
    ],
    "rbs-controller-class": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableByteStreamController.json",
            "name": "ReadableByteStreamController",
            "slug": "API/ReadableByteStreamController",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableByteStreamController",
            "summary": "The ReadableByteStreamController interface of the Streams API represents a controller for a readable byte stream. It allows control of the state and internal queue of a ReadableStream with an underlying byte source, and enables efficient zero-copy transfer of data from the underlying source to a consumer when the stream's internal queue is empty.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": [
                    {
                        "version_added": "1.11"
                    },
                    {
                        "version_added": "1.0",
                        "version_removed": "1.11",
                        "partial_implementation": true,
                        "notes": "<code>ReadableByteStreamController</code> is not exposed on the global scope."
                    }
                ],
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableByteStreamController"
        }
    ],
    "ref-for-rs-constructor⑤": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "ReadableStream",
            "slug": "API/ReadableStream/ReadableStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/ReadableStream",
            "summary": "The ReadableStream() constructor creates and returns a readable stream object from the given handlers.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream()"
        }
    ],
    "ref-for-rs-cancel③": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "cancel",
            "slug": "API/ReadableStream/cancel",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/cancel",
            "summary": "The cancel() method of the ReadableStream interface returns a Promise that resolves when the stream is canceled.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream.cancel()"
        }
    ],
    "ref-for-rs-get-reader⑤": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "getReader",
            "slug": "API/ReadableStream/getReader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/getReader",
            "summary": "The getReader() method of the ReadableStream interface creates a reader and locks the stream to it. While the stream is locked, no other reader can be acquired until this one is released.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream.getReader()"
        }
    ],
    "ref-for-rs-locked②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "locked",
            "slug": "API/ReadableStream/locked",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/locked",
            "summary": "The locked read-only property of the ReadableStream interface returns whether or not the readable stream is locked to a reader.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream.locked"
        }
    ],
    "ref-for-rs-pipe-through②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "pipeThrough",
            "slug": "API/ReadableStream/pipeThrough",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/pipeThrough",
            "summary": "The pipeThrough() method of the ReadableStream interface provides a chainable way of piping the current stream through a transform stream or any other writable/readable pair.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream.pipeThrough()"
        }
    ],
    "ref-for-rs-pipe-to④": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "pipeTo",
            "slug": "API/ReadableStream/pipeTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/pipeTo",
            "summary": "The pipeTo() method of the ReadableStream interface pipes the current ReadableStream to a given WritableStream and returns a Promise that fulfills when the piping process completes successfully, or rejects if any errors were encountered.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream.pipeTo()"
        }
    ],
    "ref-for-rs-tee②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "tee",
            "slug": "API/ReadableStream/tee",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream/tee",
            "summary": "The tee() method of the ReadableStream interface tees the current readable stream, returning a two-element array containing the two resulting branches as new ReadableStream instances.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream.tee()"
        }
    ],
    "rs-transfer": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStream.json",
            "name": "transferable",
            "slug": "https://developer.mozilla.org/en-US/docs/Glossary/Transferable_objects",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Glossary/Transferable_objects",
            "summary": "Transferable objects are objects that own resources that can be transferred from one context to another, ensuring that the resources are only available in one context at a time. Following a transfer, the original object is no longer usable; it no longer points to the transferred resource, and any attempt to read or write the object will throw an exception.",
            "support": {
                "chrome": {
                    "version_added": "87"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "103"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "87"
                }
            },
            "title": "Transferable objects"
        }
    ],
    "rs-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/ReadableStream.json",
            "name": "ReadableStream",
            "slug": "API/ReadableStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStream",
            "summary": "The ReadableStream interface of the Streams API represents a readable stream of byte data. The Fetch API offers a concrete instance of a ReadableStream through the body property of a Response object.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "14"
                },
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStream"
        }
    ],
    "ref-for-byob-reader-constructor①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBReader.json",
            "name": "ReadableStreamBYOBReader",
            "slug": "API/ReadableStreamBYOBReader/ReadableStreamBYOBReader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/ReadableStreamBYOBReader",
            "summary": "The ReadableStreamBYOBReader() constructor creates and returns a ReadableStreamBYOBReader object instance.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBReader()"
        }
    ],
    "ref-for-generic-reader-cancel②": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBReader.json",
            "name": "cancel",
            "slug": "API/ReadableStreamBYOBReader/cancel",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/cancel",
            "summary": "The cancel() method of the ReadableStreamBYOBReader interface returns a Promise that resolves when the stream is canceled. Calling this method signals a loss of interest in the stream by a consumer.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBReader.cancel()"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultReader.json",
            "name": "cancel",
            "slug": "API/ReadableStreamDefaultReader/cancel",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/cancel",
            "summary": "The cancel() method of the ReadableStreamDefaultReader interface returns a Promise that resolves when the stream is canceled. Calling this method signals a loss of interest in the stream by a consumer.",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStreamDefaultReader.cancel()"
        }
    ],
    "ref-for-generic-reader-closed②": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBReader.json",
            "name": "closed",
            "slug": "API/ReadableStreamBYOBReader/closed",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/closed",
            "summary": "The closed read-only property of the ReadableStreamBYOBReader interface returns a Promise that fulfills when the stream closes, or rejects if the stream throws an error or the reader's lock is released.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBReader.closed"
        },
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultReader.json",
            "name": "closed",
            "slug": "API/ReadableStreamDefaultReader/closed",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/closed",
            "summary": "The closed read-only property of the ReadableStreamDefaultReader interface returns a Promise that fulfills when the stream closes, or rejects if the stream throws an error or the reader's lock is released. This property enables you to write code that responds to an end to the streaming process.",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStreamDefaultReader.closed"
        }
    ],
    "ref-for-byob-reader-read③": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBReader.json",
            "name": "read",
            "slug": "API/ReadableStreamBYOBReader/read",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/read",
            "summary": "The read() method of the ReadableStreamBYOBReader interface is used to read data into a view on a user-supplied buffer from an associated readable byte stream. A request for data will be satisfied from the stream's internal queues if there is any data present. If the stream queues are empty, the request may be supplied as a zero-copy transfer from the underlying byte source.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBReader.read()"
        }
    ],
    "ref-for-byob-reader-release-lock②": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBReader.json",
            "name": "releaseLock",
            "slug": "API/ReadableStreamBYOBReader/releaseLock",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader/releaseLock",
            "summary": "The releaseLock() method of the ReadableStreamBYOBReader interface releases the reader's lock on the stream. After the lock is released, the reader is no longer active.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBReader.releaseLock()"
        }
    ],
    "byob-reader-class": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBReader.json",
            "name": "ReadableStreamBYOBReader",
            "slug": "API/ReadableStreamBYOBReader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBReader",
            "summary": "The ReadableStreamBYOBReader interface of the Streams API defines a reader for a ReadableStream that supports zero-copy reading from an underlying byte source. It is used for efficient copying from underlying sources where the data is delivered as an \"anonymous\" sequence of bytes, such as files.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBReader"
        }
    ],
    "ref-for-rs-byob-request-respond①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBRequest.json",
            "name": "respond",
            "slug": "API/ReadableStreamBYOBRequest/respond",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBRequest/respond",
            "summary": "The respond() method of the ReadableStreamBYOBRequest interface is used to signal to the associated readable byte stream that the specified number of bytes were written into the ReadableStreamBYOBRequest.view.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBRequest.respond()"
        }
    ],
    "ref-for-rs-byob-request-respond-with-new-view①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBRequest.json",
            "name": "respondWithNewView",
            "slug": "API/ReadableStreamBYOBRequest/respondWithNewView",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBRequest/respondWithNewView",
            "summary": "The respondWithNewView() method of the ReadableStreamBYOBRequest interface specifies a new view that the consumer of the associated readable byte stream should write to instead of ReadableStreamBYOBRequest.view.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBRequest.respondWithNewView()"
        }
    ],
    "ref-for-rs-byob-request-view①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBRequest.json",
            "name": "view",
            "slug": "API/ReadableStreamBYOBRequest/view",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBRequest/view",
            "summary": "The view getter property of the ReadableStreamBYOBRequest interface returns the current view.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBRequest.view"
        }
    ],
    "rs-byob-request-class": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamBYOBRequest.json",
            "name": "ReadableStreamBYOBRequest",
            "slug": "API/ReadableStreamBYOBRequest",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamBYOBRequest",
            "summary": "The ReadableStreamBYOBRequest interface of the Streams API represents a \"pull request\" for data from an underlying source that will made as a zero-copy transfer to a consumer (bypassing the stream's internal queues).",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.16"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamBYOBRequest"
        }
    ],
    "ref-for-rs-default-controller-close①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultController.json",
            "name": "close",
            "slug": "API/ReadableStreamDefaultController/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/close",
            "summary": "The close() method of the ReadableStreamDefaultController interface closes the associated stream.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamDefaultController.close()"
        }
    ],
    "ref-for-rs-default-controller-desired-size②": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultController.json",
            "name": "desiredSize",
            "slug": "API/ReadableStreamDefaultController/desiredSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/desiredSize",
            "summary": "The desiredSize read-only property of the ReadableStreamDefaultController interface returns the desired size required to fill the stream's internal queue.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamDefaultController.desiredSize"
        }
    ],
    "ref-for-rs-default-controller-enqueue①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultController.json",
            "name": "enqueue",
            "slug": "API/ReadableStreamDefaultController/enqueue",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/enqueue",
            "summary": "The enqueue() method of the ReadableStreamDefaultController interface enqueues a given chunk in the associated stream.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamDefaultController.enqueue()"
        }
    ],
    "rs-default-controller-error": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultController.json",
            "name": "error",
            "slug": "API/ReadableStreamDefaultController/error",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/error",
            "summary": "The error() method of the ReadableStreamDefaultController interface causes any future interactions with the associated stream to error.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamDefaultController.error()"
        }
    ],
    "rs-default-controller-class": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultController.json",
            "name": "ReadableStreamDefaultController",
            "slug": "API/ReadableStreamDefaultController",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController",
            "summary": "The ReadableStreamDefaultController interface of the Streams API represents a controller allowing control of a ReadableStream's state and internal queue. Default controllers are for streams that are not byte streams.",
            "support": {
                "chrome": {
                    "version_added": "89"
                },
                "chrome_android": "mirror",
                "deno": [
                    {
                        "version_added": "1.7"
                    },
                    {
                        "version_added": "1.0",
                        "version_removed": "1.7",
                        "partial_implementation": true,
                        "notes": "<code>ReadableStreamDefaultController</code> is not exposed on the global scope."
                    }
                ],
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "89"
                }
            },
            "title": "ReadableStreamDefaultController"
        }
    ],
    "ref-for-default-reader-constructor①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultReader.json",
            "name": "ReadableStreamDefaultReader",
            "slug": "API/ReadableStreamDefaultReader/ReadableStreamDefaultReader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/ReadableStreamDefaultReader",
            "summary": "The ReadableStreamDefaultReader() constructor creates and returns a ReadableStreamDefaultReader object instance.",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStreamDefaultReader()"
        }
    ],
    "ref-for-default-reader-read①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultReader.json",
            "name": "read",
            "slug": "API/ReadableStreamDefaultReader/read",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/read",
            "summary": "The read() method of the ReadableStreamDefaultReader interface returns a Promise providing access to the next chunk in the stream's internal queue.",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStreamDefaultReader.read()"
        }
    ],
    "ref-for-default-reader-release-lock②": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultReader.json",
            "name": "releaseLock",
            "slug": "API/ReadableStreamDefaultReader/releaseLock",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader/releaseLock",
            "summary": "The releaseLock() method of the ReadableStreamDefaultReader interface releases the reader's lock on the stream.",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStreamDefaultReader.releaseLock()"
        }
    ],
    "default-reader-class": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/ReadableStreamDefaultReader.json",
            "name": "ReadableStreamDefaultReader",
            "slug": "API/ReadableStreamDefaultReader",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultReader",
            "summary": "The ReadableStreamDefaultReader interface of the Streams API represents a default reader that can be used to read stream data supplied from a network (such as a fetch request).",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "deno": [
                    {
                        "version_added": "1.7"
                    },
                    {
                        "version_added": "1.0",
                        "version_removed": "1.7",
                        "partial_implementation": true,
                        "notes": "<code>ReadableStreamDefaultReader</code> is not exposed on the global scope."
                    }
                ],
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "ReadableStreamDefaultReader"
        }
    ],
    "ref-for-ts-constructor④": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStream.json",
            "name": "TransformStream",
            "slug": "API/TransformStream/TransformStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStream/TransformStream",
            "summary": "The TransformStream() constructor creates a new TransformStream object which represents a pair of streams: a WritableStream representing the writable side, and a ReadableStream representing the readable side.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStream()"
        }
    ],
    "ref-for-ts-readable②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStream.json",
            "name": "readable",
            "slug": "API/TransformStream/readable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStream/readable",
            "summary": "The readable read-only property of the TransformStream interface returns the ReadableStream instance controlled by this TransformStream.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStream.readable"
        }
    ],
    "ts-transfer": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/TransformStream.json",
            "name": "transferable",
            "slug": "https://developer.mozilla.org/en-US/docs/Glossary/Transferable_objects",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Glossary/Transferable_objects",
            "summary": "Transferable objects are objects that own resources that can be transferred from one context to another, ensuring that the resources are only available in one context at a time. Following a transfer, the original object is no longer usable; it no longer points to the transferred resource, and any attempt to read or write the object will throw an exception.",
            "support": {
                "chrome": {
                    "version_added": "87"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "103"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "87"
                }
            },
            "title": "Transferable objects"
        }
    ],
    "ref-for-ts-writable②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStream.json",
            "name": "writable",
            "slug": "API/TransformStream/writable",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStream/writable",
            "summary": "The writable read-only property of the TransformStream interface returns the WritableStream instance controlled by this TransformStream.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStream.writable"
        }
    ],
    "ts-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStream.json",
            "name": "TransformStream",
            "slug": "API/TransformStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStream",
            "summary": "The TransformStream interface of the Streams API represents a concrete implementation of the pipe chain transform stream concept.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStream"
        }
    ],
    "ts-default-controller-desired-size": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStreamDefaultController.json",
            "name": "desiredSize",
            "slug": "API/TransformStreamDefaultController/desiredSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStreamDefaultController/desiredSize",
            "summary": "The desiredSize read-only property of the TransformStreamDefaultController interface returns the desired size to fill the queue of the associated ReadableStream.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStreamDefaultController.desiredSize"
        }
    ],
    "ts-default-controller-enqueue": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStreamDefaultController.json",
            "name": "enqueue",
            "slug": "API/TransformStreamDefaultController/enqueue",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStreamDefaultController/enqueue",
            "summary": "The enqueue() method of the TransformStreamDefaultController interface enqueues the given chunk in the readable side of the stream.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStreamDefaultController.enqueue()"
        }
    ],
    "ts-default-controller-error": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStreamDefaultController.json",
            "name": "error",
            "slug": "API/TransformStreamDefaultController/error",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStreamDefaultController/error",
            "summary": "The error() method of the TransformStreamDefaultController interface errors both sides of the stream. Any further interactions with it will fail with the given error message, and any chunks in the queue will be discarded.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStreamDefaultController.error()"
        }
    ],
    "ts-default-controller-terminate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStreamDefaultController.json",
            "name": "terminate",
            "slug": "API/TransformStreamDefaultController/terminate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStreamDefaultController/terminate",
            "summary": "The terminate() method of the TransformStreamDefaultController interface closes the readable side and errors the writable side of the stream.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStreamDefaultController.terminate()"
        }
    ],
    "ts-default-controller-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/TransformStreamDefaultController.json",
            "name": "TransformStreamDefaultController",
            "slug": "API/TransformStreamDefaultController",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/TransformStreamDefaultController",
            "summary": "The TransformStreamDefaultController interface of the Streams API provides methods to manipulate the associated ReadableStream and WritableStream.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "deno": [
                    {
                        "version_added": "1.11"
                    },
                    {
                        "version_added": "1.0",
                        "version_removed": "1.11",
                        "partial_implementation": true,
                        "notes": "<code>TransformStreamDefaultController</code> is not exposed on the global scope."
                    }
                ],
                "edge": "mirror",
                "firefox": {
                    "version_added": "102"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "TransformStreamDefaultController"
        }
    ],
    "ref-for-ws-constructor④": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStream.json",
            "name": "WritableStream",
            "slug": "API/WritableStream/WritableStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStream/WritableStream",
            "summary": "The WritableStream() constructor creates a new WritableStream object instance.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "47"
                },
                "opera_android": {
                    "version_added": "44"
                },
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStream()"
        }
    ],
    "ref-for-ws-abort③": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStream.json",
            "name": "abort",
            "slug": "API/WritableStream/abort",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStream/abort",
            "summary": "The abort() method of the WritableStream interface aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be immediately moved to an error state, with any queued writes discarded.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "47"
                },
                "opera_android": {
                    "version_added": "44"
                },
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStream.abort()"
        }
    ],
    "ref-for-ws-get-writer①": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStream.json",
            "name": "getWriter",
            "slug": "API/WritableStream/getWriter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStream/getWriter",
            "summary": "The getWriter() method of the WritableStream interface returns a new instance of WritableStreamDefaultWriter and locks the stream to that instance. While the stream is locked, no other writer can be acquired until this one is released.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "47"
                },
                "opera_android": {
                    "version_added": "44"
                },
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStream.getWriter()"
        }
    ],
    "ref-for-ws-locked②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStream.json",
            "name": "locked",
            "slug": "API/WritableStream/locked",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStream/locked",
            "summary": "The locked read-only property of the WritableStream interface returns a boolean indicating whether the WritableStream is locked to a writer.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "47"
                },
                "opera_android": {
                    "version_added": "44"
                },
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStream.locked"
        }
    ],
    "ws-transfer": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/WritableStream.json",
            "name": "transferable",
            "slug": "https://developer.mozilla.org/en-US/docs/Glossary/Transferable_objects",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Glossary/Transferable_objects",
            "summary": "Transferable objects are objects that own resources that can be transferred from one context to another, ensuring that the resources are only available in one context at a time. Following a transfer, the original object is no longer usable; it no longer points to the transferred resource, and any attempt to read or write the object will throw an exception.",
            "support": {
                "chrome": {
                    "version_added": "87"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "103"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "87"
                }
            },
            "title": "Transferable objects"
        }
    ],
    "ws-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStream.json",
            "name": "WritableStream",
            "slug": "API/WritableStream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStream",
            "summary": "The WritableStream interface of the Streams API provides a standard abstraction for writing streaming data to a destination, known as a sink. This object comes with built-in backpressure and queuing.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": {
                    "version_added": "47"
                },
                "opera_android": {
                    "version_added": "44"
                },
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStream"
        }
    ],
    "ref-for-ws-default-controller-error①": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultController.json",
            "name": "error",
            "slug": "API/WritableStreamDefaultController/error",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultController/error",
            "summary": "The error() method of the WritableStreamDefaultController interface causes any future interactions with the associated stream to error.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultController.error()"
        }
    ],
    "ws-default-controller-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultController.json",
            "name": "WritableStreamDefaultController",
            "slug": "API/WritableStreamDefaultController",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultController",
            "summary": "The WritableStreamDefaultController interface of the Streams API represents a controller allowing control of a WritableStream's state. When constructing a WritableStream, the underlying sink is given a corresponding WritableStreamDefaultController instance to manipulate.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultController"
        }
    ],
    "ref-for-default-writer-constructor①": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "WritableStreamDefaultWriter",
            "slug": "API/WritableStreamDefaultWriter/WritableStreamDefaultWriter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/WritableStreamDefaultWriter",
            "summary": "The WritableStreamDefaultWriter() constructor creates a new WritableStreamDefaultWriter object instance.",
            "support": {
                "chrome": {
                    "version_added": "78"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter()"
        }
    ],
    "ref-for-default-writer-abort④": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "abort",
            "slug": "API/WritableStreamDefaultWriter/abort",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/abort",
            "summary": "The abort() method of the WritableStreamDefaultWriter interface aborts the stream, signaling that the producer can no longer successfully write to the stream and it is to be immediately moved to an error state, with any queued writes discarded.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter.abort()"
        }
    ],
    "ref-for-default-writer-close⑦": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "close",
            "slug": "API/WritableStreamDefaultWriter/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/close",
            "summary": "The close() method of the WritableStreamDefaultWriter interface closes the associated writable stream.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter.close()"
        }
    ],
    "ref-for-default-writer-closed②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "closed",
            "slug": "API/WritableStreamDefaultWriter/closed",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/closed",
            "summary": "The closed read-only property of the WritableStreamDefaultWriter interface returns a Promise that fulfills if the stream becomes closed, or rejects if the stream errors or the writer's lock is released.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter.closed"
        }
    ],
    "ref-for-default-writer-desired-size⑥": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "desiredSize",
            "slug": "API/WritableStreamDefaultWriter/desiredSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/desiredSize",
            "summary": "The desiredSize read-only property of the WritableStreamDefaultWriter interface returns the desired size required to fill the stream's internal queue.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter.desiredSize"
        }
    ],
    "ref-for-default-writer-ready⑨": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "ready",
            "slug": "API/WritableStreamDefaultWriter/ready",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/ready",
            "summary": "The ready read-only property of the WritableStreamDefaultWriter interface returns a Promise that resolves when the desired size of the stream's internal queue transitions from non-positive to positive, signaling that it is no longer applying backpressure.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter.ready"
        }
    ],
    "ref-for-default-writer-release-lock②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "releaseLock",
            "slug": "API/WritableStreamDefaultWriter/releaseLock",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/releaseLock",
            "summary": "The releaseLock() method of the WritableStreamDefaultWriter interface releases the writer's lock on the corresponding stream. After the lock is released, the writer is no longer active. If the associated stream is errored when the lock is released, the writer will appear errored in the same way from now on; otherwise, the writer will appear closed.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter.releaseLock()"
        }
    ],
    "ref-for-default-writer-write①②": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "write",
            "slug": "API/WritableStreamDefaultWriter/write",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter/write",
            "summary": "The write() method of the WritableStreamDefaultWriter interface writes a passed chunk of data to a WritableStream and its underlying sink, then returns a Promise that resolves to indicate the success or failure of the write operation.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": {
                    "version_added": "16.5.0"
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter.write()"
        }
    ],
    "default-writer-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/WritableStreamDefaultWriter.json",
            "name": "WritableStreamDefaultWriter",
            "slug": "API/WritableStreamDefaultWriter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WritableStreamDefaultWriter",
            "summary": "The WritableStreamDefaultWriter interface of the Streams API is the object returned by WritableStream.getWriter() and once created locks the writer to the WritableStream ensuring that no other streams can write to the underlying sink.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "deno": {
                    "version_added": "1.0"
                },
                "edge": {
                    "version_added": "16"
                },
                "firefox": {
                    "version_added": "100"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "nodejs": [
                    {
                        "version_added": "18.0.0"
                    },
                    {
                        "version_added": "16.5.0",
                        "version_removed": "18.0.0",
                        "notes": [
                            "Must be imported using either <code>require('stream/web')</code> or <code>import * from 'stream/web'</code>.",
                            "Experimental implementation."
                        ]
                    }
                ],
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WritableStreamDefaultWriter"
        }
    ]
}
