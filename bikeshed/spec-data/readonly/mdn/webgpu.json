{
    "dom-gpu-getpreferredcanvasformat": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPU.json",
            "name": "getPreferredCanvasFormat",
            "slug": "API/GPU/getPreferredCanvasFormat",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPU/getPreferredCanvasFormat",
            "summary": "The getPreferredCanvasFormat() method of the GPU interface returns the optimal canvas texture format for displaying 8-bit depth, standard dynamic range content on the current system.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPU: getPreferredCanvasFormat() method"
        }
    ],
    "dom-gpu-requestadapter": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPU.json",
            "name": "requestAdapter",
            "slug": "API/GPU/requestAdapter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPU/requestAdapter",
            "summary": "The requestAdapter() method of the GPU interface returns a Promise that fulfills with a GPUAdapter object instance. From this you can request a GPUDevice, adapter info, features, and limits.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPU: requestAdapter() method"
        }
    ],
    "dom-gpu-wgsllanguagefeatures": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPU.json",
            "name": "wgslLanguageFeatures",
            "slug": "API/GPU/wgslLanguageFeatures",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPU/wgslLanguageFeatures",
            "summary": "The wgslLanguageFeatures read-only property of the GPU interface returns a WGSLLanguageFeatures object that reports the WGSL language extensions supported by the WebGPU implementation.",
            "support": {
                "chrome": {
                    "version_added": "115",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "115",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPU: wgslLanguageFeatures property"
        }
    ],
    "gpu-interface": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPU.json",
            "name": "GPU",
            "slug": "API/GPU",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPU",
            "summary": "The GPU interface of the WebGPU API is the starting point for using WebGPU. It can be used to return a GPUAdapter from which you can request devices, configure features and limits, and more.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPU"
        }
    ],
    "dom-gpuadapter-features": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapter.json",
            "name": "features",
            "slug": "API/GPUAdapter/features",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/features",
            "summary": "The features read-only property of the GPUAdapter interface returns a GPUSupportedFeatures object that describes additional functionality supported by the adapter.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapter: features property"
        }
    ],
    "dom-gpuadapter-isfallbackadapter": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapter.json",
            "name": "isFallbackAdapter",
            "slug": "API/GPUAdapter/isFallbackAdapter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/isFallbackAdapter",
            "summary": "The isFallbackAdapter read-only property of the GPUAdapter interface returns true if the adapter is a fallback adapter, and false if not.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapter: isFallbackAdapter property"
        }
    ],
    "dom-gpuadapter-limits": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapter.json",
            "name": "limits",
            "slug": "API/GPUAdapter/limits",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/limits",
            "summary": "The limits read-only property of the GPUAdapter interface returns a GPUSupportedLimits object that describes the limits supported by the adapter.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapter: limits property"
        }
    ],
    "dom-gpuadapter-requestadapterinfo": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapter.json",
            "name": "requestAdapterInfo",
            "slug": "API/GPUAdapter/requestAdapterInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/requestAdapterInfo",
            "summary": "The requestAdapterInfo() method of the GPUAdapter interface returns a Promise that fulfills with a GPUAdapterInfo object containing identifying information about an adapter.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapter: requestAdapterInfo() method"
        }
    ],
    "dom-gpuadapter-requestdevice": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapter.json",
            "name": "requestDevice",
            "slug": "API/GPUAdapter/requestDevice",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter/requestDevice",
            "summary": "The requestDevice() method of the GPUAdapter interface returns a Promise that fulfills with a GPUDevice object, which is the primary interface for communicating with the GPU.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapter: requestDevice() method"
        }
    ],
    "gpu-adapter": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapter.json",
            "name": "GPUAdapter",
            "slug": "API/GPUAdapter",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapter",
            "summary": "The GPUAdapter interface of the WebGPU API represents a GPU adapter. From this you can request a GPUDevice, adapter info, features, and limits.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapter"
        }
    ],
    "dom-gpuadapterinfo-architecture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapterInfo.json",
            "name": "architecture",
            "slug": "API/GPUAdapterInfo/architecture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapterInfo/architecture",
            "summary": "The architecture read-only property of the GPUAdapterInfo interface returns the name of the family or class of GPUs the adapter belongs to, or an empty string if it is not available.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapterInfo: architecture property"
        }
    ],
    "dom-gpuadapterinfo-description": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapterInfo.json",
            "name": "description",
            "slug": "API/GPUAdapterInfo/description",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapterInfo/description",
            "summary": "The description read-only property of the GPUAdapterInfo interface returns a human-readable string describing the adapter, or an empty string if it is not available.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapterInfo: description property"
        }
    ],
    "dom-gpuadapterinfo-device": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapterInfo.json",
            "name": "device",
            "slug": "API/GPUAdapterInfo/device",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapterInfo/device",
            "summary": "The device read-only property of the GPUAdapterInfo interface returns a vendor-specific identifier for the adapter, or an empty string if it is not available.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapterInfo: device property"
        }
    ],
    "dom-gpuadapterinfo-vendor": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapterInfo.json",
            "name": "vendor",
            "slug": "API/GPUAdapterInfo/vendor",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapterInfo/vendor",
            "summary": "The vendor read-only property of the GPUAdapterInfo interface returns the name of the adapter vendor, or an empty string if it is not available.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapterInfo: vendor property"
        }
    ],
    "gpu-adapterinfo": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUAdapterInfo.json",
            "name": "GPUAdapterInfo",
            "slug": "API/GPUAdapterInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUAdapterInfo",
            "summary": "The GPUAdapterInfo interface of the WebGPU API contains identifying information about a GPUAdapter.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUAdapterInfo"
        }
    ],
    "dom-gpuobjectbase-label": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBindGroup.json",
            "name": "label",
            "slug": "API/GPUBindGroup/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBindGroup/label",
            "summary": "The label property of the GPUBindGroup interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBindGroup: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBindGroupLayout.json",
            "name": "label",
            "slug": "API/GPUBindGroupLayout/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBindGroupLayout/label",
            "summary": "The label property of the GPUBindGroupLayout interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBindGroupLayout: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "label",
            "slug": "API/GPUBuffer/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/label",
            "summary": "The label property of the GPUBuffer interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandBuffer.json",
            "name": "label",
            "slug": "API/GPUCommandBuffer/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandBuffer/label",
            "summary": "The label read-only property of the GPUCommandBuffer interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandBuffer: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "label",
            "slug": "API/GPUCommandEncoder/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/label",
            "summary": "The label read-only property of the GPUCommandEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "label",
            "slug": "API/GPUComputePassEncoder/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/label",
            "summary": "The label read-only property of the GPUComputePassEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePipeline.json",
            "name": "label",
            "slug": "API/GPUComputePipeline/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePipeline/label",
            "summary": "The label property of the GPUComputePipeline interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePipeline: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "label",
            "slug": "API/GPUDevice/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/label",
            "summary": "The label read-only property of the GPUDevice interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUExternalTexture.json",
            "name": "label",
            "slug": "API/GPUExternalTexture/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUExternalTexture/label",
            "summary": "The label property of the GPUExternalTexture interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUExternalTexture: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUPipelineLayout.json",
            "name": "label",
            "slug": "API/GPUPipelineLayout/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUPipelineLayout/label",
            "summary": "The label property of the GPUPipelineLayout interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUPipelineLayout: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQuerySet.json",
            "name": "label",
            "slug": "API/GPUQuerySet/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQuerySet/label",
            "summary": "The label property of the GPUQuerySet interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQuerySet: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQueue.json",
            "name": "label",
            "slug": "API/GPUQueue/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQueue/label",
            "summary": "The label read-only property of the GPUQueue interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQueue: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPURenderBundle.json",
            "name": "label",
            "slug": "API/GPURenderBundle/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundle/label",
            "summary": "The label read-only property of the GPURenderBundle interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundle: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "label",
            "slug": "API/GPURenderBundleEncoder/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/label",
            "summary": "The label read-only property of the GPURenderBundleEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "label",
            "slug": "API/GPURenderPassEncoder/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/label",
            "summary": "The label read-only property of the GPURenderPassEncoder interface is a string providing a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPipeline.json",
            "name": "label",
            "slug": "API/GPURenderPipeline/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPipeline/label",
            "summary": "The label property of the GPURenderPipeline interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPipeline: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUSampler.json",
            "name": "label",
            "slug": "API/GPUSampler/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUSampler/label",
            "summary": "The label property of the GPUSampler interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUSampler: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUShaderModule.json",
            "name": "label",
            "slug": "API/GPUShaderModule/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUShaderModule/label",
            "summary": "The label property of the GPUShaderModule interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUShaderModule: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "label",
            "slug": "API/GPUTexture/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/label",
            "summary": "The label property of the GPUTexture interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: label property"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTextureView.json",
            "name": "label",
            "slug": "API/GPUTextureView/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTextureView/label",
            "summary": "The label property of the GPUTextureView interface provides a label that can be used to identify the object, for example in GPUError messages or console warnings.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTextureView: label property"
        }
    ],
    "gpubindgroup": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBindGroup.json",
            "name": "GPUBindGroup",
            "slug": "API/GPUBindGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBindGroup",
            "summary": "The GPUBindGroup interface of the WebGPU API is based on a GPUBindGroupLayout and defines a set of resources to be bound together in a group and how those resources are used in shader stages.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBindGroup"
        }
    ],
    "gpubindgrouplayout": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBindGroupLayout.json",
            "name": "GPUBindGroupLayout",
            "slug": "API/GPUBindGroupLayout",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBindGroupLayout",
            "summary": "The GPUBindGroupLayout interface of the WebGPU API defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating GPUBindGroups.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBindGroupLayout"
        }
    ],
    "dom-gpubuffer-destroy": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "destroy",
            "slug": "API/GPUBuffer/destroy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/destroy",
            "summary": "The destroy() method of the GPUBuffer interface destroys the GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: destroy() method"
        }
    ],
    "dom-gpubuffer-getmappedrange": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "getMappedRange",
            "slug": "API/GPUBuffer/getMappedRange",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/getMappedRange",
            "summary": "The getMappedRange() method of the GPUBuffer interface returns an ArrayBuffer containing the mapped contents of the GPUBuffer in the specified range.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: getMappedRange() method"
        }
    ],
    "dom-gpubuffer-mapasync": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "mapAsync",
            "slug": "API/GPUBuffer/mapAsync",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/mapAsync",
            "summary": "The mapAsync() method of the GPUBuffer interface maps the specified range of the GPUBuffer. It returns a Promise that resolves when the GPUBuffer's content is ready to be accessed. While the GPUBuffer is mapped it cannot be used in any GPU commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: mapAsync() method"
        }
    ],
    "dom-gpubuffer-mapstate": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "mapState",
            "slug": "API/GPUBuffer/mapState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/mapState",
            "summary": "The mapState read-only property of the GPUBuffer interface represents the mapped state of the GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: mapState property"
        }
    ],
    "dom-gpubuffer-size": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "size",
            "slug": "API/GPUBuffer/size",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/size",
            "summary": "The size read-only property of the GPUBuffer interface represents the length of the GPUBuffer's memory allocation, in bytes.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: size property"
        }
    ],
    "dom-gpubuffer-unmap": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "unmap",
            "slug": "API/GPUBuffer/unmap",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/unmap",
            "summary": "The unmap() method of the GPUBuffer interface unmaps the mapped range of the GPUBuffer, making its contents available for use by the GPU again after it has previously been mapped with GPUBuffer.mapAsync() (the GPU cannot access a mapped GPUBuffer).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: unmap() method"
        }
    ],
    "dom-gpubuffer-usage": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "usage",
            "slug": "API/GPUBuffer/usage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer/usage",
            "summary": "The usage read-only property of the GPUBuffer interface contains the bitwise flags representing the allowed usages of the GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer: usage property"
        }
    ],
    "gpubuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUBuffer.json",
            "name": "GPUBuffer",
            "slug": "API/GPUBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUBuffer",
            "summary": "The GPUBuffer interface of the WebGPU API represents a block of memory that can be used to store raw data to use in GPU operations.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUBuffer"
        }
    ],
    "dom-gpucanvascontext-canvas": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCanvasContext.json",
            "name": "canvas",
            "slug": "API/GPUCanvasContext/canvas",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCanvasContext/canvas",
            "summary": "The canvas read-only property of the GPUCanvasContext interface returns a reference to the canvas that the context was created from.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCanvasContext: canvas property"
        }
    ],
    "dom-gpucanvascontext-configure": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCanvasContext.json",
            "name": "configure",
            "slug": "API/GPUCanvasContext/configure",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCanvasContext/configure",
            "summary": "The configure() method of the GPUCanvasContext interface configures the context to use for rendering with a given GPUDevice. When called the canvas will initially be cleared to transparent black.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": [
                        "Currently supported on ChromeOS, macOS, and Windows only.",
                        "The <code>rgba8unorm</code> format is currently not supported on macOS. See <a href='https://crbug.com/1298618'>bug 1298618</a>."
                    ]
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": [
                        "Currently supported on ChromeOS, macOS, and Windows only.",
                        "The <code>rgba8unorm</code> format is currently not supported on macOS. See <a href='https://crbug.com/1298618'>bug 1298618</a>."
                    ]
                }
            },
            "title": "GPUCanvasContext: configure() method"
        }
    ],
    "dom-gpucanvascontext-getcurrenttexture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCanvasContext.json",
            "name": "getCurrentTexture",
            "slug": "API/GPUCanvasContext/getCurrentTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCanvasContext/getCurrentTexture",
            "summary": "The getCurrentTexture() method of the GPUCanvasContext interface returns the next GPUTexture to be composited to the document by the canvas context.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCanvasContext: getCurrentTexture() method"
        }
    ],
    "dom-gpucanvascontext-unconfigure": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCanvasContext.json",
            "name": "unconfigure",
            "slug": "API/GPUCanvasContext/unconfigure",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCanvasContext/unconfigure",
            "summary": "The unconfigure() method of the GPUCanvasContext interface removes any previously-set context configuration, and destroys any textures returned via getCurrentTexture() while the canvas context was configured.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCanvasContext: unconfigure() method"
        }
    ],
    "gpucanvascontext": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCanvasContext.json",
            "name": "GPUCanvasContext",
            "slug": "API/GPUCanvasContext",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCanvasContext",
            "summary": "The GPUCanvasContext interface of the WebGPU API represents the WebGPU rendering context of a <canvas> element, returned via an HTMLCanvasElement.getContext() call with a contextType of \"webgpu\".",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCanvasContext"
        }
    ],
    "gpucommandbuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandBuffer.json",
            "name": "GPUCommandBuffer",
            "slug": "API/GPUCommandBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandBuffer",
            "summary": "The GPUCommandBuffer interface of the WebGPU API represents a pre-recorded list of GPU commands that can be submitted to a GPUQueue for execution.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandBuffer"
        }
    ],
    "dom-gpucommandencoder-begincomputepass": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "beginComputePass",
            "slug": "API/GPUCommandEncoder/beginComputePass",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginComputePass",
            "summary": "The beginComputePass() method of the GPUCommandEncoder interface starts encoding a compute pass, returning a GPUComputePassEncoder that can be used to control computation.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: beginComputePass() method"
        }
    ],
    "dom-gpucommandencoder-beginrenderpass": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "beginRenderPass",
            "slug": "API/GPUCommandEncoder/beginRenderPass",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/beginRenderPass",
            "summary": "The beginRenderPass() method of the GPUCommandEncoder interface starts encoding a render pass, returning a GPURenderPassEncoder that can be used to control rendering.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: beginRenderPass() method"
        }
    ],
    "dom-gpucommandencoder-clearbuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "clearBuffer",
            "slug": "API/GPUCommandEncoder/clearBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/clearBuffer",
            "summary": "The clearBuffer() method of the GPUCommandEncoder interface encodes a command that fills a region of a GPUBuffer with zeroes.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: clearBuffer() method"
        }
    ],
    "dom-gpucommandencoder-copybuffertobuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "copyBufferToBuffer",
            "slug": "API/GPUCommandEncoder/copyBufferToBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/copyBufferToBuffer",
            "summary": "The copyBufferToBuffer() method of the GPUCommandEncoder interface encodes a command that copies data from one GPUBuffer to another.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: copyBufferToBuffer() method"
        }
    ],
    "dom-gpucommandencoder-copybuffertotexture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "copyBufferToTexture",
            "slug": "API/GPUCommandEncoder/copyBufferToTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/copyBufferToTexture",
            "summary": "The copyBufferToTexture() method of the GPUCommandEncoder interface encodes a command that copies data from a GPUBuffer to a GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: copyBufferToTexture() method"
        }
    ],
    "dom-gpucommandencoder-copytexturetobuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "copyTextureToBuffer",
            "slug": "API/GPUCommandEncoder/copyTextureToBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/copyTextureToBuffer",
            "summary": "The copyTextureToBuffer() method of the GPUCommandEncoder interface encodes a command that copies data from a GPUTexture to a GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: copyTextureToBuffer() method"
        }
    ],
    "dom-gpucommandencoder-copytexturetotexture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "copyTextureToTexture",
            "slug": "API/GPUCommandEncoder/copyTextureToTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/copyTextureToTexture",
            "summary": "The copyTextureToTexture() method of the GPUCommandEncoder interface encodes a command that copies data from one GPUTexture to another.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: copyTextureToTexture() method"
        }
    ],
    "dom-gpucommandencoder-finish": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "finish",
            "slug": "API/GPUCommandEncoder/finish",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/finish",
            "summary": "The finish() method of the GPUCommandEncoder interface completes recording of the command sequence encoded on this GPUCommandEncoder, returning a corresponding GPUCommandBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: finish() method"
        }
    ],
    "dom-gpudebugcommandsmixin-insertdebugmarker": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "insertDebugMarker",
            "slug": "API/GPUCommandEncoder/insertDebugMarker",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/insertDebugMarker",
            "summary": "The insertDebugMarker() method of the GPUCommandEncoder interface marks a specific point in a series of encoded commands with a label.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: insertDebugMarker() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "insertDebugMarker",
            "slug": "API/GPUComputePassEncoder/insertDebugMarker",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/insertDebugMarker",
            "summary": "The insertDebugMarker() method of the GPUComputePassEncoder interface marks a specific point in a series of encoded compute pass commands with a label.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: insertDebugMarker() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "insertDebugMarker",
            "slug": "API/GPURenderBundleEncoder/insertDebugMarker",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/insertDebugMarker",
            "summary": "The insertDebugMarker() method of the GPURenderBundleEncoder interface marks a specific point in a series of encoded render bundle pass commands with a label.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: insertDebugMarker() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "insertDebugMarker",
            "slug": "API/GPURenderPassEncoder/insertDebugMarker",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/insertDebugMarker",
            "summary": "The insertDebugMarker() method of the GPURenderPassEncoder interface marks a specific point in a series of encoded render pass commands with a label.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: insertDebugMarker() method"
        }
    ],
    "dom-gpudebugcommandsmixin-popdebuggroup": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "popDebugGroup",
            "slug": "API/GPUCommandEncoder/popDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/popDebugGroup",
            "summary": "The popDebugGroup() method of the GPUCommandEncoder interface ends a debug group, which is begun with a pushDebugGroup() call.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: popDebugGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "popDebugGroup",
            "slug": "API/GPUComputePassEncoder/popDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/popDebugGroup",
            "summary": "The popDebugGroup() method of the GPUComputePassEncoder interface ends a compute pass debug group, which is begun with a pushDebugGroup() call.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: popDebugGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "popDebugGroup",
            "slug": "API/GPURenderBundleEncoder/popDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/popDebugGroup",
            "summary": "The popDebugGroup() method of the GPURenderBundleEncoder interface ends a render bundle debug group, which is begun with a pushDebugGroup() call.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: popDebugGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "popDebugGroup",
            "slug": "API/GPURenderPassEncoder/popDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/popDebugGroup",
            "summary": "The popDebugGroup() method of the GPURenderPassEncoder interface ends a render pass debug group, which is begun with a pushDebugGroup() call.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: popDebugGroup() method"
        }
    ],
    "dom-gpudebugcommandsmixin-pushdebuggroup": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "pushDebugGroup",
            "slug": "API/GPUCommandEncoder/pushDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/pushDebugGroup",
            "summary": "The pushDebugGroup() method of the GPUCommandEncoder interface begins a debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: pushDebugGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "pushDebugGroup",
            "slug": "API/GPUComputePassEncoder/pushDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/pushDebugGroup",
            "summary": "The pushDebugGroup() method of the GPUComputePassEncoder interface begins a compute pass debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: pushDebugGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "pushDebugGroup",
            "slug": "API/GPURenderBundleEncoder/pushDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/pushDebugGroup",
            "summary": "The pushDebugGroup() method of the GPURenderBundleEncoder interface begins a render bundle debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: pushDebugGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "pushDebugGroup",
            "slug": "API/GPURenderPassEncoder/pushDebugGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/pushDebugGroup",
            "summary": "The pushDebugGroup() method of the GPURenderPassEncoder interface begins a render pass debug group, which is marked with a specified label, and will contain all subsequent encoded commands up until a popDebugGroup() method is invoked.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: pushDebugGroup() method"
        }
    ],
    "dom-gpucommandencoder-resolvequeryset": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "resolveQuerySet",
            "slug": "API/GPUCommandEncoder/resolveQuerySet",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/resolveQuerySet",
            "summary": "The resolveQuerySet() method of the GPUCommandEncoder interface encodes a command that resolves a GPUQuerySet, copying the results into a specified GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: resolveQuerySet() method"
        }
    ],
    "dom-gpucommandencoder-writetimestamp": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "writeTimestamp",
            "slug": "API/GPUCommandEncoder/writeTimestamp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder/writeTimestamp",
            "summary": "The writeTimestamp() method of the GPUCommandEncoder interface encodes a command that writes a timestamp into a GPUQuerySet once the previous commands recorded into the same queued GPUCommandBuffer have been executed by the GPU.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder: writeTimestamp() method"
        }
    ],
    "gpucommandencoder": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCommandEncoder.json",
            "name": "GPUCommandEncoder",
            "slug": "API/GPUCommandEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCommandEncoder",
            "summary": "The GPUCommandEncoder interface of the WebGPU API represents a command encoder, used to encode commands to be issued to the GPU.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCommandEncoder"
        }
    ],
    "dom-gpucompilationinfo-messages": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationInfo.json",
            "name": "messages",
            "slug": "API/GPUCompilationInfo/messages",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationInfo/messages",
            "summary": "The messages read-only property of the GPUCompilationInfo interface is an array of GPUCompilationMessage objects, each one containing the details of an individual shader compilation message. Messages can be informational, warnings, or errors.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationInfo: messages property"
        }
    ],
    "gpucompilationinfo": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationInfo.json",
            "name": "GPUCompilationInfo",
            "slug": "API/GPUCompilationInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationInfo",
            "summary": "The GPUCompilationInfo interface of the WebGPU API represents an array of GPUCompilationMessage objects generated by the GPU shader module compiler to help diagnose problems with shader code.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationInfo"
        }
    ],
    "dom-gpucompilationmessage-length": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationMessage.json",
            "name": "length",
            "slug": "API/GPUCompilationMessage/length",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage/length",
            "summary": "The length read-only property of the GPUCompilationMessage interface is a number representing the length of the substring that the message corresponds to.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationMessage: length property"
        }
    ],
    "dom-gpucompilationmessage-linenum": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationMessage.json",
            "name": "lineNum",
            "slug": "API/GPUCompilationMessage/lineNum",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage/lineNum",
            "summary": "The lineNum read-only property of the GPUCompilationMessage interface is a number representing the line number in the shader code that the message corresponds to.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationMessage: lineNum property"
        }
    ],
    "dom-gpucompilationmessage-linepos": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationMessage.json",
            "name": "linePos",
            "slug": "API/GPUCompilationMessage/linePos",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage/linePos",
            "summary": "The linePos read-only property of the GPUCompilationMessage interface is a number representing the position in the code line that the message corresponds to. This could be an exact point, or the start of the relevant substring.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationMessage: linePos property"
        }
    ],
    "dom-gpucompilationmessage-message": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationMessage.json",
            "name": "message",
            "slug": "API/GPUCompilationMessage/message",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage/message",
            "summary": "The message read-only property of the GPUCompilationMessage interface is a string representing human-readable message text.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationMessage: message property"
        }
    ],
    "dom-gpucompilationmessage-offset": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationMessage.json",
            "name": "offset",
            "slug": "API/GPUCompilationMessage/offset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage/offset",
            "summary": "The offset read-only property of the GPUCompilationMessage interface is a number representing the offset from the start of the shader code to the exact point, or the start of the relevant substring, that the message corresponds to.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationMessage: offset property"
        }
    ],
    "dom-gpucompilationmessage-type": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationMessage.json",
            "name": "type",
            "slug": "API/GPUCompilationMessage/type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage/type",
            "summary": "The type read-only property of the GPUCompilationMessage interface is an enumerated value representing the type of the message. Each type represents a different severity level.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationMessage: type property"
        }
    ],
    "gpucompilationmessage": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUCompilationMessage.json",
            "name": "GPUCompilationMessage",
            "slug": "API/GPUCompilationMessage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUCompilationMessage",
            "summary": "The GPUCompilationMessage interface of the WebGPU API represents a single informational, warning, or error message generated by the GPU shader module compiler.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUCompilationMessage"
        }
    ],
    "dom-gpucomputepassencoder-dispatchworkgroups": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "dispatchWorkgroups",
            "slug": "API/GPUComputePassEncoder/dispatchWorkgroups",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/dispatchWorkgroups",
            "summary": "The dispatchWorkgroups() method of the GPUComputePassEncoder interface dispatches a specific grid of workgroups to perform the work being done by the current GPUComputePipeline (i.e. set via GPUComputePassEncoder.setPipeline()).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: dispatchWorkgroups() method"
        }
    ],
    "dom-gpucomputepassencoder-dispatchworkgroupsindirect": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "dispatchWorkgroupsIndirect",
            "slug": "API/GPUComputePassEncoder/dispatchWorkgroupsIndirect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/dispatchWorkgroupsIndirect",
            "summary": "The dispatchWorkgroupsIndirect() method of the GPUComputePassEncoder interface dispatches a grid of workgroups, defined by the parameters of a GPUBuffer, to perform the work being done by the current GPUComputePipeline (i.e. set via GPUComputePassEncoder.setPipeline()).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.webgpu.indirect-dispatch.enabled",
                            "value_to_set": "true"
                        }
                    ],
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: dispatchWorkgroupsIndirect() method"
        }
    ],
    "dom-gpucomputepassencoder-end": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "end",
            "slug": "API/GPUComputePassEncoder/end",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/end",
            "summary": "The end() method of the GPUComputePassEncoder interface completes recording of the current compute pass command sequence.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: end() method"
        }
    ],
    "programmable-passes-bind-groups": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "setBindGroup",
            "slug": "API/GPUComputePassEncoder/setBindGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/setBindGroup",
            "summary": "The setBindGroup() method of the GPUComputePassEncoder interface sets the GPUBindGroup to use for subsequent compute commands, for a given index.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: setBindGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "setBindGroup",
            "slug": "API/GPURenderBundleEncoder/setBindGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/setBindGroup",
            "summary": "The setBindGroup() method of the GPURenderBundleEncoder interface sets the GPUBindGroup to use for subsequent render bundle commands, for a given index.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: setBindGroup() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setBindGroup",
            "slug": "API/GPURenderPassEncoder/setBindGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setBindGroup",
            "summary": "The setBindGroup() method of the GPURenderPassEncoder interface sets the GPUBindGroup to use for subsequent render commands, for a given index.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setBindGroup() method"
        }
    ],
    "dom-gpucomputepassencoder-setpipeline": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "setPipeline",
            "slug": "API/GPUComputePassEncoder/setPipeline",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder/setPipeline",
            "summary": "The setPipeline() method of the GPUComputePassEncoder interface sets the GPUComputePipeline to use for this compute pass.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder: setPipeline() method"
        }
    ],
    "gpucomputepassencoder": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePassEncoder.json",
            "name": "GPUComputePassEncoder",
            "slug": "API/GPUComputePassEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePassEncoder",
            "summary": "The GPUComputePassEncoder interface of the WebGPU API encodes commands related to controlling the compute shader stage, as issued by a GPUComputePipeline. It forms part of the overall encoding activity of a GPUCommandEncoder.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePassEncoder"
        }
    ],
    "dom-gpupipelinebase-getbindgrouplayout": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePipeline.json",
            "name": "getBindGroupLayout",
            "slug": "API/GPUComputePipeline/getBindGroupLayout",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePipeline/getBindGroupLayout",
            "summary": "The getBindGroupLayout() method of the GPUComputePipeline interface returns the pipeline's GPUBindGroupLayout object with the given index (i.e. included in the originating GPUDevice.createComputePipeline() or GPUDevice.createComputePipelineAsync() call's pipeline layout).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePipeline: getBindGroupLayout() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPipeline.json",
            "name": "getBindGroupLayout",
            "slug": "API/GPURenderPipeline/getBindGroupLayout",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPipeline/getBindGroupLayout",
            "summary": "The getBindGroupLayout() method of the GPURenderPipeline interface returns the pipeline's GPUBindGroupLayout object with the given index (i.e. included in the originating GPUDevice.createRenderPipeline() or GPUDevice.createRenderPipelineAsync() call's pipeline layout).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPipeline: getBindGroupLayout() method"
        }
    ],
    "gpucomputepipeline": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUComputePipeline.json",
            "name": "GPUComputePipeline",
            "slug": "API/GPUComputePipeline",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUComputePipeline",
            "summary": "The GPUComputePipeline interface of the WebGPU API represents a pipeline that controls the compute shader stage and can be used in a GPUComputePassEncoder.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUComputePipeline"
        }
    ],
    "dom-gpudevice-createbindgroup": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createBindGroup",
            "slug": "API/GPUDevice/createBindGroup",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createBindGroup",
            "summary": "The createBindGroup() method of the GPUDevice interface creates a GPUBindGroup based on a GPUBindGroupLayout that defines a set of resources to be bound together in a group and how those resources are used in shader stages.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createBindGroup() method"
        }
    ],
    "dom-gpudevice-createbindgrouplayout": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createBindGroupLayout",
            "slug": "API/GPUDevice/createBindGroupLayout",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createBindGroupLayout",
            "summary": "The createBindGroupLayout() method of the GPUDevice interface creates a GPUBindGroupLayout that defines the structure and purpose of related GPU resources such as buffers that will be used in a pipeline, and is used as a template when creating GPUBindGroups.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createBindGroupLayout() method"
        }
    ],
    "dom-gpudevice-createbuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createBuffer",
            "slug": "API/GPUDevice/createBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createBuffer",
            "summary": "The createBuffer() method of the GPUDevice interface creates a GPUBuffer in which to store raw data to use in GPU operations.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createBuffer() method"
        }
    ],
    "dom-gpudevice-createcommandencoder": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createCommandEncoder",
            "slug": "API/GPUDevice/createCommandEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createCommandEncoder",
            "summary": "The createCommandEncoder() method of the GPUDevice interface creates a GPUCommandEncoder, used to encode commands to be issued to the GPU.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createCommandEncoder() method"
        }
    ],
    "dom-gpudevice-createcomputepipeline": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createComputePipeline",
            "slug": "API/GPUDevice/createComputePipeline",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createComputePipeline",
            "summary": "The createComputePipeline() method of the GPUDevice interface creates a GPUComputePipeline that can control the compute shader stage and be used in a GPUComputePassEncoder.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createComputePipeline() method"
        }
    ],
    "dom-gpudevice-createcomputepipelineasync": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createComputePipelineAsync",
            "slug": "API/GPUDevice/createComputePipelineAsync",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createComputePipelineAsync",
            "summary": "The createComputePipelineAsync() method of the GPUDevice interface returns a Promise that fulfills with a GPUComputePipeline, which can control the compute shader stage and be used in a GPUComputePassEncoder, once the pipeline can be used without any stalling.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createComputePipelineAsync() method"
        }
    ],
    "dom-gpudevice-createpipelinelayout": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createPipelineLayout",
            "slug": "API/GPUDevice/createPipelineLayout",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createPipelineLayout",
            "summary": "The createPipelineLayout() method of the GPUDevice interface creates a GPUPipelineLayout that defines the GPUBindGroupLayouts used by a pipeline. GPUBindGroups used with the pipeline during command encoding must have compatible GPUBindGroupLayouts.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createPipelineLayout() method"
        }
    ],
    "dom-gpudevice-createqueryset": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createQuerySet",
            "slug": "API/GPUDevice/createQuerySet",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createQuerySet",
            "summary": "The createQuerySet() method of the GPUDevice interface creates a GPUQuerySet that can be used to record the results of queries on passes, such as occlusion or timestamp queries.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createQuerySet() method"
        }
    ],
    "dom-gpudevice-createrenderbundleencoder": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createRenderBundleEncoder",
            "slug": "API/GPUDevice/createRenderBundleEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createRenderBundleEncoder",
            "summary": "The createRenderBundleEncoder() method of the GPUDevice interface creates a GPURenderBundleEncoder that can be used to pre-record bundles of commands. These can be reused in GPURenderPassEncoders via the executeBundles() method, as many times as required.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createRenderBundleEncoder() method"
        }
    ],
    "dom-gpudevice-createrenderpipeline": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createRenderPipeline",
            "slug": "API/GPUDevice/createRenderPipeline",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createRenderPipeline",
            "summary": "The createRenderPipeline() method of the GPUDevice interface creates a GPURenderPipeline that can control the vertex and fragment shader stages and be used in a GPURenderPassEncoder or GPURenderBundleEncoder.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createRenderPipeline() method"
        }
    ],
    "dom-gpudevice-createrenderpipelineasync": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createRenderPipelineAsync",
            "slug": "API/GPUDevice/createRenderPipelineAsync",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createRenderPipelineAsync",
            "summary": "The createRenderPipelineAsync() method of the GPUDevice interface returns a Promise that fulfills with a GPURenderPipeline, which can control the vertex and fragment shader stages and be used in a GPURenderPassEncoder or GPURenderBundleEncoder, once the pipeline can be used without any stalling.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createRenderPipelineAsync() method"
        }
    ],
    "dom-gpudevice-createsampler": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createSampler",
            "slug": "API/GPUDevice/createSampler",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createSampler",
            "summary": "The createSampler() method of the GPUDevice interface creates a GPUSampler, which controls how shaders transform and filter texture resource data.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createSampler() method"
        }
    ],
    "dom-gpudevice-createshadermodule": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createShaderModule",
            "slug": "API/GPUDevice/createShaderModule",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createShaderModule",
            "summary": "The createShaderModule() method of the GPUDevice interface creates a GPUShaderModule from a string of WGSL source code.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createShaderModule() method"
        }
    ],
    "dom-gpudevice-createtexture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "createTexture",
            "slug": "API/GPUDevice/createTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/createTexture",
            "summary": "The createTexture() method of the GPUDevice interface creates a GPUTexture in which to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: createTexture() method"
        }
    ],
    "dom-gpudevice-destroy": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "destroy",
            "slug": "API/GPUDevice/destroy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/destroy",
            "summary": "The destroy() method of the GPUDevice interface destroys the device, preventing further operations on it.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: destroy() method"
        }
    ],
    "dom-gpudevice-features": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "features",
            "slug": "API/GPUDevice/features",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/features",
            "summary": "The features read-only property of the GPUDevice interface returns a GPUSupportedFeatures object that describes additional functionality supported by the device. Only features requested during the creation of the device (i.e. when GPUAdapter.requestDevice() is called) are included.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: features property"
        }
    ],
    "dom-gpudevice-importexternaltexture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "importExternalTexture",
            "slug": "API/GPUDevice/importExternalTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/importExternalTexture",
            "summary": "The importExternalTexture() method of the GPUDevice interface takes an HTMLVideoElement or a VideoFrame object as an input and returns a GPUExternalTexture wrapper object containing a snapshot of the video that can be used as a frame in GPU rendering operations.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: importExternalTexture() method"
        }
    ],
    "dom-gpudevice-limits": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "limits",
            "slug": "API/GPUDevice/limits",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/limits",
            "summary": "The limits read-only property of the GPUDevice interface returns a GPUSupportedLimits object that describes the limits supported by the device. All limit values will be included, and the limits requested during the creation of the device (i.e. when GPUAdapter.requestDevice() is called) will be reflected in those values.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: limits property"
        }
    ],
    "dom-gpudevice-lost": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "lost",
            "slug": "API/GPUDevice/lost",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/lost",
            "summary": "The lost read-only property of the GPUDevice interface contains a Promise that remains pending throughout the device's lifetime and resolves with a GPUDeviceLostInfo object when the device is lost.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: lost property"
        }
    ],
    "dom-gpudevice-poperrorscope": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "popErrorScope",
            "slug": "API/GPUDevice/popErrorScope",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/popErrorScope",
            "summary": "The popErrorScope() method of the GPUDevice interface pops an existing GPU error scope from the error scope stack (originally pushed using GPUDevice.pushErrorScope()) and returns a Promise that resolves to an object describing the first error captured in the scope, or null if no error occurred.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: popErrorScope() method"
        }
    ],
    "dom-gpudevice-pusherrorscope": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "pushErrorScope",
            "slug": "API/GPUDevice/pushErrorScope",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/pushErrorScope",
            "summary": "The pushErrorScope() method of the GPUDevice interface pushes a new GPU error scope onto the device's error scope stack, allowing you to capture errors of a particular type.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: pushErrorScope() method"
        }
    ],
    "dom-gpudevice-queue": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "queue",
            "slug": "API/GPUDevice/queue",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/queue",
            "summary": "The queue read-only property of the GPUDevice interface returns the primary GPUQueue for the device.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: queue property"
        }
    ],
    "dom-gpudevice-onuncapturederror": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "uncapturederror_event",
            "slug": "API/GPUDevice/uncapturederror_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice/uncapturederror_event",
            "summary": "The uncapturederror event of the GPUDevice interface is fired when an error is thrown that has not been observed by a GPU error scope, to provide a way to report unexpected errors.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice: uncapturederror event"
        }
    ],
    "gpudevice": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDevice.json",
            "name": "GPUDevice",
            "slug": "API/GPUDevice",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDevice",
            "summary": "The GPUDevice interface of the WebGPU API represents a logical GPU device. This is the main interface through which the majority of WebGPU functionality is accessed.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDevice"
        }
    ],
    "dom-gpudevicelostinfo-message": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDeviceLostInfo.json",
            "name": "message",
            "slug": "API/GPUDeviceLostInfo/message",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDeviceLostInfo/message",
            "summary": "The message read-only property of the GPUDeviceLostInfo interface provides a human-readable message that explains why the device was lost.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDeviceLostInfo: message property"
        }
    ],
    "dom-gpudevicelostinfo-reason": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDeviceLostInfo.json",
            "name": "reason",
            "slug": "API/GPUDeviceLostInfo/reason",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDeviceLostInfo/reason",
            "summary": "The reason read-only property of the GPUDeviceLostInfo interface defines the reason the device was lost in a machine-readable way.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDeviceLostInfo: reason property"
        }
    ],
    "gpudevicelostinfo": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUDeviceLostInfo.json",
            "name": "GPUDeviceLostInfo",
            "slug": "API/GPUDeviceLostInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUDeviceLostInfo",
            "summary": "The GPUDeviceLostInfo interface of the WebGPU API represents the object returned when the GPUDevice.lost Promise resolves. This provides information as to why a device has been lost.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUDeviceLostInfo"
        }
    ],
    "dom-gpuerror-message": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUError.json",
            "name": "message",
            "slug": "API/GPUError/message",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUError/message",
            "summary": "The message read-only property of the GPUError interface provides a human-readable message that explains why the error occurred.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUError: message property"
        }
    ],
    "gpuerror": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUError.json",
            "name": "GPUError",
            "slug": "API/GPUError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUError",
            "summary": "The GPUError interface of the WebGPU API is the base interface for errors surfaced by GPUDevice.popErrorScope and the uncapturederror event.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUError"
        }
    ],
    "gpuexternaltexture": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUExternalTexture.json",
            "name": "GPUExternalTexture",
            "slug": "API/GPUExternalTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUExternalTexture",
            "summary": "The GPUExternalTexture interface of the WebGPU API represents a wrapper object containing an HTMLVideoElement snapshot that can be used as a texture in GPU rendering operations.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUExternalTexture"
        }
    ],
    "dom-gpuinternalerror-gpuinternalerror": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUInternalError.json",
            "name": "GPUInternalError",
            "slug": "API/GPUInternalError/GPUInternalError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUInternalError/GPUInternalError",
            "summary": "The GPUInternalError() constructor creates a new GPUInternalError object instance.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUInternalError: GPUInternalError() constructor"
        }
    ],
    "gpuinternalerror": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUInternalError.json",
            "name": "GPUInternalError",
            "slug": "API/GPUInternalError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUInternalError",
            "summary": "The GPUInternalError interface of the WebGPU API describes an application error indicating that an operation did not pass the WebGPU API's validation constraints.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUInternalError"
        }
    ],
    "dom-gpuoutofmemoryerror-gpuoutofmemoryerror": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUOutOfMemoryError.json",
            "name": "GPUOutOfMemoryError",
            "slug": "API/GPUOutOfMemoryError/GPUOutOfMemoryError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUOutOfMemoryError/GPUOutOfMemoryError",
            "summary": "The GPUOutOfMemoryError() constructor creates a new GPUOutOfMemoryError object instance.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUOutOfMemoryError: GPUOutOfMemoryError() constructor"
        }
    ],
    "gpuoutofmemoryerror": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUOutOfMemoryError.json",
            "name": "GPUOutOfMemoryError",
            "slug": "API/GPUOutOfMemoryError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUOutOfMemoryError",
            "summary": "The GPUOutOfMemoryError interface of the WebGPU API describes an out-of-memory (oom) error indicating that there was not enough free memory to complete the requested operation.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUOutOfMemoryError"
        }
    ],
    "dom-gpupipelineerror-constructor": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUPipelineError.json",
            "name": "GPUPipelineError",
            "slug": "API/GPUPipelineError/GPUPipelineError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUPipelineError/GPUPipelineError",
            "summary": "The GPUPipelineError() constructor creates a new GPUPipelineError object instance.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUPipelineError: GPUPipelineError() constructor"
        }
    ],
    "dom-gpupipelineerror-reason": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUPipelineError.json",
            "name": "reason",
            "slug": "API/GPUPipelineError/reason",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUPipelineError/reason",
            "summary": "The reason read-only property of the GPUPipelineError interface defines the reason the pipeline creation failed in a machine-readable way.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUPipelineError: reason property"
        }
    ],
    "gpupipelineerror": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUPipelineError.json",
            "name": "GPUPipelineError",
            "slug": "API/GPUPipelineError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUPipelineError",
            "summary": "The GPUPipelineError interface of the WebGPU API describes a pipeline failure. This is the value received when a Promise returned by a GPUDevice.createComputePipelineAsync() or GPUDevice.createRenderPipelineAsync() call rejects.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUPipelineError"
        }
    ],
    "gpupipelinelayout": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUPipelineLayout.json",
            "name": "GPUPipelineLayout",
            "slug": "API/GPUPipelineLayout",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUPipelineLayout",
            "summary": "The GPUPipelineLayout interface of the WebGPU API defines the GPUBindGroupLayouts used by a pipeline. GPUBindGroups used with the pipeline during command encoding must have compatible GPUBindGroupLayouts.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUPipelineLayout"
        }
    ],
    "dom-gpuqueryset-count": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQuerySet.json",
            "name": "count",
            "slug": "API/GPUQuerySet/count",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQuerySet/count",
            "summary": "The count read-only property of the GPUQuerySet interface is a number specifying the number of queries managed by the GPUQuerySet.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQuerySet: count property"
        }
    ],
    "dom-gpuqueryset-destroy": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQuerySet.json",
            "name": "destroy",
            "slug": "API/GPUQuerySet/destroy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQuerySet/destroy",
            "summary": "The destroy() method of the GPUQuerySet interface destroys the GPUQuerySet.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQuerySet: destroy() method"
        }
    ],
    "dom-gpuqueryset-type": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQuerySet.json",
            "name": "type",
            "slug": "API/GPUQuerySet/type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQuerySet/type",
            "summary": "The type read-only property of the GPUQuerySet interface is an enumerated value specifying the type of queries managed by the GPUQuerySet.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQuerySet: type property"
        }
    ],
    "gpuqueryset": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQuerySet.json",
            "name": "GPUQuerySet",
            "slug": "API/GPUQuerySet",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQuerySet",
            "summary": "The GPUQuerySet interface of the WebGPU API is used to record the results of queries on passes, such as occlusion or timestamp queries.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQuerySet"
        }
    ],
    "dom-gpuqueue-copyexternalimagetotexture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQueue.json",
            "name": "copyExternalImageToTexture",
            "slug": "API/GPUQueue/copyExternalImageToTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQueue/copyExternalImageToTexture",
            "summary": "The copyExternalImageToTexture() method of the GPUQueue interface copies a snapshot taken from a source image, video, or canvas into a given GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQueue: copyExternalImageToTexture() method"
        }
    ],
    "dom-gpuqueue-onsubmittedworkdone": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUQueue.json",
            "name": "onSubmittedWorkDone",
            "slug": "API/GPUQueue/onSubmittedWorkDone",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQueue/onSubmittedWorkDone",
            "summary": "The onSubmittedWorkDone() method of the GPUQueue interface returns a Promise that resolves when all the work submitted to the GPU via this GPUQueue at the point the method is called has been processed.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQueue: onSubmittedWorkDone() method"
        }
    ],
    "dom-gpuqueue-submit": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQueue.json",
            "name": "submit",
            "slug": "API/GPUQueue/submit",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQueue/submit",
            "summary": "The submit() method of the GPUQueue interface schedules the execution of command buffers represented by one or more GPUCommandBuffer objects by the GPU.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQueue: submit() method"
        }
    ],
    "dom-gpuqueue-writebuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQueue.json",
            "name": "writeBuffer",
            "slug": "API/GPUQueue/writeBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQueue/writeBuffer",
            "summary": "The writeBuffer() method of the GPUQueue interface writes a provided data source into a given GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQueue: writeBuffer() method"
        }
    ],
    "dom-gpuqueue-writetexture": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQueue.json",
            "name": "writeTexture",
            "slug": "API/GPUQueue/writeTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQueue/writeTexture",
            "summary": "The writeTexture() method of the GPUQueue interface writes a provided data source into a given GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQueue: writeTexture() method"
        }
    ],
    "gpu-queue": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUQueue.json",
            "name": "GPUQueue",
            "slug": "API/GPUQueue",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUQueue",
            "summary": "The GPUQueue interface of the WebGPU API controls execution of encoded commands on the GPU.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUQueue"
        }
    ],
    "gpurenderbundle": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPURenderBundle.json",
            "name": "GPURenderBundle",
            "slug": "API/GPURenderBundle",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundle",
            "summary": "The GPURenderBundle interface of the WebGPU API represents a container for pre-recorded bundles of commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundle"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "GPURenderBundleEncoder",
            "slug": "API/GPURenderBundleEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder",
            "summary": "The GPURenderBundleEncoder interface of the WebGPU API is used to pre-record bundles of commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder"
        }
    ],
    "dom-gpurendercommandsmixin-draw": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "draw",
            "slug": "API/GPURenderBundleEncoder/draw",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/draw",
            "summary": "The draw() method of the GPURenderBundleEncoder interface draws primitives based on the vertex buffers provided by setVertexBuffer().",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: draw() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "draw",
            "slug": "API/GPURenderPassEncoder/draw",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/draw",
            "summary": "The draw() method of the GPURenderPassEncoder interface draws primitives based on the vertex buffers provided by setVertexBuffer().",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: draw() method"
        }
    ],
    "dom-gpurendercommandsmixin-drawindexed": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "drawIndexed",
            "slug": "API/GPURenderBundleEncoder/drawIndexed",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/drawIndexed",
            "summary": "The drawIndexed() method of the GPURenderBundleEncoder interface draws indexed primitives based on the vertex and index buffers provided by setVertexBuffer() and setIndexBuffer().",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: drawIndexed() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "drawIndexed",
            "slug": "API/GPURenderPassEncoder/drawIndexed",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/drawIndexed",
            "summary": "The drawIndexed() method of the GPURenderPassEncoder interface draws indexed primitives based on the vertex and index buffers provided by setVertexBuffer() and setIndexBuffer().",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: drawIndexed() method"
        }
    ],
    "dom-gpurendercommandsmixin-drawindexedindirect": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "drawIndexedIndirect",
            "slug": "API/GPURenderBundleEncoder/drawIndexedIndirect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/drawIndexedIndirect",
            "summary": "The drawIndexedIndirect() method of the GPURenderBundleEncoder interface draws indexed primitives using parameters read from a GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.webgpu.indirect-dispatch.enabled",
                            "value_to_set": "true"
                        }
                    ],
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: drawIndexedIndirect() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "drawIndexedIndirect",
            "slug": "API/GPURenderPassEncoder/drawIndexedIndirect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/drawIndexedIndirect",
            "summary": "The drawIndexedIndirect() method of the GPURenderPassEncoder interface draws indexed primitives using parameters read from a GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.webgpu.indirect-dispatch.enabled",
                            "value_to_set": "true"
                        }
                    ],
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: drawIndexedIndirect() method"
        }
    ],
    "dom-gpurendercommandsmixin-drawindirect": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "drawIndirect",
            "slug": "API/GPURenderBundleEncoder/drawIndirect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/drawIndirect",
            "summary": "The drawIndirect() method of the GPURenderBundleEncoder interface draws primitives using parameters read from a GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.webgpu.indirect-dispatch.enabled",
                            "value_to_set": "true"
                        }
                    ],
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: drawIndirect() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "drawIndirect",
            "slug": "API/GPURenderPassEncoder/drawIndirect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/drawIndirect",
            "summary": "The drawIndirect() method of the GPURenderPassEncoder interface draws primitives using parameters read from a GPUBuffer.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "flags": [
                        {
                            "type": "preference",
                            "name": "dom.webgpu.indirect-dispatch.enabled",
                            "value_to_set": "true"
                        }
                    ],
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: drawIndirect() method"
        }
    ],
    "dom-gpurenderbundleencoder-finish": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "finish",
            "slug": "API/GPURenderBundleEncoder/finish",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/finish",
            "summary": "The finish() method of the GPURenderBundleEncoder interface completes recording of the current render bundle command sequence, returning a GPURenderBundle object that can be passed into a GPURenderPassEncoder.executeBundles() call to execute those commands in a specific render pass.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: finish() method"
        }
    ],
    "dom-gpurendercommandsmixin-setindexbuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "setIndexBuffer",
            "slug": "API/GPURenderBundleEncoder/setIndexBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/setIndexBuffer",
            "summary": "The setIndexBuffer() method of the GPURenderBundleEncoder interface sets the current GPUBuffer that will provide index data for subsequent drawing commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: setIndexBuffer() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setIndexBuffer",
            "slug": "API/GPURenderPassEncoder/setIndexBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setIndexBuffer",
            "summary": "The setIndexBuffer() method of the GPURenderPassEncoder interface sets the current GPUBuffer that will provide index data for subsequent drawing commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setIndexBuffer() method"
        }
    ],
    "dom-gpurendercommandsmixin-setpipeline": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "setPipeline",
            "slug": "API/GPURenderBundleEncoder/setPipeline",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/setPipeline",
            "summary": "The setPipeline() method of the GPURenderBundleEncoder interface sets the GPURenderPipeline to use for subsequent render bundle commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: setPipeline() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setPipeline",
            "slug": "API/GPURenderPassEncoder/setPipeline",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setPipeline",
            "summary": "The setPipeline() method of the GPURenderPassEncoder interface sets the GPURenderPipeline to use for subsequent render pass commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setPipeline() method"
        }
    ],
    "dom-gpurendercommandsmixin-setvertexbuffer": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderBundleEncoder.json",
            "name": "setVertexBuffer",
            "slug": "API/GPURenderBundleEncoder/setVertexBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderBundleEncoder/setVertexBuffer",
            "summary": "The setVertexBuffer() method of the GPURenderBundleEncoder interface sets or unsets the current GPUBuffer for the given slot that will provide vertex data for subsequent drawing commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderBundleEncoder: setVertexBuffer() method"
        },
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setVertexBuffer",
            "slug": "API/GPURenderPassEncoder/setVertexBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setVertexBuffer",
            "summary": "The setVertexBuffer() method of the GPURenderPassEncoder interface sets or unsets the current GPUBuffer for the given slot that will provide vertex data for subsequent drawing commands.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setVertexBuffer() method"
        }
    ],
    "dom-gpurenderpassencoder-beginocclusionquery": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "beginOcclusionQuery",
            "slug": "API/GPURenderPassEncoder/beginOcclusionQuery",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/beginOcclusionQuery",
            "summary": "The beginOcclusionQuery() method of the GPURenderPassEncoder interface begins an occlusion query at the specified index of the relevant GPUQuerySet (provided as the value of the occlusionQuerySet descriptor property when invoking GPUCommandEncoder.beginRenderPass() to run the render pass).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: beginOcclusionQuery() method"
        }
    ],
    "dom-gpurenderpassencoder-end": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "end",
            "slug": "API/GPURenderPassEncoder/end",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/end",
            "summary": "The end() method of the GPURenderPassEncoder interface completes recording of the current render pass command sequence.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: end() method"
        }
    ],
    "dom-gpurenderpassencoder-endocclusionquery": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "endOcclusionQuery",
            "slug": "API/GPURenderPassEncoder/endOcclusionQuery",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/endOcclusionQuery",
            "summary": "The endOcclusionQuery() method of the GPURenderPassEncoder interface ends an active occlusion query previously started with beginOcclusionQuery().",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: endOcclusionQuery() method"
        }
    ],
    "dom-gpurenderpassencoder-executebundles": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "executeBundles",
            "slug": "API/GPURenderPassEncoder/executeBundles",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/executeBundles",
            "summary": "The executeBundles() method of the GPURenderPassEncoder interface executes commands previously recorded into the referenced GPURenderBundles, as part of this render pass.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: executeBundles() method"
        }
    ],
    "dom-gpurenderpassencoder-setblendconstant": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setBlendConstant",
            "slug": "API/GPURenderPassEncoder/setBlendConstant",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setBlendConstant",
            "summary": "The setBlendConstant() method of the GPURenderPassEncoder interface sets the constant blend color and alpha values used with \"constant\" and \"one-minus-constant\" blend factors (as set in the descriptor of the GPUDevice.createRenderPipeline() method, in the blend property).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setBlendConstant() method"
        }
    ],
    "dom-gpurenderpassencoder-setscissorrect": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setScissorRect",
            "slug": "API/GPURenderPassEncoder/setScissorRect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setScissorRect",
            "summary": "The setScissorRect() method of the GPURenderPassEncoder interface sets the scissor rectangle used during the rasterization stage. After transformation into viewport coordinates any fragments that fall outside the scissor rectangle will be discarded.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setScissorRect() method"
        }
    ],
    "dom-gpurenderpassencoder-setstencilreference": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setStencilReference",
            "slug": "API/GPURenderPassEncoder/setStencilReference",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setStencilReference",
            "summary": "The setStencilReference() method of the GPURenderPassEncoder interface sets the stencil reference value using during stencil tests with the \"replace\" stencil operation (as set in the descriptor of the GPUDevice.createRenderPipeline() method, in the properties defining the various stencil operations).",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setStencilReference() method"
        }
    ],
    "dom-gpurenderpassencoder-setviewport": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "setViewport",
            "slug": "API/GPURenderPassEncoder/setViewport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder/setViewport",
            "summary": "The setViewport() method of the GPURenderPassEncoder interface sets the viewport used during the rasterization stage to linearly map from normalized device coordinates to viewport coordinates.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder: setViewport() method"
        }
    ],
    "gpurenderpassencoder": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPassEncoder.json",
            "name": "GPURenderPassEncoder",
            "slug": "API/GPURenderPassEncoder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPassEncoder",
            "summary": "The GPURenderPassEncoder interface of the WebGPU API encodes commands related to controlling the vertex and fragment shader stages, as issued by a GPURenderPipeline. It forms part of the overall encoding activity of a GPUCommandEncoder.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPassEncoder"
        }
    ],
    "gpurenderpipeline": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPURenderPipeline.json",
            "name": "GPURenderPipeline",
            "slug": "API/GPURenderPipeline",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPURenderPipeline",
            "summary": "The GPURenderPipeline interface of the WebGPU API represents a pipeline that controls the vertex and fragment shader stages and can be used in a GPURenderPassEncoder or GPURenderBundleEncoder.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPURenderPipeline"
        }
    ],
    "gpusampler": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUSampler.json",
            "name": "GPUSampler",
            "slug": "API/GPUSampler",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUSampler",
            "summary": "The GPUSampler interface of the WebGPU API represents an object that can control how shaders transform and filter texture resource data.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUSampler"
        }
    ],
    "dom-gpushadermodule-getcompilationinfo": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUShaderModule.json",
            "name": "getCompilationInfo",
            "slug": "API/GPUShaderModule/getCompilationInfo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUShaderModule/getCompilationInfo",
            "summary": "The getCompilationInfo() method of the GPUShaderModule interface returns a Promise that fulfills with a GPUCompilationInfo object containing messages generated during the GPUShaderModule's compilation.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUShaderModule: getCompilationInfo() method"
        }
    ],
    "gpushadermodule": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUShaderModule.json",
            "name": "GPUShaderModule",
            "slug": "API/GPUShaderModule",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUShaderModule",
            "summary": "The GPUShaderModule interface of the WebGPU API represents an internal shader module object, a container for WGSL shader code that can be submitted to the GPU for execution by a pipeline.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUShaderModule"
        }
    ],
    "gpu-supportedfeatures": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUSupportedFeatures.json",
            "name": "GPUSupportedFeatures",
            "slug": "API/GPUSupportedFeatures",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUSupportedFeatures",
            "summary": "The GPUSupportedFeatures interface of the WebGPU API is a Set-like object that describes additional functionality supported by a GPUAdapter.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUSupportedFeatures"
        }
    ],
    "gpusupportedlimits": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUSupportedLimits.json",
            "name": "GPUSupportedLimits",
            "slug": "API/GPUSupportedLimits",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUSupportedLimits",
            "summary": "The GPUSupportedLimits interface of the WebGPU API describes the limits supported by a GPUAdapter.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUSupportedLimits"
        }
    ],
    "dom-gputexture-createview": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "createView",
            "slug": "API/GPUTexture/createView",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/createView",
            "summary": "The createView() method of the GPUTexture interface creates a GPUTextureView representing a specific view of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: createView() method"
        }
    ],
    "dom-gputexture-depthorarraylayers": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "depthOrArrayLayers",
            "slug": "API/GPUTexture/depthOrArrayLayers",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/depthOrArrayLayers",
            "summary": "The depthOrArrayLayers read-only property of the GPUTexture interface represents the depth or layer count of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: depthOrArrayLayers property"
        }
    ],
    "dom-gputexture-destroy": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "destroy",
            "slug": "API/GPUTexture/destroy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/destroy",
            "summary": "The destroy() method of the GPUTexture interface destroys the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: destroy() method"
        }
    ],
    "dom-gputexture-dimension": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "dimension",
            "slug": "API/GPUTexture/dimension",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/dimension",
            "summary": "The dimension read-only property of the GPUTexture interface represents the dimension of the set of texels for each GPUTexture subresource.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: dimension property"
        }
    ],
    "dom-gputexture-format": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "format",
            "slug": "API/GPUTexture/format",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/format",
            "summary": "The format read-only property of the GPUTexture interface represents the format of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: format property"
        }
    ],
    "dom-gputexture-height": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "height",
            "slug": "API/GPUTexture/height",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/height",
            "summary": "The height read-only property of the GPUTexture interface represents the height of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: height property"
        }
    ],
    "dom-gputexture-miplevelcount": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "mipLevelCount",
            "slug": "API/GPUTexture/mipLevelCount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/mipLevelCount",
            "summary": "The mipLevelCount read-only property of the GPUTexture interface represents the number of mip levels of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: mipLevelCount property"
        }
    ],
    "dom-gputexture-samplecount": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "sampleCount",
            "slug": "API/GPUTexture/sampleCount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/sampleCount",
            "summary": "The sampleCount read-only property of the GPUTexture interface represents the sample count of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: sampleCount property"
        }
    ],
    "dom-gputexture-usage": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "usage",
            "slug": "API/GPUTexture/usage",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/usage",
            "summary": "The usage read-only property of the GPUTexture interface is the bitwise flags representing the allowed usages of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: usage property"
        }
    ],
    "dom-gputexture-width": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "width",
            "slug": "API/GPUTexture/width",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture/width",
            "summary": "The width read-only property of the GPUTexture interface represents the width of the GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture: width property"
        }
    ],
    "texture-interface": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTexture.json",
            "name": "GPUTexture",
            "slug": "API/GPUTexture",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTexture",
            "summary": "The GPUTexture interface of the WebGPU API represents a container used to store 1D, 2D, or 3D arrays of data, such as images, to use in GPU rendering operations.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTexture"
        }
    ],
    "gputextureview": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUTextureView.json",
            "name": "GPUTextureView",
            "slug": "API/GPUTextureView",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUTextureView",
            "summary": "The GPUTextureView interface of the WebGPU API represents a view into a subset of the texture resources defined by a particular GPUTexture.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUTextureView"
        }
    ],
    "dom-gpuuncapturederrorevent-gpuuncapturederrorevent": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUUncapturedErrorEvent.json",
            "name": "GPUUncapturedErrorEvent",
            "slug": "API/GPUUncapturedErrorEvent/GPUUncapturedErrorEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUUncapturedErrorEvent/GPUUncapturedErrorEvent",
            "summary": "The GPUUncapturedErrorEvent() constructor creates a new GPUUncapturedErrorEvent object instance.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUUncapturedErrorEvent: GPUUncapturedErrorEvent() constructor"
        }
    ],
    "dom-gpuuncapturederroreventinit-error": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/GPUUncapturedErrorEvent.json",
            "name": "error",
            "slug": "API/GPUUncapturedErrorEvent/error",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUUncapturedErrorEvent/error",
            "summary": "The error read-only property of the GPUUncapturedErrorEvent interface is a GPUError object instance providing access to the details of the error.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUUncapturedErrorEvent: error property"
        }
    ],
    "gpuuncapturederrorevent": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUUncapturedErrorEvent.json",
            "name": "GPUUncapturedErrorEvent",
            "slug": "API/GPUUncapturedErrorEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUUncapturedErrorEvent",
            "summary": "The GPUUncapturedErrorEvent interface of the WebGPU API is the event object type for the GPUDevice uncapturederror event, used for telemetry and to report unexpected errors.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUUncapturedErrorEvent"
        }
    ],
    "dom-gpuvalidationerror-gpuvalidationerror": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUValidationError.json",
            "name": "GPUValidationError",
            "slug": "API/GPUValidationError/GPUValidationError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUValidationError/GPUValidationError",
            "summary": "The GPUValidationError() constructor creates a new GPUValidationError object instance.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUValidationError: GPUValidationError() constructor"
        }
    ],
    "gpuvalidationerror": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/GPUValidationError.json",
            "name": "GPUValidationError",
            "slug": "API/GPUValidationError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/GPUValidationError",
            "summary": "The GPUValidationError interface of the WebGPU API describes an application error indicating that an operation did not pass the WebGPU API's validation constraints.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "GPUValidationError"
        }
    ],
    "navigator-gpu": [
        {
            "engines": [
                "blink"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/Navigator.json",
            "name": "gpu",
            "slug": "API/Navigator/gpu",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Navigator/gpu",
            "summary": "The Navigator.gpu read-only property returns the GPU object for the current browsing context, which is the entry point for the WebGPU API.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": "preview",
                    "partial_implementation": true,
                    "notes": "Currently supported on Linux and Windows only."
                },
                "firefox_android": {
                    "version_added": false
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "Navigator: gpu property"
        },
        {
            "engines": [
                "blink"
            ],
            "filename": "api/WorkerNavigator.json",
            "name": "gpu",
            "slug": "API/WorkerNavigator/gpu",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WorkerNavigator/gpu",
            "summary": "The gpu read-only property of the WorkerNavigator interface returns the GPU object for the current worker context, which is the entry point for the WebGPU API.",
            "support": {
                "chrome": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "113",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "WorkerNavigator: gpu property"
        }
    ],
    "gpuwgsllanguagefeatures": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/WGSLLanguageFeatures.json",
            "name": "WGSLLanguageFeatures",
            "slug": "API/WGSLLanguageFeatures",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/WGSLLanguageFeatures",
            "summary": "The WGSLLanguageFeatures interface of the WebGPU API is a setlike object that reports the WGSL language extensions supported by the WebGPU implementation.",
            "support": {
                "chrome": {
                    "version_added": "115",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                },
                "chrome_android": {
                    "version_added": false
                },
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "115",
                    "notes": "Currently supported on ChromeOS, macOS, and Windows only."
                }
            },
            "title": "WGSLLanguageFeatures"
        }
    ]
}
