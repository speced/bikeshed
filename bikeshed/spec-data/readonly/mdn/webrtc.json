{
    "dom-rtccertificate-expires": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCCertificate.json",
            "name": "expires",
            "slug": "API/RTCCertificate/expires",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCCertificate/expires",
            "summary": "The read-only expires property of the RTCCertificate interface returns the expiration date of the certificate.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCCertificate: expires property"
        }
    ],
    "dom-rtccertificate-getfingerprints": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCCertificate.json",
            "name": "getFingerprints",
            "slug": "API/RTCCertificate/getFingerprints",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCCertificate/getFingerprints",
            "summary": "The getFingerprints() method of the RTCCertificate interface is used to get an array of certificate fingerprints.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCCertificate: getFingerprints() method"
        }
    ],
    "dom-rtccertificate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCCertificate.json",
            "name": "RTCCertificate",
            "slug": "API/RTCCertificate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCCertificate",
            "summary": "The RTCCertificate interface of the WebRTC API provides an object representing a certificate that an RTCPeerConnection uses to authenticate.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "42"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCCertificate"
        }
    ],
    "dom-RTCDTMFSender-insertDTMF": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "insertDTMF",
            "slug": "API/RTCDTMFSender/insertDTMF",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/insertDTMF",
            "summary": "The insertDTMF() method on the RTCDTMFSender interface starts sending DTMF tones to the remote peer over the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender: insertDTMF() method"
        }
    ],
    "dom-RTCDTMFSender-tonebuffer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "toneBuffer",
            "slug": "API/RTCDTMFSender/toneBuffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/toneBuffer",
            "summary": "The RTCDTMFSender interface's toneBuffer property returns a string containing a list of the DTMF tones currently queued for sending to the remote peer over the RTCPeerConnection. To place tones into the buffer, call insertDTMF().",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender: toneBuffer property"
        }
    ],
    "event-RTCDTMFSender-tonechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "tonechange_event",
            "slug": "API/RTCDTMFSender/tonechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender/tonechange_event",
            "summary": "The tonechange event is sent to an RTCDTMFSender by the WebRTC API to indicate when DTMF tones previously queued for sending (by calling RTCDTMFSender.insertDTMF()) begin and end.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender: tonechange event"
        }
    ],
    "rtcdtmfsender": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDTMFSender.json",
            "name": "RTCDTMFSender",
            "slug": "API/RTCDTMFSender",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFSender",
            "summary": "The RTCDTMFSender interface provides a mechanism for transmitting DTMF codes on a WebRTC RTCPeerConnection. You gain access to the connection's RTCDTMFSender through the RTCRtpSender.dtmf property on the audio track you wish to send DTMF with.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFSender"
        }
    ],
    "dom-rtcdtmftonechangeevent-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDTMFToneChangeEvent.json",
            "name": "RTCDTMFToneChangeEvent",
            "slug": "API/RTCDTMFToneChangeEvent/RTCDTMFToneChangeEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent/RTCDTMFToneChangeEvent",
            "summary": "The RTCDTMFToneChangeEvent() constructor creates a new RTCDTMFToneChangeEvent object.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFToneChangeEvent: RTCDTMFToneChangeEvent() constructor"
        }
    ],
    "dom-rtcdtmftonechangeevent-tone": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDTMFToneChangeEvent.json",
            "name": "tone",
            "slug": "API/RTCDTMFToneChangeEvent/tone",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent/tone",
            "summary": "The read-only property RTCDTMFToneChangeEvent.tone returns the DTMF character which has just begun to play, or an empty string (\"\"). if all queued tones have finished playing (that is, RTCDTMFSender.toneBuffer is empty).",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFToneChangeEvent: tone property"
        }
    ],
    "dom-rtcdtmftonechangeevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDTMFToneChangeEvent.json",
            "name": "RTCDTMFToneChangeEvent",
            "slug": "API/RTCDTMFToneChangeEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDTMFToneChangeEvent",
            "summary": "The RTCDTMFToneChangeEvent interface represents events sent to indicate that DTMF tones have started or finished playing. This interface is used by the tonechange event.",
            "support": {
                "chrome": {
                    "version_added": "27"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDTMFToneChangeEvent"
        }
    ],
    "dom-datachannel-binarytype": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "binaryType",
            "slug": "API/RTCDataChannel/binaryType",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/binaryType",
            "summary": "The property binaryType on the RTCDataChannel interface is a string which specifies the type of object which should be used to represent binary data received on the RTCDataChannel. Values allowed by the WebSocket.binaryType property are also permitted here: blob if Blob objects are being used or arraybuffer if ArrayBuffer objects are being used. The default is blob.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: binaryType property"
        }
    ],
    "dom-datachannel-bufferedamount": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "bufferedAmount",
            "slug": "API/RTCDataChannel/bufferedAmount",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/bufferedAmount",
            "summary": "The read-only RTCDataChannel property bufferedAmount returns the number of bytes of data currently queued to be sent over the data channel. The queue may build up as a result of calls to the send() method. This only includes data buffered by the user agent itself; it doesn't include any framing overhead or buffering done by the operating system or network hardware.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: bufferedAmount property"
        }
    ],
    "event-datachannel-bufferedamountlow": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "bufferedamountlow_event",
            "slug": "API/RTCDataChannel/bufferedamountlow_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event",
            "summary": "A bufferedamountlow event is sent to an RTCDataChannel when the number of bytes currently in the outbound data transfer buffer falls below the threshold specified in bufferedAmountLowThreshold. bufferedamountlow events aren't sent if bufferedAmountLowThreshold is 0.",
            "support": {
                "chrome": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                }
            },
            "title": "RTCDataChannel: bufferedamountlow event"
        }
    ],
    "dom-rtcdatachannel-onbufferedamountlow": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "bufferedamountlow_event",
            "slug": "API/RTCDataChannel/bufferedamountlow_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/bufferedamountlow_event",
            "summary": "A bufferedamountlow event is sent to an RTCDataChannel when the number of bytes currently in the outbound data transfer buffer falls below the threshold specified in bufferedAmountLowThreshold. bufferedamountlow events aren't sent if bufferedAmountLowThreshold is 0.",
            "support": {
                "chrome": {
                    "version_added": "57",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79",
                    "notes": "The default for <code>rtcpMuxPolicy</code> is <code>require</code>."
                }
            },
            "title": "RTCDataChannel: bufferedamountlow event"
        }
    ],
    "dom-rtcdatachannel-bufferedamountlowthreshold": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "bufferedAmountLowThreshold",
            "slug": "API/RTCDataChannel/bufferedAmountLowThreshold",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/bufferedAmountLowThreshold",
            "summary": "The RTCDataChannel property bufferedAmountLowThreshold is used to specify the number of bytes of buffered outgoing data that is considered \"low.\" The default value is 0. When the number of buffered outgoing bytes, as indicated by the bufferedAmount property, falls to or below this value, a bufferedamountlow event is fired. This event may be used, for example, to implement code which queues more messages to be sent whenever there's room to buffer them. Listeners may be added with onbufferedamountlow or addEventListener().",
            "support": {
                "chrome": {
                    "version_added": "46"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "44"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: bufferedAmountLowThreshold property"
        }
    ],
    "dom-rtcdatachannel-close": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "close",
            "slug": "API/RTCDataChannel/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/close",
            "summary": "The RTCDataChannel.close() method closes the RTCDataChannel. Either peer is permitted to call this method to initiate closure of the channel.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: close() method"
        }
    ],
    "event-datachannel-close": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "close_event",
            "slug": "API/RTCDataChannel/close_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/close_event",
            "summary": "The close event is sent to the onclose event handler on an RTCDataChannel instance when the data transport for the data channel has closed. Before any further data can be transferred using RTCDataChannel, a new 'RTCDataChannel' instance must be created.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: close event"
        }
    ],
    "dom-rtcdatachannel-onclose": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "close_event",
            "slug": "API/RTCDataChannel/close_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/close_event",
            "summary": "The close event is sent to the onclose event handler on an RTCDataChannel instance when the data transport for the data channel has closed. Before any further data can be transferred using RTCDataChannel, a new 'RTCDataChannel' instance must be created.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: close event"
        }
    ],
    "event-datachannel-closing": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "closing_event",
            "slug": "API/RTCDataChannel/closing_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/closing_event",
            "summary": "The closing event is sent to an RTCDataChannel just before the channel begins the process of shutting down its underlying data transport.",
            "support": {
                "chrome": {
                    "version_added": "81"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "81"
                }
            },
            "title": "RTCDataChannel: closing event"
        }
    ],
    "dom-rtcdatachannel-onclosing": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "closing_event",
            "slug": "API/RTCDataChannel/closing_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/closing_event",
            "summary": "The closing event is sent to an RTCDataChannel just before the channel begins the process of shutting down its underlying data transport.",
            "support": {
                "chrome": {
                    "version_added": "81"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "81"
                }
            },
            "title": "RTCDataChannel: closing event"
        }
    ],
    "event-datachannel-error": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "error_event",
            "slug": "API/RTCDataChannel/error_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/error_event",
            "summary": "A WebRTC error event is sent to an RTCDataChannel object's onerror event handler when an error occurs on the data channel.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: error event"
        }
    ],
    "dom-rtcdatachannel-onerror": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "error_event",
            "slug": "API/RTCDataChannel/error_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/error_event",
            "summary": "A WebRTC error event is sent to an RTCDataChannel object's onerror event handler when an error occurs on the data channel.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: error event"
        }
    ],
    "dom-rtcdatachannel-id": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "id",
            "slug": "API/RTCDataChannel/id",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/id",
            "summary": "The read-only RTCDataChannel property id returns an ID number (between 0 and 65,534) which uniquely identifies the RTCDataChannel. This ID is set at the time the data channel is created, either by the user agent (if RTCDataChannel.negotiated is false) or by the site or app script (if negotiated is true).",
            "support": {
                "chrome": {
                    "version_added": "30"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: id property"
        }
    ],
    "dom-datachannel-label": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "label",
            "slug": "API/RTCDataChannel/label",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/label",
            "summary": "The read-only RTCDataChannel property label returns a string containing a name describing the data channel. These labels are not required to be unique.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: label property"
        }
    ],
    "dom-datachannel-maxpacketlifetime": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "maxPacketLifeTime",
            "slug": "API/RTCDataChannel/maxPacketLifeTime",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/maxPacketLifeTime",
            "summary": "The read-only RTCDataChannel property maxPacketLifeTime returns the amount of time, in milliseconds, the browser is allowed to take to attempt to transmit a message, as set when the data channel was created, or null. This limits how long the browser can continue to attempt to transmit and retransmit the message before giving up.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "62"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: maxPacketLifeTime property"
        }
    ],
    "dom-datachannel-maxretransmits": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "maxRetransmits",
            "slug": "API/RTCDataChannel/maxRetransmits",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/maxRetransmits",
            "summary": "The read-only RTCDataChannel property maxRetransmits returns the maximum number of times the browser should try to retransmit a message before giving up, as set when the data channel was created, or null, which indicates that there is no maximum. This can only be set when the RTCDataChannel is created by calling RTCPeerConnection.createDataChannel(), using the maxRetransmits field in the specified options.",
            "support": {
                "chrome": {
                    "version_added": "30"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "62"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: maxRetransmits property"
        }
    ],
    "event-datachannel-message": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "message_event",
            "slug": "API/RTCDataChannel/message_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/message_event",
            "summary": "The WebRTC message event is sent to the onmessage event handler on an RTCDataChannel object when a message has been received from the remote peer.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: message event"
        }
    ],
    "dom-rtcdatachannel-onmessage": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "message_event",
            "slug": "API/RTCDataChannel/message_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/message_event",
            "summary": "The WebRTC message event is sent to the onmessage event handler on an RTCDataChannel object when a message has been received from the remote peer.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: message event"
        }
    ],
    "dom-datachannel-negotiated": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "negotiated",
            "slug": "API/RTCDataChannel/negotiated",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/negotiated",
            "summary": "The read-only RTCDataChannel property negotiated indicates whether the RTCDataChannel's connection was negotiated by the Web app (true) or by the WebRTC layer (false). The default is false.",
            "support": {
                "chrome": {
                    "version_added": "30"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "68"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: negotiated property"
        }
    ],
    "event-datachannel-open": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "open_event",
            "slug": "API/RTCDataChannel/open_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/open_event",
            "summary": "The WebRTC open event is sent to an RTCDataChannel object's onopen event handler when the underlying transport used to send and receive the data channel's messages is opened or reopened.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: open event"
        }
    ],
    "dom-rtcdatachannel-onopen": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "open_event",
            "slug": "API/RTCDataChannel/open_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/open_event",
            "summary": "The WebRTC open event is sent to an RTCDataChannel object's onopen event handler when the underlying transport used to send and receive the data channel's messages is opened or reopened.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: open event"
        }
    ],
    "dom-datachannel-ordered": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "ordered",
            "slug": "API/RTCDataChannel/ordered",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/ordered",
            "summary": "The read-only RTCDataChannel property ordered indicates whether or not the data channel guarantees in-order delivery of messages; the default is true, which indicates that the data channel is indeed ordered. This is set when the RTCDataChannel is created, by setting the ordered property on the object passed as RTCPeerConnection.createDataChannel()'s options parameter.",
            "support": {
                "chrome": {
                    "version_added": "30"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: ordered property"
        }
    ],
    "dom-datachannel-protocol": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "protocol",
            "slug": "API/RTCDataChannel/protocol",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/protocol",
            "summary": "The read-only RTCDataChannel property protocol returns a string containing the name of the subprotocol in use. If no protocol was specified when the data channel was created, then this property's value is the empty string (\"\").",
            "support": {
                "chrome": {
                    "version_added": "30"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: protocol property"
        }
    ],
    "dom-datachannel-readystate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "readyState",
            "slug": "API/RTCDataChannel/readyState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/readyState",
            "summary": "The read-only RTCDataChannel property readyState returns a string which indicates the state of the data channel's underlying data connection.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: readyState property"
        }
    ],
    "dom-rtcdatachannel-send": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "send",
            "slug": "API/RTCDataChannel/send",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel/send",
            "summary": "The send() method of the RTCDataChannel interface sends data across the data channel to the remote peer. This can be done any time except during the initial process of creating the underlying transport channel. Data sent before connecting is buffered if possible (or an error occurs if it's not possible), and is also buffered if sent while the connection is closing or closed.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel: send() method"
        }
    ],
    "rtcdatachannel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannel.json",
            "name": "RTCDataChannel",
            "slug": "API/RTCDataChannel",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannel",
            "summary": "The RTCDataChannel interface represents a network channel which can be used for bidirectional peer-to-peer transfers of arbitrary data. Every data channel is associated with an RTCPeerConnection, and each peer connection can have up to a theoretical maximum of 65,534 data channels (the actual limit may vary from browser to browser).",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannel"
        }
    ],
    "dom-rtcdatachannelevent-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannelEvent.json",
            "name": "RTCDataChannelEvent",
            "slug": "API/RTCDataChannelEvent/RTCDataChannelEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannelEvent/RTCDataChannelEvent",
            "summary": "The RTCDataChannelEvent() constructor creates a new RTCDataChannelEvent object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannelEvent: RTCDataChannelEvent() constructor"
        }
    ],
    "dom-datachannelevent-channel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannelEvent.json",
            "name": "channel",
            "slug": "API/RTCDataChannelEvent/channel",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannelEvent/channel",
            "summary": "The read-only property RTCDataChannelEvent.channel returns the RTCDataChannel associated with the event.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "15"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannelEvent: channel property"
        }
    ],
    "rtcdatachannelevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDataChannelEvent.json",
            "name": "RTCDataChannelEvent",
            "slug": "API/RTCDataChannelEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDataChannelEvent",
            "summary": "The RTCDataChannelEvent interface represents an event related to a specific RTCDataChannel.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "15"
                },
                "opera_android": {
                    "version_added": "14"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDataChannelEvent"
        }
    ],
    "dom-rtcdtlstransport-icetransport": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCDtlsTransport.json",
            "name": "iceTransport",
            "slug": "API/RTCDtlsTransport/iceTransport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport/iceTransport",
            "summary": "The read-only RTCDtlsTransport property iceTransport contains a reference to the underlying RTCIceTransport.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": {
                    "version_added": "50"
                },
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDtlsTransport: iceTransport property"
        }
    ],
    "dom-rtcdtlstransport-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDtlsTransport.json",
            "name": "state",
            "slug": "API/RTCDtlsTransport/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport/state",
            "summary": "The state read-only property of the RTCDtlsTransport interface provides information which describes a Datagram Transport Layer Security (DTLS) transport state.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "82"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": {
                    "version_added": "50"
                },
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDtlsTransport: state property"
        }
    ],
    "dom-rtcdtlstransport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCDtlsTransport.json",
            "name": "RTCDtlsTransport",
            "slug": "API/RTCDtlsTransport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCDtlsTransport",
            "summary": "The RTCDtlsTransport interface provides access to information about the Datagram Transport Layer Security (DTLS) transport over which a RTCPeerConnection's RTP and RTCP packets are sent and received by its RTCRtpSender and RTCRtpReceiver objects.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "82"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": {
                    "version_added": "50"
                },
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCDtlsTransport"
        }
    ],
    "dom-rtcerror-errordetail": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCError.json",
            "name": "errorDetail",
            "slug": "API/RTCError/errorDetail",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCError/errorDetail",
            "summary": "The RTCError interface's read-only errorDetail property is a string indicating the WebRTC-specific error code that occurred.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCError: errorDetail property"
        }
    ],
    "dom-rtcerror-receivedalert": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCError.json",
            "name": "receivedAlert",
            "slug": "API/RTCError/receivedAlert",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCError/receivedAlert",
            "summary": "The RTCError read-only property receivedAlert specifies the fatal DTLS error which resulted in an alert being received from the remote peer.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCError: receivedAlert property"
        }
    ],
    "dom-rtcerror-sctpcausecode": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCError.json",
            "name": "sctpCauseCode",
            "slug": "API/RTCError/sctpCauseCode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCError/sctpCauseCode",
            "summary": "The read-only sctpCauseCode property in an RTCError object provides the SCTP cause code explaining why the SCTP negotiation failed, if the RTCError represents an SCTP error.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCError: sctpCauseCode property"
        }
    ],
    "dom-rtcerror-sdplinenumber": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCError.json",
            "name": "sdpLineNumber",
            "slug": "API/RTCError/sdpLineNumber",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCError/sdpLineNumber",
            "summary": "The RTCError interface's read-only property sdpLineNumber specifies the line number within the SDP at which a syntax error occurred while parsing it.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCError: sdpLineNumber property"
        }
    ],
    "dom-rtcerror-sentalert": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCError.json",
            "name": "sentAlert",
            "slug": "API/RTCError/sentAlert",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCError/sentAlert",
            "summary": "The read-only sentAlert property in an RTCError object specifies the DTLS alert number occurred while sending data to the remote peer, if the error represents an outbound DTLS error.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCError: sentAlert property"
        }
    ],
    "dom-rtcerror": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCError.json",
            "name": "RTCError",
            "slug": "API/RTCError",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCError",
            "summary": "The RTCError interface describes an error which has occurred while handling WebRTC operations. It's based upon the standard DOMException interface that describes general DOM errors.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCError"
        }
    ],
    "dom-rtcerrorevent-error": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCErrorEvent.json",
            "name": "error",
            "slug": "API/RTCErrorEvent/error",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCErrorEvent/error",
            "summary": "The read-only RTCErrorEvent property error contains an RTCError object describing the details of the error which the event is announcing.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCErrorEvent: error property"
        }
    ],
    "dom-rtcerrorevent": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCErrorEvent.json",
            "name": "RTCErrorEvent",
            "slug": "API/RTCErrorEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCErrorEvent",
            "summary": "The WebRTC API's RTCErrorEvent interface represents an error sent to a WebRTC object. It's based on the standard Event interface, but adds RTC-specific information describing the error, as shown below.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "60"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCErrorEvent"
        }
    ],
    "dom-rtcicecandidate-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "RTCIceCandidate",
            "slug": "API/RTCIceCandidate/RTCIceCandidate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/RTCIceCandidate",
            "summary": "The RTCIceCandidate() constructor creates and returns a new RTCIceCandidate object, which can be configured to represent a single ICE candidate.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": [
                    {
                        "version_added": "44",
                        "notes": "Before Firefox 68, the constructor's <code>candidateInfo</code> parameter is required and the <code>candidateInfo</code> object must have a <code>candidate</code> property."
                    },
                    {
                        "prefix": "moz",
                        "version_added": "22",
                        "notes": "Before Firefox 68, the constructor's <code>candidateInfo</code> parameter is required and the <code>candidateInfo</code> object must have a <code>candidate</code> property."
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "44",
                        "notes": "Before Firefox 68, the constructor's <code>candidateInfo</code> parameter is required and the <code>candidateInfo</code> object must have a <code>candidate</code> property."
                    },
                    {
                        "prefix": "moz",
                        "version_added": "24",
                        "notes": "Before Firefox 68, the constructor's <code>candidateInfo</code> parameter is required and the <code>candidateInfo</code> object must have a <code>candidate</code> property."
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: RTCIceCandidate() constructor"
        }
    ],
    "dom-rtcicecandidate-address": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "address",
            "slug": "API/RTCIceCandidate/address",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/address",
            "summary": "The RTCIceCandidate interface's read-only address property is a string providing the IP address of the device which is the source of the candidate. The address is null by default if not otherwise specified.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: address property"
        }
    ],
    "dom-rtcicecandidate-candidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "candidate",
            "slug": "API/RTCIceCandidate/candidate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/candidate",
            "summary": "The read-only property candidate on the RTCIceCandidate interface returns a string describing the candidate in detail. Most of the other properties of RTCIceCandidate are actually extracted from this string.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: candidate property"
        }
    ],
    "dom-rtcicecandidate-component": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "component",
            "slug": "API/RTCIceCandidate/component",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/component",
            "summary": "The read-only component property on the RTCIceCandidate interface is a string which indicates whether the candidate is an RTP or an RTCP candidate.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: component property"
        }
    ],
    "dom-rtcicecandidate-foundation": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "foundation",
            "slug": "API/RTCIceCandidate/foundation",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/foundation",
            "summary": "The RTCIceCandidate interface's read-only foundation property is a string which uniquely identifies the candidate across multiple transports.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: foundation property"
        }
    ],
    "dom-rtcicecandidate-port": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "port",
            "slug": "API/RTCIceCandidate/port",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/port",
            "summary": "The RTCIceCandidate interface's read-only port property contains the port number on the device at the address given by RTCIceCandidate.address at which the candidate's peer can be reached.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: port property"
        }
    ],
    "dom-rtcicecandidate-priority": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "priority",
            "slug": "API/RTCIceCandidate/priority",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/priority",
            "summary": "The RTCIceCandidate interface's read-only priority property specifies the candidate's priority according to the remote peer; the higher this value is, the better the remote peer considers the candidate to be.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: priority property"
        }
    ],
    "dom-rtcicecandidate-protocol": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "protocol",
            "slug": "API/RTCIceCandidate/protocol",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/protocol",
            "summary": "The RTCIceCandidate interface's read-only protocol property is a string which indicates whether the candidate uses UDP or TCP as its transport protocol.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: protocol property"
        }
    ],
    "dom-rtcicecandidate-relatedaddress": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "relatedAddress",
            "slug": "API/RTCIceCandidate/relatedAddress",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/relatedAddress",
            "summary": "The RTCIceCandidate interface's read-only relatedAddress property is a string indicating the related address of a relay or reflexive candidate.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: relatedAddress property"
        }
    ],
    "dom-rtcicecandidate-relatedport": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "relatedPort",
            "slug": "API/RTCIceCandidate/relatedPort",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/relatedPort",
            "summary": "The RTCIceCandidate interface's read-only relatedPort property indicates the port number of reflexive or relay candidates.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: relatedPort property"
        }
    ],
    "dom-rtcicecandidate-sdpmid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "sdpMid",
            "slug": "API/RTCIceCandidate/sdpMid",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/sdpMid",
            "summary": "The read-only property sdpMid on the RTCIceCandidate interface returns a string specifying the media stream identification tag of the media component with which the candidate is associated. This ID uniquely identifies a given stream for the component with which the candidate is associated.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: sdpMid property"
        }
    ],
    "dom-rtcicecandidate-sdpmlineindex": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "sdpMLineIndex",
            "slug": "API/RTCIceCandidate/sdpMLineIndex",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/sdpMLineIndex",
            "summary": "The read-only sdpMLineIndex property on the RTCIceCandidate interface is a zero-based index of the m-line describing the media associated with the candidate.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: sdpMLineIndex property"
        }
    ],
    "dom-rtcicecandidate-tcptype": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "tcpType",
            "slug": "API/RTCIceCandidate/tcpType",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/tcpType",
            "summary": "The RTCIceCandidate interface's read-only tcpType property is included on TCP candidates to provide additional details about the candidate type.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: tcpType property"
        }
    ],
    "dom-rtcicecandidate-tojson": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "toJSON",
            "slug": "API/RTCIceCandidate/toJSON",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/toJSON",
            "summary": "The RTCIceCandidate method toJSON() converts the RTCIceCandidate on which it's called into JSON.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: toJSON() method"
        }
    ],
    "dom-rtcicecandidate-type": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "type",
            "slug": "API/RTCIceCandidate/type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/type",
            "summary": "The RTCIceCandidate interface's read-only type specifies the type of candidate the object represents.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: type property"
        }
    ],
    "dom-rtcicecandidate-usernamefragment": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "usernameFragment",
            "slug": "API/RTCIceCandidate/usernameFragment",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate/usernameFragment",
            "summary": "The read-only usernameFragment property on the RTCIceCandidate interface is a string indicating the username fragment (\"ufrag\") that uniquely identifies a single ICE interaction session.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "67"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate: usernameFragment property"
        }
    ],
    "rtcicecandidate-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceCandidate.json",
            "name": "RTCIceCandidate",
            "slug": "API/RTCIceCandidate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceCandidate",
            "summary": "The RTCIceCandidate interface—part of the WebRTC API—represents a candidate Interactive Connectivity Establishment (ICE) configuration which may be used to establish an RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "22"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "24"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceCandidate"
        }
    ],
    "dom-rtciceserver-credential": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "credential",
            "slug": "API/RTCIceServer/credential",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/credential",
            "summary": "The RTCIceServer dictionary's credential property is a string providing the credential to use when connecting to the described server. This is typically a password, key, or other secret.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceServer: credential property"
        }
    ],
    "dom-rtciceserver-urls": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "urls",
            "slug": "API/RTCIceServer/urls",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/urls",
            "summary": "The RTCIceServer dictionary's urls property specifies the URL or URLs of the servers to be used for ICE negotiations. These are typically STUN and/or TURN servers.",
            "support": {
                "chrome": {
                    "version_added": "34"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "37"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceServers: urls property"
        }
    ],
    "dom-rtciceserver-username": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "username",
            "slug": "API/RTCIceServer/username",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer/username",
            "summary": "The RTCIceServer dictionary's username property is a string which specifies the username to use when authenticating with the ICE server being described.",
            "support": {
                "chrome": {
                    "version_added": "29"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "23"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceServer: username property"
        }
    ],
    "rtciceserver-dictionary": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCIceServer.json",
            "name": "RTCIceServer",
            "slug": "API/RTCIceServer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceServer",
            "summary": "The RTCIceServer dictionary defines how to connect to a single ICE server (such as a STUN or TURN server). Objects of this type are provided in the configuration of an RTCPeerConnection, in the iceServers array.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceServer"
        }
    ],
    "dom-icetransport-gatheringstate": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "gatheringState",
            "slug": "API/RTCIceTransport/gatheringState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/gatheringState",
            "summary": "The read-only property gatheringState property of the RTCIceTransport interface returns a string that indicates the current gathering state of the ICE agent: \"new\", \"gathering\", or \"complete\".",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: gatheringState property"
        }
    ],
    "event-icetransport-gatheringstatechange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "gatheringstatechange_event",
            "slug": "API/RTCIceTransport/gatheringstatechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event",
            "summary": "A gatheringstatechange event is sent to an RTCIceTransport when its ICE candidate gathering state changes.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: gatheringstatechange event"
        }
    ],
    "dom-rtcicetransport-ongatheringstatechange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "gatheringstatechange_event",
            "slug": "API/RTCIceTransport/gatheringstatechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/gatheringstatechange_event",
            "summary": "A gatheringstatechange event is sent to an RTCIceTransport when its ICE candidate gathering state changes.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: gatheringstatechange event"
        }
    ],
    "dom-rtcicetransport-getlocalcandidates": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "getLocalCandidates",
            "slug": "API/RTCIceTransport/getLocalCandidates",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/getLocalCandidates",
            "summary": "The RTCIceTransport method getLocalCandidates() returns an array of RTCIceCandidate objects, one for each of the candidates that have been gathered by the local device during the current ICE agent session.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: getLocalCandidates() method"
        }
    ],
    "dom-rtcicetransport-getlocalparameters": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "getLocalParameters",
            "slug": "API/RTCIceTransport/getLocalParameters",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/getLocalParameters",
            "summary": "The RTCIceTransport method getLocalParameters() returns an RTCIceParameters object which provides information uniquely identifying the local peer for the duration of the ICE session.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: getLocalParameters() method"
        }
    ],
    "dom-rtcicetransport-getremotecandidates": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "getRemoteCandidates",
            "slug": "API/RTCIceTransport/getRemoteCandidates",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/getRemoteCandidates",
            "summary": "The RTCIceTransport method getRemoteCandidates() returns an array which contains one RTCIceCandidate for each of the candidates that have been received from the remote peer so far during the current ICE gathering session.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: getRemoteCandidates() method"
        }
    ],
    "dom-rtcicetransport-getremoteparameters": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "getRemoteParameters",
            "slug": "API/RTCIceTransport/getRemoteParameters",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/getRemoteParameters",
            "summary": "The RTCIceTransport method getRemoteParameters() returns an RTCIceParameters object which provides information uniquely identifying the remote peer for the duration of the ICE session.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: getRemoteParameters() method"
        }
    ],
    "dom-rtcicetransport-getselectedcandidatepair": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "getSelectedCandidatePair",
            "slug": "API/RTCIceTransport/getSelectedCandidatePair",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/getSelectedCandidatePair",
            "summary": "The RTCIceTransport method getSelectedCandidatePair() returns an RTCIceCandidatePair object containing the current best-choice pair of ICE candidates describing the configuration of the endpoints of the transport.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: getSelectedCandidatePair() method"
        }
    ],
    "dom-icetransport-role": [
        {
            "engines": [
                "blink"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "role",
            "slug": "API/RTCIceTransport/role",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/role",
            "summary": "The read-only RTCIceTransport property role indicates which ICE role the transport is fulfilling: that of the controlling agent, or the agent that is being controlled.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: role property"
        }
    ],
    "event-icetransport-selectedcandidatepairchange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "selectedcandidatepairchange_event",
            "slug": "API/RTCIceTransport/selectedcandidatepairchange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event",
            "summary": "A selectedcandidatepairchange event is sent to an RTCIceTransport when the ICE agent selects a new pair of candidates that describe the endpoints of a viable connection.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: selectedcandidatepairchange event"
        }
    ],
    "dom-rtcicetransport-onselectedcandidatepairchange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "selectedcandidatepairchange_event",
            "slug": "API/RTCIceTransport/selectedcandidatepairchange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/selectedcandidatepairchange_event",
            "summary": "A selectedcandidatepairchange event is sent to an RTCIceTransport when the ICE agent selects a new pair of candidates that describe the endpoints of a viable connection.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "16.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: selectedcandidatepairchange event"
        }
    ],
    "dom-icetransport-state": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "state",
            "slug": "API/RTCIceTransport/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/state",
            "summary": "The read-only RTCIceTransport property state returns the current state of the ICE transport, so you can determine the state of ICE gathering in which the ICE agent currently is operating.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: state property"
        }
    ],
    "event-icetransport-statechange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "statechange_event",
            "slug": "API/RTCIceTransport/statechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/statechange_event",
            "summary": "A statechange event occurs when the RTCIceTransport changes state. The state can be used to determine how far through the process of examining, verifying, and selecting a valid candidate pair is prior to successfully connecting the two peers for WebRTC communications.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: statechange event"
        }
    ],
    "dom-rtcicetransport-onstatechange": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "statechange_event",
            "slug": "API/RTCIceTransport/statechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport/statechange_event",
            "summary": "A statechange event occurs when the RTCIceTransport changes state. The state can be used to determine how far through the process of examining, verifying, and selecting a valid candidate pair is prior to successfully connecting the two peers for WebRTC communications.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport: statechange event"
        }
    ],
    "dom-rtcicetransport": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCIceTransport.json",
            "name": "RTCIceTransport",
            "slug": "API/RTCIceTransport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCIceTransport",
            "summary": "The RTCIceTransport interface provides access to information about the ICE transport layer over which the data is being sent and received. This is particularly useful if you need to access state information about the connection.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCIceTransport"
        }
    ],
    "dom-peerconnection": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "RTCPeerConnection",
            "slug": "API/RTCPeerConnection/RTCPeerConnection",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/RTCPeerConnection",
            "summary": "The RTCPeerConnection() constructor returns a newly-created RTCPeerConnection, which represents a connection between the local device and a remote peer.",
            "support": {
                "chrome": [
                    {
                        "version_added": "56",
                        "notes": "Before Chrome 63, the default value for the <code>configuration.rtcpMuxPolicy</code> parameter is <code>&quot;negotiate&quot;</code> instead of <code>&quot;required&quot;</code>."
                    },
                    {
                        "prefix": "webkit",
                        "version_added": "23"
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "22"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "24"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": [
                    {
                        "version_added": "43",
                        "notes": "Before Opera Android 46, the default value for the <code>configuration.rtcpMuxPolicy</code> parameter is <code>&quot;negotiate&quot;</code> instead of <code>&quot;required&quot;</code>."
                    },
                    {
                        "prefix": "webkit",
                        "version_added": "14"
                    }
                ],
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79",
                        "notes": "Before Chrome 63, the default value for the <code>configuration.rtcpMuxPolicy</code> parameter is <code>&quot;negotiate&quot;</code> instead of <code>&quot;required&quot;</code>."
                    },
                    {
                        "prefix": "webkit",
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection: RTCPeerConnection() constructor"
        }
    ],
    "dom-peerconnection-addicecandidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "addIceCandidate",
            "slug": "API/RTCPeerConnection/addIceCandidate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addIceCandidate",
            "summary": "When a website or app using RTCPeerConnection receives a new ICE candidate from the remote peer over its signaling channel, it delivers the newly-received candidate to the browser's ICE agent by calling RTCPeerConnection.addIceCandidate(). This adds this new remote candidate to the RTCPeerConnection's remote description, which describes the state of the remote end of the connection.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Starting in Firefox 68, the <code>candidate</code> parameter is optional when calling <code>addIceCandidate()</code>. A <code>null</code> value for <code>candidate</code> indicates no more candidates will be sent, while an empty <code>candidate</code> string indicates that no more candidates will be sent for the current generation of candidates."
                },
                "firefox_android": {
                    "version_added": "24",
                    "notes": "Starting in Firefox 68, the <code>candidate</code> parameter is optional when calling <code>addIceCandidate()</code>. A <code>null</code> value for <code>candidate</code> indicates no more candidates will be sent, while an empty <code>candidate</code> string indicates that no more candidates will be sent for the current generation of candidates."
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: addIceCandidate() method"
        }
    ],
    "dom-rtcpeerconnection-addtrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "addTrack",
            "slug": "API/RTCPeerConnection/addTrack",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addTrack",
            "summary": "The RTCPeerConnection method addTrack() adds a new media track to the set of tracks which will be transmitted to the other peer.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: addTrack() method"
        }
    ],
    "dom-rtcpeerconnection-addtransceiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "addTransceiver",
            "slug": "API/RTCPeerConnection/addTransceiver",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/addTransceiver",
            "summary": "The RTCPeerConnection method addTransceiver() creates a new RTCRtpTransceiver and adds it to the set of transceivers associated with the RTCPeerConnection. Each transceiver represents a bidirectional stream, with both an RTCRtpSender and an RTCRtpReceiver associated with it.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: addTransceiver() method"
        }
    ],
    "dom-rtcpeerconnection-cantrickleicecandidates": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "canTrickleIceCandidates",
            "slug": "API/RTCPeerConnection/canTrickleIceCandidates",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/canTrickleIceCandidates",
            "summary": "The read-only RTCPeerConnection property canTrickleIceCandidates returns a boolean value which indicates whether or not the remote peer can accept trickled ICE candidates.",
            "support": {
                "chrome": {
                    "version_added": "83"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "47"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "83"
                }
            },
            "title": "RTCPeerConnection: canTrickleIceCandidates property"
        }
    ],
    "dom-rtcpeerconnection-close": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "close",
            "slug": "API/RTCPeerConnection/close",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/close",
            "summary": "The RTCPeerConnection.close() method closes the current peer connection.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: close() method"
        }
    ],
    "dom-peerconnection-connection-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "connectionState",
            "slug": "API/RTCPeerConnection/connectionState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/connectionState",
            "summary": "The read-only connectionState property of the RTCPeerConnection interface indicates the current state of the peer connection by returning one of the following string values: new, connecting, connected, disconnected, failed, or closed.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: connectionState property"
        }
    ],
    "dom-rtcpeerconnection-onconnectionstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "connectionstatechange_event",
            "slug": "API/RTCPeerConnection/connectionstatechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/connectionstatechange_event",
            "summary": "The connectionstatechange event is sent to the onconnectionstatechange event handler on an RTCPeerConnection object after a new track has been added to an RTCRtpReceiver which is part of the connection. The new connection state can be found in connectionState, and is one of the string values: new, connecting, connected, disconnected, failed, or closed.",
            "support": {
                "chrome": {
                    "version_added": "72"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: connectionstatechange event"
        }
    ],
    "dom-rtcpeerconnection-createanswer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "createAnswer",
            "slug": "API/RTCPeerConnection/createAnswer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createAnswer",
            "summary": "The createAnswer() method on the RTCPeerConnection interface creates an SDP answer to an offer received from a remote peer during the offer/answer negotiation of a WebRTC connection. The answer contains information about any media already attached to the session, codecs and options supported by the browser, and any ICE candidates already gathered. The answer is delivered to the returned Promise, and should then be sent to the source of the offer to continue the negotiation process.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: createAnswer() method"
        }
    ],
    "dom-peerconnection-createdatachannel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "createDataChannel",
            "slug": "API/RTCPeerConnection/createDataChannel",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createDataChannel",
            "summary": "The createDataChannel() method on the RTCPeerConnection interface creates a new channel linked with the remote peer, over which any kind of data may be transmitted. This can be useful for back-channel content, such as images, file transfer, text chat, game update packets, and so forth.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: createDataChannel() method"
        }
    ],
    "dom-rtcpeerconnection-createoffer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "createOffer",
            "slug": "API/RTCPeerConnection/createOffer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/createOffer",
            "summary": "The createOffer() method of the RTCPeerConnection interface initiates the creation of an SDP offer for the purpose of starting a new WebRTC connection to a remote peer. The SDP offer includes information about any MediaStreamTrack objects already attached to the WebRTC session, codec, and options supported by the browser, and any candidates already gathered by the ICE agent, for the purpose of being sent over the signaling channel to a potential peer to request a connection or to update the configuration of an existing connection.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: createOffer() method"
        }
    ],
    "dom-peerconnection-currentlocaldesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "currentLocalDescription",
            "slug": "API/RTCPeerConnection/currentLocalDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/currentLocalDescription",
            "summary": "The read-only property RTCPeerConnection.currentLocalDescription returns an RTCSessionDescription object describing the local end of the connection as it was most recently successfully negotiated since the last time the RTCPeerConnection finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: currentLocalDescription property"
        }
    ],
    "dom-peerconnection-currentremotedesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "currentRemoteDescription",
            "slug": "API/RTCPeerConnection/currentRemoteDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/currentRemoteDescription",
            "summary": "The read-only property RTCPeerConnection.currentRemoteDescription returns an RTCSessionDescription object describing the remote end of the connection as it was most recently successfully negotiated since the last time the RTCPeerConnection finished negotiating and connecting to a remote peer. Also included is a list of any ICE candidates that may already have been generated by the ICE agent since the offer or answer represented by the description was first instantiated.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "57"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: currentRemoteDescription property"
        }
    ],
    "dom-rtcpeerconnection-ondatachannel": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "datachannel_event",
            "slug": "API/RTCPeerConnection/datachannel_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/datachannel_event",
            "summary": "A datachannel event is sent to an RTCPeerConnection instance when an RTCDataChannel has been added to the connection, as a result of the remote peer calling RTCPeerConnection.createDataChannel().",
            "support": {
                "chrome": {
                    "version_added": "25"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: datachannel event"
        }
    ],
    "dom-rtcpeerconnection-generatecertificate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "generateCertificate_static",
            "slug": "API/RTCPeerConnection/generateCertificate_static",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/generateCertificate_static",
            "summary": "The static RTCPeerConnection.generateCertificate() function creates an X.509 certificate and corresponding private key, returning a promise that resolves with the new RTCCertificate once it's generated.",
            "support": {
                "chrome": {
                    "version_added": "48"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: generateCertificate() static method"
        }
    ],
    "dom-rtcpeerconnection-getconfiguration": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getConfiguration",
            "slug": "API/RTCPeerConnection/getConfiguration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getConfiguration",
            "summary": "The RTCPeerConnection.getConfiguration() method returns an object which indicates the current configuration of the RTCPeerConnection on which the method is called.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: getConfiguration() method"
        }
    ],
    "dom-peerconnection-getreceivers": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getReceivers",
            "slug": "API/RTCPeerConnection/getReceivers",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getReceivers",
            "summary": "The RTCPeerConnection.getReceivers() method returns an array of RTCRtpReceiver objects, each of which represents one RTP receiver. Each RTP receiver manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: getReceivers() method"
        }
    ],
    "dom-peerconnection-getsenders": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getSenders",
            "slug": "API/RTCPeerConnection/getSenders",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getSenders",
            "summary": "The RTCPeerConnection method getSenders() returns an array of RTCRtpSender objects, each of which represents the RTP sender responsible for transmitting one track's data. A sender object provides methods and properties for examining and controlling the encoding and transmission of the track's data.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: getSenders() method"
        }
    ],
    "widl-RTCPeerConnection-getStats-Promise-RTCStatsReport--MediaStreamTrack-selector": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getStats",
            "slug": "API/RTCPeerConnection/getStats",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getStats",
            "summary": "The RTCPeerConnection method getStats() returns a promise which resolves with data providing statistics about either the overall connection or about the specified MediaStreamTrack.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: getStats() method"
        }
    ],
    "dom-peerconnection-gettranseceivers": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "getTransceivers",
            "slug": "API/RTCPeerConnection/getTransceivers",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/getTransceivers",
            "summary": "The RTCPeerConnection interface's getTransceivers() method returns a list of the RTCRtpTransceiver objects being used to send and receive data on the connection.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "79"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: getTransceivers() method"
        }
    ],
    "dom-rtcpeerconnection-onicecandidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "icecandidate_event",
            "slug": "API/RTCPeerConnection/icecandidate_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidate_event",
            "summary": "An icecandidate event is sent to an RTCPeerConnection when an RTCIceCandidate has been identified and added to the local peer by a call to RTCPeerConnection.setLocalDescription(). The event handler should transmit the candidate to the remote peer over the signaling channel so the remote peer can add it to its set of remote candidates.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: icecandidate event"
        }
    ],
    "dom-rtcpeerconnection-onicecandidateerror": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "icecandidateerror_event",
            "slug": "API/RTCPeerConnection/icecandidateerror_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icecandidateerror_event",
            "summary": "The WebRTC API event icecandidateerror is sent to an RTCPeerConnection if an error occurs while performing ICE negotiations through a STUN or TURN server. The event object is of type RTCPeerConnectionIceErrorEvent, and contains information describing the error in some amount of detail.",
            "support": {
                "chrome": {
                    "version_added": "77"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1561441'>bug 1561441</a>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: icecandidateerror event"
        }
    ],
    "dom-peerconnection-ice-connection-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "iceConnectionState",
            "slug": "API/RTCPeerConnection/iceConnectionState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceConnectionState",
            "summary": "The read-only property RTCPeerConnection.iceConnectionState returns a string which state of the ICE agent associated with the RTCPeerConnection: new, checking, connected, completed, failed, disconnected, and closed.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: iceConnectionState property"
        }
    ],
    "dom-rtcpeerconnection-oniceconnectionstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "iceconnectionstatechange_event",
            "slug": "API/RTCPeerConnection/iceconnectionstatechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceconnectionstatechange_event",
            "summary": "An iceconnectionstatechange event is sent to an RTCPeerConnection object each time the ICE connection state changes during the negotiation process. The new ICE connection state is available in the object's iceConnectionState property.",
            "support": {
                "chrome": {
                    "version_added": "28"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: iceconnectionstatechange event"
        }
    ],
    "dom-peerconnection-ice-gathering-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "iceGatheringState",
            "slug": "API/RTCPeerConnection/iceGatheringState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/iceGatheringState",
            "summary": "The read-only property RTCPeerConnection.iceGatheringState returns a string that describes the connection's ICE gathering state. This lets you detect, for example, when collection of ICE candidates has finished.",
            "support": {
                "chrome": {
                    "version_added": "25"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: iceGatheringState property"
        }
    ],
    "dom-rtcpeerconnection-onicegatheringstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "icegatheringstatechange_event",
            "slug": "API/RTCPeerConnection/icegatheringstatechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/icegatheringstatechange_event",
            "summary": "The icegatheringstatechange event is sent to the onicegatheringstatechange event handler on an RTCPeerConnection when the state of the ICE candidate gathering process changes. This signifies that the value of the connection's iceGatheringState property has changed.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: icegatheringstatechange event"
        }
    ],
    "dom-peerconnection-localdescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "localDescription",
            "slug": "API/RTCPeerConnection/localDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/localDescription",
            "summary": "The read-only property RTCPeerConnection.localDescription returns an RTCSessionDescription describing the session for the local end of the connection. If it has not yet been set, this is null.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: localDescription property"
        }
    ],
    "dom-rtcpeerconnection-onnegotiationneeded": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "negotiationneeded_event",
            "slug": "API/RTCPeerConnection/negotiationneeded_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/negotiationneeded_event",
            "summary": "A negotiationneeded event is sent to the RTCPeerConnection when negotiation of the connection through the signaling channel is required. This occurs both during the initial setup of the connection as well as any time a change to the communication environment requires reconfiguring the connection.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": [
                    {
                        "version_added": "38"
                    },
                    {
                        "version_added": "24",
                        "version_removed": "38",
                        "partial_implementation": true,
                        "notes": "Although the <code>onnegotiationneeded</code> property is supported, the <code>negotiationneeded</code> event is never fired."
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: negotiationneeded event"
        }
    ],
    "dom-peerconnection-pendinglocaldesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "pendingLocalDescription",
            "slug": "API/RTCPeerConnection/pendingLocalDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/pendingLocalDescription",
            "summary": "The read-only property RTCPeerConnection.pendingLocalDescription returns an RTCSessionDescription object describing a pending configuration change for the local end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use RTCPeerConnection.currentLocalDescription or RTCPeerConnection.localDescription to get the current state of the endpoint. For details on the difference, see Pending and current descriptions in the WebRTC Connectivity page.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: pendingLocalDescription property"
        }
    ],
    "dom-peerconnection-pendingremotedesc": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "pendingRemoteDescription",
            "slug": "API/RTCPeerConnection/pendingRemoteDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/pendingRemoteDescription",
            "summary": "The read-only property RTCPeerConnection.pendingRemoteDescription returns an RTCSessionDescription object describing a pending configuration change for the remote end of the connection. This does not describe the connection as it currently stands, but as it may exist in the near future. Use RTCPeerConnection.currentRemoteDescription or RTCPeerConnection.remoteDescription to get the current session description for the remote endpoint. For details on the difference, see Pending and current descriptions in the WebRTC Connectivity page.",
            "support": {
                "chrome": {
                    "version_added": "70"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: pendingRemoteDescription property"
        }
    ],
    "dom-peerconnection-remotedescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "remoteDescription",
            "slug": "API/RTCPeerConnection/remoteDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/remoteDescription",
            "summary": "The read-only property RTCPeerConnection.remoteDescription returns a RTCSessionDescription describing the session (which includes configuration and media information) for the remote end of the connection. If this hasn't been set yet, this is null.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: remoteDescription property"
        }
    ],
    "dom-rtcpeerconnection-removetrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "removeTrack",
            "slug": "API/RTCPeerConnection/removeTrack",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/removeTrack",
            "summary": "The RTCPeerConnection.removeTrack() method tells the local end of the connection to stop sending media from the specified track, without actually removing the corresponding RTCRtpSender from the list of senders as reported by RTCPeerConnection.getSenders(). If the track is already stopped, or is not in the connection's senders list, this method has no effect.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: removeTrack() method"
        }
    ],
    "dom-rtcpeerconnection-restartice": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "restartIce",
            "slug": "API/RTCPeerConnection/restartIce",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/restartIce",
            "summary": "The WebRTC API's RTCPeerConnection interface offers the restartIce() method to allow a web application to easily request that ICE candidate gathering be redone on both ends of the connection. This simplifies the process by allowing the same method to be used by either the caller or the receiver to trigger an ICE restart.",
            "support": {
                "chrome": {
                    "version_added": "77"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "70"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: restartIce() method"
        }
    ],
    "dom-rtcpeerconnection-sctp": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "sctp",
            "slug": "API/RTCPeerConnection/sctp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/sctp",
            "summary": "The read-only sctp property on the RTCPeerConnection interface returns an RTCSctpTransport describing the SCTP transport over which SCTP data is being sent and received. If SCTP hasn't been negotiated, this value is null.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: sctp property"
        }
    ],
    "dom-rtcpeerconnection-setconfiguration": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "setConfiguration",
            "slug": "API/RTCPeerConnection/setConfiguration",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setConfiguration",
            "summary": "The RTCPeerConnection.setConfiguration() method sets the current configuration of the RTCPeerConnection based on the values included in the specified object. This lets you change the ICE servers used by the connection and which transport policies to use.",
            "support": {
                "chrome": {
                    "version_added": "48"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "99"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: setConfiguration() method"
        }
    ],
    "dom-peerconnection-setlocaldescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "setLocalDescription",
            "slug": "API/RTCPeerConnection/setLocalDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setLocalDescription",
            "summary": "The RTCPeerConnection method setLocalDescription() changes the local description associated with the connection. This description specifies the properties of the local end of the connection, including the media format. The method takes a single parameter—the session description—and it returns a Promise which is fulfilled once the description has been changed, asynchronously.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22",
                    "notes": "Firefox does not support descriptions of type <code>pranswer</code>."
                },
                "firefox_android": {
                    "version_added": "24",
                    "notes": "Firefox does not support descriptions of type <code>pranswer</code>."
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: setLocalDescription() method"
        }
    ],
    "dom-peerconnection-setremotedescription": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "setRemoteDescription",
            "slug": "API/RTCPeerConnection/setRemoteDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/setRemoteDescription",
            "summary": "The RTCPeerConnection method setRemoteDescription() sets the specified session description as the remote peer's current offer or answer. The description specifies the properties of the remote end of the connection, including the media format. The method takes a single parameter—the session description—and it returns a Promise which is fulfilled once the description has been changed, asynchronously.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: setRemoteDescription() method"
        }
    ],
    "dom-peerconnection-signaling-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "signalingState",
            "slug": "API/RTCPeerConnection/signalingState",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/signalingState",
            "summary": "The read-only signalingState property on the RTCPeerConnection interface returns a string value describing the state of the signaling process on the local end of the connection while connecting or reconnecting to another peer. See Signaling in our WebRTC session lifetime page.",
            "support": {
                "chrome": {
                    "version_added": "26"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: signalingState property"
        }
    ],
    "event-signalingstatechange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "signalingstatechange_event",
            "slug": "API/RTCPeerConnection/signalingstatechange_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/signalingstatechange_event",
            "summary": "A signalingstatechange event is sent to an RTCPeerConnection to notify it that its signaling state, as indicated by the signalingState property, has changed.",
            "support": {
                "chrome": {
                    "version_added": "28"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": [
                    {
                        "version_added": "36"
                    },
                    {
                        "version_added": "24",
                        "version_removed": "36",
                        "partial_implementation": true,
                        "notes": "Although the <code>onsignalingstatechange</code> property is supported, the <code>signalingstatechange</code> event is not fired as an <code>Event</code> object. See <a href='https://bugzil.la/1075133'>bug 1075133</a>."
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": {
                    "version_added": false
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: signalingstatechange event"
        }
    ],
    "event-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "track_event",
            "slug": "API/RTCPeerConnection/track_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection/track_event",
            "summary": "The track event is sent to the ontrack event handler on RTCPeerConnections after a new track has been added to an RTCRtpReceiver which is part of the connection.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnection: track event"
        }
    ],
    "interface-definition": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnection.json",
            "name": "RTCPeerConnection",
            "slug": "API/RTCPeerConnection",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnection",
            "summary": "The RTCPeerConnection interface represents a WebRTC connection between the local computer and a remote peer. It provides methods to connect to a remote peer, maintain and monitor the connection, and close the connection once it's no longer needed.",
            "support": {
                "chrome": [
                    {
                        "version_added": "56"
                    },
                    {
                        "prefix": "webkit",
                        "version_added": "23"
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "22"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "24"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "prefix": "webkit",
                        "version_added": "79"
                    }
                ]
            },
            "title": "RTCPeerConnection"
        }
    ],
    "dom-rtcpeerconnectioniceerrorevent-address": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCPeerConnectionIceErrorEvent.json",
            "name": "address",
            "slug": "API/RTCPeerConnectionIceErrorEvent/address",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent/address",
            "summary": "The RTCPeerConnectionIceErrorEvent property address is a string which indicates the local IP address being used to communicate with the STUN or TURN server during negotiations. The error which occurred involved this address.",
            "support": {
                "chrome": {
                    "version_added": "81"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "81"
                }
            },
            "title": "RTCPeerConnectionIceErrorEvent: address property"
        }
    ],
    "rtcpeerconnectioniceerrorevent": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCPeerConnectionIceErrorEvent.json",
            "name": "RTCPeerConnectionIceErrorEvent",
            "slug": "API/RTCPeerConnectionIceErrorEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceErrorEvent",
            "summary": "The RTCPeerConnectionIceErrorEvent interface—based upon the Event interface—provides details pertaining to an ICE error announced by sending an icecandidateerror event to the RTCPeerConnection object.",
            "support": {
                "chrome": {
                    "version_added": "77"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnectionIceErrorEvent"
        }
    ],
    "dom-rtcpeerconnectioniceevent-constructor": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnectionIceEvent.json",
            "name": "RTCPeerConnectionIceEvent",
            "slug": "API/RTCPeerConnectionIceEvent/RTCPeerConnectionIceEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent/RTCPeerConnectionIceEvent",
            "summary": "The RTCPeerConnectionIceEvent() constructor creates a new RTCPeerConnectionIceEvent object.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnectionIceEvent: RTCPeerConnectionIceEvent() constructor"
        }
    ],
    "dom-rtcpeerconnectioniceevent-candidate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnectionIceEvent.json",
            "name": "candidate",
            "slug": "API/RTCPeerConnectionIceEvent/candidate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent/candidate",
            "summary": "The read-only candidate property of the RTCPeerConnectionIceEvent interface returns the RTCIceCandidate associated with the event.",
            "support": {
                "chrome": {
                    "version_added": "24"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCPeerConnectionIceEvent: candidate property"
        }
    ],
    "rtcpeerconnectioniceevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCPeerConnectionIceEvent.json",
            "name": "RTCPeerConnectionIceEvent",
            "slug": "API/RTCPeerConnectionIceEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCPeerConnectionIceEvent",
            "summary": "The RTCPeerConnectionIceEvent interface represents events that occur in relation to ICE candidates with the target, usually an RTCPeerConnection.",
            "support": {
                "chrome": [
                    {
                        "version_added": "56"
                    },
                    {
                        "alternative_name": "RTCIceCandidateEvent",
                        "version_added": "24",
                        "version_removed": "56"
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "alternative_name": "RTCIceCandidateEvent",
                        "version_added": false,
                        "version_removed": "56"
                    }
                ]
            },
            "title": "RTCPeerConnectionIceEvent"
        }
    ],
    "dom-rtcrtpcontributingsource-audiolevel": [
        {
            "engines": [
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "audioLevel",
            "slug": "API/RTCRtpContributingSource/audioLevel",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpContributingSource/audioLevel",
            "summary": "The read-only audioLevel property of the RTCRtpContributingSource dictionary contains the audio level contained in the last RTP packet played from the described source.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCRtpContributingSource: audioLevel property"
        }
    ],
    "dom-rtcrtpcontributingsource-source": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "source",
            "slug": "API/RTCRtpContributingSource/source",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpContributingSource/source",
            "summary": "The read-only source property of the RTCRtpContributingSource dictionary contains the source identifier of a particular stream of RTP packets.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpContributingSource: source property"
        }
    ],
    "dom-rtcrtpcontributingsource-timestamp": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "timestamp",
            "slug": "API/RTCRtpContributingSource/timestamp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpContributingSource/timestamp",
            "summary": "The read-only timestamp property of the RTCRtpContributingSource dictionary contains a DOMHighResTimeStamp indicating the most recent time of playout of an RTP packet from the source.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59",
                    "notes": "Starting in version 60, the <code>timestamp</code> is correctly computed based on the window's <code>Performance</code> time, rather than <code>Date.getTime()</code>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpContributingSource: timestamp property"
        }
    ],
    "dom-rtcrtpcontributingsource": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpContributingSource.json",
            "name": "RTCRtpContributingSource",
            "slug": "API/RTCRtpContributingSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpContributingSource",
            "summary": "The RTCRtpContributingSource dictionary of the WebRTC API is used by getContributingSources() to provide information about a given contributing source (CSRC), including the most recent time a packet that the source contributed was played out.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": false
                },
                "opera_android": {
                    "version_added": false
                },
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpContributingSource"
        }
    ],
    "dom-rtcrtpencodingparameters-maxbitrate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpEncodingParameters.json",
            "name": "maxBitrate",
            "slug": "API/RTCRtpEncodingParameters/maxBitrate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/maxBitrate",
            "summary": "The RTCRtpEncodingParameters dictionary's maxBitrate property specifies the maximum number of bits per second to allow a track encoded with this encoding to use.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpEncodingParameters: maxBitrate property"
        }
    ],
    "dom-rtcrtpencodingparameters-maxframerate": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/RTCRtpEncodingParameters.json",
            "name": "maxFramerate",
            "slug": "API/RTCRtpEncodingParameters/maxFramerate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/maxFramerate",
            "summary": "The maxFramerate property of the RTCRtpEncodingParameters dictionary specifies the maximum framerate that can be used to send the encoding, in frames per second.",
            "support": {
                "chrome": {
                    "version_added": "81"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "101",
                    "partial_implementation": true,
                    "notes": "Zero is treated as 'no fps limit' (see <a href='https://bugzil.la/1611957'>bug 1611957</a>)."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "81"
                }
            },
            "title": "RTCRtpEncodingParameters: maxFramerate property"
        }
    ],
    "dom-rtcrtpencodingparameters-scaleresolutiondownby": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpEncodingParameters.json",
            "name": "scaleResolutionDownBy",
            "slug": "API/RTCRtpEncodingParameters/scaleResolutionDownBy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters/scaleResolutionDownBy",
            "summary": "The RTCRtpEncodingParameters dictionary's scaleResolutionDownBy property can be used to specify a factor by which to reduce the size of a video track during encoding.",
            "support": {
                "chrome": {
                    "version_added": "74"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpEncodingParameters: scaleResolutionDownBy property"
        }
    ],
    "dom-rtcrtpencodingparameters": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpEncodingParameters.json",
            "name": "RTCRtpEncodingParameters",
            "slug": "API/RTCRtpEncodingParameters",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpEncodingParameters",
            "summary": "An instance of the WebRTC API's RTCRtpEncodingParameters dictionary describes a single configuration of a codec for an RTCRtpSender.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpEncodingParameters"
        }
    ],
    "dom-rtcrtpreceiver-getcapabilities": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getCapabilities_static",
            "slug": "API/RTCRtpReceiver/getCapabilities_static",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getCapabilities_static",
            "summary": "The static method RTCRtpReceiver.getCapabilities() returns an object describing the codec and header extension capabilities supported by RTCRtpReceiver objects on the current device.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getCapabilities() static method"
        }
    ],
    "dom-rtcrtpreceiver-getcontributingsources": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getContributingSources",
            "slug": "API/RTCRtpReceiver/getContributingSources",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getContributingSources",
            "summary": "The getContributingSources() method of the RTCRtpReceiver interface returns an array of RTCRtpContributingSource instances, each corresponding to one CSRC (contributing source) identifier received by the current RTCRtpReceiver in the last ten seconds.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getContributingSources() method"
        }
    ],
    "dom-rtcrtpparameters-codecs": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "return_object_property_codecs",
            "slug": "API/RTCRtpReceiver/getParameters#codecs",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getParameters#codecs",
            "summary": "The getParameters() method of the RTCRtpReceiver interface returns an object describing the current configuration for the encoding and transmission of media on the receiver's track.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "return_object_property_codecs",
            "slug": "API/RTCRtpSender/getParameters#codecs",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getParameters#codecs",
            "summary": "The getParameters() method of the RTCRtpSender interface returns an object describing the current configuration for how the sender's track will be encoded and transmitted to a remote RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46",
                    "partial_implementation": true,
                    "notes": "The property is defined but not implemented/used."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "parameters_codecs_parameter",
            "slug": "API/RTCRtpSender/setParameters#codecs",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setParameters#codecs",
            "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46",
                    "partial_implementation": true,
                    "notes": "The property is defined but not implemented/used."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: setParameters() method"
        }
    ],
    "dom-rtcrtpparameters-headerextensions": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "return_object_property_headerExtensions",
            "slug": "API/RTCRtpReceiver/getParameters#headerextensions",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getParameters#headerextensions",
            "summary": "The getParameters() method of the RTCRtpReceiver interface returns an object describing the current configuration for the encoding and transmission of media on the receiver's track.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "return_object_property_headerExtensions",
            "slug": "API/RTCRtpSender/getParameters#headerextensions",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getParameters#headerextensions",
            "summary": "The getParameters() method of the RTCRtpSender interface returns an object describing the current configuration for how the sender's track will be encoded and transmitted to a remote RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46",
                    "partial_implementation": true,
                    "notes": "The property is defined but not implemented/used."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "parameters_headerExtensions_parameter",
            "slug": "API/RTCRtpSender/setParameters#headerextensions",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setParameters#headerextensions",
            "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46",
                    "partial_implementation": true,
                    "notes": "The property is defined but not implemented/used."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: setParameters() method"
        }
    ],
    "dom-rtcrtpparameters-rtcp": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "return_object_property_rtcp",
            "slug": "API/RTCRtpReceiver/getParameters#rtcp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getParameters#rtcp",
            "summary": "The getParameters() method of the RTCRtpReceiver interface returns an object describing the current configuration for the encoding and transmission of media on the receiver's track.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "return_object_property_rtcp",
            "slug": "API/RTCRtpSender/getParameters#rtcp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getParameters#rtcp",
            "summary": "The getParameters() method of the RTCRtpSender interface returns an object describing the current configuration for how the sender's track will be encoded and transmitted to a remote RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46",
                    "partial_implementation": true,
                    "notes": "The property is defined but not implemented/used."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "partial": [
                "gecko"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "parameters_rtcp_parameter",
            "slug": "API/RTCRtpSender/setParameters#rtcp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setParameters#rtcp",
            "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46",
                    "partial_implementation": true,
                    "notes": "The property is defined but not implemented/used."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: setParameters() method"
        }
    ],
    "dom-rtcrtpreceiver-getparameters": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getParameters",
            "slug": "API/RTCRtpReceiver/getParameters",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getParameters",
            "summary": "The getParameters() method of the RTCRtpReceiver interface returns an object describing the current configuration for the encoding and transmission of media on the receiver's track.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getParameters() method"
        }
    ],
    "widl-RTCRtpReceiver-getStats-Promise-RTCStatsReport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getStats",
            "slug": "API/RTCRtpReceiver/getStats",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getStats",
            "summary": "The RTCRtpReceiver method getStats() asynchronously requests an RTCStatsReport object which provides statistics about incoming traffic on the owning RTCPeerConnection, returning a Promise whose fulfillment handler will be called once the results are available.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "7.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getStats() method"
        }
    ],
    "dom-rtcrtpreceiver-getsynchronizationsources": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "getSynchronizationSources",
            "slug": "API/RTCRtpReceiver/getSynchronizationSources",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/getSynchronizationSources",
            "summary": "The getSynchronizationSources() method of the RTCRtpReceiver interface returns an array of RTCRtpContributingSource instances, each corresponding to one SSRC (synchronization source) identifier received by the current RTCRtpReceiver in the last ten seconds.",
            "support": {
                "chrome": {
                    "version_added": "73"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: getSynchronizationSources() method"
        }
    ],
    "dom-rtpreceiver-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "track",
            "slug": "API/RTCRtpReceiver/track",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/track",
            "summary": "The track read-only property of the RTCRtpReceiver interface returns the MediaStreamTrack associated with the current RTCRtpReceiver instance.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: track property"
        }
    ],
    "dom-rtcrtpreceiver-transport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "transport",
            "slug": "API/RTCRtpReceiver/transport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver/transport",
            "summary": "The read-only transport property of an RTCRtpReceiver object provides the RTCDtlsTransport object used to interact with the underlying transport over which the receiver is exchanging Real-time Transport Control Protocol (RTCP) packets.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "82"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver: transport property"
        }
    ],
    "rtcrtpreceiver-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpReceiver.json",
            "name": "RTCRtpReceiver",
            "slug": "API/RTCRtpReceiver",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpReceiver",
            "summary": "The RTCRtpReceiver interface of the WebRTC API manages the reception and decoding of data for a MediaStreamTrack on an RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpReceiver"
        }
    ],
    "dom-rtcrtpsender-dtmf": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "dtmf",
            "slug": "API/RTCRtpSender/dtmf",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/dtmf",
            "summary": "The read-only dtmf property on the RTCRtpSender interface returns a RTCDTMFSender object which can be used to send DTMF tones over the RTCPeerConnection. See Using DTMF for details on how to make use of the returned RTCDTMFSender object.",
            "support": {
                "chrome": {
                    "version_added": "66"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "52"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: dtmf property"
        }
    ],
    "dom-rtcrtpsender-getcapabilities": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "getCapabilities_static",
            "slug": "API/RTCRtpSender/getCapabilities_static",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getCapabilities_static",
            "summary": "The static method RTCRtpSender.getCapabilities() returns an object describing the codec and header extension capabilities supported by the RTCRtpSender.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getCapabilities() static method"
        }
    ],
    "dom-rtcrtpsendparameters-encodings": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "return_object_property_encodings",
            "slug": "API/RTCRtpSender/getParameters#encodings",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getParameters#encodings",
            "summary": "The getParameters() method of the RTCRtpSender interface returns an object describing the current configuration for how the sender's track will be encoded and transmitted to a remote RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "parameters_encodings_parameter",
            "slug": "API/RTCRtpSender/setParameters#encodings",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setParameters#encodings",
            "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: setParameters() method"
        }
    ],
    "dom-rtcrtpsendparameters-transactionid": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "return_object_property_transactionId",
            "slug": "API/RTCRtpSender/getParameters#transactionid",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getParameters#transactionid",
            "summary": "The getParameters() method of the RTCRtpSender interface returns an object describing the current configuration for how the sender's track will be encoded and transmitted to a remote RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getParameters() method"
        },
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "parameters_transactionId_parameter",
            "slug": "API/RTCRtpSender/setParameters#transactionid",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setParameters#transactionid",
            "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: setParameters() method"
        }
    ],
    "dom-rtcrtpsender-getparameters": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "getParameters",
            "slug": "API/RTCRtpSender/getParameters",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getParameters",
            "summary": "The getParameters() method of the RTCRtpSender interface returns an object describing the current configuration for how the sender's track will be encoded and transmitted to a remote RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "68"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getParameters() method"
        }
    ],
    "widl-RTCRtpSender-getStats-Promise-RTCStatsReport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "getStats",
            "slug": "API/RTCRtpSender/getStats",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/getStats",
            "summary": "The RTCRtpSender method getStats() asynchronously requests an RTCStatsReport object which provides statistics about outgoing traffic on the RTCPeerConnection which owns the sender, returning a Promise which is fulfilled when the results are available.",
            "support": {
                "chrome": {
                    "version_added": "67"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: getStats() method"
        }
    ],
    "dom-rtcrtpsender-replacetrack": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "replaceTrack",
            "slug": "API/RTCRtpSender/replaceTrack",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/replaceTrack",
            "summary": "The RTCRtpSender method replaceTrack() replaces the track currently being used as the sender's source with a new MediaStreamTrack.",
            "support": {
                "chrome": {
                    "version_added": "65"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: replaceTrack() method"
        }
    ],
    "dom-rtcrtpsender-setparameters": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "setParameters",
            "slug": "API/RTCRtpSender/setParameters",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setParameters",
            "summary": "The setParameters() method of the RTCRtpSender interface applies changes the configuration of sender's track, which is the MediaStreamTrack for which the RTCRtpSender is responsible.",
            "support": {
                "chrome": {
                    "version_added": "68"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": [
                    {
                        "version_added": "64"
                    },
                    {
                        "version_added": "46",
                        "version_removed": "64",
                        "partial_implementation": true,
                        "notes": "Before Firefox 64, changes to parameters that should update live would not do so."
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: setParameters() method"
        }
    ],
    "dom-rtcrtpsender-setstreams": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "setStreams",
            "slug": "API/RTCRtpSender/setStreams",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/setStreams",
            "summary": "The RTCRtpSender method setStreams() associates the sender's track with the specified MediaStream objects.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "79"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: setStreams() method"
        }
    ],
    "dom-rtcrtpsender-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "track",
            "slug": "API/RTCRtpSender/track",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/track",
            "summary": "The track read-only property of the RTCRtpSender interface returns the MediaStreamTrack which is being handled by the RTCRtpSender.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: track property"
        }
    ],
    "dom-rtcrtpsender-transport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "transport",
            "slug": "API/RTCRtpSender/transport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender/transport",
            "summary": "The read-only transport property of an RTCRtpSender object provides the RTCDtlsTransport object used to interact with the underlying transport over which the sender is exchanging Real-time Transport Control Protocol (RTCP) packets.",
            "support": {
                "chrome": {
                    "version_added": "75"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "82"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender: transport property"
        }
    ],
    "rtcrtpsender-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSender.json",
            "name": "RTCRtpSender",
            "slug": "API/RTCRtpSender",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSender",
            "summary": "The RTCRtpSender interface provides the ability to control and obtain details about how a particular MediaStreamTrack is encoded and sent to a remote peer.",
            "support": {
                "chrome": {
                    "version_added": "64"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "13"
                },
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpSender"
        }
    ],
    "dom-rtcrtpsynchronizationsource": [
        {
            "engines": [
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpSynchronizationSource.json",
            "name": "RTCRtpSynchronizationSource",
            "slug": "API/RTCRtpSynchronizationSource",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpSynchronizationSource",
            "summary": "The getSynchronizationSources() method of the RTCRtpReceiver interface returns an array of RTCRtpContributingSource instances, each corresponding to one SSRC (synchronization source) identifier received by the current RTCRtpReceiver in the last ten seconds.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "RTCRtpReceiver: getSynchronizationSources() method"
        }
    ],
    "dom-rtcrtptransceiver-currentdirection": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "currentDirection",
            "slug": "API/RTCRtpTransceiver/currentDirection",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/currentDirection",
            "summary": "The read-only RTCRtpTransceiver property currentDirection is a string which indicates the current directionality of the transceiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "12.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver: currentDirection property"
        }
    ],
    "dom-rtcrtptransceiver-direction": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "direction",
            "slug": "API/RTCRtpTransceiver/direction",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/direction",
            "summary": "The RTCRtpTransceiver property direction is a string which indicates the transceiver's preferred directionality.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver: direction property"
        }
    ],
    "dom-rtptransceiver-mid": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "mid",
            "slug": "API/RTCRtpTransceiver/mid",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/mid",
            "summary": "The read-only RTCRtpTransceiver interface's mid property specifies the negotiated media ID (mid) which the local and remote peers have agreed upon to uniquely identify the stream's pairing of sender and receiver.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver: mid property"
        }
    ],
    "dom-rtcrtptransceiver-receiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "receiver",
            "slug": "API/RTCRtpTransceiver/receiver",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/receiver",
            "summary": "The read-only receiver property of WebRTC's RTCRtpTransceiver interface indicates the RTCRtpReceiver responsible for receiving and decoding incoming media data for the transceiver's stream.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver: receiver property"
        }
    ],
    "dom-rtcrtptransceiver-sender": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "sender",
            "slug": "API/RTCRtpTransceiver/sender",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/sender",
            "summary": "The read-only sender property of WebRTC's RTCRtpTransceiver interface indicates the RTCRtpSender responsible for encoding and sending outgoing media data for the transceiver's stream.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver: sender property"
        }
    ],
    "dom-rtcrtptransceiver-setcodecpreferences": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "setCodecPreferences",
            "slug": "API/RTCRtpTransceiver/setCodecPreferences",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/setCodecPreferences",
            "summary": "The RTCRtpTransceiver method setCodecPreferences() configures the transceiver's preferred list of codecs.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver: setCodecPreferences() method"
        }
    ],
    "dom-rtcrtptransceiver-stop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "stop",
            "slug": "API/RTCRtpTransceiver/stop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver/stop",
            "summary": "The stop() method in the RTCRtpTransceiver interface permanently stops the transceiver by stopping both the associated RTCRtpSender and RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "88"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "88"
                }
            },
            "title": "RTCRtpTransceiver: stop() method"
        }
    ],
    "rtcrtptransceiver-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCRtpTransceiver.json",
            "name": "RTCRtpTransceiver",
            "slug": "API/RTCRtpTransceiver",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCRtpTransceiver",
            "summary": "The WebRTC interface RTCRtpTransceiver describes a permanent pairing of an RTCRtpSender and an RTCRtpReceiver, along with some shared state.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCRtpTransceiver"
        }
    ],
    "dom-rtcsctptransport-maxchannels": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSctpTransport.json",
            "name": "maxChannels",
            "slug": "API/RTCSctpTransport/maxChannels",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSctpTransport/maxChannels",
            "summary": "The maxChannels read-only property of the RTCSctpTransport interface indicates the maximum number of RTCDataChannel objects that can be opened simultaneously.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSctpTransport: maxChannels property"
        }
    ],
    "dom-rtcsctptransport-maxmessagesize": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSctpTransport.json",
            "name": "maxMessageSize",
            "slug": "API/RTCSctpTransport/maxMessageSize",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSctpTransport/maxMessageSize",
            "summary": "The maxMessageSize read-only property of the RTCSctpTransport interface indicates the maximum size of a message that can be sent using the RTCDataChannel.send() method.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSctpTransport: maxMessageSize property"
        }
    ],
    "dom-rtcsctptransport-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSctpTransport.json",
            "name": "state",
            "slug": "API/RTCSctpTransport/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSctpTransport/state",
            "summary": "The state read-only property of the RTCSctpTransport interface provides information which describes a Stream Control Transmission Protocol (SCTP) transport state.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSctpTransport: state property"
        }
    ],
    "dom-rtcsctptransport-transport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSctpTransport.json",
            "name": "transport",
            "slug": "API/RTCSctpTransport/transport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSctpTransport/transport",
            "summary": "The transport read-only property of the RTCSctpTransport interface returns a RTCDtlsTransport object representing the DTLS transport used for the transmission and receipt of data packets.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSctpTransport: transport property"
        }
    ],
    "rtcsctptransport-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSctpTransport.json",
            "name": "RTCSctpTransport",
            "slug": "API/RTCSctpTransport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSctpTransport",
            "summary": "The RTCSctpTransport interface provides information which describes a Stream Control Transmission Protocol (SCTP) transport. This provides information about limitations of the transport, but also provides a way to access the underlying Datagram Transport Layer Security (DTLS) transport over which SCTP packets for all of an RTCPeerConnection's data channels are sent and received.",
            "support": {
                "chrome": {
                    "version_added": "76"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "113"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "15.4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSctpTransport"
        }
    ],
    "dom-rtcsessiondescription-sdp": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "sdp",
            "slug": "API/RTCSessionDescription/sdp",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/sdp",
            "summary": "The property RTCSessionDescription.sdp is a read-only string containing the SDP which describes the session.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSessionDescription: sdp property"
        }
    ],
    "dom-rtcsessiondescription-tojson": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "toJSON",
            "slug": "API/RTCSessionDescription/toJSON",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/toJSON",
            "summary": "The RTCSessionDescription.toJSON() method generates a JSON description of the object. Both properties, type and sdp, are contained in the generated JSON.",
            "support": {
                "chrome": {
                    "version_added": "43"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "24"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSessionDescription: toJSON() method"
        }
    ],
    "dom-rtcsessiondescription-type": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "type",
            "slug": "API/RTCSessionDescription/type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription/type",
            "summary": "The property RTCSessionDescription.type is a read-only string value which describes the description's type.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSessionDescription: type property"
        }
    ],
    "rtcsessiondescription-class": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCSessionDescription.json",
            "name": "RTCSessionDescription",
            "slug": "API/RTCSessionDescription",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCSessionDescription",
            "summary": "The RTCSessionDescription interface describes one end of a connection—or potential connection—and how it's configured. Each RTCSessionDescription consists of a description type indicating which part of the offer/answer negotiation process it describes and of the SDP descriptor of the session.",
            "support": {
                "chrome": {
                    "version_added": "23"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "15"
                },
                "firefox": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "22"
                    }
                ],
                "firefox_android": [
                    {
                        "version_added": "44"
                    },
                    {
                        "prefix": "moz",
                        "version_added": "24"
                    }
                ],
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCSessionDescription"
        }
    ],
    "dom-rtcstatsreport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCStatsReport.json",
            "name": "entries",
            "slug": "API/RTCStatsReport/entries",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport/entries",
            "summary": "The entries() method of the RTCStatsReport interface returns a new iterator object that can be used to iterate through the key/value pairs for each element in the RTCStatsReport object, in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "58"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCStatsReport: entries() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCStatsReport.json",
            "name": "forEach",
            "slug": "API/RTCStatsReport/forEach",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport/forEach",
            "summary": "The forEach() method of the RTCStatsReport interface executes a provided function once for each key/value pair in the RTCStatsReport object, in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "58"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCStatsReport: forEach() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCStatsReport.json",
            "name": "get",
            "slug": "API/RTCStatsReport/get",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport/get",
            "summary": "The get() method of the RTCStatsReport interface returns a specified element from an RTCStatsReport.",
            "support": {
                "chrome": {
                    "version_added": "58"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCStatsReport: get() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCStatsReport.json",
            "name": "has",
            "slug": "API/RTCStatsReport/has",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport/has",
            "summary": "The has() method of the RTCStatsReport interface returns a boolean indicating whether a report contains a statistics dictionary with the specified id.",
            "support": {
                "chrome": {
                    "version_added": "58"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCStatsReport: has() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCStatsReport.json",
            "name": "keys",
            "slug": "API/RTCStatsReport/keys",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport/keys",
            "summary": "The keys() method of the RTCStatsReport interface returns a new iterator object that can be used to iterate through the keys for each element in the RTCStatsReport object, in insertion order.",
            "support": {
                "chrome": {
                    "version_added": "58"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCStatsReport: keys() method"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCStatsReport.json",
            "name": "size",
            "slug": "API/RTCStatsReport/size",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport/size",
            "summary": "The size read-only property of the RTCStatsReport interface returns the number of items in the current report.",
            "support": {
                "chrome": {
                    "version_added": "59"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCStatsReport: size property"
        }
    ],
    "rtcstatsreport-object": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCStatsReport.json",
            "name": "RTCStatsReport",
            "slug": "API/RTCStatsReport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCStatsReport",
            "summary": "The RTCStatsReport interface of the WebRTC API provides a statistics report for a RTCPeerConnection, RTCRtpSender, or RTCRtpReceiver.",
            "support": {
                "chrome": {
                    "version_added": "58"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "27"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCStatsReport"
        }
    ],
    "dom-trackevent-receiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "receiver",
            "slug": "API/RTCTrackEvent/receiver",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/receiver",
            "summary": "The read-only receiver property of the RTCTrackEvent interface indicates the RTCRtpReceiver which is used to receive data containing media for the track to which the event refers.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "34"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent: receiver property"
        }
    ],
    "dom-rtctrackevent-streams": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "streams",
            "slug": "API/RTCTrackEvent/streams",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/streams",
            "summary": "The WebRTC API interface RTCTrackEvent's read-only streams property specifies an array of MediaStream objects, one for each of the streams that comprise the track being added to the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent: streams property"
        }
    ],
    "dom-rtctrackevent-track": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "track",
            "slug": "API/RTCTrackEvent/track",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/track",
            "summary": "The WebRTC API interface RTCTrackEvent's read-only track property specifies the MediaStreamTrack that has been added to the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent: track property"
        }
    ],
    "dom-trackevent-transceiver": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "transceiver",
            "slug": "API/RTCTrackEvent/transceiver",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent/transceiver",
            "summary": "The WebRTC API interface RTCTrackEvent's read-only transceiver property indicates the RTCRtpTransceiver affiliated with the event's track.",
            "support": {
                "chrome": {
                    "version_added": "69"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "59"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "43"
                },
                "opera_android": {
                    "version_added": "43"
                },
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "6.0"
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent: transceiver property"
        }
    ],
    "dom-rtctrackevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/RTCTrackEvent.json",
            "name": "RTCTrackEvent",
            "slug": "API/RTCTrackEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/RTCTrackEvent",
            "summary": "The WebRTC API interface RTCTrackEvent represents the track event, which is sent when a new MediaStreamTrack is added to an RTCRtpReceiver which is part of the RTCPeerConnection.",
            "support": {
                "chrome": {
                    "version_added": "56"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "22"
                },
                "firefox_android": {
                    "version_added": "24"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "11"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "RTCTrackEvent"
        }
    ]
}
