{
    "field.accept-encoding": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Accept-Encoding.json",
            "name": "Accept-Encoding",
            "slug": "HTTP/Headers/Accept-Encoding",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Encoding",
            "summary": "The Accept-Encoding request HTTP header indicates the content encoding (usually a compression algorithm) that the client can understand. The server uses content negotiation to select one of the proposals and informs the client of that choice with the Content-Encoding response header.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Accept-Encoding"
        }
    ],
    "field.accept-language": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Accept-Language.json",
            "name": "Accept-Language",
            "slug": "HTTP/Headers/Accept-Language",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Language",
            "summary": "The Accept-Language request HTTP header indicates the natural language and locale that the client prefers. The server uses content negotiation to select one of the proposals and informs the client of the choice with the Content-Language response header. Browsers set required values for this header according to their active user interface language. Users rarely change it, and such changes are not recommended because they may lead to fingerprinting.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Accept-Language"
        }
    ],
    "field.accept-ranges": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Accept-Ranges.json",
            "name": "Accept-Ranges",
            "slug": "HTTP/Headers/Accept-Ranges",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept-Ranges",
            "summary": "The Accept-Ranges HTTP response header is a marker used by the server to advertise its support for partial requests from the client for file downloads. The value of this field indicates the unit that can be used to define a range.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Accept-Ranges"
        }
    ],
    "field.accept": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Accept.json",
            "name": "Accept",
            "slug": "HTTP/Headers/Accept",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Accept",
            "summary": "The Accept request HTTP header indicates which content types, expressed as MIME types, the client is able to understand. The server uses content negotiation to select one of the proposals and informs the client of the choice with the Content-Type response header. Browsers set required values for this header based on the context of the request. For example, a browser uses different values in a request when fetching a CSS stylesheet, image, video, or a script.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true,
                    "notes": "In Firefox 66, the default <code>Accept</code> header value changed to <code>*/*</code>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Accept"
        }
    ],
    "field.authorization": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Authorization.json",
            "name": "Authorization",
            "slug": "HTTP/Headers/Authorization",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Authorization",
            "summary": "The HTTP Authorization request header can be used to provide credentials that authenticate a user agent with a server, allowing access to a protected resource.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "1"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": true
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Authorization"
        }
    ],
    "field.connection": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Connection.json",
            "name": "Connection",
            "slug": "HTTP/Headers/Connection",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Connection",
            "summary": "The Connection general header controls whether the network connection stays open after the current transaction finishes. If the value sent is keep-alive, the connection is persistent and not closed, allowing for subsequent requests to the same server to be done.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Connection"
        }
    ],
    "field.content-encoding": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Encoding.json",
            "name": "Content-Encoding",
            "slug": "HTTP/Headers/Content-Encoding",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Encoding",
            "summary": "The Content-Encoding representation header lists any encodings that have been applied to the representation (message payload), and in what order. This lets the recipient know how to decode the representation in order to obtain the original payload format. Content encoding is mainly used to compress the message data without losing information about the origin media type.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Encoding"
        }
    ],
    "field.content-language": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Language.json",
            "name": "Content-Language",
            "slug": "HTTP/Headers/Content-Language",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Language",
            "summary": "The Content-Language representation header is used to describe the language(s) intended for the audience, so users can differentiate it according to their own preferred language.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Language"
        }
    ],
    "field.content-length": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Length.json",
            "name": "Content-Length",
            "slug": "HTTP/Headers/Content-Length",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Length",
            "summary": "The Content-Length header indicates the size of the message body, in bytes, sent to the recipient.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Length"
        }
    ],
    "field.content-location": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Location.json",
            "name": "Content-Location",
            "slug": "HTTP/Headers/Content-Location",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Location",
            "summary": "The Content-Location header indicates an alternate location for the returned data. The principal use is to indicate the URL of a resource transmitted as the result of content negotiation.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Location"
        }
    ],
    "field.content-range": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Range.json",
            "name": "Content-Range",
            "slug": "HTTP/Headers/Content-Range",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Range",
            "summary": "The Content-Range response HTTP header indicates where in a full body message a partial message belongs.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Range"
        }
    ],
    "status.206": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Type.json",
            "name": "Content-Type",
            "slug": "HTTP/Headers/Content-Type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type",
            "summary": "The Content-Type representation header is used to indicate the original media type of the resource (prior to any content encoding applied for sending).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Type"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "206",
            "slug": "HTTP/Status/206",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/206",
            "summary": "The HTTP 206 Partial Content success status response code indicates that the request has succeeded and the body contains the requested ranges of data, as described in the Range header of the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "206 Partial Content"
        }
    ],
    "field.content-type": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Content-Type.json",
            "name": "Content-Type",
            "slug": "HTTP/Headers/Content-Type",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Type",
            "summary": "The Content-Type representation header is used to indicate the original media type of the resource (prior to any content encoding applied for sending).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Content-Type"
        }
    ],
    "field.date": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Date.json",
            "name": "Date",
            "slug": "HTTP/Headers/Date",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Date",
            "summary": "The Date general HTTP header contains the date and time at which the message originated.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Date"
        }
    ],
    "field.etag": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/ETag.json",
            "name": "ETag",
            "slug": "HTTP/Headers/ETag",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/ETag",
            "summary": "The ETag (or entity tag) HTTP response header is an identifier for a specific version of a resource. It lets caches be more efficient and save bandwidth, as a web server does not need to resend a full response if the content was not changed. Additionally, etags help to prevent simultaneous updates of a resource from overwriting each other (\"mid-air collisions\").",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "ETag"
        }
    ],
    "field.expect": [
        {
            "engines": [
                "blink"
            ],
            "filename": "http/headers/Expect-CT.json",
            "name": "Expect-CT",
            "slug": "HTTP/Headers/Expect-CT",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect-CT",
            "summary": "The Expect-CT header lets sites opt in to reporting and/or enforcement of Certificate Transparency requirements. Certificate Transparency (CT) aims to prevent the use of misissued certificates for that site from going unnoticed.",
            "support": {
                "chrome": {
                    "version_added": "61",
                    "notes": "Before later builds of Chrome 64, invalid Expect-CT reports would be sent. Newer versions do not send reports after 10 weeks from the build date. See <a href='https://crbug.com/786563'>bug 786563</a>."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1281469'>bug 1281469</a>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "48"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": false
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": "Before later builds of Chrome 64, invalid Expect-CT reports would be sent. Newer versions do not send reports after 10 weeks from the build date. See <a href='https://crbug.com/786563'>bug 786563</a>."
                }
            },
            "title": "Expect-CT"
        },
        {
            "engines": [],
            "filename": "http/headers/Expect.json",
            "name": "Expect",
            "slug": "HTTP/Headers/Expect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect",
            "summary": "The Expect HTTP request header indicates expectations that need to be met by the server to handle the request successfully.",
            "support": {
                "chrome": {
                    "version_added": null
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": null
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": null
                }
            },
            "title": "Expect"
        }
    ],
    "field.from": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/From.json",
            "name": "From",
            "slug": "HTTP/Headers/From",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/From",
            "summary": "The From request header contains an Internet email address for a human user who controls the requesting user agent.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "From"
        }
    ],
    "field.host": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Host.json",
            "name": "Host",
            "slug": "HTTP/Headers/Host",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host",
            "summary": "The Host request header specifies the host and port number of the server to which the request is being sent.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Host"
        }
    ],
    "field.if-match": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/If-Match.json",
            "name": "If-Match",
            "slug": "HTTP/Headers/If-Match",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Match",
            "summary": "The If-Match HTTP request header makes a request conditional.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "If-Match"
        }
    ],
    "field.if-modified-since": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/If-Modified-Since.json",
            "name": "If-Modified-Since",
            "slug": "HTTP/Headers/If-Modified-Since",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Modified-Since",
            "summary": "The If-Modified-Since request HTTP header makes the request conditional: the server sends back the requested resource, with a 200 status, only if it has been last modified after the given date. If the resource has not been modified since, the response is a 304 without any body; the Last-Modified response header of a previous request contains the date of last modification. Unlike If-Unmodified-Since, If-Modified-Since can only be used with a GET or HEAD.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "If-Modified-Since"
        }
    ],
    "field.if-none-match": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/If-None-Match.json",
            "name": "If-None-Match",
            "slug": "HTTP/Headers/If-None-Match",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-None-Match",
            "summary": "The If-None-Match HTTP request header makes the request conditional. For GET and HEAD methods, the server will return the requested resource, with a 200 status, only if it doesn't have an ETag matching the given ones. For other methods, the request will be processed only if the eventually existing resource's ETag doesn't match any of the values listed.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "If-None-Match"
        }
    ],
    "field.if-range": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/If-Range.json",
            "name": "If-Range",
            "slug": "HTTP/Headers/If-Range",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Range",
            "summary": "The If-Range HTTP request header makes a range request conditional: if the condition is fulfilled, the range request is issued, and the server sends back a 206 Partial Content answer with the appropriate body. If the condition is not fulfilled, the full resource is sent back with a 200 OK status.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "If-Range"
        }
    ],
    "field.if-unmodified-since": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/If-Unmodified-Since.json",
            "name": "If-Unmodified-Since",
            "slug": "HTTP/Headers/If-Unmodified-Since",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/If-Unmodified-Since",
            "summary": "The HyperText Transfer Protocol (HTTP) If-Unmodified-Since request header makes the request for the resource conditional: the server will send the requested resource or accept it in the case of a POST or another non-safe method only if the resource has not been modified after the date specified by this HTTP header. If the resource has been modified after the specified date, the response will be a 412 Precondition Failed error.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "If-Unmodified-Since"
        }
    ],
    "field.last-modified": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Last-Modified.json",
            "name": "Last-Modified",
            "slug": "HTTP/Headers/Last-Modified",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Last-Modified",
            "summary": "The Last-Modified response HTTP header contains a date and time when the origin server believes the resource was last modified. It is used as a validator to determine if the resource is the same as the previously stored one. Less accurate than an ETag header, it is a fallback mechanism. Conditional requests containing If-Modified-Since or If-Unmodified-Since headers make use of this field.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Last-Modified"
        }
    ],
    "field.location": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Location.json",
            "name": "Location",
            "slug": "HTTP/Headers/Location",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Location",
            "summary": "The Location response header indicates the URL to redirect a page to. It only provides a meaning when served with a 3xx (redirection) or 201 (created) status response.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Location"
        }
    ],
    "field.proxy-authenticate": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "http/headers/Proxy-Authenticate.json",
            "name": "Proxy-Authenticate",
            "slug": "HTTP/Headers/Proxy-Authenticate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Proxy-Authenticate",
            "summary": "The HTTP Proxy-Authenticate response header defines the authentication method that should be used to gain access to a resource behind a proxy server. It authenticates the request to the proxy server, allowing it to transmit the request further.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": true
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Proxy-Authenticate"
        }
    ],
    "field.range": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Range.json",
            "name": "Range",
            "slug": "HTTP/Headers/Range",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range",
            "summary": "The Range HTTP request header indicates the part of a document that the server should return. Several parts can be requested with one Range header at once, and the server may send back these ranges in a multipart document. If the server sends back ranges, it uses the 206 Partial Content for the response. If the ranges are invalid, the server returns the 416 Range Not Satisfiable error. The server can also ignore the Range header and return the whole document with a 200 status code.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Range"
        }
    ],
    "field.referer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Referer.json",
            "name": "Referer",
            "slug": "HTTP/Headers/Referer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referer",
            "summary": "The Referer HTTP request header contains the absolute or partial address from which a resource has been requested. The Referer header allows a server to identify referring pages that people are visiting from or where requested resources are being used. This data can be used for analytics, logging, optimized caching, and more.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Referer"
        }
    ],
    "field.retry-after": [
        {
            "engines": [],
            "filename": "http/headers/Retry-After.json",
            "name": "Retry-After",
            "slug": "HTTP/Headers/Retry-After",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After",
            "summary": "The Retry-After response HTTP header indicates how long the user agent should wait before making a follow-up request. There are three main cases this header is used:",
            "support": {
                "chrome": {
                    "version_added": null
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "18"
                },
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/230260'>bug 230260</a>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": null
                }
            },
            "title": "Retry-After"
        }
    ],
    "field.server": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Server.json",
            "name": "Server",
            "slug": "HTTP/Headers/Server",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Server",
            "summary": "The Server header describes the software used by the origin server that handled the request — that is, the server that generated the response.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Server"
        }
    ],
    "field.te": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/TE.json",
            "name": "TE",
            "slug": "HTTP/Headers/TE",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/TE",
            "summary": "The TE request header specifies the transfer encodings the user agent is willing to accept. (you could informally call it Accept-Transfer-Encoding, which would be more intuitive).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "TE"
        }
    ],
    "field.trailer": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Trailer.json",
            "name": "Trailer",
            "slug": "HTTP/Headers/Trailer",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Trailer",
            "summary": "The Trailer response header allows the sender to include additional fields at the end of chunked messages in order to supply metadata that might be dynamically generated while the message body is sent, such as a message integrity check, digital signature, or post-processing status.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Trailer"
        }
    ],
    "field.upgrade": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "http/headers/Upgrade.json",
            "name": "Upgrade",
            "slug": "HTTP/Headers/Upgrade",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade",
            "summary": "The HTTP 1.1 (only) Upgrade header can be used to upgrade an already established client/server connection to a different protocol (over the same transport protocol). For example, it can be used by a client to upgrade a connection from HTTP 1.1 to HTTP 2.0, or an HTTP or HTTPS connection into a WebSocket.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Upgrade"
        }
    ],
    "status.426": [
        {
            "engines": [
                "blink",
                "gecko"
            ],
            "filename": "http/headers/Upgrade.json",
            "name": "Upgrade",
            "slug": "HTTP/Headers/Upgrade",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Upgrade",
            "summary": "The HTTP 1.1 (only) Upgrade header can be used to upgrade an already established client/server connection to a different protocol (over the same transport protocol). For example, it can be used by a client to upgrade a connection from HTTP 1.1 to HTTP 2.0, or an HTTP or HTTPS connection into a WebSocket.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Upgrade"
        }
    ],
    "field.user-agent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/User-Agent.json",
            "name": "User-Agent",
            "slug": "HTTP/Headers/User-Agent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent",
            "summary": "The User-Agent request header is a characteristic string that lets servers and network peers identify the application, operating system, vendor, and/or version of the requesting user agent.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "User-Agent"
        }
    ],
    "field.vary": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Vary.json",
            "name": "Vary",
            "slug": "HTTP/Headers/Vary",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Vary",
            "summary": "The Vary HTTP response header describes the parts of the request message aside from the method and URL that influenced the content of the response it occurs in. Most often, this is used to create a cache key when content negotiation is in use.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Vary"
        }
    ],
    "field.via": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/Via.json",
            "name": "Via",
            "slug": "HTTP/Headers/Via",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Via",
            "summary": "The Via general header is added by proxies, both forward and reverse, and can appear in the request or response headers. It is used for tracking message forwards, avoiding request loops, and identifying the protocol capabilities of senders along the request/response chain.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "Via"
        }
    ],
    "field.www-authenticate": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/headers/WWW-Authenticate.json",
            "name": "WWW-Authenticate",
            "slug": "HTTP/Headers/WWW-Authenticate",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/WWW-Authenticate",
            "summary": "The HTTP WWW-Authenticate response header defines the HTTP authentication methods (\"challenges\") that might be used to gain access to a specific resource.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": {
                    "version_added": true
                },
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": {
                    "version_added": true
                },
                "ie": {
                    "version_added": "1"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": true
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "WWW-Authenticate"
        }
    ],
    "CONNECT": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "CONNECT",
            "slug": "HTTP/Methods/CONNECT",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT",
            "summary": "The HTTP CONNECT method starts two-way communications with the requested resource. It can be used to open a tunnel.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "CONNECT"
        }
    ],
    "DELETE": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "DELETE",
            "slug": "HTTP/Methods/DELETE",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE",
            "summary": "The HTTP DELETE request method deletes the specified resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "DELETE"
        }
    ],
    "GET": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "GET",
            "slug": "HTTP/Methods/GET",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET",
            "summary": "The HTTP GET method requests a representation of the specified resource. Requests using GET should only be used to request data (they shouldn't include data).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "GET"
        }
    ],
    "HEAD": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "HEAD",
            "slug": "HTTP/Methods/HEAD",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD",
            "summary": "The HTTP HEAD method requests the headers that would be returned if the HEAD request's URL was instead requested with the HTTP GET method. For example, if a URL might produce a large download, a HEAD request could read its Content-Length header to check the filesize without actually downloading the file.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "HEAD"
        }
    ],
    "OPTIONS": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "OPTIONS",
            "slug": "HTTP/Methods/OPTIONS",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS",
            "summary": "The HTTP OPTIONS method requests permitted communication options for a given URL or server. A client can specify a URL with this method, or an asterisk (*) to refer to the entire server.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "OPTIONS"
        }
    ],
    "POST": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "POST",
            "slug": "HTTP/Methods/POST",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST",
            "summary": "The HTTP POST method sends data to the server. The type of the body of the request is indicated by the Content-Type header.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "POST"
        }
    ],
    "PUT": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/methods.json",
            "name": "PUT",
            "slug": "HTTP/Methods/PUT",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT",
            "summary": "The HTTP PUT request method creates a new resource or replaces a representation of the target resource with the request payload.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "PUT"
        }
    ],
    "TRACE": [
        {
            "engines": [],
            "filename": "http/methods.json",
            "name": "TRACE",
            "slug": "HTTP/Methods/TRACE",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/TRACE",
            "summary": "The HTTP TRACE method performs a message loop-back test along the path to the target resource, providing a useful debugging mechanism.",
            "support": {
                "chrome": {
                    "version_added": null
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": null
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": null
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": null
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": null
                }
            },
            "title": "TRACE"
        }
    ],
    "status.100": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "100",
            "slug": "HTTP/Status/100",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/100",
            "summary": "The HTTP 100 Continue informational status response code indicates that everything so far is OK and that the client should continue with the request or ignore it if it is already finished.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "100 Continue"
        }
    ],
    "status.200": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "200",
            "slug": "HTTP/Status/200",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/200",
            "summary": "The HTTP 200 OK success status response code indicates that the request has succeeded. A 200 response is cacheable by default.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "200 OK"
        }
    ],
    "status.201": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "201",
            "slug": "HTTP/Status/201",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/201",
            "summary": "The HTTP 201 Created success status response code indicates that the request has succeeded and has led to the creation of a resource. The new resource, or a description and link to the new resource, is effectively created before the response is sent back and the newly created items are returned in the body of the message, located at either the URL of the request, or at the URL in the value of the Location header.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "201 Created"
        }
    ],
    "status.204": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "204",
            "slug": "HTTP/Status/204",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/204",
            "summary": "The HTTP 204 No Content success status response code indicates that a request has succeeded, but that the client doesn't need to navigate away from its current page.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "204 No Content"
        }
    ],
    "status.301": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "301",
            "slug": "HTTP/Status/301",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/301",
            "summary": "The HyperText Transfer Protocol (HTTP) 301 Moved Permanently redirect status response code indicates that the requested resource has been definitively moved to the URL given by the Location headers. A browser redirects to the new URL and search engines update their links to the resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "301 Moved Permanently"
        }
    ],
    "status.302": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "302",
            "slug": "HTTP/Status/302",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/302",
            "summary": "The HyperText Transfer Protocol (HTTP) 302 Found redirect status response code indicates that the resource requested has been temporarily moved to the URL given by the Location header. A browser redirects to this page but search engines don't update their links to the resource (in 'SEO-speak', it is said that the 'link-juice' is not sent to the new URL).",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "302 Found"
        }
    ],
    "status.303": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "303",
            "slug": "HTTP/Status/303",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/303",
            "summary": "The HyperText Transfer Protocol (HTTP) 303 See Other redirect status response code indicates that the redirects don't link to the requested resource itself, but to another page (such as a confirmation page, a representation of a real-world object — see HTTP range-14 — or an upload-progress page). This response code is often sent back as a result of PUT or POST. The method used to display this redirected page is always GET.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "303 See Other"
        }
    ],
    "status.304": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "304",
            "slug": "HTTP/Status/304",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/304",
            "summary": "The HTTP 304 Not Modified client redirection response code indicates that there is no need to retransmit the requested resources. It is an implicit redirection to a cached resource. This happens when the request method is a safe method, such as GET or HEAD, or when the request is conditional and uses an If-None-Match or an If-Modified-Since header.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "304 Not Modified"
        }
    ],
    "status.307": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "307",
            "slug": "HTTP/Status/307",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/307",
            "summary": "The method and the body of the original request are reused to perform the redirected request. In the cases where you want the method used to be changed to GET, use 303 See Other instead. This is useful when you want to give an answer to a PUT method that is not the uploaded resources, but a confirmation message (like \"You successfully uploaded XYZ\").",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "307 Temporary Redirect"
        }
    ],
    "status.308": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "308",
            "slug": "HTTP/Status/308",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/308",
            "summary": "The request method and the body will not be altered, whereas 301 may incorrectly sometimes be changed to a GET method.",
            "support": {
                "chrome": {
                    "version_added": "36"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "14"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11",
                    "notes": "Does not work below Windows 10."
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "24"
                },
                "opera_android": "mirror",
                "safari": {
                    "version_added": "7"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "308 Permanent Redirect"
        }
    ],
    "status.401": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "401",
            "slug": "HTTP/Status/401",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/401",
            "summary": "The HyperText Transfer Protocol (HTTP) 401 Unauthorized response status code indicates that the client request has not been completed because it lacks valid authentication credentials for the requested resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "401 Unauthorized"
        }
    ],
    "status.403": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "403",
            "slug": "HTTP/Status/403",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/403",
            "summary": "The HTTP 403 Forbidden response status code indicates that the server understands the request but refuses to authorize it.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "403 Forbidden"
        }
    ],
    "status.404": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "404",
            "slug": "HTTP/Status/404",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404",
            "summary": "The HTTP 404 Not Found response status code indicates that the server cannot find the requested resource. Links that lead to a 404 page are often called broken or dead links and can be subject to link rot.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "404 Not Found"
        }
    ],
    "status.406": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "406",
            "slug": "HTTP/Status/406",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/406",
            "summary": "The HyperText Transfer Protocol (HTTP) 406 Not Acceptable client error response code indicates that the server cannot produce a response matching the list of acceptable values defined in the request's proactive content negotiation headers, and that the server is unwilling to supply a default representation.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "406 Not Acceptable"
        }
    ],
    "status.407": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "407",
            "slug": "HTTP/Status/407",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/407",
            "summary": "The HTTP 407 Proxy Authentication Required client error status response code indicates that the request has not been applied because it lacks valid authentication credentials for a proxy server that is between the browser and the server that can access the requested resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "407 Proxy Authentication Required"
        }
    ],
    "status.409": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "409",
            "slug": "HTTP/Status/409",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/409",
            "summary": "The HTTP 409 Conflict response status code indicates a request conflict with the current state of the target resource.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "409 Conflict"
        }
    ],
    "status.410": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "410",
            "slug": "HTTP/Status/410",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/410",
            "summary": "The HyperText Transfer Protocol (HTTP) 410 Gone client error response code indicates that access to the target resource is no longer available at the origin server and that this condition is likely to be permanent.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "410 Gone"
        }
    ],
    "status.412": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "412",
            "slug": "HTTP/Status/412",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/412",
            "summary": "The HyperText Transfer Protocol (HTTP) 412 Precondition Failed client error response code indicates that access to the target resource has been denied. This happens with conditional requests on methods other than GET or HEAD when the condition defined by the If-Unmodified-Since or If-None-Match headers is not fulfilled. In that case, the request, usually an upload or a modification of a resource, cannot be made and this error response is sent back.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "412 Precondition Failed"
        }
    ],
    "status.416": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "416",
            "slug": "HTTP/Status/416",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/416",
            "summary": "The HyperText Transfer Protocol (HTTP) 416 Range Not Satisfiable error response code indicates that a server cannot serve the requested ranges. The most likely reason is that the document doesn't contain such ranges, or that the Range header value, though syntactically correct, doesn't make sense.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "416 Range Not Satisfiable"
        }
    ],
    "status.500": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "500",
            "slug": "HTTP/Status/500",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/500",
            "summary": "The HyperText Transfer Protocol (HTTP) 500 Internal Server Error server error response code indicates that the server encountered an unexpected condition that prevented it from fulfilling the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "500 Internal Server Error"
        }
    ],
    "status.501": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "501",
            "slug": "HTTP/Status/501",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/501",
            "summary": "The HyperText Transfer Protocol (HTTP) 501 Not Implemented server error response code means that the server does not support the functionality required to fulfill the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "501 Not Implemented"
        }
    ],
    "status.502": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "502",
            "slug": "HTTP/Status/502",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/502",
            "summary": "The HyperText Transfer Protocol (HTTP) 502 Bad Gateway server error response code indicates that the server, while acting as a gateway or proxy, received an invalid response from the upstream server.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "502 Bad Gateway"
        }
    ],
    "status.503": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "503",
            "slug": "HTTP/Status/503",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/503",
            "summary": "The HyperText Transfer Protocol (HTTP) 503 Service Unavailable server error response code indicates that the server is not ready to handle the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "503 Service Unavailable"
        }
    ],
    "status.504": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "http/status.json",
            "name": "504",
            "slug": "HTTP/Status/504",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/504",
            "summary": "The HyperText Transfer Protocol (HTTP) 504 Gateway Timeout server error response code indicates that the server, while acting as a gateway or proxy, did not get a response in time from the upstream server that it needed in order to complete the request.",
            "support": {
                "chrome": {
                    "version_added": true
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": true
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": true
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": true
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": true
                }
            },
            "title": "504 Gateway Timeout"
        }
    ]
}
