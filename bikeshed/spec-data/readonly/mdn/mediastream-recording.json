{
    "dom-blobevent-blobevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/BlobEvent.json",
            "name": "BlobEvent",
            "slug": "API/BlobEvent/BlobEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent/BlobEvent",
            "summary": "The BlobEvent() constructor returns a newly created BlobEvent object with an associated Blob.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "21"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BlobEvent()"
        }
    ],
    "dom-blobevent-data": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/BlobEvent.json",
            "name": "data",
            "slug": "API/BlobEvent/data",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent/data",
            "summary": "The BlobEvent.data read-only property represents a Blob associated with the event.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "21"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BlobEvent.data"
        }
    ],
    "dom-blobevent-timecode": [
        {
            "engines": [
                "blink",
                "webkit"
            ],
            "filename": "api/BlobEvent.json",
            "name": "timecode",
            "slug": "API/BlobEvent/timecode",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent/timecode",
            "summary": "The timecode read only property of the BlobEvent interface indicates the difference between the timestamp of the first chunk of data, and the timestamp of the first chunk in the first BlobEvent produced by this recorder.",
            "support": {
                "chrome": {
                    "version_added": "57"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": false,
                    "notes": "See <a href='https://bugzil.la/1573299'>bug 1573299</a>."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BlobEvent.timecode"
        }
    ],
    "blobevent-section": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/BlobEvent.json",
            "name": "BlobEvent",
            "slug": "API/BlobEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/BlobEvent",
            "summary": "The BlobEvent interface represents events associated with a Blob. These blobs are typically, but not necessarily, associated with media content.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "21"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "BlobEvent"
        }
    ],
    "dom-mediarecorder-mediarecorder": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "MediaRecorder",
            "slug": "API/MediaRecorder/MediaRecorder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/MediaRecorder",
            "summary": "The MediaRecorder() constructor creates a new MediaRecorder object that will record a specified MediaStream.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder()"
        }
    ],
    "dom-mediarecorder-audiobitspersecond": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "audioBitsPerSecond",
            "slug": "API/MediaRecorder/audioBitsPerSecond",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/audioBitsPerSecond",
            "summary": "The audioBitsPerSecond read-only property of the MediaRecorder interface returns the audio encoding bit rate in use.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "71"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.audioBitsPerSecond"
        }
    ],
    "dom-mediarecorder-ondataavailable": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "dataavailable_event",
            "slug": "API/MediaRecorder/dataavailable_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/dataavailable_event",
            "summary": "The dataavailable event is fired when the MediaRecorder delivers media data to your application for its use. The data is provided in a Blob object that contains the data. This occurs in four situations:",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder: dataavailable event"
        }
    ],
    "dom-mediarecorder-onerror": [
        {
            "engines": [
                "gecko",
                "webkit"
            ],
            "partial": [
                "blink"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "error_event",
            "slug": "API/MediaRecorder/error_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/error_event",
            "summary": "The MediaRecorder interface's error event is fired when an error occurs: for example because recording wasn't allowed or was attempted using an unsupported codec.",
            "support": {
                "chrome": {
                    "version_added": "49",
                    "partial_implementation": true,
                    "notes": "The interface for this event is a plain <a href='https://developer.mozilla.org/docs/Web/API/Event'><code>Event</code></a>, not <a href='https://developer.mozilla.org/docs/Web/API/MediaRecorderErrorEvent'><code>MediaRecorderErrorEvent</code></a>. See <a href='https://crbug.com/1250432'>bug 1250432</a>."
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79",
                    "partial_implementation": true,
                    "notes": "The interface for this event is a plain <a href='https://developer.mozilla.org/docs/Web/API/Event'><code>Event</code></a>, not <a href='https://developer.mozilla.org/docs/Web/API/MediaRecorderErrorEvent'><code>MediaRecorderErrorEvent</code></a>. See <a href='https://crbug.com/1250432'>bug 1250432</a>."
                }
            },
            "title": "MediaRecorder: error event"
        }
    ],
    "dom-mediarecorder-istypesupported": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "isTypeSupported",
            "slug": "API/MediaRecorder/isTypeSupported",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/isTypeSupported",
            "summary": "The MediaRecorder.isTypeSupported() static method returns a Boolean which is true if the MIME type specified is one the user agent should be able to successfully record.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.isTypeSupported()"
        }
    ],
    "dom-mediarecorder-mimetype": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "mimeType",
            "slug": "API/MediaRecorder/mimeType",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/mimeType",
            "summary": "The mimeType read-only property returns the MIME media type that was specified when creating the MediaRecorder object, or, if none was specified, which was chosen by the browser. This is the file format of the file that would result from writing all of the recorded data to disk.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_added": "47",
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "Before Chrome 49, only video is supported, not audio."
                    }
                ],
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25",
                    "notes": "Starting with Firefox 71, the behavior of <code>mimeType</code> is more consistent. For example, it now returns the media type even after recording has stopped."
                },
                "firefox_android": {
                    "version_added": "25"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "Before Chrome 49, only video is supported, not audio."
                    }
                ]
            },
            "title": "MediaRecorder.mimeType"
        }
    ],
    "dom-mediarecorder-pause": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "pause",
            "slug": "API/MediaRecorder/pause",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/pause",
            "summary": "The Media.pause() method (part of the MediaRecorder API) is used to pause recording of media streams.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.pause()"
        }
    ],
    "dom-mediarecorder-onpause": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "pause_event",
            "slug": "API/MediaRecorder/pause_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/pause_event",
            "summary": "The pause event is thrown as a result of the MediaRecorder.pause() method being invoked.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder: pause event"
        }
    ],
    "dom-mediarecorder-requestdata": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "requestData",
            "slug": "API/MediaRecorder/requestData",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/requestData",
            "summary": "The MediaRecorder.requestData() method (part of the MediaRecorder API) is used to raise a dataavailable event containing a Blob object of the captured media as it was when the method was called. This can then be grabbed and manipulated as you wish.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.requestData()"
        }
    ],
    "dom-mediarecorder-resume": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "resume",
            "slug": "API/MediaRecorder/resume",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/resume",
            "summary": "The MediaRecorder.resume() method (part of the MediaRecorder API) is used to resume media recording when it has been previously paused.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.resume()"
        }
    ],
    "dom-mediarecorder-onresume": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "resume_event",
            "slug": "API/MediaRecorder/resume_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/resume_event",
            "summary": "The resume event is thrown when MediaRecorder.resume() is called.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "65"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder: resume event"
        }
    ],
    "dom-mediarecorder-start": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "start",
            "slug": "API/MediaRecorder/start",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start",
            "summary": "The MediaRecorder method start(), which is part of the MediaStream Recording API, begins recording media into one or more Blob objects.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.start()"
        }
    ],
    "dom-mediarecorder-onstart": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "start_event",
            "slug": "API/MediaRecorder/start_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/start_event",
            "summary": "The start event is fired when MediaRecorder.start() is called. At this point, the data starts being gathered into a Blob.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder: start event"
        }
    ],
    "dom-mediarecorder-state": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "state",
            "slug": "API/MediaRecorder/state",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/state",
            "summary": "The MediaRecorder.state read-only property returns the current state of the current MediaRecorder object.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_added": "47",
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "Before Chrome 49, only video is supported, not audio."
                    }
                ],
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "Before Chrome 49, only video is supported, not audio."
                    }
                ]
            },
            "title": "MediaRecorder.state"
        }
    ],
    "dom-mediarecorder-stop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "stop",
            "slug": "API/MediaRecorder/stop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/stop",
            "summary": "The MediaRecorder.stop() method (part of the MediaRecorder API) is used to stop media capture.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.stop()"
        }
    ],
    "dom-mediarecorder-onstop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "stop_event",
            "slug": "API/MediaRecorder/stop_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/stop_event",
            "summary": "The stop event is fired when MediaRecorder.stop() is called, or when the media stream being captured ends. In each case, the stop event is preceded by a dataavailable event, making the Blob captured up to that point available for you to use in your application.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder: stop event"
        }
    ],
    "dom-mediarecorder-stream": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "stream",
            "slug": "API/MediaRecorder/stream",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/stream",
            "summary": "The MediaRecorder.stream read-only property returns the stream that was passed into the MediaRecorder() constructor when the MediaRecorder was created.",
            "support": {
                "chrome": [
                    {
                        "version_added": "49"
                    },
                    {
                        "version_added": "47",
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "Before Chrome 49, only video is supported, not audio."
                    }
                ],
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "49"
                },
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": false,
                        "version_removed": "49",
                        "partial_implementation": true,
                        "notes": "Before Chrome 49, only video is supported, not audio."
                    }
                ]
            },
            "title": "MediaRecorder.stream"
        }
    ],
    "dom-mediarecorder-videobitspersecond": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "videoBitsPerSecond",
            "slug": "API/MediaRecorder/videoBitsPerSecond",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder/videoBitsPerSecond",
            "summary": "The videoBitsPerSecond read-only property of the MediaRecorder interface returns the video encoding bit rate in use.",
            "support": {
                "chrome": {
                    "version_added": "49"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "71"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder.videoBitsPerSecond"
        }
    ],
    "mediarecorder-api": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaRecorder.json",
            "name": "MediaRecorder",
            "slug": "API/MediaRecorder",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaRecorder",
            "summary": "The MediaRecorder interface of the MediaStream Recording API provides functionality to easily record media. It is created using the MediaRecorder() constructor.",
            "support": {
                "chrome": {
                    "version_added": "47"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "25",
                    "notes": "Before Firefox 58, using <code>MediaStream.addTrack()</code> on a stream obtained using <code>getUserMedia()</code>, then attempting to record the resulting stream would result in only recording the original stream without the added tracks (severe bug)."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "36"
                },
                "opera_android": {
                    "version_added": "36"
                },
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaRecorder"
        }
    ]
}
