{
    "caret-position": [
        {
            "engines": [
                "gecko"
            ],
            "filename": "api/CaretPosition.json",
            "name": "CaretPosition",
            "slug": "API/CaretPosition",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/CaretPosition",
            "summary": "The CaretPosition interface represents the caret position, an indicator for the text insertion point. You can get a CaretPosition using the Document.caretPositionFromPoint() method.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "20"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "CaretPosition"
        }
    ],
    "dom-document-caretpositionfrompoint": [
        {
            "engines": [
                "gecko"
            ],
            "filename": "api/Document.json",
            "name": "caretPositionFromPoint",
            "slug": "API/Document/caretPositionFromPoint",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/caretPositionFromPoint",
            "summary": "The caretPositionFromPoint() property of the Document interface returns a CaretPosition object, containing the DOM node, along with the caret and caret's character offset within that node.",
            "support": {
                "chrome": {
                    "version_added": false
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "20"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": false
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": false
                }
            },
            "title": "Document.caretPositionFromPoint()"
        }
    ],
    "dom-document-elementfrompoint": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Document.json",
            "name": "elementFromPoint",
            "slug": "API/Document/elementFromPoint",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/elementFromPoint",
            "summary": "The elementFromPoint() method, available on the Document object, returns the topmost Element at the specified coordinates (relative to the viewport).",
            "support": {
                "chrome": {
                    "version_added": "1",
                    "notes": "Before Chrome 66, this method returned <code>null</code> when the element was a child of a host node. See <a href='https://crbug.com/759947'>issue 759947</a>."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1",
                    "notes": "Before Opera 53, this method returned <code>null</code> when the element was a child of a host node. See <a href='https://crbug.com/759947'>issue 759947</a>."
                },
                "opera_android": {
                    "version_added": "12.1",
                    "notes": "Before Opera Android 47, this method returned <code>null</code> when the element was a child of a host node. See <a href='https://crbug.com/759947'>issue 759947</a>."
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37",
                    "notes": "Before WebView 66, this method returned <code>null</code> when the element was a child of a host node. See <a href='https://crbug.com/759947'>issue 759947</a>."
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": "Before Chrome 66, this method returned <code>null</code> when the element was a child of a host node. See <a href='https://crbug.com/759947'>issue 759947</a>."
                }
            },
            "caniuse": {
                "feature": "element-from-point",
                "title": "document.elementFromPoint()"
            },
            "title": "Document.elementFromPoint()"
        }
    ],
    "dom-document-elementsfrompoint": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Document.json",
            "name": "elementsFromPoint",
            "slug": "API/Document/elementsFromPoint",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/elementsFromPoint",
            "summary": "The elementsFromPoint() method of the Document interface returns an array of all elements at the specified coordinates (relative to the viewport). The elements are ordered from the topmost to the bottommost box of the viewport.",
            "support": {
                "chrome": {
                    "version_added": "43",
                    "notes": "Before Chrome 66, this method returned <code>null</code> when the element was a child of a host node. See <a href='https://crbug.com/759947'>issue 759947</a>."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "46"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "10",
                    "prefix": "ms",
                    "notes": "Returns a <code>NodeList</code> instead of an array. See <a href='https://msdn.microsoft.com/en-us/library/hh772121(v=vs.85).aspx'>the MSDN documentation</a>. Returns <code>null</code> when the point provided has no elements beneath it (e.g., when given a point outside the document)."
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "30"
                },
                "opera_android": {
                    "version_added": "30"
                },
                "safari": {
                    "version_added": "11.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79",
                    "notes": "Before Chrome 66, this method returned <code>null</code> when the element was a child of a host node. See <a href='https://crbug.com/759947'>issue 759947</a>."
                }
            },
            "title": "Document.elementsFromPoint()"
        }
    ],
    "eventdef-document-scroll": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Document.json",
            "name": "scroll_event",
            "slug": "API/Document/scroll_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/scroll_event",
            "summary": "The scroll event fires when the document view has been scrolled. For element scrolling, see Element: scroll event.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "11.6"
                },
                "opera_android": {
                    "version_added": "12"
                },
                "safari": {
                    "version_added": "2"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document: scroll event"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scroll_event",
            "slug": "API/Element/scroll_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll_event",
            "summary": "The scroll event fires when an element has been scrolled.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1.3"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element: scroll event"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "scroll_event",
            "slug": "API/VisualViewport/scroll_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scroll_event",
            "summary": "The scroll event of the VisualViewport interface is fired when the visual viewport is scrolled.",
            "support": {
                "chrome": [
                    {
                        "version_added": "62"
                    },
                    {
                        "version_added": "61",
                        "partial_implementation": true,
                        "notes": "The <code>onscroll</code> event handler property is not supported."
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "partial_implementation": true,
                        "notes": "The <code>onscroll</code> event handler property is not supported."
                    }
                ]
            },
            "title": "VisualViewport: scroll event"
        }
    ],
    "dom-document-scrollingelement": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Document.json",
            "name": "scrollingElement",
            "slug": "API/Document/scrollingElement",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Document/scrollingElement",
            "summary": "The scrollingElement read-only property of the Document interface returns a reference to the Element that scrolls the document. In standards mode, this is the root element of the document, document.documentElement.",
            "support": {
                "chrome": {
                    "version_added": "44"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "48"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "9"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "document-scrollingelement",
                "title": "document.scrollingElement"
            },
            "title": "Document.scrollingElement"
        }
    ],
    "extensions-to-the-document-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Document.json",
            "name": "Document",
            "slug": "API/Document",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Document",
            "summary": "The Document interface represents any web page loaded in the browser and serves as an entry point into the web page's content, which is the DOM tree.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Document"
        }
    ],
    "dom-element-clientheight": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "clientHeight",
            "slug": "API/Element/clientHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight",
            "summary": "The Element.clientHeight read-only property is zero for elements with no CSS or inline layout boxes; otherwise, it's the inner height of an element in pixels. It includes padding but excludes borders, margins, and horizontal scrollbars (if present).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.clientHeight"
        }
    ],
    "dom-element-clientleft": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "clientLeft",
            "slug": "API/Element/clientLeft",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/clientLeft",
            "summary": "The width of the left border of an element in pixels. It includes the width of the vertical scrollbar if the text direction of the element is right-to-left and if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left margin or the left padding. clientLeft is read-only.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.clientLeft"
        }
    ],
    "dom-element-clienttop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "clientTop",
            "slug": "API/Element/clientTop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/clientTop",
            "summary": "The width of the top border of an element in pixels. It is a read-only, integer property of element.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.clientTop"
        }
    ],
    "dom-element-clientwidth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "clientWidth",
            "slug": "API/Element/clientWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/clientWidth",
            "summary": "The Element.clientWidth property is zero for inline elements and elements with no CSS; otherwise, it's the inner width of an element in pixels. It includes padding but excludes borders, margins, and vertical scrollbars (if present).",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.clientWidth"
        }
    ],
    "dom-element-getboundingclientrect": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "getBoundingClientRect",
            "slug": "API/Element/getBoundingClientRect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/getBoundingClientRect",
            "summary": "The Element.getBoundingClientRect() method returns a DOMRect object providing information about the size of an element and its position relative to the viewport.",
            "support": {
                "chrome": {
                    "version_added": "2"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": {
                    "version_added": "3.2",
                    "notes": "Safari for iOS will modify the effective viewport based on the user zoom. This results in incorrect values whenever the user has zoomed."
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "2"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "getboundingclientrect",
                "title": "Element.getBoundingClientRect()"
            },
            "title": "Element.getBoundingClientRect()"
        }
    ],
    "dom-element-getclientrects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "getClientRects",
            "slug": "API/Element/getClientRects",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/getClientRects",
            "summary": "The getClientRects() method of the Element interface returns a collection of DOMRect objects that indicate the bounding rectangles for each CSS border box in a client.",
            "support": {
                "chrome": {
                    "version_added": "2"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "3"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "9.5"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "4"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "2"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.getClientRects()"
        }
    ],
    "dom-element-scroll": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scroll",
            "slug": "API/Element/scroll",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scroll",
            "summary": "The scroll() method of the Element interface scrolls the element to a particular set of coordinates inside a given element.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.scroll()"
        }
    ],
    "dom-element-scrollby": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scrollBy",
            "slug": "API/Element/scrollBy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollBy",
            "summary": "The scrollBy() method of the Element interface scrolls an element by the given amount.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.scrollBy()"
        }
    ],
    "dom-element-scrollheight": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scrollHeight",
            "slug": "API/Element/scrollHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollHeight",
            "summary": "The Element.scrollHeight read-only property is a measurement of the height of an element's content, including content not visible on the screen due to overflow.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "21"
                    },
                    {
                        "version_added": "3",
                        "version_removed": "21",
                        "partial_implementation": true,
                        "notes": "Before Firefox 21, when an element's content does not generate a vertical scrollbar, then its <code>scrollHeight</code> property is equal to its <code>clientHeight</code> property. This can mean either the content is too short to require a scrollbar or that the element has a CSS style <code>overflow</code> value of <code>visible</code> (non-scrollable)."
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5",
                    "notes": "In Internet Explorer 5 through 7, if padding is set, the value of <code>scrollHeight</code> is equal to the sum of the top and bottom padding. This behavior was fixed in Internet Explorer 8."
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.scrollHeight"
        }
    ],
    "dom-element-scrollintoview": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scrollIntoView",
            "slug": "API/Element/scrollIntoView",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollIntoView",
            "summary": "The Element interface's scrollIntoView() method scrolls the element's ancestor containers such that the element on which scrollIntoView() is called is visible to the user.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5",
                    "partial_implementation": true,
                    "notes": [
                        "Only supported for <a href='https://developer.mozilla.org/docs/Web/API/HTMLElement'><code>HTMLElement</code></a>, not all <code>Element</code> objects, such as <a href='https://developer.mozilla.org/docs/Web/API/SVGElement'><code>SVGElement</code></a>.",
                        "No support for <code>smooth</code> behavior or <code>center</code> options."
                    ]
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "3",
                    "notes": [
                        "No support for <code>center</code> option.",
                        "Before Safari 15.4, there was no support for the <code>smooth</code> behavior."
                    ]
                },
                "safari_ios": {
                    "version_added": "1",
                    "notes": [
                        "No support for <code>center</code> option.",
                        "Before iOS 15.4, there was no support for the <code>smooth</code> behavior."
                    ]
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "scrollintoview",
                "title": "scrollIntoView"
            },
            "title": "Element.scrollIntoView()"
        }
    ],
    "dom-element-scrollleft": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scrollLeft",
            "slug": "API/Element/scrollLeft",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollLeft",
            "summary": "The Element.scrollLeft property gets or sets the number of pixels that an element's content is scrolled from its left edge.",
            "support": {
                "chrome": {
                    "version_added": "1",
                    "notes": "For right-to-left elements, this property uses 0-100 (most left to most right) instead of negative values. See <a href='https://crbug.com/721759'>bug 721759</a>."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5",
                    "notes": "For right-to-left elements, this property uses 100-0 (most left to most right) instead of negative values."
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79",
                    "notes": "For right-to-left elements, this property uses 0-100 (most left to most right) instead of negative values. See <a href='https://crbug.com/721759'>bug 721759</a>."
                }
            },
            "title": "Element.scrollLeft"
        }
    ],
    "dom-element-scrollto": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scrollTo",
            "slug": "API/Element/scrollTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTo",
            "summary": "The scrollTo() method of the Element interface scrolls to a particular set of coordinates inside a given element.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "36"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "10.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.scrollTo()"
        }
    ],
    "dom-element-scrolltop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scrollTop",
            "slug": "API/Element/scrollTop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollTop",
            "summary": "The Element.scrollTop property gets or sets the number of pixels that an element's content is scrolled vertically.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.scrollTop"
        }
    ],
    "dom-element-scrollwidth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "scrollWidth",
            "slug": "API/Element/scrollWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element/scrollWidth",
            "summary": "The Element.scrollWidth read-only property is a measurement of the width of an element's content, including content not visible on the screen due to overflow.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5",
                    "notes": "In Internet Explorer 5 through 7, if padding is set, the value of <code>scrollWidth</code> is equal to the sum of the left and right padding. This behavior was fixed in Internet Explorer 8."
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Element.scrollWidth"
        }
    ],
    "extension-to-the-element-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Element.json",
            "name": "Element",
            "slug": "API/Element",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
            "summary": "Element is the most general base class from which all element objects (i.e. objects that represent elements) in a Document inherit. It only has methods and properties common to all kinds of elements. More specific classes inherit from Element.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "element-scroll-methods",
                "title": "Scroll methods on elements (scroll, scrollTo, scrollBy)"
            },
            "title": "Element"
        }
    ],
    "dom-htmlelement-offsetheight": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLElement.json",
            "name": "offsetHeight",
            "slug": "API/HTMLElement/offsetHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight",
            "summary": "The HTMLElement.offsetHeight read-only property returns the height of an element, including vertical padding and borders, as an integer.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5.5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement.offsetHeight"
        }
    ],
    "dom-htmlelement-offsetleft": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLElement.json",
            "name": "offsetLeft",
            "slug": "API/HTMLElement/offsetLeft",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetLeft",
            "summary": "The HTMLElement.offsetLeft read-only property returns the number of pixels that the upper left corner of the current element is offset to the left within the HTMLElement.offsetParent node.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5.5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement.offsetLeft"
        }
    ],
    "dom-htmlelement-offsetparent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLElement.json",
            "name": "offsetParent",
            "slug": "API/HTMLElement/offsetParent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetParent",
            "summary": "The HTMLElement.offsetParent read-only property returns a reference to the element which is the closest (nearest in the containment hierarchy) positioned ancestor element.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5.5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement.offsetParent"
        }
    ],
    "dom-htmlelement-offsettop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLElement.json",
            "name": "offsetTop",
            "slug": "API/HTMLElement/offsetTop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetTop",
            "summary": "The HTMLElement.offsetTop read-only property returns the distance of the outer border of the current element relative to the inner border of the top of the offsetParent, the closest positioned ancestor element.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5.5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement.offsetTop"
        }
    ],
    "dom-htmlelement-offsetwidth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLElement.json",
            "name": "offsetWidth",
            "slug": "API/HTMLElement/offsetWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetWidth",
            "summary": "The HTMLElement.offsetWidth read-only property returns the layout width of an element as an integer.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5.5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "8"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLElement.offsetWidth"
        }
    ],
    "dom-htmlimageelement-x": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLImageElement.json",
            "name": "x",
            "slug": "API/HTMLImageElement/x",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/x",
            "summary": "The read-only HTMLImageElement property x indicates the x-coordinate of the <img> element's left border edge relative to the root element's origin.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "14"
                    },
                    {
                        "version_added": "1",
                        "version_removed": "7"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLImageElement.x"
        }
    ],
    "dom-htmlimageelement-y": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/HTMLImageElement.json",
            "name": "y",
            "slug": "API/HTMLImageElement/y",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLImageElement/y",
            "summary": "The read-only HTMLImageElement property y indicates the y-coordinate of the <img> element's top border edge relative to the root element's origin.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "14"
                    },
                    {
                        "version_added": "1",
                        "version_removed": "7"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "HTMLImageElement.y"
        }
    ],
    "dom-mediaquerylist-onchange": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryList.json",
            "name": "change_event",
            "slug": "API/MediaQueryList/change_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/change_event",
            "summary": "The change event of the MediaQueryList interface fires when the status of media query support changes.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryList: change event"
        }
    ],
    "dom-mediaquerylist-matches": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryList.json",
            "name": "matches",
            "slug": "API/MediaQueryList/matches",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/matches",
            "summary": "The matches read-only property of the MediaQueryList interface is a boolean value that returns true if the document currently matches the media query list, or false if not.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "10"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryList.matches"
        }
    ],
    "dom-mediaquerylist-media": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryList.json",
            "name": "media",
            "slug": "API/MediaQueryList/media",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList/media",
            "summary": "The media read-only property of the MediaQueryList interface is a string representing a serialized media query.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "10"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryList.media"
        }
    ],
    "the-mediaquerylist-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryList.json",
            "name": "MediaQueryList",
            "slug": "API/MediaQueryList",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryList",
            "summary": "A MediaQueryList object stores information on a media query applied to a document, with support for both immediate and event-driven matching against the state of the document.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "10"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryList"
        },
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryListEvent.json",
            "name": "MediaQueryListEvent",
            "slug": "API/MediaQueryListEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent",
            "summary": "The MediaQueryListEvent object stores information on the changes that have happened to a MediaQueryList object — instances are available as the event object on a function referenced by a change event.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryListEvent"
        }
    ],
    "dom-mediaquerylistevent-mediaquerylistevent": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryListEvent.json",
            "name": "MediaQueryListEvent",
            "slug": "API/MediaQueryListEvent/MediaQueryListEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent/MediaQueryListEvent",
            "summary": "The MediaQueryListEvent() constructor creates a new MediaQueryListEvent object.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryListEvent()"
        }
    ],
    "dom-mediaquerylistevent-matches": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryListEvent.json",
            "name": "matches",
            "slug": "API/MediaQueryListEvent/matches",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent/matches",
            "summary": "The matches read-only property of the MediaQueryListEvent interface is a boolean value that is true if the document currently matches the media query list, or false if not.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryListEvent.matches"
        }
    ],
    "dom-mediaquerylistevent-media": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MediaQueryListEvent.json",
            "name": "media",
            "slug": "API/MediaQueryListEvent/media",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MediaQueryListEvent/media",
            "summary": "The media read-only property of the MediaQueryListEvent interface is a string representing a serialized media query.",
            "support": {
                "chrome": {
                    "version_added": "39"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "55"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "14"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MediaQueryListEvent.media"
        }
    ],
    "dom-mouseevent-offsetx": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MouseEvent.json",
            "name": "offsetX",
            "slug": "API/MouseEvent/offsetX",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetX",
            "summary": "The offsetX read-only property of the MouseEvent interface provides the offset in the X coordinate of the mouse pointer between that event and the padding edge of the target node.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": {
                    "version_added": "43"
                },
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MouseEvent.offsetX"
        }
    ],
    "dom-mouseevent-offsety": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MouseEvent.json",
            "name": "offsetY",
            "slug": "API/MouseEvent/offsetY",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/offsetY",
            "summary": "The offsetY read-only property of the MouseEvent interface provides the offset in the Y coordinate of the mouse pointer between that event and the padding edge of the target node.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "39"
                },
                "firefox_android": {
                    "version_added": "43"
                },
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MouseEvent.offsetY"
        }
    ],
    "dom-mouseevent-pagex": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MouseEvent.json",
            "name": "pageX",
            "slug": "API/MouseEvent/pageX",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageX",
            "summary": "The pageX read-only property of the MouseEvent interface returns the X (horizontal) coordinate (in pixels) at which the mouse was clicked, relative to the left edge of the entire document. This includes any portion of the document not currently visible.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MouseEvent.pageX"
        }
    ],
    "dom-mouseevent-pagey": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MouseEvent.json",
            "name": "pageY",
            "slug": "API/MouseEvent/pageY",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/pageY",
            "summary": "The pageY read-only property of the MouseEvent interface returns the Y (vertical) coordinate in pixels of the event relative to the whole document. This property takes into account any vertical scrolling of the page.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1.5"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MouseEvent.pageY"
        }
    ],
    "dom-mouseevent-x": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MouseEvent.json",
            "name": "x",
            "slug": "API/MouseEvent/x",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/x",
            "summary": "The MouseEvent.x property is an alias for the MouseEvent.clientX property.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "53"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "3.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MouseEvent.x"
        }
    ],
    "dom-mouseevent-y": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MouseEvent.json",
            "name": "y",
            "slug": "API/MouseEvent/y",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/y",
            "summary": "The MouseEvent.y property is an alias for the MouseEvent.clientY property.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "53"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "3.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MouseEvent.y"
        }
    ],
    "extensions-to-the-mouseevent-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/MouseEvent.json",
            "name": "MouseEvent",
            "slug": "API/MouseEvent",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent",
            "summary": "The MouseEvent interface represents events that occur due to the user interacting with a pointing device (such as a mouse). Common events using this interface include click, dblclick, mouseup, mousedown.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "10.6"
                },
                "opera_android": {
                    "version_added": "11"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "MouseEvent"
        }
    ],
    "dom-range-getboundingclientrect": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Range.json",
            "name": "getBoundingClientRect",
            "slug": "API/Range/getBoundingClientRect",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Range/getBoundingClientRect",
            "summary": "The Range.getBoundingClientRect() method returns a DOMRect object that bounds the contents of the range; this is a rectangle enclosing the union of the bounding rectangles for all the elements in the range.",
            "support": {
                "chrome": {
                    "version_added": "4"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Range.getBoundingClientRect()"
        }
    ],
    "dom-range-getclientrects": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Range.json",
            "name": "getClientRects",
            "slug": "API/Range/getClientRects",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Range/getClientRects",
            "summary": "The Range.getClientRects() method returns a list of DOMRect objects representing the area of the screen occupied by the range. This is created by aggregating the results of calls to Element.getClientRects() for all the elements in the range.",
            "support": {
                "chrome": {
                    "version_added": "4"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "4"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5"
                },
                "safari_ios": {
                    "version_added": "4"
                },
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "37"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Range.getClientRects()"
        }
    ],
    "extensions-to-the-range-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Range.json",
            "name": "Range",
            "slug": "API/Range",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Range",
            "summary": "The Range interface represents a fragment of a document that can contain nodes and parts of text nodes.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Starting with Firefox 13, the <code>Range</code> object throws a <code>DOMException</code> as defined in DOM 4, instead of a <code>RangeException</code> defined in prior specifications."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Range"
        }
    ],
    "dom-screen-availheight": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Screen.json",
            "name": "availHeight",
            "slug": "API/Screen/availHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Screen/availHeight",
            "summary": "The read-only Screen interface's availHeight property returns the height, in CSS pixels, of the space available for Web content on the screen. Since Screen is exposed on the Window interface's window.screen property, you access availHeight using window.screen.availHeight.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Screen.availHeight"
        }
    ],
    "dom-screen-availwidth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Screen.json",
            "name": "availWidth",
            "slug": "API/Screen/availWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Screen/availWidth",
            "summary": "The Screen.availWidth property returns the amount of horizontal space (in pixels) available to the window.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Screen.availWidth"
        }
    ],
    "dom-screen-colordepth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Screen.json",
            "name": "colorDepth",
            "slug": "API/Screen/colorDepth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Screen/colorDepth",
            "summary": "The Screen.colorDepth read-only property returns the color depth of the screen. Per the CSSOM, some implementations return 24 for compatibility reasons. See the browser compatibility section for those that don't.",
            "support": {
                "chrome": {
                    "version_added": "1",
                    "notes": "Starting with version 59 this property is no longer required to always return 24."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "1.0",
                    "notes": "Starting with Samsung Internet 7.0 this property is no longer required to always return 24."
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79",
                    "notes": "Starting with version 59 this property is no longer required to always return 24."
                }
            },
            "title": "Screen.colorDepth"
        }
    ],
    "dom-screen-height": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Screen.json",
            "name": "height",
            "slug": "API/Screen/height",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Screen/height",
            "summary": "The Screen.height read-only property returns the height of the screen in pixels.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Screen.height"
        }
    ],
    "dom-screen-pixeldepth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Screen.json",
            "name": "pixelDepth",
            "slug": "API/Screen/pixelDepth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Screen/pixelDepth",
            "summary": "Returns the bit depth of the screen. Per the CSSOM, some implementations return 24 for compatibility reasons. See the browser compatibility section for those that don't.",
            "support": {
                "chrome": {
                    "version_added": "1",
                    "notes": "Starting with version 59 this property is no longer required to always return 24."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "1.0",
                    "notes": "Starting with Samsung Internet 7.0 this property is no longer required to always return 24."
                },
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79",
                    "notes": "Starting with version 59 this property is no longer required to always return 24."
                }
            },
            "title": "Screen.pixelDepth"
        }
    ],
    "dom-screen-width": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Screen.json",
            "name": "width",
            "slug": "API/Screen/width",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Screen/width",
            "summary": "The Screen.width read-only property returns the width of the screen in CSS pixels.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Screen.width"
        }
    ],
    "the-screen-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Screen.json",
            "name": "Screen",
            "slug": "API/Screen",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Screen",
            "summary": "The Screen interface represents a screen, usually the one on which the current window is being rendered, and is obtained using window.screen.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Screen"
        }
    ],
    "dom-visualviewport-height": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "height",
            "slug": "API/VisualViewport/height",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/height",
            "summary": "The height read-only property of the VisualViewport interface returns the height of the visual viewport, in CSS pixels.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport.height"
        }
    ],
    "dom-visualviewport-offsetleft": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "offsetLeft",
            "slug": "API/VisualViewport/offsetLeft",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetLeft",
            "summary": "The offsetLeft read-only property of the VisualViewport interface returns the offset of the left edge of the visual viewport from the left edge of the layout viewport in CSS pixels.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport.offsetleft"
        }
    ],
    "dom-visualviewport-offsettop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "offsetTop",
            "slug": "API/VisualViewport/offsetTop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/offsetTop",
            "summary": "The offsetTop read-only property of the VisualViewport interface returns the offset of the top edge of the visual viewport from the top edge of the layout viewport in CSS pixels.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport.offsetTop"
        }
    ],
    "dom-visualviewport-pageleft": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "pageLeft",
            "slug": "API/VisualViewport/pageLeft",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageLeft",
            "summary": "The pageLeft read-only property of the VisualViewport interface returns the x coordinate of the left edge of the visual viewport relative to the initial containing block origin, in CSS pixels.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport.pageLeft"
        }
    ],
    "dom-visualviewport-pagetop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "pageTop",
            "slug": "API/VisualViewport/pageTop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/pageTop",
            "summary": "The pageTop read-only property of the VisualViewport interface returns the y coordinate of the top edge of the visual viewport relative to the initial containing block origin, in CSS pixels.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport.pageTop"
        }
    ],
    "eventdef-window-resize": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "resize_event",
            "slug": "API/VisualViewport/resize_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/resize_event",
            "summary": "The resize event of the VisualViewport interface is fired when the visual viewport is resized.",
            "support": {
                "chrome": [
                    {
                        "version_added": "62"
                    },
                    {
                        "version_added": "61",
                        "partial_implementation": true,
                        "notes": "The <code>onresize</code> event handler property is not supported."
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": false
                },
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": {
                    "version_added": "8.0"
                },
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "partial_implementation": true,
                        "notes": "The <code>onresize</code> event handler property is not supported."
                    }
                ]
            },
            "title": "VisualViewport: resize event"
        }
    ],
    "dom-visualviewport-scale": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "scale",
            "slug": "API/VisualViewport/scale",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/scale",
            "summary": "The scale read-only property of the VisualViewport interface returns the pinch-zoom scaling factor applied to the visual viewport.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport.scale"
        }
    ],
    "dom-visualviewport-width": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "width",
            "slug": "API/VisualViewport/width",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport/width",
            "summary": "The width read-only property of the VisualViewport interface returns the width of the visual viewport, in CSS pixels.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport.width"
        }
    ],
    "the-visualviewport-interface": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/VisualViewport.json",
            "name": "VisualViewport",
            "slug": "API/VisualViewport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/VisualViewport",
            "summary": "The VisualViewport interface of the Visual Viewport API represents the visual viewport for a given window. For a page containing iframes, each iframe, as well as the containing page, will have a unique window object. Each window on a page will have a unique VisualViewport representing the properties associated with that window.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "VisualViewport"
        }
    ],
    "dom-window-devicepixelratio": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "devicePixelRatio",
            "slug": "API/Window/devicePixelRatio",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/devicePixelRatio",
            "summary": "The devicePixelRatio of Window interface returns the ratio of the resolution in physical pixels to the resolution in CSS pixels for the current display device.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "18"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "11.1"
                },
                "opera_android": {
                    "version_added": "11.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "devicepixelratio",
                "title": "Window.devicePixelRatio"
            },
            "title": "Window.devicePixelRatio"
        }
    ],
    "dom-window-innerheight": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "innerHeight",
            "slug": "API/Window/innerHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/innerHeight",
            "summary": "The read-only innerHeight property of the Window interface returns the interior height of the window in pixels, including the height of the horizontal scroll bar, if present.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "From version 4 to 24, this property could give a wrong value before page load in certain circumstances (see <a href='https://bugzil.la/641188'>bug 641188</a>)."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Before version 24, this property could give a wrong value before page load in certain circumstances (see <a href='https://bugzil.la/641188'>bug 641188</a>)."
                },
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1",
                    "notes": "This property returns the height of the <a href='https://developer.mozilla.org/docs/Glossary/visual_viewport'>visual viewport</a> instead of the layout viewport. See <a href='https://webkit.org/b/174362'>this bug</a> for details."
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.innerHeight"
        }
    ],
    "dom-window-innerwidth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "innerWidth",
            "slug": "API/Window/innerWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/innerWidth",
            "summary": "The read-only Window property innerWidth returns the interior width of the window in pixels. This includes the width of the vertical scroll bar, if one is present.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "From version 4 to 24, this property could give a wrong value before page load in certain circumstances (see <a href='https://bugzil.la/641188'>bug 641188</a>)."
                },
                "firefox_android": {
                    "version_added": "4",
                    "notes": "Before version 24, this property could give a wrong value before page load in certain circumstances (see <a href='https://bugzil.la/641188'>bug 641188</a>)."
                },
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "1",
                    "notes": "This property returns the width of the <a href='https://developer.mozilla.org/docs/Glossary/visual_viewport'>visual viewport</a> instead of the layout viewport. See <a href='https://webkit.org/b/174362'>this bug</a> for details."
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.innerWidth"
        }
    ],
    "dom-window-matchmedia": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "matchMedia",
            "slug": "API/Window/matchMedia",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia",
            "summary": "The Window interface's matchMedia() method returns a new MediaQueryList object that can then be used to determine if the document matches the media query string, as well as to monitor the document to detect when it matches (or stops matching) that media query.",
            "support": {
                "chrome": {
                    "version_added": "9"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "6"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "10"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "5.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "3"
                },
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "caniuse": {
                "feature": "matchmedia",
                "title": "matchMedia"
            },
            "title": "Window.matchMedia()"
        }
    ],
    "dom-window-moveby": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "moveBy",
            "slug": "API/Window/moveBy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/moveBy",
            "summary": "The moveBy() method of the Window interface moves the current window by a specified amount.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.moveBy()"
        }
    ],
    "dom-window-moveto": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "moveTo",
            "slug": "API/Window/moveTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/moveTo",
            "summary": "The moveTo() method of the Window interface moves the current window to the specified coordinates.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.moveTo()"
        }
    ],
    "the-features-argument-to-the-open()-method": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "open",
            "slug": "API/Window/open",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/open",
            "summary": "The open() method of the Window interface loads a specified resource into a new or existing browsing context (that is, a tab, a window, or an iframe) under a specified name.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.open()"
        }
    ],
    "dom-window-outerheight": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "outerHeight",
            "slug": "API/Window/outerHeight",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/outerHeight",
            "summary": "The Window.outerHeight read-only property returns the height in pixels of the whole browser window, including any sidebar, window chrome, and window-resizing borders/handles.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "3"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.outerHeight"
        }
    ],
    "dom-window-outerwidth": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "outerWidth",
            "slug": "API/Window/outerWidth",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/outerWidth",
            "summary": "Window.outerWidth read-only property returns the width of the outside of the browser window. It represents the width of the whole browser window including sidebar (if expanded), window chrome and window resizing borders/handles.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "9"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "3"
                },
                "safari_ios": {
                    "version_added": "3"
                },
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.outerWidth"
        }
    ],
    "dom-window-pagexoffset": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "pageXOffset",
            "slug": "API/Window/pageXOffset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/pageXOffset",
            "summary": "The read-only Window property pageXOffset is an alias for scrollX.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.pageXOffset"
        }
    ],
    "dom-window-pageyoffset": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "pageYOffset",
            "slug": "API/Window/pageYOffset",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/pageYOffset",
            "summary": "The read-only Window property pageYOffset is an alias for scrollY; as such, it returns the number of pixels the document is currently scrolled along the vertical axis (that is, up or down) with a value of 0.0, indicating that the top edge of the Document is currently aligned with the top edge of the window's content area.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.pageYOffset"
        }
    ],
    "resizing-viewports": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "resize_event",
            "slug": "API/Window/resize_event",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/resize_event",
            "summary": "The resize event fires when the document view (window) has been resized.",
            "support": {
                "chrome": {
                    "version_added": "1",
                    "notes": "Chrome does not fire a <code>resize</code> event on page load."
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Before Firefox 68, Firefox fired a <code>resize</code> event on page load. This is no longer the case."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "7",
                    "notes": "Opera does not fire a <code>resize</code> event on page load."
                },
                "opera_android": {
                    "version_added": "10.1",
                    "notes": "Opera does not fire a <code>resize</code> event on page load."
                },
                "safari": {
                    "version_added": "1.1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": {
                    "version_added": "1",
                    "notes": "WebView does not fire a <code>resize</code> event on page load."
                },
                "edge_blink": {
                    "version_added": "79",
                    "notes": "Chrome does not fire a <code>resize</code> event on page load."
                }
            },
            "title": "Window: resize event"
        }
    ],
    "dom-window-resizeby": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "resizeBy",
            "slug": "API/Window/resizeBy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/resizeBy",
            "summary": "The Window.resizeBy() method resizes the current window by a specified amount.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Since Firefox 7, it's no longer possible for a web site to change the default size of a window in a browser if the window wasn't created by <code>window.open</code> or contains more than one tab. <a href='https://bugzil.la/565541#c24'>See here</a> for more details."
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.resizeBy()"
        }
    ],
    "dom-window-resizeto": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "resizeTo",
            "slug": "API/Window/resizeTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/resizeTo",
            "summary": "The Window.resizeTo() method dynamically resizes the window.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Since Firefox 7, it's no longer possible for a web site to change the default size of a window in a browser if the window wasn't created by <code>window.open</code> or contains more than one tab. <a href='https://bugzil.la/565541#c24'>See here</a> for more details."
                },
                "firefox_android": {
                    "version_added": "4"
                },
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.resizeTo()"
        }
    ],
    "dom-window-screen": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "screen",
            "slug": "API/Window/screen",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/screen",
            "summary": "The Window property screen returns a reference to the screen object associated with the window. The screen object, implementing the Screen interface, is a special object for inspecting properties of the screen on which the current window is being rendered.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.screen"
        }
    ],
    "dom-window-screenleft": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "screenLeft",
            "slug": "API/Window/screenLeft",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/screenLeft",
            "summary": "The Window.screenLeft read-only property returns the horizontal distance, in CSS pixels, from the left border of the user's browser viewport to the left side of the screen.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "64"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.screenLeft"
        }
    ],
    "dom-window-screentop": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "screenTop",
            "slug": "API/Window/screenTop",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/screenTop",
            "summary": "The Window.screenTop read-only property returns the vertical distance, in CSS pixels, from the top border of the user's browser viewport to the top side of the screen.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "64"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "5"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.screenTop"
        }
    ],
    "dom-window-screenx": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "screenX",
            "slug": "API/Window/screenX",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/screenX",
            "summary": "The Window.screenX read-only property returns the horizontal distance, in CSS pixels, of the left border of the user's browser viewport to the left side of the screen.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Before Firefox 28, Gecko was using device pixels instead of CSS pixels; in other words, it was assuming a value of <code>screenPixelsPerCSSPixel</code> of 1 for any device."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.screenX"
        }
    ],
    "dom-window-screeny": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "screenY",
            "slug": "API/Window/screenY",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/screenY",
            "summary": "The Window.screenY read-only property returns the vertical distance, in CSS pixels, of the top border of the user's browser viewport to the top edge of the screen.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1",
                    "notes": "Before Firefox 28, Gecko was using device pixels instead of CSS pixels; in other words, it was assuming a value of <code>screenPixelsPerCSSPixel</code> of 1 for any device."
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "12.1"
                },
                "opera_android": {
                    "version_added": "12.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.screenY"
        }
    ],
    "dom-window-scroll": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "scroll",
            "slug": "API/Window/scroll",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/scroll",
            "summary": "The Window.scroll() method scrolls the window to a particular place in the document.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.scroll()"
        }
    ],
    "dom-window-scrollby": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "scrollBy",
            "slug": "API/Window/scrollBy",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollBy",
            "summary": "The Window.scrollBy() method scrolls the document in the window by the given amount.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "11"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "3"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.scrollBy()"
        }
    ],
    "dom-window-scrollto": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "scrollTo",
            "slug": "API/Window/scrollTo",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo",
            "summary": "Window.scrollTo() scrolls to a particular set of coordinates in the document.",
            "support": {
                "chrome": {
                    "version_added": "1"
                },
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": {
                    "version_added": "1"
                },
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "4"
                },
                "oculus": "mirror",
                "opera": {
                    "version_added": "4"
                },
                "opera_android": {
                    "version_added": "10.1"
                },
                "safari": {
                    "version_added": "1"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.scrollTo()"
        }
    ],
    "dom-window-scrollx": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "scrollX",
            "slug": "API/Window/scrollX",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollX",
            "summary": "The read-only scrollX property of the Window interface returns the number of pixels that the document is currently scrolled horizontally. This value is subpixel precise in modern browsers, meaning that it isn't necessarily a whole number. You can get the number of pixels the document is scrolled vertically from the scrollY property.",
            "support": {
                "chrome": [
                    {
                        "version_added": "1"
                    },
                    {
                        "version_added": "1",
                        "alternative_name": "pageXOffset"
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "1"
                    },
                    {
                        "version_added": "1",
                        "alternative_name": "pageXOffset"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9",
                    "alternative_name": "pageXOffset"
                },
                "oculus": "mirror",
                "opera": [
                    {
                        "version_added": "9.6"
                    },
                    {
                        "version_added": "4",
                        "alternative_name": "pageXOffset"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "10.1"
                    },
                    {
                        "version_added": "10.1",
                        "alternative_name": "pageXOffset"
                    }
                ],
                "safari": [
                    {
                        "version_added": "1"
                    },
                    {
                        "version_added": "1",
                        "alternative_name": "pageXOffset"
                    }
                ],
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "alternative_name": "pageXOffset"
                    }
                ]
            },
            "title": "Window.scrollX"
        }
    ],
    "dom-window-scrolly": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "scrollY",
            "slug": "API/Window/scrollY",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollY",
            "summary": "The read-only scrollY property of the Window interface returns the number of pixels that the document is currently scrolled vertically.",
            "support": {
                "chrome": [
                    {
                        "version_added": "1"
                    },
                    {
                        "version_added": "1",
                        "alternative_name": "pageYOffset"
                    }
                ],
                "chrome_android": "mirror",
                "edge": {
                    "version_added": "12"
                },
                "firefox": [
                    {
                        "version_added": "1"
                    },
                    {
                        "version_added": "1",
                        "alternative_name": "pageYOffset"
                    }
                ],
                "firefox_android": "mirror",
                "ie": {
                    "version_added": "9",
                    "alternative_name": "pageYOffset"
                },
                "oculus": "mirror",
                "opera": [
                    {
                        "version_added": "9.6"
                    },
                    {
                        "version_added": "4",
                        "alternative_name": "pageYOffset"
                    }
                ],
                "opera_android": [
                    {
                        "version_added": "10.1"
                    },
                    {
                        "version_added": "10.1",
                        "alternative_name": "pageYOffset"
                    }
                ],
                "safari": [
                    {
                        "version_added": "1"
                    },
                    {
                        "version_added": "1",
                        "alternative_name": "pageYOffset"
                    }
                ],
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": [
                    {
                        "version_added": "79"
                    },
                    {
                        "version_added": "79",
                        "alternative_name": "pageYOffset"
                    }
                ]
            },
            "title": "Window.scrollY"
        }
    ],
    "dom-window-visualviewport": [
        {
            "engines": [
                "blink",
                "gecko",
                "webkit"
            ],
            "filename": "api/Window.json",
            "name": "visualViewport",
            "slug": "API/Window/visualViewport",
            "mdn_url": "https://developer.mozilla.org/en-US/docs/Web/API/Window/visualViewport",
            "summary": "The visualViewport read-only property of the Window interface returns a VisualViewport object representing the visual viewport for a given window.",
            "support": {
                "chrome": {
                    "version_added": "61"
                },
                "chrome_android": "mirror",
                "edge": "mirror",
                "firefox": {
                    "version_added": "91"
                },
                "firefox_android": {
                    "version_added": "68"
                },
                "ie": {
                    "version_added": false
                },
                "oculus": "mirror",
                "opera": "mirror",
                "opera_android": "mirror",
                "safari": {
                    "version_added": "13"
                },
                "safari_ios": "mirror",
                "samsunginternet_android": "mirror",
                "webview_android": "mirror",
                "edge_blink": {
                    "version_added": "79"
                }
            },
            "title": "Window.visualViewport"
        }
    ]
}
