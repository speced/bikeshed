{
  "%AsyncGeneratorPrototype%.next ( value )": [
    "%AsyncGeneratorPrototype%.next(value)"
  ],
  "%AsyncGeneratorPrototype%.return ( value )": [
    "%AsyncGeneratorPrototype%.return(value)"
  ],
  "%AsyncGeneratorPrototype%.throw ( exception )": [
    "%AsyncGeneratorPrototype%.throw(exception)"
  ],
  "%GeneratorPrototype%.next ( value )": [
    "%GeneratorPrototype%.next(value)"
  ],
  "%GeneratorPrototype%.return ( value )": [
    "%GeneratorPrototype%.return(value)"
  ],
  "%GeneratorPrototype%.throw ( exception )": [
    "%GeneratorPrototype%.throw(exception)"
  ],
  "%TypedArray%": [
    "at(index)",
    "buffer",
    "byteLength",
    "byteOffset",
    "copyWithin(target, start, end)",
    "entries()",
    "every(callback, thisArg)",
    "fill(value, start, end)",
    "filter(callback, thisArg)",
    "find(predicate, thisArg)",
    "findIndex(predicate, thisArg)",
    "findLast(predicate, thisArg)",
    "findLastIndex(predicate, thisArg)",
    "forEach(callback, thisArg)",
    "includes(searchElement, fromIndex)",
    "indexOf(searchElement, fromIndex)",
    "join(separator)",
    "keys()",
    "lastIndexOf(searchElement, fromIndex)",
    "length",
    "map(callback, thisArg)",
    "reduce(callback, initialValue)",
    "reduceRight(callback, initialValue)",
    "reverse()",
    "set(source, offset)",
    "slice(start, end)",
    "some(callback, thisArg)",
    "sort(comparator)",
    "subarray(start, end)",
    "toLocaleString(reserved1, reserved2)",
    "toReversed()",
    "toSorted(comparator)",
    "toString()",
    "values()",
    "with(index, value)"
  ],
  "%TypedArray%.prototype [ %Symbol.iterator% ] ( )": [
    "%TypedArray%.prototype %Symbol.iterator% ()"
  ],
  "%TypedArray%.prototype [ %Symbol.toStringTag% ]": [
    "get %TypedArray%.prototype [ %Symbol.toStringTag% ]"
  ],
  "/": [
    "",
    "!",
    "\"@charset\"",
    "\"absolute-url\"",
    "\"accelerometer\"",
    "\"all\"-named elements",
    "\"audio\"",
    "\"bluetooth\"",
    "\"camera\"",
    "\"cbcs\"",
    "\"cenc\"",
    "\"coep\" report type",
    "\"detail\"",
    "\"digital-credentials-get\"",
    "\"display-capture\"",
    "\"empty\"",
    "\"english-linear\"",
    "\"english-rotation\"",
    "\"flag\"",
    "\"gamepad\"",
    "\"geolocation\"",
    "\"gyroscope\"",
    "\"idle-detection\"",
    "\"l1t1\"",
    "\"l1t2\"",
    "\"l1t3\"",
    "\"l2t1\"",
    "\"l2t1h\"",
    "\"l2t2\"",
    "\"l2t2_key\"",
    "\"l2t2_key_shift\"",
    "\"l2t2h\"",
    "\"l2t3\"",
    "\"l2t3_key\"",
    "\"l2t3_key_shift\"",
    "\"l2t3h\"",
    "\"l3t1\"",
    "\"l3t1_key\"",
    "\"l3t1h\"",
    "\"l3t2\"",
    "\"l3t2_key\"",
    "\"l3t2_key_shift\"",
    "\"l3t2h\"",
    "\"l3t3\"",
    "\"l3t3_key\"",
    "\"l3t3_key_shift\"",
    "\"l3t3h\"",
    "\"magnetometer\"",
    "\"microphone\"",
    "\"midi\"",
    "\"mime\"",
    "\"motion\"",
    "\"music\"",
    "\"no-referrer\"",
    "\"no-referrer-when-downgrade\"",
    "\"none\"",
    "\"nothing\"",
    "\"origin\"",
    "\"origin-when-cross-origin\"",
    "\"payment\"",
    "\"private-network-access\"",
    "\"push\"",
    "\"reserved\"",
    "\"s2t1\"",
    "\"s2t1h\"",
    "\"s2t2\"",
    "\"s2t2h\"",
    "\"s2t3\"",
    "\"s2t3h\"",
    "\"s3t1\"",
    "\"s3t1h\"",
    "\"s3t2\"",
    "\"s3t2h\"",
    "\"s3t3\"",
    "\"s3t3h\"",
    "\"same-origin\"",
    "\"si-linear\"",
    "\"si-rotation\"",
    "\"smart-poster\"",
    "\"speaker-selection\"",
    "\"speech\"",
    "\"speech-recognition\"",
    "\"strict-origin\"",
    "\"strict-origin-when-cross-origin\"",
    "\"text\"",
    "\"unknown\"",
    "\"unsafe-url\"",
    "\"url\"",
    "\"vendor-defined\"",
    "\"video\"",
    "\"viewport-capture\"",
    "\"web-share\"",
    "\"xr\"",
    "\"xr-session-supported\"",
    "\"xr-standard\" gamepad mapping",
    "#",
    "%AggregateError%",
    "%AggregateError.prototype%",
    "%Array%",
    "%Array.prototype%",
    "%ArrayBuffer%",
    "%ArrayBuffer.prototype%",
    "%ArrayIteratorPrototype%",
    "%AsyncFromSyncIteratorPrototype%",
    "%AsyncFunction%",
    "%AsyncFunction.prototype%",
    "%AsyncGeneratorFunction%",
    "%AsyncGeneratorFunction.prototype%",
    "%AsyncGeneratorFunction.prototype.prototype%",
    "%AsyncGeneratorPrototype%",
    "%AsyncIteratorPrototype%",
    "%Atomics%",
    "%BigInt%",
    "%BigInt.prototype%",
    "%BigInt64Array%",
    "%BigUint64Array%",
    "%Boolean%",
    "%Boolean.prototype%",
    "%DataView%",
    "%DataView.prototype%",
    "%Date%",
    "%Date.prototype%",
    "%Error%",
    "%Error.prototype%",
    "%EvalError%",
    "%FinalizationRegistry%",
    "%FinalizationRegistry.prototype%",
    "%Float32Array%",
    "%Float64Array%",
    "%ForInIteratorPrototype%",
    "%Function%",
    "%Function.prototype%",
    "%GeneratorFunction%",
    "%GeneratorFunction.prototype%",
    "%GeneratorFunction.prototype.prototype%",
    "%GeneratorPrototype%",
    "%Int16Array%",
    "%Int32Array%",
    "%Int8Array%",
    "%IteratorPrototype%",
    "%JSON%",
    "%Map%",
    "%Map.prototype%",
    "%MapIteratorPrototype%",
    "%Math%",
    "%Number%",
    "%Number.prototype%",
    "%Object%",
    "%Object.prototype%",
    "%Promise%",
    "%Promise.prototype%",
    "%Proxy%",
    "%RangeError%",
    "%ReferenceError%",
    "%Reflect%",
    "%RegExp%",
    "%RegExp.prototype%",
    "%RegExpStringIteratorPrototype%",
    "%Set%",
    "%Set.prototype%",
    "%SetIteratorPrototype%",
    "%SharedArrayBuffer%",
    "%SharedArrayBuffer.prototype%",
    "%String%",
    "%String.prototype%",
    "%StringIteratorPrototype%",
    "%Symbol%",
    "%Symbol.asyncIterator%",
    "%Symbol.hasInstance%",
    "%Symbol.isConcatSpreadable%",
    "%Symbol.iterator%",
    "%Symbol.match%",
    "%Symbol.matchAll%",
    "%Symbol.prototype%",
    "%Symbol.replace%",
    "%Symbol.search%",
    "%Symbol.species%",
    "%Symbol.split%",
    "%Symbol.toPrimitive%",
    "%Symbol.toStringTag%",
    "%Symbol.unscopables%",
    "%SyntaxError%",
    "%ThrowTypeError%",
    "%TypeError%",
    "%TypedArray%",
    "%TypedArray.prototype%",
    "%URIError%",
    "%Uint16Array%",
    "%Uint32Array%",
    "%Uint8Array%",
    "%Uint8ClampedArray%",
    "%WeakMap%",
    "%WeakMap.prototype%",
    "%WeakRef%",
    "%WeakRef.prototype%",
    "%WeakSet%",
    "%WeakSet.prototype%",
    "%evalerror.prototype%",
    "%hh encoding",
    "%rangeerror.prototype%",
    "%referenceerror.prototype%",
    "%symbol.hasinstance%",
    "%symbol.isconcatspreadable%",
    "%symbol.toprimitive%",
    "%symbol.tostringtag%",
    "%syntaxerror.prototype%",
    "%typeerror.prototype%",
    "%urierror.prototype%",
    "&",
    "&&",
    "'all' media group",
    "'allow'",
    "'audio' media group",
    "'bitmap' media group",
    "'block'",
    "'continuous' media group",
    "'false'",
    "'grid' media group",
    "'inline-speculation-rules'",
    "'interactive media group",
    "'none'",
    "'none'::as border style",
    "'none'::as display value",
    "'paged' media group",
    "'report-sample'",
    "'self'",
    "'speech' media group",
    "'static' media group",
    "'strict-dynamic'",
    "'tactile' media group",
    "'true'",
    "'unsafe-allow-redirects'",
    "'unsafe-eval'",
    "'unsafe-hashes'",
    "'unsafe-inline'",
    "'visual' media group",
    "'wasm-unsafe-eval'",
    "*",
    "+",
    ",",
    "--*",
    "-webkit-align-content",
    "-webkit-align-items",
    "-webkit-align-self",
    "-webkit-animation",
    "-webkit-animation-delay",
    "-webkit-animation-direction",
    "-webkit-animation-duration",
    "-webkit-animation-fill-mode",
    "-webkit-animation-iteration-count",
    "-webkit-animation-name",
    "-webkit-animation-play-state",
    "-webkit-animation-timing-function",
    "-webkit-app-region",
    "-webkit-appearance",
    "-webkit-backface-visibility",
    "-webkit-background-clip",
    "-webkit-background-origin",
    "-webkit-background-size",
    "-webkit-border-bottom-left-radius",
    "-webkit-border-bottom-right-radius",
    "-webkit-border-radius",
    "-webkit-border-top-left-radius",
    "-webkit-border-top-right-radius",
    "-webkit-box-align",
    "-webkit-box-flex",
    "-webkit-box-ordinal-group",
    "-webkit-box-orient",
    "-webkit-box-pack",
    "-webkit-box-shadow",
    "-webkit-box-sizing",
    "-webkit-filter",
    "-webkit-flex",
    "-webkit-flex-basis",
    "-webkit-flex-direction",
    "-webkit-flex-flow",
    "-webkit-flex-grow",
    "-webkit-flex-shrink",
    "-webkit-flex-wrap",
    "-webkit-image-set()",
    "-webkit-justify-content",
    "-webkit-line-clamp",
    "-webkit-linear-gradient()",
    "-webkit-mask",
    "-webkit-mask-box-image",
    "-webkit-mask-box-image-outset",
    "-webkit-mask-box-image-repeat",
    "-webkit-mask-box-image-slice",
    "-webkit-mask-box-image-source",
    "-webkit-mask-box-image-width",
    "-webkit-mask-clip",
    "-webkit-mask-composite",
    "-webkit-mask-image",
    "-webkit-mask-origin",
    "-webkit-mask-position",
    "-webkit-mask-repeat",
    "-webkit-mask-size",
    "-webkit-order",
    "-webkit-perspective",
    "-webkit-perspective-origin",
    "-webkit-radial-gradient()",
    "-webkit-repeating-linear-gradient()",
    "-webkit-repeating-radial-gradient()",
    "-webkit-text-fill-color",
    "-webkit-text-size-adjust",
    "-webkit-text-stroke",
    "-webkit-text-stroke-color",
    "-webkit-text-stroke-width",
    "-webkit-transform",
    "-webkit-transform-origin",
    "-webkit-transform-style",
    "-webkit-transition",
    "-webkit-transition-delay",
    "-webkit-transition-duration",
    "-webkit-transition-property",
    "-webkit-transition-timing-function",
    "-webkit-user-select",
    "/deep/",
    "1-dimensional image",
    "1-ua",
    "1-ua mode",
    "1d image",
    "2-ua",
    "2-ua mode",
    "24-bit depth",
    "2d",
    "2d context creation algorithm",
    "2d matrix",
    "3.4.1. generate report of type with data",
    "3d matrix",
    "3d rendering context",
    "3d transform functions",
    "3d transformed element",
    "3dof",
    "4x4 abstract matrix",
    "5.4 generate a network error report",
    "5.5 deliver a network report",
    "64-bit integer",
    "6dof",
    ":-webkit-autofill",
    "::after",
    "::attr()",
    "::backdrop",
    "::before",
    "::content",
    "::cue",
    "::cue(selector)",
    "::cue-region",
    "::cue-region(selector)",
    "::details-content",
    "::file-selector-button",
    "::first-letter",
    "::first-line",
    "::grammar-error",
    "::highlight(<custom-highlight-name>)",
    "::marker",
    "::nth-fragment()",
    "::part()",
    "::placeholder",
    "::scroll-marker",
    "::scroll-marker-group",
    "::selection",
    "::shadow",
    "::slotted()",
    "::spelling-error",
    "::target-text",
    "::view-transition",
    "::view-transition-group()",
    "::view-transition-image-pair()",
    "::view-transition-new()",
    "::view-transition-old()",
    ":active",
    ":active-view-transition",
    ":active-view-transition-type()",
    ":after",
    ":any-link",
    ":autofill",
    ":before",
    ":blank",
    ":buffering",
    ":checked",
    ":closed",
    ":current",
    ":current()",
    ":default",
    ":defined",
    ":dir()",
    ":dir(ltr)",
    ":dir(rtl)",
    ":disabled",
    ":empty",
    ":enabled",
    ":first",
    ":first-child",
    ":first-letter",
    ":first-line",
    ":first-of-page",
    ":first-of-type",
    ":focus",
    ":focus-visible",
    ":focus-within",
    ":fullscreen",
    ":future",
    ":has()",
    ":has-allowed pseudo-element",
    ":host",
    ":host()",
    ":host-context()",
    ":hover",
    ":in-range",
    ":indeterminate",
    ":invalid",
    ":is()",
    ":lang",
    ":lang()",
    ":last-child",
    ":last-of-page",
    ":last-of-type",
    ":left",
    ":link",
    ":local-link",
    ":matches()",
    ":modal",
    ":muted",
    ":not()",
    ":nth()",
    ":nth-child()",
    ":nth-col()",
    ":nth-last-child()",
    ":nth-last-col()",
    ":nth-last-of-type()",
    ":nth-of-page(n)",
    ":nth-of-type()",
    ":only-child",
    ":only-of-type",
    ":open",
    ":optional",
    ":out-of-range",
    ":past",
    ":paused",
    ":picture-in-picture",
    ":placeholder-shown",
    ":playing",
    ":popover-open",
    ":read-only",
    ":read-write",
    ":required",
    ":right",
    ":root",
    ":scope",
    ":seeking",
    ":snapped",
    ":snapped-block",
    ":snapped-inline",
    ":snapped-x",
    ":snapped-y",
    ":stalled",
    ":start-of-page",
    ":state()",
    ":target",
    ":target-within",
    ":user-invalid",
    ":user-valid",
    ":valid",
    ":visited",
    ":volume-locked",
    ":where()",
    ":xr-overlay",
    "<(-token>",
    "<)-token>",
    "<[-token>",
    "<]-token>",
    "<abs/>",
    "<absolute-size>",
    "<alphavalue>",
    "<an+b>",
    "<anchor-element>",
    "<anchor-side>",
    "<anchor-size>",
    "<and/>",
    "<angle-percentage>",
    "<angle>",
    "<angular-color-hint>",
    "<angular-color-stop-list>",
    "<angular-color-stop>",
    "<animateable-feature>",
    "<antecedent>",
    "<any-value>",
    "<apply>",
    "<approx/>",
    "<arccos/>",
    "<arccosh/>",
    "<arccot/>",
    "<arccoth/>",
    "<arccsc/>",
    "<arccsch/>",
    "<arcsec/>",
    "<arcsech/>",
    "<arcsin/>",
    "<arcsinh/>",
    "<arctan/>",
    "<arctanh/>",
    "<arg/>",
    "<at-keyword-token>",
    "<at-rule-list>",
    "<atomic-condition>",
    "<attachment>",
    "<attr-matcher>",
    "<attr-modifier>",
    "<attr-name>",
    "<attr-type>",
    "<attribute-selector>",
    "<auto-repeat>",
    "<auto-track-list>",
    "<autospace>",
    "<axis>",
    "<bad-string-token>",
    "<bad-url-token>",
    "<baseline-position>",
    "<basic-shape-rect>",
    "<basic-shape>",
    "<bg-clip>",
    "<bg-image>",
    "<bg-layer>",
    "<bg-position>",
    "<bg-size>",
    "<bind>",
    "<blend-mode>",
    "<block-contents>",
    "<bool-and>",
    "<bool-in-parens>",
    "<bool-not>",
    "<bool-or>",
    "<bool-test>",
    "<boolean-constant>",
    "<boolean-without-or>",
    "<boolean>",
    "<border-style>",
    "<border-width>",
    "<bottom>",
    "<box>",
    "<bvar>",
    "<calc-keyword>",
    "<calc-mix()>",
    "<calc-number-product>",
    "<calc-number-sum>",
    "<calc-number-value>",
    "<calc-product>",
    "<calc-size-basis>",
    "<calc-sum>",
    "<calc-value>",
    "<card/>",
    "<cartesianproduct/>",
    "<cbytes>",
    "<cdc-token>",
    "<cdo-token>",
    "<ceiling/>",
    "<cerror>",
    "<cf-image>",
    "<ci>",
    "<class-selector>",
    "<clip-source>",
    "<cmyk-component>",
    "<cn>",
    "<codomain/>",
    "<colon-token>",
    "<color-base>",
    "<color-font-tech>",
    "<color-function>",
    "<color-interpolation-method>",
    "<color-space>",
    "<color-stop-angle>",
    "<color-stop-length>",
    "<color-stop-list>",
    "<color-stop>",
    "<color-stripe>",
    "<color>",
    "<colorspace-params>",
    "<combinator>",
    "<comma-token>",
    "<common-lig-values>",
    "<comparison-operand>",
    "<comparison-operator>",
    "<complex-real-selector-list>",
    "<complex-real-selector>",
    "<complex-selector-list>",
    "<complex-selector-unit>",
    "<complex-selector>",
    "<complexes/>",
    "<compose/>",
    "<composite-mode>",
    "<compositing-operator>",
    "<compound-selector-list>",
    "<compound-selector>",
    "<condition-in-parens>",
    "<condition>",
    "<conic-gradient-syntax>",
    "<conjugate/>",
    "<consequent>",
    "<container-condition>",
    "<container-name>",
    "<container-progress()>",
    "<container-query>",
    "<content-distribution>",
    "<content-level>",
    "<content-list>",
    "<content-position>",
    "<contextual-alt-values>",
    "<control-point>",
    "<coord-box>",
    "<cos/>",
    "<cosh/>",
    "<cot/>",
    "<coth/>",
    "<counter-name>",
    "<counter-style-name>",
    "<counter-style>",
    "<counter>",
    "<cs>",
    "<csc/>",
    "<csch/>",
    "<css-type>",
    "<csymbol>",
    "<cubic-bezier-easing-function>",
    "<curl/>",
    "<custom-arg>",
    "<custom-color-space>",
    "<custom-highlight-name>",
    "<custom-ident>",
    "<custom-params>",
    "<custom-property-name>",
    "<custom-selector>",
    "<dasharray>",
    "<dashed-function>",
    "<dashed-ident>",
    "<dashndashdigit-ident>",
    "<declaration-list>",
    "<declaration-rule-list>",
    "<declaration-value>",
    "<degree>",
    "<delim-token>",
    "<deprecated-color>",
    "<determinant/>",
    "<diff/>",
    "<dimension-token>",
    "<dimension-unit>",
    "<dimension>",
    "<discretionary-lig-values>",
    "<display-box>",
    "<display-inside>",
    "<display-internal>",
    "<display-legacy>",
    "<display-listitem>",
    "<display-outside>",
    "<divergence/>",
    "<divide/>",
    "<domain/>",
    "<domainofapplication>",
    "<easing-function>",
    "<east-asian-variant-values>",
    "<east-asian-width-values>",
    "<emptyset/>",
    "<eof-token>",
    "<eq/>",
    "<equivalent/>",
    "<eulergamma/>",
    "<exists/>",
    "<exp/>",
    "<explicit-track-list>",
    "<exponentiale/>",
    "<extension-name>",
    "<factorial/>",
    "<factorof/>",
    "<false/>",
    "<family-name>",
    "<feature-value-name>",
    "<filter-function>",
    "<filter-value-list>",
    "<final-bg-layer>",
    "<first-valid()>",
    "<fixed-breadth>",
    "<fixed-repeat>",
    "<fixed-size>",
    "<flex>",
    "<floor/>",
    "<font-features-tech>",
    "<font-format>",
    "<font-src-list>",
    "<font-src>",
    "<font-tech>",
    "<font-variant-css2>",
    "<font-weight-absolute>",
    "<font-width-css3>",
    "<forall/>",
    "<forgiving-relative-selector-list>",
    "<forgiving-selector-list>",
    "<frequency-percentage>",
    "<frequency>",
    "<function-dependency-list>",
    "<function-name>",
    "<function-parameter-list>",
    "<function-parameter>",
    "<function-token>",
    "<gcd/>",
    "<general-enclosed>",
    "<generic-complete>",
    "<generic-family>",
    "<generic-incomplete>",
    "<generic-script-specific>",
    "<generic-voice>",
    "<geometry-box>",
    "<geq/>",
    "<grad/>",
    "<gradient>",
    "<gt/>",
    "<hash-token>",
    "<hex-color>",
    "<historical-lig-values>",
    "<hue-interpolation-method>",
    "<hue>",
    "<id-selector>",
    "<id>",
    "<ident-token>",
    "<ident/>",
    "<ident>",
    "<identifier>",
    "<image-1d>",
    "<image-set-option>",
    "<image-src>",
    "<image-tags>",
    "<image/>",
    "<image>",
    "<imaginary/>",
    "<imaginaryi/>",
    "<implies/>",
    "<import-conditions>",
    "<in/>",
    "<infinity/>",
    "<inflexible-breadth>",
    "<inset-area>",
    "<int/>",
    "<integer>",
    "<integers/>",
    "<intersect/>",
    "<intrinsic-size-keyword>",
    "<inverse/>",
    "<isolation-mode>",
    "<keyframe-block>",
    "<keyframe-selector>",
    "<keyframes-name>",
    "<lambda>",
    "<laplacian/>",
    "<layer-name>",
    "<layout-box>",
    "<lcm/>",
    "<leader-type>",
    "<left>",
    "<legacy-device-cmyk-syntax>",
    "<legacy-hsl-syntax>",
    "<legacy-hsla-syntax>",
    "<legacy-pseudo-element-selector>",
    "<legacy-rgb-syntax>",
    "<legacy-rgba-syntax>",
    "<length-percentage>",
    "<length>",
    "<leq/>",
    "<limit/>",
    "<line-name-list>",
    "<line-names>",
    "<line-style>",
    "<line-width>",
    "<linear-color-hint>",
    "<linear-color-stop>",
    "<linear-easing-function>",
    "<linear-gradient-syntax>",
    "<linear-stop-length>",
    "<linear-stop-list>",
    "<linear-stop>",
    "<link-param>",
    "<list>",
    "<ln/>",
    "<log/>",
    "<logbase>",
    "<lowlimit>",
    "<lt/>",
    "<margin-width>",
    "<marker-ref>",
    "<mask-layer>",
    "<mask-reference>",
    "<mask-source>",
    "<masking-mode>",
    "<matrix/>",
    "<matrixrow/>",
    "<max/>",
    "<mean/>",
    "<media-and>",
    "<media-condition-without-or>",
    "<media-condition>",
    "<media-feature>",
    "<media-in-parens>",
    "<media-not>",
    "<media-or>",
    "<media-progress()>",
    "<media-query-list>",
    "<media-query>",
    "<media-type>",
    "<median/>",
    "<mf-boolean>",
    "<mf-comparison>",
    "<mf-eq>",
    "<mf-gt>",
    "<mf-lt>",
    "<mf-name>",
    "<mf-plain>",
    "<mf-range>",
    "<mf-value>",
    "<min/>",
    "<mix()>",
    "<mode/>",
    "<modern-device-cmyk-syntax>",
    "<modern-hsl-syntax>",
    "<modern-hsla-syntax>",
    "<modern-rgb-syntax>",
    "<modern-rgba-syntax>",
    "<moment/>",
    "<momentabout>",
    "<mq-boolean>",
    "<n-dimension>",
    "<na-name>",
    "<na-prefix>",
    "<name-repeat>",
    "<named-color>",
    "<namespace-attr>",
    "<namespace-prefix>",
    "<naturalnumbers/>",
    "<ndash-dimension>",
    "<ndashdigit-dimension>",
    "<ndashdigit-ident>",
    "<neq/>",
    "<not/>",
    "<notanumber/>",
    "<notin/>",
    "<notprsubset/>",
    "<notsubset/>",
    "<ns-prefix>",
    "<number-optional-number>",
    "<number-token>",
    "<number>",
    "<numeric-figure-values>",
    "<numeric-fraction-values>",
    "<numeric-spacing-values>",
    "<offset-path>",
    "<opentype-tag>",
    "<or/>",
    "<otherwise>",
    "<outerproduct/>",
    "<outline-line-style>",
    "<overflow-position>",
    "<padding-width>",
    "<page-selector-list>",
    "<page-selector>",
    "<paint-box>",
    "<paint>",
    "<partialdiff/>",
    "<percentage-token>",
    "<percentage>",
    "<pi/>",
    "<piece>",
    "<piecewise>",
    "<plus/>",
    "<points>",
    "<polar-color-space>",
    "<position-area>",
    "<position>",
    "<power/>",
    "<predefined-polar-params>",
    "<predefined-rectangular-params>",
    "<predefined-rectangular>",
    "<predefined-rgb-params>",
    "<predefined-rgb>",
    "<primes/>",
    "<product/>",
    "<progress()>",
    "<progress>",
    "<prsubset/>",
    "<pseudo-class-selector>",
    "<pseudo-compound-selector>",
    "<pseudo-element-selector>",
    "<pseudo-page>",
    "<pt-class-selector>",
    "<pt-name-and-class-selector>",
    "<pt-name-selector>",
    "<qualified-rule-list>",
    "<query-in-parens>",
    "<quirky-color>",
    "<quirky-length>",
    "<quote>",
    "<quotient/>",
    "<radial-extent>",
    "<radial-gradient-syntax>",
    "<radial-shape>",
    "<radial-size>",
    "<random-caching-options>",
    "<ratio>",
    "<rationals/>",
    "<ray-size>",
    "<real/>",
    "<reals/>",
    "<rectangular-color-space>",
    "<relative-real-selector-list>",
    "<relative-real-selector>",
    "<relative-selector-list>",
    "<relative-selector>",
    "<relative-size>",
    "<rem/>",
    "<repeat-style>",
    "<repetition>",
    "<request-url-modifier>",
    "<resolution>",
    "<reversed-counter-name>",
    "<right>",
    "<rounding-strategy>",
    "<rule-list>",
    "<scalarproduct/>",
    "<scope-end>",
    "<scope-start>",
    "<scroller>",
    "<sdev/>",
    "<sec/>",
    "<sech/>",
    "<selector-list>",
    "<selector/>",
    "<self-position>",
    "<semicolon-token>",
    "<sep/>",
    "<set>",
    "<setdiff/>",
    "<shadow>",
    "<shape-box>",
    "<shape-command>",
    "<shape-radius>",
    "<shape>",
    "<share>",
    "<side-or-corner>",
    "<signed-integer>",
    "<signless-integer>",
    "<simple-selector-list>",
    "<simple-selector>",
    "<sin/>",
    "<single-animation-composition>",
    "<single-animation-direction>",
    "<single-animation-fill-mode>",
    "<single-animation-iteration-count>",
    "<single-animation-play-state>",
    "<single-animation-timeline>",
    "<single-animation>",
    "<single-transition-property>",
    "<single-transition>",
    "<sinh/>",
    "<size-feature>",
    "<source-size-list>",
    "<source-size-value>",
    "<source-size>",
    "<spacing-trim>",
    "<specific-voice>",
    "<spread-shadow>",
    "<step-easing-function>",
    "<step-position>",
    "<string-token>",
    "<string>",
    "<style-block>",
    "<style-condition>",
    "<style-feature>",
    "<style-in-parens>",
    "<style-query>",
    "<stylesheet>",
    "<subclass-selector>",
    "<subset/>",
    "<sum/>",
    "<supports-condition>",
    "<supports-decl>",
    "<supports-feature>",
    "<supports-font-format-fn>",
    "<supports-font-tech-fn>",
    "<supports-in-parens>",
    "<supports-selector-fn>",
    "<svg-paint>",
    "<symbol>",
    "<symbols-type>",
    "<syntax-combinator>",
    "<syntax-component-name>",
    "<syntax-component>",
    "<syntax-multiplier>",
    "<syntax-type>",
    "<syntax>",
    "<system-color>",
    "<system-family-name>",
    "<tan/>",
    "<tanh/>",
    "<target-contrast>",
    "<target-name>",
    "<target>",
    "<tendsto/>",
    "<text-edge>",
    "<time-percentage>",
    "<time>",
    "<timeline-range-name>",
    "<times/>",
    "<toggle()>",
    "<top>",
    "<track-breadth>",
    "<track-list>",
    "<track-repeat>",
    "<track-size>",
    "<transform-function>",
    "<transform-list>",
    "<transform-mix()>",
    "<transition-behavior-value>",
    "<transpose/>",
    "<true/>",
    "<try-size>",
    "<type()>",
    "<type-selector>",
    "<unicode-range-token>",
    "<union/>",
    "<uplimit>",
    "<urange>",
    "<uri>",
    "<url-modifier>",
    "<url-token>",
    "<url>",
    "<variance/>",
    "<vector/>",
    "<vectorproduct/>",
    "<visual-box>",
    "<wcag2>",
    "<whitespace-token>",
    "<whole-value>",
    "<wq-name>",
    "<xor/>",
    "<xyz-params>",
    "<xyz-space>",
    "<xyz>",
    "<zero>",
    "<{-token>",
    "<}-token>",
    "=",
    ">",
    "?",
    "@-webkit-keyframes",
    "@bottom-center",
    "@bottom-left",
    "@bottom-left-corner",
    "@bottom-right",
    "@bottom-right-corner",
    "@charset",
    "@color-profile",
    "@container",
    "@context",
    "@counter-style",
    "@custom-media",
    "@custom-selector",
    "@else",
    "@font-face",
    "@font-feature-values",
    "@font-palette-values",
    "@function",
    "@import",
    "@keyframes",
    "@layer",
    "@left-bottom",
    "@left-middle",
    "@left-top",
    "@media",
    "@namespace",
    "@page",
    "@position-try",
    "@property",
    "@right-bottom",
    "@right-middle",
    "@right-top",
    "@scope",
    "@starting-style",
    "@supports",
    "@top-center",
    "@top-left",
    "@top-left-corner",
    "@top-right",
    "@top-right-corner",
    "@view-transition",
    "@when",
    "ARIAMixin",
    "AacBitstreamFormat",
    "AacEncoderConfig",
    "AbortController",
    "AbortError",
    "AbortSignal",
    "AbsoluteOrientationSensor",
    "AbstractRange",
    "AbstractWorker",
    "Accelerometer",
    "AccelerometerLocalCoordinateSystem",
    "AccelerometerSensorOptions",
    "AcquireReadableStreamBYOBReader",
    "AcquireReadableStreamDefaultReader",
    "AcquireWritableStreamDefaultWriter",
    "AdAuctionData",
    "AdAuctionDataConfig",
    "AdRender",
    "AddEntriesFromIterable",
    "AddEntriesFromIterable(target, iterable, adder)",
    "AddEventListenerOptions",
    "AddRestrictedFunctionProperties",
    "AddRestrictedFunctionProperties(F, realm)",
    "AddToKeptObjects",
    "AddToKeptObjects(value)",
    "AddValueToKeyedGroup",
    "AddValueToKeyedGroup(groups, key, value)",
    "AddWaiter",
    "AddWaiter(WL, waiterRecord)",
    "AddressErrors",
    "AdvanceStringIndex",
    "AdvanceStringIndex(S, index, unicode)",
    "AesCbcParams",
    "AesCtrParams",
    "AesDerivedKeyParams",
    "AesGcmParams",
    "AesKeyAlgorithm",
    "AesKeyGenParams",
    "AgentCanSuspend",
    "AgentCanSuspend()",
    "AgentSignifier",
    "AgentSignifier()",
    "AggregateError",
    "Algorithm",
    "AlgorithmIdentifier",
    "AlignSetting",
    "AllCharacters",
    "AllCharacters(rer)",
    "AllocateArrayBuffer",
    "AllocateArrayBuffer(constructor, byteLength, maxByteLength)",
    "AllocateSharedArrayBuffer",
    "AllocateSharedArrayBuffer(constructor, byteLength, maxByteLength)",
    "AllocateTypedArray",
    "AllocateTypedArray(constructorName, newTarget, defaultProto, length)",
    "AllocateTypedArrayBuffer",
    "AllocateTypedArrayBuffer(O, length)",
    "AllowResizable",
    "AllowShared",
    "AllowSharedBufferSource",
    "AllowedBluetoothDevice",
    "AllowedUSBDevice",
    "AlphaOption",
    "AmbientLightSensor",
    "AnalyserNode",
    "AnalyserOptions",
    "Animatable",
    "Animation",
    "AnimationEffect",
    "AnimationEvent",
    "AnimationEventInit",
    "AnimationFrameProvider",
    "AnimationNodeList",
    "AnimationPlayState",
    "AnimationPlaybackEvent",
    "AnimationPlaybackEventInit",
    "AnimationReplaceState",
    "AnimationTimeOptions",
    "AnimationTimeline",
    "AnimationWorkletGlobalScope",
    "AnimatorInstanceConstructor",
    "AppBannerPromptOutcome",
    "AppendMode",
    "Apply brotli patch",
    "Apply glyph keyed patch",
    "Apply per table brotli patch",
    "ApplyConstraints algorithm",
    "ApplyStringOrNumericBinaryOperator",
    "ApplyStringOrNumericBinaryOperator(lVal, opText, rVal)",
    "Array",
    "ArrayBuffer",
    "ArrayBufferByteLength",
    "ArrayBufferByteLength(arrayBuffer, order)",
    "ArrayBufferCopyAndDetach",
    "ArrayBufferCopyAndDetach(arrayBuffer, newLength, preserveResizability)",
    "ArrayBufferView",
    "ArrayCreate",
    "ArrayCreate(length, proto)",
    "ArraySetLength",
    "ArraySetLength(A, Desc)",
    "ArraySpeciesCreate",
    "ArraySpeciesCreate(originalArray, length)",
    "AssignedNodesOptions",
    "AsyncBlockStart",
    "AsyncBlockStart(promiseCapability, asyncBody, asyncContext)",
    "AsyncFromSyncIteratorContinuation",
    "AsyncFromSyncIteratorContinuation(result, promiseCapability)",
    "AsyncFunction",
    "AsyncFunctionStart",
    "AsyncFunctionStart(promiseCapability, asyncFunctionBody)",
    "AsyncGenerator",
    "AsyncGeneratorAwaitReturn",
    "AsyncGeneratorAwaitReturn(generator)",
    "AsyncGeneratorCompleteStep",
    "AsyncGeneratorCompleteStep(generator, completion, done, realm)",
    "AsyncGeneratorDrainQueue",
    "AsyncGeneratorDrainQueue(generator)",
    "AsyncGeneratorEnqueue",
    "AsyncGeneratorEnqueue(generator, completion, promiseCapability)",
    "AsyncGeneratorFunction",
    "AsyncGeneratorResume",
    "AsyncGeneratorResume(generator, completion)",
    "AsyncGeneratorStart",
    "AsyncGeneratorStart(generator, generatorBody)",
    "AsyncGeneratorUnwrapYieldResumption",
    "AsyncGeneratorUnwrapYieldResumption(resumptionValue)",
    "AsyncGeneratorValidate",
    "AsyncGeneratorValidate(generator, generatorBrand)",
    "AsyncGeneratorYield",
    "AsyncGeneratorYield(value)",
    "AsyncIteratorClose",
    "AsyncIteratorClose(iteratorRecord, completion)",
    "AsyncModuleExecutionFulfilled",
    "AsyncModuleExecutionFulfilled(module)",
    "AsyncModuleExecutionRejected",
    "AsyncModuleExecutionRejected(module, error)",
    "AtomicCompareExchangeInSharedBlock",
    "AtomicCompareExchangeInSharedBlock(block, byteIndexInBuffer, elementSize, expectedBytes, replacementBytes)",
    "AtomicReadModifyWrite",
    "AtomicReadModifyWrite(typedArray, index, value, op)",
    "Atomics",
    "AttestationConveyancePreference",
    "Attr",
    "AttributionReportingRequestOptions",
    "AuctionAd",
    "AuctionAdConfig",
    "AuctionAdInterestGroup",
    "AuctionAdInterestGroupKey",
    "AuctionAdInterestGroupSize",
    "AuctionRealTimeReportingConfig",
    "AuctionReportBuyerDebugModeConfig",
    "AuctionReportBuyersConfig",
    "AudioBuffer",
    "AudioBufferOptions",
    "AudioBufferSourceNode",
    "AudioBufferSourceOptions",
    "AudioConfiguration",
    "AudioContext",
    "AudioContextLatencyCategory",
    "AudioContextOptions",
    "AudioContextRenderSizeCategory",
    "AudioContextState",
    "AudioData",
    "AudioDataCopyToOptions",
    "AudioDataInit",
    "AudioDataOutputCallback",
    "AudioDecoder",
    "AudioDecoderConfig",
    "AudioDecoderInit",
    "AudioDecoderSupport",
    "AudioDestinationNode",
    "AudioEncoder",
    "AudioEncoderConfig",
    "AudioEncoderInit",
    "AudioEncoderSupport",
    "AudioListener",
    "AudioNode",
    "AudioNodeOptions",
    "AudioOutputOptions",
    "AudioParam",
    "AudioParamDescriptor",
    "AudioParamMap",
    "AudioProcessingEvent",
    "AudioProcessingEventInit",
    "AudioRenderCapacity",
    "AudioRenderCapacityEvent",
    "AudioRenderCapacityEventInit",
    "AudioRenderCapacityOptions",
    "AudioSampleFormat",
    "AudioScheduledSourceNode",
    "AudioSession",
    "AudioSessionState",
    "AudioSessionType",
    "AudioSinkInfo",
    "AudioSinkOptions",
    "AudioSinkType",
    "AudioTimestamp",
    "AudioTrack",
    "AudioTrackList",
    "AudioWorklet",
    "AudioWorkletGlobalScope",
    "AudioWorkletNode",
    "AudioWorkletNodeOptions",
    "AudioWorkletProcessCallback",
    "AudioWorkletProcessCallback()",
    "AudioWorkletProcessor",
    "AudioWorkletProcessorConstructor",
    "AuthenticationExtensionsClientInputs",
    "AuthenticationExtensionsClientInputsJSON",
    "AuthenticationExtensionsClientOutputs",
    "AuthenticationExtensionsClientOutputsJSON",
    "AuthenticationExtensionsDevicePublicKeyInputs",
    "AuthenticationExtensionsDevicePublicKeyOutputs",
    "AuthenticationExtensionsLargeBlobInputs",
    "AuthenticationExtensionsLargeBlobOutputs",
    "AuthenticationExtensionsPRFInputs",
    "AuthenticationExtensionsPRFOutputs",
    "AuthenticationExtensionsPRFValues",
    "AuthenticationExtensionsPaymentInputs",
    "AuthenticationResponseJSON",
    "AuthenticatorAssertionResponse",
    "AuthenticatorAssertionResponseJSON",
    "AuthenticatorAttachment",
    "AuthenticatorAttestationResponse",
    "AuthenticatorAttestationResponseJSON",
    "AuthenticatorResponse",
    "AuthenticatorSelectionCriteria",
    "AuthenticatorTransport",
    "AutoKeyword",
    "AutomationRate",
    "AutoplayPolicy",
    "AutoplayPolicyMediaType",
    "AvailableNamedTimeZoneIdentifiers",
    "AvailableNamedTimeZoneIdentifiers()",
    "AvcBitstreamFormat",
    "AvcEncoderConfig",
    "Await",
    "Await(value)",
    "BackgroundFetchEvent",
    "BackgroundFetchEventInit",
    "BackgroundFetchFailureReason",
    "BackgroundFetchManager",
    "BackgroundFetchOptions",
    "BackgroundFetchRecord",
    "BackgroundFetchRegistration",
    "BackgroundFetchResult",
    "BackgroundFetchUIOptions",
    "BackgroundFetchUpdateUIEvent",
    "BackgroundSyncOptions",
    "BackreferenceMatcher",
    "BackreferenceMatcher(rer, n, direction)",
    "BarProp",
    "BarcodeDetector",
    "BarcodeDetectorOptions",
    "BarcodeFormat",
    "Base64URLString",
    "BaseAudioContext",
    "BaseComputedKeyframe",
    "BaseKeyframe",
    "BasePropertyIndexedKeyframe",
    "Baseline",
    "BatteryManager",
    "BeforeInstallPromptEvent",
    "BeforeUnloadEvent",
    "BiddingBrowserSignals",
    "BigInt",
    "BigInt64Array",
    "BigIntBitwiseOp",
    "BigIntBitwiseOp(op, x, y)",
    "BigInteger",
    "BigUint64Array",
    "BinaryAnd",
    "BinaryAnd(x, y)",
    "BinaryData",
    "BinaryOr",
    "BinaryOr(x, y)",
    "BinaryType",
    "BinaryXor",
    "BinaryXor(x, y)",
    "BiquadFilterNode",
    "BiquadFilterOptions",
    "BiquadFilterType",
    "BitrateMode",
    "Blob",
    "BlobCallback",
    "BlobEvent",
    "BlobEventInit",
    "BlobPart",
    "BlobPropertyBag",
    "BlockDeclarationInstantiation",
    "BlockDeclarationInstantiation(code, env)",
    "BlockFragmentationType",
    "Bluetooth",
    "BluetoothAdvertisingEvent",
    "BluetoothAdvertisingEventInit",
    "BluetoothCharacteristicProperties",
    "BluetoothCharacteristicUUID",
    "BluetoothDataFilter",
    "BluetoothDataFilterInit",
    "BluetoothDescriptorUUID",
    "BluetoothDevice",
    "BluetoothDeviceEventHandlers",
    "BluetoothLEScan",
    "BluetoothLEScanFilter",
    "BluetoothLEScanFilterInit",
    "BluetoothLEScanOptions",
    "BluetoothLEScanPermissionDescriptor",
    "BluetoothLEScanPermissionResult",
    "BluetoothManufacturerDataFilter",
    "BluetoothManufacturerDataFilterInit",
    "BluetoothManufacturerDataMap",
    "BluetoothPermissionDescriptor",
    "BluetoothPermissionResult",
    "BluetoothPermissionStorage",
    "BluetoothRemoteGATTCharacteristic",
    "BluetoothRemoteGATTDescriptor",
    "BluetoothRemoteGATTServer",
    "BluetoothRemoteGATTService",
    "BluetoothServiceDataFilter",
    "BluetoothServiceDataFilterInit",
    "BluetoothServiceDataMap",
    "BluetoothServiceUUID",
    "BluetoothUUID",
    "Body",
    "BodyInit",
    "Boolean",
    "BoundFunctionCreate",
    "BoundFunctionCreate(targetFunction, boundThis, boundArgs)",
    "BoxQuadOptions",
    "BreakToken",
    "BreakTokenOptions",
    "BreakType",
    "BroadcastChannel",
    "BrowserCaptureMediaStreamTrack",
    "BrowsingTopic",
    "BrowsingTopicsOptions",
    "BufferSource",
    "BufferedChangeEvent",
    "BufferedChangeEventInit",
    "BuiltinCallOrConstruct",
    "BuiltinCallOrConstruct(F, thisArgument, argumentsList, newTarget)",
    "ByteLengthQueuingStrategy",
    "ByteListBitwiseOp",
    "ByteListBitwiseOp(op, xBytes, yBytes)",
    "ByteListEqual",
    "ByteListEqual(xBytes, yBytes)",
    "ByteString",
    "CDATASection",
    "CEReactions",
    "COSEAlgorithmIdentifier",
    "CSPViolationReportBody",
    "CSS",
    "CSSAnimation",
    "CSSBoxType",
    "CSSColor",
    "CSSColorAngle",
    "CSSColorNumber",
    "CSSColorPercent",
    "CSSColorProfileRule",
    "CSSColorRGBComp",
    "CSSColorValue",
    "CSSConditionRule",
    "CSSContainerRule",
    "CSSCounterStyleRule",
    "CSSFontFaceDescriptors",
    "CSSFontFaceRule",
    "CSSFontFeatureValuesMap",
    "CSSFontFeatureValuesRule",
    "CSSFontPaletteValuesRule",
    "CSSFunctionRule",
    "CSSGroupingRule",
    "CSSHSL",
    "CSSHWB",
    "CSSImageValue",
    "CSSImportRule",
    "CSSKeyframeRule",
    "CSSKeyframesRule",
    "CSSKeywordValue",
    "CSSKeywordish",
    "CSSLCH",
    "CSSLab",
    "CSSLayerBlockRule",
    "CSSLayerStatementRule",
    "CSSMarginRule",
    "CSSMathClamp",
    "CSSMathInvert",
    "CSSMathMax",
    "CSSMathMin",
    "CSSMathNegate",
    "CSSMathOperator",
    "CSSMathProduct",
    "CSSMathSum",
    "CSSMathValue",
    "CSSMatrixComponent",
    "CSSMatrixComponentOptions",
    "CSSMediaRule",
    "CSSNamespaceRule",
    "CSSNestedDeclarations",
    "CSSNumberish",
    "CSSNumericArray",
    "CSSNumericBaseType",
    "CSSNumericType",
    "CSSNumericValue",
    "CSSOKLCH",
    "CSSOKLab",
    "CSSOMString",
    "CSSPageDescriptors",
    "CSSPageRule",
    "CSSParserAtRule",
    "CSSParserBlock",
    "CSSParserDeclaration",
    "CSSParserFunction",
    "CSSParserOptions",
    "CSSParserQualifiedRule",
    "CSSParserRule",
    "CSSParserValue",
    "CSSPerspective",
    "CSSPerspectiveValue",
    "CSSPositionTryDescriptors",
    "CSSPositionTryRule",
    "CSSPropertyRule",
    "CSSPseudoElement",
    "CSSRGB",
    "CSSRotate",
    "CSSRule",
    "CSSRuleList",
    "CSSScale",
    "CSSScopeRule",
    "CSSSkew",
    "CSSSkewX",
    "CSSSkewY",
    "CSSStartingStyleRule",
    "CSSStringSource",
    "CSSStyleDeclaration",
    "CSSStyleProperties",
    "CSSStyleRule",
    "CSSStyleSheet",
    "CSSStyleSheetInit",
    "CSSStyleValue",
    "CSSSupportsRule",
    "CSSToken",
    "CSSTransformComponent",
    "CSSTransformValue",
    "CSSTransition",
    "CSSTranslate",
    "CSSUnitValue",
    "CSSUnparsedSegment",
    "CSSUnparsedValue",
    "CSSVariableReferenceValue",
    "CSSViewTransitionRule",
    "Cache",
    "CacheQueryOptions",
    "CacheStorage",
    "Calculating color attachment bytes per sample",
    "Call",
    "Call(F, V, argumentsList)",
    "CameraDevicePermissionDescriptor",
    "CanBeHeldWeakly",
    "CanBeHeldWeakly(v)",
    "CanMakePaymentEvent",
    "CanPlayTypeResult",
    "CanTransferArrayBuffer",
    "CanonicalNumericIndexString",
    "CanonicalNumericIndexString(argument)",
    "Canonicalize",
    "Canonicalize(rer, ch)",
    "CanonicalizeKeyedCollectionKey",
    "CanonicalizeKeyedCollectionKey(key)",
    "CanvasCaptureMediaStreamTrack",
    "CanvasCompositing",
    "CanvasDirection",
    "CanvasDrawImage",
    "CanvasDrawPath",
    "CanvasFillRule",
    "CanvasFillStrokeStyles",
    "CanvasFilters",
    "CanvasFontKerning",
    "CanvasFontStretch",
    "CanvasFontVariantCaps",
    "CanvasGradient",
    "CanvasImageData",
    "CanvasImageSmoothing",
    "CanvasImageSource",
    "CanvasLineCap",
    "CanvasLineJoin",
    "CanvasPath",
    "CanvasPathDrawingStyles",
    "CanvasPattern",
    "CanvasRect",
    "CanvasRenderingContext2D",
    "CanvasRenderingContext2DSettings",
    "CanvasShadowStyles",
    "CanvasState",
    "CanvasText",
    "CanvasTextAlign",
    "CanvasTextBaseline",
    "CanvasTextDrawingStyles",
    "CanvasTextRendering",
    "CanvasTransform",
    "CanvasUserInterface",
    "Capabilities",
    "CaptureAction",
    "CaptureActionEvent",
    "CaptureActionEventInit",
    "CaptureController",
    "CaptureHandle",
    "CaptureHandleConfig",
    "CaptureStartFocusBehavior",
    "CapturedMouseEvent",
    "CapturedMouseEventInit",
    "CaretPosition",
    "CaretPositionFromPointOptions",
    "CaseClauseIsSelected",
    "CaseClauseIsSelected(C, input)",
    "ChannelCountMode",
    "ChannelInterpretation",
    "ChannelMergerNode",
    "ChannelMergerOptions",
    "ChannelSplitterNode",
    "ChannelSplitterOptions",
    "ChapterInformation",
    "ChapterInformationInit",
    "CharacterBoundsUpdateEvent",
    "CharacterBoundsUpdateEventInit",
    "CharacterComplement",
    "CharacterComplement(rer, S)",
    "CharacterData",
    "CharacterRange",
    "CharacterRange(A, B)",
    "CharacterRangeOrUnion",
    "CharacterRangeOrUnion(rer, A, B)",
    "CharacterSetMatcher",
    "CharacterSetMatcher(rer, A, invert, direction)",
    "CharacteristicEventHandlers",
    "Check entry intersection",
    "Check permissions policy",
    "CheckVisibilityOptions",
    "ChildBreakToken",
    "ChildDisplayType",
    "ChildNode",
    "Clamp",
    "CleanupFinalizationRegistry",
    "CleanupFinalizationRegistry(finalizationRegistry)",
    "ClearKeptObjects",
    "ClearKeptObjects()",
    "Client",
    "ClientCapability",
    "ClientLifecycleState",
    "ClientQueryOptions",
    "ClientType",
    "Clients",
    "Clipboard",
    "ClipboardEvent",
    "ClipboardEventInit",
    "ClipboardItem",
    "ClipboardItemData",
    "ClipboardItemOptions",
    "ClipboardItems",
    "ClipboardPermissionDescriptor",
    "ClipboardUnsanitizedFormats",
    "CloneArrayBuffer",
    "CloneArrayBuffer(srcBuffer, srcByteOffset, srcLength)",
    "CloneAsUint8Array",
    "CloseEvent",
    "CloseEventInit",
    "CloseWatcher",
    "CloseWatcherOptions",
    "CodecState",
    "CollectSenders",
    "CollectTransceivers",
    "CollectedClientAdditionalPaymentData",
    "CollectedClientData",
    "CollectedClientPaymentData",
    "ColorGamut",
    "ColorSelectionOptions",
    "ColorSelectionResult",
    "ColorSpaceConversion",
    "Comment",
    "CompareArrayElements",
    "CompareArrayElements(x, y, comparator)",
    "CompareTypedArrayElements",
    "CompareTypedArrayElements(x, y, comparator)",
    "CompileError",
    "CompletePropertyDescriptor",
    "CompletePropertyDescriptor(Desc)",
    "ComposeWriteEventBytes",
    "ComposeWriteEventBytes(execution, byteIndex, Ws)",
    "CompositeOperation",
    "CompositeOperationOrAuto",
    "CompositionEvent",
    "CompositionEventInit",
    "CompressionFormat",
    "CompressionStream",
    "ComputedEffectTiming",
    "ConnectionType",
    "ConstantSourceNode",
    "ConstantSourceOptions",
    "ConstrainBoolean",
    "ConstrainBooleanParameters",
    "ConstrainDOMString",
    "ConstrainDOMStringParameters",
    "ConstrainDouble",
    "ConstrainDoubleRange",
    "ConstrainPoint2D",
    "ConstrainPoint2DParameters",
    "ConstrainULong",
    "ConstrainULongRange",
    "ConstrainablePattern",
    "ConstraintError",
    "ConstraintSet",
    "Constraints",
    "Construct",
    "Construct policy from dictionary and origin",
    "Construct(F, argumentsList, newTarget)",
    "ContactAddress",
    "ContactInfo",
    "ContactProperty",
    "ContactsManager",
    "ContactsSelectOptions",
    "ContentCategory",
    "ContentDescription",
    "ContentIndex",
    "ContentIndexEvent",
    "ContentIndexEventInit",
    "ContentVisibilityAutoStateChangeEvent",
    "ContentVisibilityAutoStateChangeEventInit",
    "ContentVisibilityAutoStateChangedEvent",
    "ContentVisibilityAutoStateChangedEventInit",
    "ContinueDynamicImport",
    "ContinueDynamicImport(promiseCapability, moduleCompletion)",
    "ContinueModuleLoading",
    "ContinueModuleLoading(state, moduleCompletion)",
    "ConvertCoordinateOptions",
    "ConvertToInt",
    "ConvolverNode",
    "ConvolverOptions",
    "CookieChangeEvent",
    "CookieChangeEventInit",
    "CookieInit",
    "CookieList",
    "CookieListItem",
    "CookieSameSite",
    "CookieStore",
    "CookieStoreDeleteOptions",
    "CookieStoreGetOptions",
    "CookieStoreManager",
    "CopyDataBlockBytes",
    "CopyDataBlockBytes(toBlock, toIndex, fromBlock, fromIndex, count)",
    "CopyDataProperties",
    "CopyDataProperties(target, source, excludedItems)",
    "CountQueuingStrategy",
    "Create a Credential",
    "Create a FederatedCredential from FederatedCredentialInit",
    "Create a PasswordCredential from PasswordCredentialData",
    "Create a PasswordCredential from an HTMLFormElement",
    "Create a Permissions Policy for a navigable",
    "Create a Permissions Policy for a navigable from response",
    "Create a Trusted Type",
    "Create a Trusted Type Policy",
    "Create a new device-bound key record",
    "CreateArrayFromList",
    "CreateArrayFromList(elements)",
    "CreateArrayIterator",
    "CreateArrayIterator(array, kind)",
    "CreateAsyncFromSyncIterator",
    "CreateAsyncFromSyncIterator(syncIteratorRecord)",
    "CreateAsyncIteratorFromClosure",
    "CreateAsyncIteratorFromClosure(closure, generatorBrand, generatorPrototype)",
    "CreateBuiltinFunction",
    "CreateBuiltinFunction(behaviour, length, name, additionalInternalSlotsList, realm, prototype, prefix)",
    "CreateByteDataBlock",
    "CreateByteDataBlock(size)",
    "CreateDataProperty",
    "CreateDataProperty(O, P, V)",
    "CreateDataPropertyOrThrow",
    "CreateDataPropertyOrThrow(O, P, V)",
    "CreateDynamicFunction",
    "CreateDynamicFunction(constructor, newTarget, kind, parameterArgs, bodyArg)",
    "CreateForInIterator",
    "CreateForInIterator(object)",
    "CreateHTML",
    "CreateHTML(string, tag, attribute, value)",
    "CreateHTMLCallback",
    "CreateIntrinsics",
    "CreateIntrinsics(realmRec)",
    "CreateIteratorFromClosure",
    "CreateIteratorFromClosure(closure, generatorBrand, generatorPrototype)",
    "CreateIteratorResultObject",
    "CreateIteratorResultObject(value, done)",
    "CreateListFromArrayLike",
    "CreateListFromArrayLike(obj, elementTypes)",
    "CreateListIteratorRecord",
    "CreateListIteratorRecord(list)",
    "CreateMapIterator",
    "CreateMapIterator(map, kind)",
    "CreateMappedArgumentsObject",
    "CreateMappedArgumentsObject(func, formals, argumentsList, env)",
    "CreateNonEnumerableDataPropertyOrThrow",
    "CreateNonEnumerableDataPropertyOrThrow(O, P, V)",
    "CreatePerIterationEnvironment",
    "CreatePerIterationEnvironment(perIterationBindings)",
    "CreateReadableByteStream",
    "CreateReadableStream",
    "CreateRegExpStringIterator",
    "CreateRegExpStringIterator(R, S, global, fullUnicode)",
    "CreateResolvingFunctions",
    "CreateResolvingFunctions(promise)",
    "CreateScriptCallback",
    "CreateScriptURLCallback",
    "CreateSetIterator",
    "CreateSetIterator(set, kind)",
    "CreateSharedByteDataBlock",
    "CreateSharedByteDataBlock(size)",
    "CreateUnmappedArgumentsObject",
    "CreateUnmappedArgumentsObject(argumentsList)",
    "CreateWritableStream",
    "Credential",
    "CredentialCreationOptions",
    "CredentialData",
    "CredentialMediationRequirement",
    "CredentialPropertiesOutput",
    "CredentialRequestOptions",
    "CredentialUserData",
    "CredentialsContainer",
    "CropTarget",
    "CrossOriginIsolated",
    "CrossRealmTransformSendError",
    "Crypto",
    "CryptoKey",
    "CryptoKeyID",
    "CryptoKeyPair",
    "CursorCaptureConstraint",
    "CustomElementConstructor",
    "CustomElementRegistry",
    "CustomEvent",
    "CustomEventInit",
    "CustomStateSet",
    "DOMConfiguration",
    "DOMError",
    "DOMErrorHandler",
    "DOMException",
    "DOMHighResTimeStamp",
    "DOMImplementation",
    "DOMImplementationList",
    "DOMImplementationSource",
    "DOMLocator",
    "DOMMatrix",
    "DOMMatrix2DInit",
    "DOMMatrixInit",
    "DOMMatrixReadOnly",
    "DOMObject",
    "DOMParser",
    "DOMParserSupportedType",
    "DOMPoint",
    "DOMPointInit",
    "DOMPointReadOnly",
    "DOMQuad",
    "DOMQuadInit",
    "DOMRect",
    "DOMRectInit",
    "DOMRectList",
    "DOMRectReadOnly",
    "DOMString",
    "DOMStringList",
    "DOMStringMap",
    "DOMTokenList",
    "DOMUserData",
    "DataCloneError",
    "DataCue",
    "DataError",
    "DataTransfer",
    "DataTransferItem",
    "DataTransferItemList",
    "DataView",
    "Date",
    "DateFromTime",
    "DateFromTime(t)",
    "DateString",
    "DateString(tv)",
    "Day",
    "Day(t)",
    "DayFromYear",
    "DayFromYear(y)",
    "DayWithinYear",
    "DayWithinYear(t)",
    "DaysInYear",
    "DaysInYear(y)",
    "Decode",
    "Decode(string, preserveEscapeSet)",
    "DecodeErrorCallback",
    "DecodeErrorCallback()",
    "DecodeSuccessCallback",
    "DecodeSuccessCallback()",
    "Decoding sparse bit set treeData",
    "DecompressionStream",
    "DedicatedWorkerGlobalScope",
    "Default",
    "Define an inherited policy for feature in container at origin",
    "DefineField",
    "DefineField(receiver, fieldRecord)",
    "DefineMethodProperty",
    "DefineMethodProperty(homeObject, key, closure, enumerable)",
    "DefinePropertyOrThrow",
    "DefinePropertyOrThrow(O, P, desc)",
    "DelayNode",
    "DelayOptions",
    "DeletePropertyOrThrow",
    "DeletePropertyOrThrow(O, P)",
    "DeprecationReportBody",
    "DequeueValue",
    "DetachArrayBuffer",
    "DetachArrayBuffer(arrayBuffer, key)",
    "DetectedBarcode",
    "DetectedFace",
    "DetectedText",
    "DeviceChangeEvent",
    "DeviceChangeEventInit",
    "DeviceMotionEvent",
    "DeviceMotionEventAcceleration",
    "DeviceMotionEventAccelerationInit",
    "DeviceMotionEventInit",
    "DeviceMotionEventRotationRate",
    "DeviceMotionEventRotationRateInit",
    "DeviceOrientationEvent",
    "DeviceOrientationEventInit",
    "DevicePosture",
    "DevicePostureType",
    "DigitalCredential",
    "DigitalCredentialRequestOptions",
    "DigitalCredentialsProvider",
    "DigitalGoodsService",
    "DirectFromSellerSignalsForBuyer",
    "DirectFromSellerSignalsForSeller",
    "DirectionSetting",
    "DirectoryPickerOptions",
    "DisconnectedAccount",
    "Dispatch error",
    "DisplayCaptureSurfaceType",
    "DisplayMediaStreamOptions",
    "DistanceModelType",
    "DoWait",
    "DoWait(mode, typedArray, index, value, timeout)",
    "Document",
    "DocumentFragment",
    "DocumentOrShadowRoot",
    "DocumentPictureInPicture",
    "DocumentPictureInPictureEvent",
    "DocumentPictureInPictureEventInit",
    "DocumentPictureInPictureOptions",
    "DocumentReadyState",
    "DocumentTimeline",
    "DocumentTimelineOptions",
    "DocumentType",
    "DocumentVisibilityState",
    "Does sink type require trusted types?",
    "DoubleRange",
    "DragEvent",
    "DragEventInit",
    "DynamicsCompressorNode",
    "DynamicsCompressorOptions",
    "EcKeyAlgorithm",
    "EcKeyGenParams",
    "EcKeyImportParams",
    "EcdhKeyDeriveParams",
    "EcdsaParams",
    "Ed448Params",
    "EditContext",
    "EditContextInit",
    "EffectCallback",
    "EffectTiming",
    "EffectiveConnectionType",
    "Element",
    "ElementCSSInlineStyle",
    "ElementContentEditable",
    "ElementCreationOptions",
    "ElementDefinitionOptions",
    "ElementInternals",
    "EmptyMatcher",
    "EmptyMatcher()",
    "Encode",
    "Encode(string, extraUnescaped)",
    "EncodedAudioChunk",
    "EncodedAudioChunkInit",
    "EncodedAudioChunkMetadata",
    "EncodedAudioChunkOutputCallback",
    "EncodedAudioChunkType",
    "EncodedVideoChunk",
    "EncodedVideoChunkInit",
    "EncodedVideoChunkMetadata",
    "EncodedVideoChunkOutputCallback",
    "EncodedVideoChunkType",
    "Encoder bind groups alias a writable resource",
    "EncodingError",
    "EndOfStreamError",
    "EndingType",
    "EnforceRange",
    "Enqueue a command",
    "Enqueue a render command",
    "EnqueueAtomicsWaitAsyncTimeoutJob",
    "EnqueueAtomicsWaitAsyncTimeoutJob(WL, waiterRecord)",
    "EnqueueResolveInAgentJob",
    "EnqueueResolveInAgentJob(agentSignifier, promiseCapability, resolution)",
    "EnqueueValueWithSize",
    "EnsureScriptingPolicyDoesNotBlockScriptExecution(callerRealm, calleeRealm, source)",
    "EnterCriticalSection",
    "EnterCriticalSection(WL)",
    "Entity",
    "EntityReference",
    "EnumerableOwnProperties",
    "EnumerableOwnProperties(O, kind)",
    "EnumerateObjectProperties",
    "EnumerateObjectProperties(O)",
    "EpochTimeStamp",
    "EpubReadingSystem",
    "Error",
    "ErrorCallback",
    "ErrorEvent",
    "ErrorEventInit",
    "EscapeRegExpPattern",
    "EscapeRegExpPattern(P, F)",
    "EvalDeclarationInstantiation",
    "EvalDeclarationInstantiation(body, varEnv, lexEnv, privateEnv, strict)",
    "EvalError",
    "EvaluateCall",
    "EvaluateCall(func, ref, arguments, tailPosition)",
    "EvaluateNew",
    "EvaluateNew(constructExpr, arguments)",
    "EvaluatePropertyAccessWithExpressionKey",
    "EvaluatePropertyAccessWithExpressionKey(baseValue, expression, strict)",
    "EvaluatePropertyAccessWithIdentifierKey",
    "EvaluatePropertyAccessWithIdentifierKey(baseValue, identifierName, strict)",
    "EvaluateStringOrNumericBinaryExpression",
    "EvaluateStringOrNumericBinaryExpression(leftOperand, opText, rightOperand)",
    "Event",
    "EventCounts",
    "EventHandler",
    "EventHandlerNonNull",
    "EventInit",
    "EventListener",
    "EventListenerOptions",
    "EventModifierInit",
    "EventSet",
    "EventSet(execution)",
    "EventSource",
    "EventSourceInit",
    "EventTarget",
    "ExecuteAsyncModule",
    "ExecuteAsyncModule(module)",
    "Expire",
    "Expire the current texture",
    "Exposed",
    "Extend an Incremental Font Subset",
    "ExtendableCookieChangeEvent",
    "ExtendableCookieChangeEventInit",
    "ExtendableEvent",
    "ExtendableEventInit",
    "ExtendableMessageEvent",
    "ExtendableMessageEventInit",
    "External",
    "ExtractHighWaterMark",
    "ExtractSizeAlgorithm",
    "EyeDropper",
    "FaceDetector",
    "FaceDetectorOptions",
    "FakeWorkletGlobalScope",
    "FederatedCredential",
    "FederatedCredentialInit",
    "FederatedCredentialRequestOptions",
    "Fence",
    "FenceEvent",
    "FenceReportingDestination",
    "FencedFrameConfig",
    "FencedFrameConfigSize",
    "FencedFrameConfigURL",
    "FetchEvent",
    "FetchEventInit",
    "File",
    "FileCallback",
    "FileList",
    "FilePickerAcceptType",
    "FilePickerOptions",
    "FilePropertyBag",
    "FileReader",
    "FileReaderSync",
    "FileSystem",
    "FileSystemCreateWritableOptions",
    "FileSystemDirectoryEntry",
    "FileSystemDirectoryHandle",
    "FileSystemDirectoryReader",
    "FileSystemEntriesCallback",
    "FileSystemEntry",
    "FileSystemEntryCallback",
    "FileSystemFileEntry",
    "FileSystemFileHandle",
    "FileSystemFlags",
    "FileSystemGetDirectoryOptions",
    "FileSystemGetFileOptions",
    "FileSystemHandle",
    "FileSystemHandleKind",
    "FileSystemHandlePermissionDescriptor",
    "FileSystemPermissionDescriptor",
    "FileSystemPermissionMode",
    "FileSystemReadWriteOptions",
    "FileSystemRemoveOptions",
    "FileSystemSyncAccessHandle",
    "FileSystemWritableFileStream",
    "FileSystemWriteChunkType",
    "FillLightMode",
    "FillMode",
    "FinalizationRegistry",
    "FindViaPredicate",
    "FindViaPredicate(O, len, direction, predicate, thisArg)",
    "FinishLoadingImportedModule",
    "FinishLoadingImportedModule(referrer, specifier, payload, result)",
    "FlacEncoderConfig",
    "FlattenIntoArray",
    "FlattenIntoArray(target, source, sourceLen, start, depth, mapperFunction, thisArg)",
    "Float16Array",
    "Float32Array",
    "Float64Array",
    "FlowControlType",
    "FocusEvent",
    "FocusEventInit",
    "FocusOptions",
    "FocusableAreaSearchMode",
    "FocusableAreasOption",
    "Font",
    "FontData",
    "FontFace",
    "FontFaceDescriptors",
    "FontFaceFeatures",
    "FontFaceLoadStatus",
    "FontFacePalette",
    "FontFacePalettes",
    "FontFaceSet",
    "FontFaceSetLoadEvent",
    "FontFaceSetLoadEventInit",
    "FontFaceSetLoadStatus",
    "FontFaceSource",
    "FontFaceVariationAxis",
    "FontFaceVariations",
    "FontMetrics",
    "ForBodyEvaluation",
    "ForBodyEvaluation(test, increment, stmt, perIterationBindings, labelSet)",
    "ForDebuggingOnly",
    "FormData",
    "FormDataEntryValue",
    "FormDataEvent",
    "FormDataEventInit",
    "Formatter",
    "FragmentDirective",
    "FragmentResult",
    "FragmentResultOptions",
    "FrameRequestCallback",
    "FrameType",
    "FromPropertyDescriptor",
    "FromPropertyDescriptor(Desc)",
    "FrozenArray",
    "FrozenArray<T>",
    "FulfillPromise",
    "FulfillPromise(promise, value)",
    "FullscreenNavigationUI",
    "FullscreenOptions",
    "Fully Expand a Font Subset",
    "Function",
    "FunctionDeclarationInstantiation",
    "FunctionDeclarationInstantiation(func, argumentsList)",
    "FunctionStringCallback",
    "GPU",
    "GPUAdapter",
    "GPUAdapterInfo",
    "GPUAddressMode",
    "GPUAutoLayoutMode",
    "GPUBindGroup",
    "GPUBindGroupDescriptor",
    "GPUBindGroupEntry",
    "GPUBindGroupLayout",
    "GPUBindGroupLayoutDescriptor",
    "GPUBindGroupLayoutEntry",
    "GPUBindingCommandsMixin",
    "GPUBindingResource",
    "GPUBlendComponent",
    "GPUBlendFactor",
    "GPUBlendOperation",
    "GPUBlendState",
    "GPUBuffer",
    "GPUBufferBinding",
    "GPUBufferBindingLayout",
    "GPUBufferBindingType",
    "GPUBufferDescriptor",
    "GPUBufferDynamicOffset",
    "GPUBufferMapState",
    "GPUBufferUsage",
    "GPUBufferUsageFlags",
    "GPUCanvasAlphaMode",
    "GPUCanvasConfiguration",
    "GPUCanvasContext",
    "GPUCanvasToneMapping",
    "GPUCanvasToneMappingMode",
    "GPUColor",
    "GPUColorDict",
    "GPUColorTargetState",
    "GPUColorWrite",
    "GPUColorWriteFlags",
    "GPUCommandBuffer",
    "GPUCommandBufferDescriptor",
    "GPUCommandEncoder",
    "GPUCommandEncoderDescriptor",
    "GPUCommandsMixin",
    "GPUCompareFunction",
    "GPUCompilationInfo",
    "GPUCompilationMessage",
    "GPUCompilationMessageType",
    "GPUComputePassDescriptor",
    "GPUComputePassEncoder",
    "GPUComputePassTimestampWrites",
    "GPUComputePipeline",
    "GPUComputePipelineDescriptor",
    "GPUCullMode",
    "GPUDebugCommandsMixin",
    "GPUDepthBias",
    "GPUDepthStencilState",
    "GPUDevice",
    "GPUDeviceDescriptor",
    "GPUDeviceLostInfo",
    "GPUDeviceLostReason",
    "GPUError",
    "GPUErrorFilter",
    "GPUExtent3D",
    "GPUExtent3DDict",
    "GPUExternalTexture",
    "GPUExternalTextureBindingLayout",
    "GPUExternalTextureDescriptor",
    "GPUFeatureName",
    "GPUFilterMode",
    "GPUFlagsConstant",
    "GPUFragmentState",
    "GPUFrontFace",
    "GPUImageCopyBuffer",
    "GPUImageCopyExternalImage",
    "GPUImageCopyExternalImageSource",
    "GPUImageCopyTexture",
    "GPUImageCopyTextureTagged",
    "GPUImageDataLayout",
    "GPUIndex32",
    "GPUIndexFormat",
    "GPUIntegerCoordinate",
    "GPUIntegerCoordinateOut",
    "GPUInternalError",
    "GPULoadOp",
    "GPUMapMode",
    "GPUMapModeFlags",
    "GPUMipmapFilterMode",
    "GPUMultisampleState",
    "GPUObjectBase",
    "GPUObjectDescriptorBase",
    "GPUOrigin2D",
    "GPUOrigin2DDict",
    "GPUOrigin3D",
    "GPUOrigin3DDict",
    "GPUOutOfMemoryError",
    "GPUPipelineBase",
    "GPUPipelineConstantValue",
    "GPUPipelineDescriptorBase",
    "GPUPipelineError",
    "GPUPipelineErrorInit",
    "GPUPipelineErrorReason",
    "GPUPipelineLayout",
    "GPUPipelineLayoutDescriptor",
    "GPUPowerPreference",
    "GPUPrimitiveState",
    "GPUPrimitiveTopology",
    "GPUProgrammableStage",
    "GPUQuerySet",
    "GPUQuerySetDescriptor",
    "GPUQueryType",
    "GPUQueue",
    "GPUQueueDescriptor",
    "GPURenderBundle",
    "GPURenderBundleDescriptor",
    "GPURenderBundleEncoder",
    "GPURenderBundleEncoderDescriptor",
    "GPURenderCommandsMixin",
    "GPURenderPassColorAttachment",
    "GPURenderPassDepthStencilAttachment",
    "GPURenderPassDescriptor",
    "GPURenderPassEncoder",
    "GPURenderPassLayout",
    "GPURenderPassTimestampWrites",
    "GPURenderPipeline",
    "GPURenderPipelineDescriptor",
    "GPURequestAdapterOptions",
    "GPUSampleMask",
    "GPUSampler",
    "GPUSamplerBindingLayout",
    "GPUSamplerBindingType",
    "GPUSamplerDescriptor",
    "GPUShaderModule",
    "GPUShaderModuleCompilationHint",
    "GPUShaderModuleDescriptor",
    "GPUShaderStage",
    "GPUShaderStageFlags",
    "GPUSignedOffset32",
    "GPUSize32",
    "GPUSize32Out",
    "GPUSize64",
    "GPUSize64Out",
    "GPUStencilFaceState",
    "GPUStencilOperation",
    "GPUStencilValue",
    "GPUStorageTextureAccess",
    "GPUStorageTextureBindingLayout",
    "GPUStoreOp",
    "GPUSupportedFeatures",
    "GPUSupportedLimits",
    "GPUTexture",
    "GPUTextureAspect",
    "GPUTextureBindingLayout",
    "GPUTextureDescriptor",
    "GPUTextureDescriptor for the canvas and configuration",
    "GPUTextureDimension",
    "GPUTextureFormat",
    "GPUTextureSampleType",
    "GPUTextureUsage",
    "GPUTextureUsageFlags",
    "GPUTextureView",
    "GPUTextureViewDescriptor",
    "GPUTextureViewDimension",
    "GPUUncapturedErrorEvent",
    "GPUUncapturedErrorEventInit",
    "GPUValidationError",
    "GPUVertexAttribute",
    "GPUVertexBufferLayout",
    "GPUVertexFormat",
    "GPUVertexState",
    "GPUVertexStepMode",
    "GainNode",
    "GainOptions",
    "Gamepad",
    "GamepadButton",
    "GamepadEffectParameters",
    "GamepadEvent",
    "GamepadEventInit",
    "GamepadHand",
    "GamepadHapticActuator",
    "GamepadHapticEffectType",
    "GamepadHapticsResult",
    "GamepadMappingType",
    "GamepadPose",
    "GamepadTouch",
    "GatherAvailableAncestors",
    "GatherAvailableAncestors(module, execList)",
    "Generate a validation error",
    "Generate an internal error",
    "Generate an out-of-memory error",
    "Generate report for violation of permissions policy on settings",
    "GenerateAssertionCallback",
    "GenerateBidInterestGroup",
    "GenerateBidOutput",
    "GenerateTestReportParameters",
    "Generator",
    "GeneratorFunction",
    "GeneratorResume",
    "GeneratorResume(generator, value, generatorBrand)",
    "GeneratorResumeAbrupt",
    "GeneratorResumeAbrupt(generator, abruptCompletion, generatorBrand)",
    "GeneratorStart",
    "GeneratorStart(generator, generatorBody)",
    "GeneratorValidate",
    "GeneratorValidate(generator, generatorBrand)",
    "GeneratorYield",
    "GeneratorYield(iteratorResult)",
    "GenericTransformStream",
    "Geolocation",
    "GeolocationCoordinates",
    "GeolocationPosition",
    "GeolocationPositionError",
    "GeolocationSensor",
    "GeolocationSensorOptions",
    "GeolocationSensorReading",
    "GeometryNode",
    "GeometryUtils",
    "Get",
    "Get Trusted Type compliant string",
    "Get Trusted Type data for attribute",
    "Get Trusted Type policy value",
    "Get feature value for origin",
    "Get the reporting endpoint for a feature",
    "Get(O, P)",
    "GetActiveScriptOrModule",
    "GetActiveScriptOrModule()",
    "GetAnimationsOptions",
    "GetArrayBufferMaxByteLengthOption",
    "GetArrayBufferMaxByteLengthOption(options)",
    "GetFunctionRealm",
    "GetFunctionRealm(obj)",
    "GetGeneratorKind",
    "GetGeneratorKind()",
    "GetGlobalObject",
    "GetGlobalObject()",
    "GetHTMLOptions",
    "GetIdentifierReference",
    "GetIdentifierReference(env, name, strict)",
    "GetImportedModule",
    "GetImportedModule(referrer, specifier)",
    "GetIterator",
    "GetIterator(obj, kind)",
    "GetIteratorFromMethod",
    "GetIteratorFromMethod(obj, method)",
    "GetMatchIndexPair",
    "GetMatchIndexPair(S, match)",
    "GetMatchString",
    "GetMatchString(S, match)",
    "GetMethod",
    "GetMethod(V, P)",
    "GetModifySetValueInBuffer",
    "GetModifySetValueInBuffer(arrayBuffer, byteIndex, type, value, op)",
    "GetModuleNamespace",
    "GetModuleNamespace(module)",
    "GetNamedTimeZoneEpochNanoseconds",
    "GetNamedTimeZoneEpochNanoseconds(timeZoneIdentifier, year, month, day, hour, minute, second, millisecond, microsecond, nanosecond)",
    "GetNamedTimeZoneOffsetNanoseconds",
    "GetNamedTimeZoneOffsetNanoseconds(timeZoneIdentifier, epochNanoseconds)",
    "GetNewTarget",
    "GetNewTarget()",
    "GetNotificationOptions",
    "GetOwnPropertyKeys",
    "GetOwnPropertyKeys(O, type)",
    "GetPromiseResolve",
    "GetPromiseResolve(promiseConstructor)",
    "GetPrototypeFromConstructor",
    "GetPrototypeFromConstructor(constructor, intrinsicDefaultProto)",
    "GetRawBytesFromSharedBlock",
    "GetRawBytesFromSharedBlock(block, byteIndex, type, isTypedArray, order)",
    "GetRootNodeOptions",
    "GetSVGDocument",
    "GetSetRecord",
    "GetSetRecord(obj)",
    "GetStringIndex",
    "GetStringIndex(S, codePointIndex)",
    "GetSubstitution",
    "GetSubstitution(matched, str, position, captures, namedCaptures, replacementTemplate)",
    "GetSuperConstructor",
    "GetSuperConstructor()",
    "GetTemplateObject",
    "GetTemplateObject(templateLiteral)",
    "GetThisEnvironment",
    "GetThisEnvironment()",
    "GetThisValue",
    "GetThisValue(V)",
    "GetUTCEpochNanoseconds",
    "GetUTCEpochNanoseconds(year, month, day, hour, minute, second, millisecond, microsecond, nanosecond)",
    "GetV",
    "GetV(V, P)",
    "GetValue",
    "GetValue(V)",
    "GetValueFromBuffer",
    "GetValueFromBuffer(arrayBuffer, byteIndex, type, isTypedArray, order, isLittleEndian)",
    "GetViewByteLength",
    "GetViewByteLength(viewRecord)",
    "GetViewValue",
    "GetViewValue(view, requestIndex, isLittleEndian, type)",
    "GetWaiterList",
    "GetWaiterList(block, i)",
    "Global",
    "GlobalDeclarationInstantiation",
    "GlobalDeclarationInstantiation(script, env)",
    "GlobalDescriptor",
    "GlobalEventHandlers",
    "GlobalPrivacyControl",
    "GlobalState",
    "GravitySensor",
    "GroupBy",
    "GroupBy(items, callback, keyCoercion)",
    "GroupEffect",
    "Gyroscope",
    "GyroscopeLocalCoordinateSystem",
    "GyroscopeSensorOptions",
    "HID",
    "HIDCollectionInfo",
    "HIDConnectionEvent",
    "HIDConnectionEventInit",
    "HIDDevice",
    "HIDDeviceFilter",
    "HIDDeviceRequestOptions",
    "HIDInputReportEvent",
    "HIDInputReportEventInit",
    "HIDReportInfo",
    "HIDReportItem",
    "HIDUnitSystem",
    "HMACGetSecretInput",
    "HMACGetSecretOutput",
    "HTMLAllCollection",
    "HTMLAnchorElement",
    "HTMLAreaElement",
    "HTMLAttributionSrcElementUtils",
    "HTMLAudioElement",
    "HTMLBRElement",
    "HTMLBaseElement",
    "HTMLBodyElement",
    "HTMLButtonElement",
    "HTMLCanvasElement",
    "HTMLCollection",
    "HTMLConstructor",
    "HTMLDListElement",
    "HTMLDataElement",
    "HTMLDataListElement",
    "HTMLDetailsElement",
    "HTMLDialogElement",
    "HTMLDirectoryElement",
    "HTMLDivElement",
    "HTMLElement",
    "HTMLEmbedElement",
    "HTMLFencedFrameElement",
    "HTMLFieldSetElement",
    "HTMLFontElement",
    "HTMLFormControlsCollection",
    "HTMLFormElement",
    "HTMLFrameElement",
    "HTMLFrameSetElement",
    "HTMLHRElement",
    "HTMLHeadElement",
    "HTMLHeadingElement",
    "HTMLHtmlElement",
    "HTMLHyperlinkElementUtils",
    "HTMLIFrameElement",
    "HTMLImageElement",
    "HTMLInputElement",
    "HTMLLIElement",
    "HTMLLabelElement",
    "HTMLLegendElement",
    "HTMLLinkElement",
    "HTMLMapElement",
    "HTMLMarqueeElement",
    "HTMLMediaElement",
    "HTMLMenuElement",
    "HTMLMetaElement",
    "HTMLMeterElement",
    "HTMLModElement",
    "HTMLModelElement",
    "HTMLOListElement",
    "HTMLObjectElement",
    "HTMLOptGroupElement",
    "HTMLOptionElement",
    "HTMLOptionsCollection",
    "HTMLOrSVGElement",
    "HTMLOrSVGImageElement",
    "HTMLOrSVGScriptElement",
    "HTMLOutputElement",
    "HTMLParagraphElement",
    "HTMLParamElement",
    "HTMLPictureElement",
    "HTMLPortalElement",
    "HTMLPreElement",
    "HTMLProgressElement",
    "HTMLQuoteElement",
    "HTMLScriptElement",
    "HTMLSelectElement",
    "HTMLSharedStorageWritableElementUtils",
    "HTMLSlotElement",
    "HTMLSourceElement",
    "HTMLSpanElement",
    "HTMLStyleElement",
    "HTMLTableCaptionElement",
    "HTMLTableCellElement",
    "HTMLTableColElement",
    "HTMLTableElement",
    "HTMLTableRowElement",
    "HTMLTableSectionElement",
    "HTMLTemplateElement",
    "HTMLTextAreaElement",
    "HTMLTimeElement",
    "HTMLTitleElement",
    "HTMLTrackElement",
    "HTMLUListElement",
    "HTMLUnknownElement",
    "HTMLVideoElement",
    "Handle errors",
    "HandwritingDrawing",
    "HandwritingDrawingSegment",
    "HandwritingHints",
    "HandwritingHintsQueryResult",
    "HandwritingInputType",
    "HandwritingModelConstraint",
    "HandwritingPoint",
    "HandwritingPrediction",
    "HandwritingRecognitionType",
    "HandwritingRecognizer",
    "HandwritingRecognizerQueryResult",
    "HandwritingSegment",
    "HandwritingStroke",
    "HardwareAcceleration",
    "HasEitherUnicodeFlag",
    "HasEitherUnicodeFlag(rer)",
    "HasOwnProperty",
    "HasOwnProperty(O, P)",
    "HasProperty",
    "HasProperty(O, P)",
    "HashAlgorithmIdentifier",
    "HashChangeEvent",
    "HashChangeEventInit",
    "HdrMetadataType",
    "Headers",
    "HeadersInit",
    "HevcBitstreamFormat",
    "HevcEncoderConfig",
    "HierarchyRequestError",
    "Highlight",
    "HighlightRegistry",
    "HighlightType",
    "History",
    "HkdfParams",
    "HmacImportParams",
    "HmacKeyAlgorithm",
    "HmacKeyGenParams",
    "HostCallJobCallback",
    "HostCallJobCallback(jobCallback, V, argumentsList)",
    "HostEnqueueFinalizationRegistryCleanupJob",
    "HostEnqueueFinalizationRegistryCleanupJob(finalizationRegistry)",
    "HostEnqueueGenericJob",
    "HostEnqueueGenericJob(job, realm)",
    "HostEnqueuePromiseJob",
    "HostEnqueuePromiseJob(job, realm)",
    "HostEnqueueTimeoutJob",
    "HostEnqueueTimeoutJob(timeoutJob, realm, milliseconds)",
    "HostEnsureCanAddPrivateElement",
    "HostEnsureCanAddPrivateElement(O)",
    "HostEnsureCanCompileStrings",
    "HostEnsureCanCompileStrings(calleeRealm, parameterStrings, bodyString, direct)",
    "HostEventSet",
    "HostEventSet(execution)",
    "HostFinalizeImportMeta",
    "HostFinalizeImportMeta(importMeta, moduleRecord)",
    "HostGetImportMetaProperties",
    "HostGetImportMetaProperties(moduleRecord)",
    "HostGrowSharedArrayBuffer",
    "HostGrowSharedArrayBuffer(buffer, newByteLength)",
    "HostHasSourceTextAvailable",
    "HostHasSourceTextAvailable(func)",
    "HostLoadImportedModule",
    "HostLoadImportedModule(referrer, specifier, hostDefined, payload)",
    "HostMakeJobCallback",
    "HostMakeJobCallback(callback)",
    "HostPromiseRejectionTracker",
    "HostPromiseRejectionTracker(promise, operation)",
    "HostResizeArrayBuffer",
    "HostResizeArrayBuffer(buffer, newByteLength)",
    "HourFromTime",
    "HourFromTime(t)",
    "IDBCursor",
    "IDBCursorDirection",
    "IDBCursorWithValue",
    "IDBDatabase",
    "IDBDatabaseInfo",
    "IDBFactory",
    "IDBIndex",
    "IDBIndexParameters",
    "IDBKeyRange",
    "IDBObjectStore",
    "IDBObjectStoreParameters",
    "IDBOpenDBRequest",
    "IDBRequest",
    "IDBRequestReadyState",
    "IDBTransaction",
    "IDBTransactionDurability",
    "IDBTransactionMode",
    "IDBTransactionOptions",
    "IDBVersionChangeEvent",
    "IDBVersionChangeEventInit",
    "IIRFilterNode",
    "IIRFilterOptions",
    "IPAddressSpace",
    "IdentityCredential",
    "IdentityCredentialDisconnectOptions",
    "IdentityCredentialRequestOptions",
    "IdentityCredentialRequestOptionsContext",
    "IdentityProvider",
    "IdentityProviderAPIConfig",
    "IdentityProviderAccount",
    "IdentityProviderAccountList",
    "IdentityProviderBranding",
    "IdentityProviderClientMetadata",
    "IdentityProviderConfig",
    "IdentityProviderIcon",
    "IdentityProviderRequestOptions",
    "IdentityProviderToken",
    "IdentityProviderWellKnown",
    "IdentityUserInfo",
    "IdleDeadline",
    "IdleDetector",
    "IdleOptions",
    "IdleRequestCallback",
    "IdleRequestOptions",
    "IfAbruptCloseIterator",
    "IfAbruptCloseIterator(value, iteratorRecord)",
    "IfAbruptRejectPromise",
    "IfAbruptRejectPromise(value, capability)",
    "ImageBitmap",
    "ImageBitmapOptions",
    "ImageBitmapRenderingContext",
    "ImageBitmapRenderingContextSettings",
    "ImageBitmapSource",
    "ImageBufferSource",
    "ImageCapture",
    "ImageData",
    "ImageDataSettings",
    "ImageDecodeOptions",
    "ImageDecodeResult",
    "ImageDecoder",
    "ImageDecoderInit",
    "ImageEncodeOptions",
    "ImageOrientation",
    "ImageResource",
    "ImageSmoothingQuality",
    "ImageTrack",
    "ImageTrackList",
    "ImportExportKind",
    "InLeapYear",
    "InLeapYear(t)",
    "InUseAttributeError",
    "Inactivate the recorder",
    "IndexSizeError",
    "InitializeBoundName",
    "InitializeBoundName(name, value, environment)",
    "InitializeHostDefinedRealm",
    "InitializeHostDefinedRealm()",
    "InitializeInstanceElements",
    "InitializeInstanceElements(O, constructor)",
    "InitializeReadableStream",
    "InitializeReferencedBinding",
    "InitializeReferencedBinding(V, W)",
    "InitializeTransformStream",
    "InitializeTypedArrayFromArrayBuffer",
    "InitializeTypedArrayFromArrayBuffer(O, buffer, byteOffset, length)",
    "InitializeTypedArrayFromArrayLike",
    "InitializeTypedArrayFromArrayLike(O, arrayLike)",
    "InitializeTypedArrayFromList",
    "InitializeTypedArrayFromList(O, values)",
    "InitializeTypedArrayFromTypedArray",
    "InitializeTypedArrayFromTypedArray(O, srcArray)",
    "InitializeWritableStream",
    "Ink",
    "InkPresenter",
    "InkPresenterParam",
    "InkTrailStyle",
    "InnerModuleEvaluation",
    "InnerModuleEvaluation(module, stack, index)",
    "InnerModuleLinking",
    "InnerModuleLinking(module, stack, index)",
    "InnerModuleLoading",
    "InnerModuleLoading(state, module)",
    "InputDeviceCapabilities",
    "InputDeviceCapabilitiesInit",
    "InputDeviceInfo",
    "InputEvent",
    "InputEventInit",
    "InputObject",
    "InstallErrorCause",
    "InstallErrorCause(O, options)",
    "InstallEvent",
    "Instance",
    "InstanceofOperator",
    "InstanceofOperator(V, target)",
    "Int16Array",
    "Int32Array",
    "Int8Array",
    "IntegerPart",
    "InterestGroupBiddingAndScoringScriptRunnerGlobalScope",
    "InterestGroupBiddingScriptRunnerGlobalScope",
    "InterestGroupReportingScriptRunnerGlobalScope",
    "InterestGroupScoringScriptRunnerGlobalScope",
    "InterestGroupScriptRunnerGlobalScope",
    "InternalizeJSONProperty",
    "InternalizeJSONProperty(holder, name, reviver)",
    "Interpret Format 1 Patch Map",
    "Interpret Format 2 Patch Map",
    "Interpret Format 2 Patch Map Entry",
    "IntersectionObserver",
    "IntersectionObserverCallback",
    "IntersectionObserverEntry",
    "IntersectionObserverEntryInit",
    "IntersectionObserverInit",
    "IntersectionObserverRegistration",
    "InterventionReportBody",
    "IntrinsicSizes",
    "IntrinsicSizesRequest",
    "IntrinsicSizesResultOptions",
    "InvalidAccessError",
    "InvalidCharacterError",
    "InvalidModificationError",
    "InvalidNodeTypeError",
    "InvalidStateError",
    "Invalidate",
    "Invoke",
    "Invoke(V, P, argumentsList)",
    "Is feature enabled in document for origin?",
    "Is origin potentially trustworthy?",
    "IsAccessorDescriptor",
    "IsAccessorDescriptor(Desc)",
    "IsArray",
    "IsArray(argument)",
    "IsArrayBufferViewOutOfBounds",
    "IsArrayBufferViewOutOfBounds(O)",
    "IsBigIntElementType",
    "IsBigIntElementType(type)",
    "IsCallable",
    "IsCallable(argument)",
    "IsCompatiblePropertyDescriptor",
    "IsCompatiblePropertyDescriptor(Extensible, Desc, Current)",
    "IsConcatSpreadable",
    "IsConcatSpreadable(O)",
    "IsConstructor",
    "IsConstructor(argument)",
    "IsDataDescriptor",
    "IsDataDescriptor(Desc)",
    "IsDetachedBuffer",
    "IsDetachedBuffer(arrayBuffer)",
    "IsExtensible",
    "IsExtensible(O)",
    "IsFixedLengthArrayBuffer",
    "IsFixedLengthArrayBuffer(arrayBuffer)",
    "IsGenericDescriptor",
    "IsGenericDescriptor(Desc)",
    "IsInputPendingOptions",
    "IsLessThan",
    "IsLessThan(x, y, LeftFirst)",
    "IsLooselyEqual",
    "IsLooselyEqual(x, y)",
    "IsNoTearConfiguration",
    "IsNoTearConfiguration(type, order)",
    "IsNonNegativeNumber",
    "IsPrivateReference",
    "IsPrivateReference(V)",
    "IsPromise",
    "IsPromise(x)",
    "IsPropertyReference",
    "IsPropertyReference(V)",
    "IsReadableStreamLocked",
    "IsRegExp",
    "IsRegExp(argument)",
    "IsSharedArrayBuffer",
    "IsSharedArrayBuffer(obj)",
    "IsStrictlyEqual",
    "IsStrictlyEqual(x, y)",
    "IsSuperReference",
    "IsSuperReference(V)",
    "IsTimeZoneOffsetString",
    "IsTimeZoneOffsetString(offsetString)",
    "IsTypedArrayOutOfBounds",
    "IsTypedArrayOutOfBounds(taRecord)",
    "IsUnclampedIntegerElementType",
    "IsUnclampedIntegerElementType(type)",
    "IsUnresolvableReference",
    "IsUnresolvableReference(V)",
    "IsUnsignedElementType",
    "IsUnsignedElementType(type)",
    "IsValidIntegerIndex",
    "IsValidIntegerIndex(O, index)",
    "IsViewOutOfBounds",
    "IsViewOutOfBounds(viewRecord)",
    "IsWordChar",
    "IsWordChar(rer, Input, e)",
    "IsWritableStreamLocked",
    "ItemDetails",
    "ItemType",
    "Iterate over each dynamic binding offset",
    "IterationCompositeOperation",
    "IteratorClose",
    "IteratorClose(iteratorRecord, completion)",
    "IteratorComplete",
    "IteratorComplete(iteratorResult)",
    "IteratorNext",
    "IteratorNext(iteratorRecord, value)",
    "IteratorStep",
    "IteratorStep(iteratorRecord)",
    "IteratorStepValue",
    "IteratorStepValue(iteratorRecord)",
    "IteratorToList",
    "IteratorToList(iteratorRecord)",
    "IteratorValue",
    "IteratorValue(iteratorResult)",
    "JSON",
    "JsonLd",
    "JsonLdContext",
    "JsonLdEmbed",
    "JsonLdError",
    "JsonLdErrorCode",
    "JsonLdFramingError",
    "JsonLdFramingErrorCode",
    "JsonLdInput",
    "JsonLdOptions",
    "JsonLdProcessor",
    "JsonLdRecord",
    "JsonWebKey",
    "KAnonStatus",
    "KeyAlgorithm",
    "KeyForSymbol",
    "KeyForSymbol(sym)",
    "KeyFormat",
    "KeyFrameRequestEvent",
    "KeySystemTrackConfiguration",
    "KeyType",
    "KeyUsage",
    "Keyboard",
    "KeyboardEvent",
    "KeyboardEventInit",
    "KeyboardLayoutMap",
    "KeyframeAnimationOptions",
    "KeyframeEffect",
    "KeyframeEffectOptions",
    "Landmark",
    "LandmarkType",
    "LargeBlobSupport",
    "LargestContentfulPaint",
    "LatencyMode",
    "LaunchConsumer",
    "LaunchParams",
    "LaunchQueue",
    "LayoutChild",
    "LayoutConstraints",
    "LayoutConstraintsOptions",
    "LayoutEdgeSizes",
    "LayoutEdges",
    "LayoutFragment",
    "LayoutFragmentRequest",
    "LayoutFragmentRequestOrIntrinsicSizesRequest",
    "LayoutOptions",
    "LayoutShift",
    "LayoutShiftAttribution",
    "LayoutSizingMode",
    "LayoutWorkletGlobalScope",
    "LeaveCriticalSection",
    "LeaveCriticalSection(WL)",
    "LegacyFactoryFunction",
    "LegacyLenientSetter",
    "LegacyLenientThis",
    "LegacyNamespace",
    "LegacyNoInterfaceObject",
    "LegacyNullToEmptyString",
    "LegacyOverrideBuiltIns",
    "LegacyPlatformObjectGetOwnProperty",
    "LegacyTreatNonObjectAsNull",
    "LegacyUnenumerableNamedProperties",
    "LegacyUnforgeable",
    "LegacyWindowAlias",
    "LengthOfArrayLike",
    "LengthOfArrayLike(obj)",
    "LifecycleError",
    "LineAlignSetting",
    "LineAndPositionSetting",
    "LinearAccelerationSensor",
    "LinkError",
    "LinkStyle",
    "Load patch file",
    "LoadDocumentCallback",
    "LoadDocumentOptions",
    "LocalTime",
    "LocalTime(t)",
    "Location",
    "Lock",
    "LockGrantedCallback",
    "LockInfo",
    "LockManager",
    "LockManagerSnapshot",
    "LockMode",
    "LockOptions",
    "Logger",
    "Logical miplevel-specific texture extent",
    "LoginStatus",
    "LoopContinues",
    "LoopContinues(completion, labelSet)",
    "MIDIAccess",
    "MIDIConnectionEvent",
    "MIDIConnectionEventInit",
    "MIDIInput",
    "MIDIInputMap",
    "MIDIMessageEvent",
    "MIDIMessageEventInit",
    "MIDIOptions",
    "MIDIOutput",
    "MIDIOutputMap",
    "MIDIPort",
    "MIDIPortConnectionState",
    "MIDIPortDeviceState",
    "MIDIPortType",
    "ML",
    "MLArgMinMaxOptions",
    "MLBatchNormalizationOptions",
    "MLClampOptions",
    "MLComputeResult",
    "MLContext",
    "MLContextOptions",
    "MLConv2dFilterOperandLayout",
    "MLConv2dOptions",
    "MLConvTranspose2dFilterOperandLayout",
    "MLConvTranspose2dOptions",
    "MLDeviceType",
    "MLEluOptions",
    "MLGatherOptions",
    "MLGemmOptions",
    "MLGraph",
    "MLGraphBuilder",
    "MLGruCellOptions",
    "MLGruOptions",
    "MLGruWeightLayout",
    "MLHardSigmoidOptions",
    "MLInputOperandLayout",
    "MLInstanceNormalizationOptions",
    "MLInterpolationMode",
    "MLLayerNormalizationOptions",
    "MLLeakyReluOptions",
    "MLLinearOptions",
    "MLLstmCellOptions",
    "MLLstmOptions",
    "MLLstmWeightLayout",
    "MLNamedArrayBufferViews",
    "MLNamedOperands",
    "MLNumber",
    "MLOperand",
    "MLOperandDataType",
    "MLOperandDescriptor",
    "MLOperatorOptions",
    "MLPadOptions",
    "MLPaddingMode",
    "MLPool2dOptions",
    "MLPowerPreference",
    "MLRecurrentNetworkActivation",
    "MLRecurrentNetworkDirection",
    "MLReduceOptions",
    "MLResample2dOptions",
    "MLRoundingType",
    "MLSplitOptions",
    "MLTransposeOptions",
    "MLTriangularOptions",
    "Magnetometer",
    "MagnetometerLocalCoordinateSystem",
    "MagnetometerSensorOptions",
    "MakeArgGetter",
    "MakeArgGetter(name, env)",
    "MakeArgSetter",
    "MakeArgSetter(name, env)",
    "MakeBasicObject",
    "MakeBasicObject(internalSlotsList)",
    "MakeClassConstructor",
    "MakeClassConstructor(F)",
    "MakeConstructor",
    "MakeConstructor(F, writablePrototype, prototype)",
    "MakeDataViewWithBufferWitnessRecord",
    "MakeDataViewWithBufferWitnessRecord(obj, order)",
    "MakeDate",
    "MakeDate(day, time)",
    "MakeDay",
    "MakeDay(year, month, date)",
    "MakeFullYear",
    "MakeFullYear(year)",
    "MakeMatchIndicesIndexPairArray",
    "MakeMatchIndicesIndexPairArray(S, indices, groupNames, hasGroups)",
    "MakeMethod",
    "MakeMethod(F, homeObject)",
    "MakePrivateReference",
    "MakePrivateReference(baseValue, privateIdentifier)",
    "MakeSuperPropertyReference",
    "MakeSuperPropertyReference(actualThis, propertyKey, strict)",
    "MakeTime",
    "MakeTime(hour, min, sec, ms)",
    "MakeTypedArrayWithBufferWitnessRecord",
    "MakeTypedArrayWithBufferWitnessRecord(obj, order)",
    "ManagedMediaSource",
    "ManagedSourceBuffer",
    "Map",
    "MatchSequence",
    "MatchSequence(m1, m2, direction)",
    "MatchTwoAlternatives",
    "MatchTwoAlternatives(m1, m2)",
    "Math",
    "MathMLElement",
    "MaybeSimpleCaseFolding",
    "MaybeSimpleCaseFolding(rer, A)",
    "MediaCapabilities",
    "MediaCapabilitiesDecodingInfo",
    "MediaCapabilitiesEncodingInfo",
    "MediaCapabilitiesInfo",
    "MediaCapabilitiesKeySystemConfiguration",
    "MediaConfiguration",
    "MediaDecodingConfiguration",
    "MediaDecodingType",
    "MediaDeviceInfo",
    "MediaDeviceKind",
    "MediaDevices",
    "MediaElementAudioSourceNode",
    "MediaElementAudioSourceOptions",
    "MediaEncodingConfiguration",
    "MediaEncodingType",
    "MediaEncryptedEvent",
    "MediaEncryptedEventInit",
    "MediaError",
    "MediaImage",
    "MediaKeyMessageEvent",
    "MediaKeyMessageEventInit",
    "MediaKeyMessageType",
    "MediaKeySession",
    "MediaKeySessionClosedReason",
    "MediaKeySessionType",
    "MediaKeyStatus",
    "MediaKeyStatusMap",
    "MediaKeySystemAccess",
    "MediaKeySystemConfiguration",
    "MediaKeySystemMediaCapability",
    "MediaKeys",
    "MediaKeysPolicy",
    "MediaKeysRequirement",
    "MediaList",
    "MediaMetadata",
    "MediaMetadataInit",
    "MediaPositionState",
    "MediaProvider",
    "MediaQueryList",
    "MediaQueryListEvent",
    "MediaQueryListEventInit",
    "MediaRecorder",
    "MediaRecorderOptions",
    "MediaSession",
    "MediaSessionAction",
    "MediaSessionActionDetails",
    "MediaSessionActionHandler",
    "MediaSessionCaptureActionDetails",
    "MediaSessionPlaybackState",
    "MediaSessionSeekActionDetails",
    "MediaSessionSeekToActionDetails",
    "MediaSettingsRange",
    "MediaSource",
    "MediaSourceHandle",
    "MediaStream",
    "MediaStreamAudioDestinationNode",
    "MediaStreamAudioSourceNode",
    "MediaStreamAudioSourceOptions",
    "MediaStreamConstraints",
    "MediaStreamTrack",
    "MediaStreamTrackAudioSourceNode",
    "MediaStreamTrackAudioSourceOptions",
    "MediaStreamTrackEvent",
    "MediaStreamTrackEventInit",
    "MediaStreamTrackProcessor",
    "MediaStreamTrackProcessorInit",
    "MediaStreamTrackState",
    "MediaTrackCapabilities",
    "MediaTrackConstraintSet",
    "MediaTrackConstraints",
    "MediaTrackSettings",
    "MediaTrackSupportedConstraints",
    "Memory",
    "MemoryAttribution",
    "MemoryAttributionContainer",
    "MemoryBreakdownEntry",
    "MemoryDescriptor",
    "MemoryMeasurement",
    "MessageChannel",
    "MessageEvent",
    "MessageEventInit",
    "MessageEventSource",
    "MessagePort",
    "MeteringMode",
    "MidiPermissionDescriptor",
    "MimeType",
    "MimeTypeArray",
    "MinFromTime",
    "MinFromTime(t)",
    "MockCameraConfiguration",
    "MockCaptureDeviceConfiguration",
    "MockCapturePromptResult",
    "MockCapturePromptResultConfiguration",
    "MockMicrophoneConfiguration",
    "Module",
    "ModuleExportDescriptor",
    "ModuleImportDescriptor",
    "ModuleNamespaceCreate",
    "ModuleNamespaceCreate(module, exports)",
    "MonitorTypeSurfacesEnum",
    "MonthFromTime",
    "MonthFromTime(t)",
    "MouseEvent",
    "MouseEventInit",
    "MultiCacheQueryOptions",
    "MutationCallback",
    "MutationEvent",
    "MutationNameEvent",
    "MutationObserver",
    "MutationObserverInit",
    "MutationRecord",
    "NDEFMakeReadOnlyOptions",
    "NDEFMessage",
    "NDEFMessageInit",
    "NDEFMessageSource",
    "NDEFReader",
    "NDEFReadingEvent",
    "NDEFReadingEventInit",
    "NDEFRecord",
    "NDEFRecordInit",
    "NDEFScanOptions",
    "NDEFWriteOptions",
    "NameList",
    "NamedCurve",
    "NamedFlow",
    "NamedFlowMap",
    "NamedNodeMap",
    "NamespaceError",
    "NativeError(message, options)",
    "NavigateEvent",
    "NavigateEventInit",
    "Navigation",
    "NavigationActivation",
    "NavigationCurrentEntryChangeEvent",
    "NavigationCurrentEntryChangeEventInit",
    "NavigationDestination",
    "NavigationEvent",
    "NavigationEventInit",
    "NavigationFocusReset",
    "NavigationHistoryBehavior",
    "NavigationHistoryEntry",
    "NavigationInterceptHandler",
    "NavigationInterceptOptions",
    "NavigationNavigateOptions",
    "NavigationOptions",
    "NavigationPreloadManager",
    "NavigationPreloadState",
    "NavigationReloadOptions",
    "NavigationResult",
    "NavigationScrollBehavior",
    "NavigationTimingType",
    "NavigationTransition",
    "NavigationType",
    "NavigationUpdateCurrentEntryOptions",
    "Navigator",
    "NavigatorAutomationInformation",
    "NavigatorBadge",
    "NavigatorConcurrentHardware",
    "NavigatorContentUtils",
    "NavigatorCookies",
    "NavigatorDeviceMemory",
    "NavigatorGPU",
    "NavigatorID",
    "NavigatorLanguage",
    "NavigatorLocks",
    "NavigatorLogin",
    "NavigatorML",
    "NavigatorManagedData",
    "NavigatorNetworkInformation",
    "NavigatorOnLine",
    "NavigatorPlugins",
    "NavigatorStorage",
    "NavigatorStorageBuckets",
    "NavigatorUA",
    "NavigatorUABrandVersion",
    "NavigatorUAData",
    "NavigatorUserMediaErrorCallback",
    "NavigatorUserMediaSuccessCallback",
    "NetworkError",
    "NetworkInformation",
    "NewDeclarativeEnvironment",
    "NewDeclarativeEnvironment(E)",
    "NewFunctionEnvironment",
    "NewFunctionEnvironment(F, newTarget)",
    "NewGlobalEnvironment",
    "NewGlobalEnvironment(G, thisValue)",
    "NewModuleEnvironment",
    "NewModuleEnvironment(E)",
    "NewObject",
    "NewObjectEnvironment",
    "NewObjectEnvironment(O, W, E)",
    "NewPrivateEnvironment",
    "NewPrivateEnvironment(outerPrivateEnv)",
    "NewPromiseCapability",
    "NewPromiseCapability(C)",
    "NewPromiseReactionJob",
    "NewPromiseReactionJob(reaction, argument)",
    "NewPromiseResolveThenableJob",
    "NewPromiseResolveThenableJob(promiseToResolve, thenable, then)",
    "NoModificationAllowedError",
    "Node",
    "NodeFilter",
    "NodeIterator",
    "NodeList",
    "NonDocumentTypeChildNode",
    "NonElementParentNode",
    "NormalCompletion",
    "NormalCompletion(value)",
    "NotAllowedError",
    "NotFoundError",
    "NotReadableError",
    "NotRestoredReasonDetails",
    "NotRestoredReasons",
    "NotSupportedError",
    "Notation",
    "Notification",
    "NotificationAction",
    "NotificationDirection",
    "NotificationEvent",
    "NotificationEventInit",
    "NotificationOptions",
    "NotificationPermission",
    "NotificationPermissionCallback",
    "NotifyWaiter",
    "NotifyWaiter(WL, waiterRecord)",
    "Number",
    "NumberBitwiseOp",
    "NumberBitwiseOp(op, x, y)",
    "NumberToBigInt",
    "NumberToBigInt(number)",
    "NumericToRawBytes",
    "NumericToRawBytes(type, value, isLittleEndian)",
    "OTPCredential",
    "OTPCredentialRequestOptions",
    "OTPCredentialTransportType",
    "Object",
    "ObjectDefineProperties",
    "ObjectDefineProperties(O, Properties)",
    "ObservableArray",
    "ObservableArray<T>",
    "OfflineAudioCompletionEvent",
    "OfflineAudioCompletionEventInit",
    "OfflineAudioContext",
    "OfflineAudioContextOptions",
    "OffscreenCanvas",
    "OffscreenCanvasRenderingContext2D",
    "OffscreenRenderingContext",
    "OffscreenRenderingContextId",
    "OnBeforeUnloadEventHandler",
    "OnBeforeUnloadEventHandlerNonNull",
    "OnErrorEventHandler",
    "OnErrorEventHandlerNonNull",
    "OpaqueProperty",
    "OpenFilePickerOptions",
    "OperationError",
    "OperationType",
    "OptOutError",
    "OptionalEffectTiming",
    "OpusApplication",
    "OpusBitstreamFormat",
    "OpusEncoderConfig",
    "OpusSignal",
    "OrdinaryCallBindThis",
    "OrdinaryCallBindThis(F, calleeContext, thisArgument)",
    "OrdinaryCallEvaluateBody",
    "OrdinaryCallEvaluateBody(F, argumentsList)",
    "OrdinaryCreateFromConstructor",
    "OrdinaryCreateFromConstructor(constructor, intrinsicDefaultProto, internalSlotsList)",
    "OrdinaryDefineOwnProperty",
    "OrdinaryDefineOwnProperty(O, P, Desc)",
    "OrdinaryDelete",
    "OrdinaryDelete(O, P)",
    "OrdinaryFunctionCreate",
    "OrdinaryFunctionCreate(functionPrototype, sourceText, ParameterList, Body, thisMode, env, privateEnv)",
    "OrdinaryGet",
    "OrdinaryGet(O, P, Receiver)",
    "OrdinaryGetOwnProperty",
    "OrdinaryGetOwnProperty(O, P)",
    "OrdinaryGetPrototypeOf",
    "OrdinaryGetPrototypeOf(O)",
    "OrdinaryHasInstance",
    "OrdinaryHasInstance(C, O)",
    "OrdinaryHasProperty",
    "OrdinaryHasProperty(O, P)",
    "OrdinaryIsExtensible",
    "OrdinaryIsExtensible(O)",
    "OrdinaryObjectCreate",
    "OrdinaryObjectCreate(proto, additionalInternalSlotsList)",
    "OrdinaryOwnPropertyKeys",
    "OrdinaryOwnPropertyKeys(O)",
    "OrdinaryPreventExtensions",
    "OrdinaryPreventExtensions(O)",
    "OrdinarySet",
    "OrdinarySet(O, P, V, Receiver)",
    "OrdinarySetPrototypeOf",
    "OrdinarySetPrototypeOf(O, V)",
    "OrdinarySetWithOwnDescriptor",
    "OrdinarySetWithOwnDescriptor(O, P, V, Receiver, ownDesc)",
    "OrdinaryToPrimitive",
    "OrdinaryToPrimitive(O, hint)",
    "OrientationLockType",
    "OrientationSensor",
    "OrientationSensorLocalCoordinateSystem",
    "OrientationSensorOptions",
    "OrientationType",
    "OscillatorNode",
    "OscillatorOptions",
    "OscillatorType",
    "OverSampleType",
    "OverconstrainedError",
    "PADebugModeOptions",
    "PAExtendedHistogramContribution",
    "PAHistogramContribution",
    "PASignalValue",
    "PackAndPostMessage",
    "PackAndPostMessageHandlingError",
    "Page",
    "PageInputObject",
    "PageRevealEvent",
    "PageRevealEventInit",
    "PageState",
    "PageSwapEvent",
    "PageSwapEventInit",
    "PageTransitionEvent",
    "PageTransitionEventInit",
    "PaintRenderingContext2D",
    "PaintRenderingContext2DSettings",
    "PaintSize",
    "PaintWorkletGlobalScope",
    "PannerNode",
    "PannerOptions",
    "PanningModelType",
    "ParentNode",
    "ParityType",
    "Parse policy directive",
    "ParseHexOctet",
    "ParseHexOctet(string, position)",
    "ParseModule",
    "ParseModule(sourceText, realm, hostDefined)",
    "ParseScript",
    "ParseScript(sourceText, realm, hostDefined)",
    "ParseTimeZoneOffsetString",
    "ParseTimeZoneOffsetString(offsetString)",
    "PasswordCredential",
    "PasswordCredentialData",
    "PasswordCredentialInit",
    "Path2D",
    "PayerErrors",
    "PaymentComplete",
    "PaymentCompleteDetails",
    "PaymentCredentialInstrument",
    "PaymentCurrencyAmount",
    "PaymentDelegation",
    "PaymentDetailsBase",
    "PaymentDetailsInit",
    "PaymentDetailsModifier",
    "PaymentDetailsUpdate",
    "PaymentHandlerResponse",
    "PaymentItem",
    "PaymentManager",
    "PaymentMethodChangeEvent",
    "PaymentMethodChangeEventInit",
    "PaymentMethodData",
    "PaymentOptions",
    "PaymentRequest",
    "PaymentRequestDetailsUpdate",
    "PaymentRequestEvent",
    "PaymentRequestEventInit",
    "PaymentRequestUpdateEvent",
    "PaymentRequestUpdateEventInit",
    "PaymentResponse",
    "PaymentShippingOption",
    "PaymentShippingType",
    "PaymentValidationErrors",
    "Pbkdf2Params",
    "PeekQueueValue",
    "PerformEval",
    "PerformEval(x, strictCaller, direct)",
    "PerformPromiseAll",
    "PerformPromiseAll(iteratorRecord, constructor, resultCapability, promiseResolve)",
    "PerformPromiseAllSettled",
    "PerformPromiseAllSettled(iteratorRecord, constructor, resultCapability, promiseResolve)",
    "PerformPromiseAny",
    "PerformPromiseAny(iteratorRecord, constructor, resultCapability, promiseResolve)",
    "PerformPromiseRace",
    "PerformPromiseRace(iteratorRecord, constructor, resultCapability, promiseResolve)",
    "PerformPromiseThen",
    "PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)",
    "Performance",
    "PerformanceElementTiming",
    "PerformanceEntry",
    "PerformanceEntryList",
    "PerformanceEventTiming",
    "PerformanceLongAnimationFrameTiming",
    "PerformanceLongTaskTiming",
    "PerformanceMark",
    "PerformanceMarkOptions",
    "PerformanceMeasure",
    "PerformanceMeasureOptions",
    "PerformanceNavigation",
    "PerformanceNavigationTiming",
    "PerformanceObserver",
    "PerformanceObserverCallback",
    "PerformanceObserverCallbackOptions",
    "PerformanceObserverEntryList",
    "PerformanceObserverInit",
    "PerformancePaintTiming",
    "PerformanceResourceTiming",
    "PerformanceScriptTiming",
    "PerformanceServerTiming",
    "PerformanceTiming",
    "PeriodicSyncEvent",
    "PeriodicSyncEventInit",
    "PeriodicSyncManager",
    "PeriodicWave",
    "PeriodicWaveConstraints",
    "PeriodicWaveOptions",
    "PermissionDescriptor",
    "PermissionSetParameters",
    "PermissionState",
    "PermissionStatus",
    "Permissions",
    "PermissionsPolicy",
    "PermissionsPolicyViolationReportBody",
    "PhotoCapabilities",
    "PhotoSettings",
    "Physical miplevel-specific texture extent",
    "PictureInPictureEvent",
    "PictureInPictureEventInit",
    "PictureInPictureWindow",
    "PlaneLayout",
    "PlaybackDirection",
    "Plugin",
    "PluginArray",
    "Point2D",
    "PointerEvent",
    "PointerEventInit",
    "PointerLockOptions",
    "PopStateEvent",
    "PopStateEventInit",
    "PopoverInvokerElement",
    "PortalActivateEvent",
    "PortalActivateEventInit",
    "PortalActivateOptions",
    "PortalHost",
    "PositionAlignSetting",
    "PositionCallback",
    "PositionErrorCallback",
    "PositionOptions",
    "PredefinedColorSpace",
    "PreferenceManager",
    "PreferenceObject",
    "PremultiplyAlpha",
    "Prepare the script text",
    "PrepareForOrdinaryCall",
    "PrepareForOrdinaryCall(F, newTarget)",
    "PrepareForTailCall",
    "PrepareForTailCall()",
    "Presentation",
    "PresentationAvailability",
    "PresentationConnection",
    "PresentationConnectionAvailableEvent",
    "PresentationConnectionAvailableEventInit",
    "PresentationConnectionCloseEvent",
    "PresentationConnectionCloseEventInit",
    "PresentationConnectionCloseReason",
    "PresentationConnectionList",
    "PresentationConnectionState",
    "PresentationReceiver",
    "PresentationRequest",
    "PresentationStyle",
    "PressureObserver",
    "PressureObserverOptions",
    "PressureRecord",
    "PressureSource",
    "PressureState",
    "PressureUpdateCallback",
    "Prevent Silent Access",
    "PreviousWin",
    "Printer",
    "PrivateAggregation",
    "PrivateElementFind",
    "PrivateElementFind(O, P)",
    "PrivateFieldAdd",
    "PrivateFieldAdd(O, P, value)",
    "PrivateGet",
    "PrivateGet(O, P)",
    "PrivateMethodOrAccessorAdd",
    "PrivateMethodOrAccessorAdd(O, method)",
    "PrivateNetworkAccessPermissionDescriptor",
    "PrivateSet",
    "PrivateSet(O, P, value)",
    "PrivateToken",
    "Process permissions policy attributes",
    "Process response policy",
    "Process value with a default policy",
    "ProcessingInstruction",
    "Profiler",
    "ProfilerFrame",
    "ProfilerInitOptions",
    "ProfilerResource",
    "ProfilerSample",
    "ProfilerStack",
    "ProfilerTrace",
    "ProgressEvent",
    "ProgressEventInit",
    "Promise",
    "Promise<T>",
    "PromiseRejectionEvent",
    "PromiseRejectionEventInit",
    "PromiseResolve",
    "PromiseResolve(C, x)",
    "PromptResponseObject",
    "PropertyDefinition",
    "ProtectedAudience",
    "ProtectedAudiencePrivateAggregationConfig",
    "ProximitySensor",
    "Proxy",
    "ProxyCreate",
    "ProxyCreate(target, handler)",
    "PublicKeyCredential",
    "PublicKeyCredentialClientCapabilities",
    "PublicKeyCredentialCreationOptions",
    "PublicKeyCredentialCreationOptionsJSON",
    "PublicKeyCredentialDescriptor",
    "PublicKeyCredentialDescriptorJSON",
    "PublicKeyCredentialEntity",
    "PublicKeyCredentialHints",
    "PublicKeyCredentialJSON",
    "PublicKeyCredentialParameters",
    "PublicKeyCredentialRequestOptions",
    "PublicKeyCredentialRequestOptionsJSON",
    "PublicKeyCredentialRpEntity",
    "PublicKeyCredentialType",
    "PublicKeyCredentialUserEntity",
    "PublicKeyCredentialUserEntityJSON",
    "PurchaseDetails",
    "PushEncryptionKeyName",
    "PushEvent",
    "PushEventInit",
    "PushManager",
    "PushMessageData",
    "PushMessageDataInit",
    "PushPermissionDescriptor",
    "PushSubscription",
    "PushSubscriptionChangeEvent",
    "PushSubscriptionChangeEventInit",
    "PushSubscriptionJSON",
    "PushSubscriptionOptions",
    "PushSubscriptionOptionsInit",
    "PutForwards",
    "PutValue",
    "PutValue(V, W)",
    "QueryOptions",
    "QueuingStrategy",
    "QueuingStrategyInit",
    "QueuingStrategySize",
    "QuotaExceededError",
    "QuoteJSONString",
    "QuoteJSONString(value)",
    "RTCAnswerOptions",
    "RTCAudioPlayoutStats",
    "RTCAudioSourceStats",
    "RTCBundlePolicy",
    "RTCCertificate",
    "RTCCertificateExpiration",
    "RTCCertificateStats",
    "RTCCodecStats",
    "RTCConfiguration",
    "RTCDTMFSender",
    "RTCDTMFToneChangeEvent",
    "RTCDTMFToneChangeEventInit",
    "RTCDataChannel",
    "RTCDataChannelEvent",
    "RTCDataChannelEventInit",
    "RTCDataChannelInit",
    "RTCDataChannelState",
    "RTCDataChannelStats",
    "RTCDegradationPreference",
    "RTCDtlsFingerprint",
    "RTCDtlsRole",
    "RTCDtlsTransport",
    "RTCDtlsTransportState",
    "RTCEncodedAudioFrame",
    "RTCEncodedAudioFrameMetadata",
    "RTCEncodedAudioFrameOptions",
    "RTCEncodedVideoFrame",
    "RTCEncodedVideoFrameMetadata",
    "RTCEncodedVideoFrameOptions",
    "RTCEncodedVideoFrameType",
    "RTCError",
    "RTCErrorDetailType",
    "RTCErrorDetailTypeIdp",
    "RTCErrorEvent",
    "RTCErrorEventInit",
    "RTCErrorInit",
    "RTCIceCandidate",
    "RTCIceCandidateInit",
    "RTCIceCandidatePair",
    "RTCIceCandidatePairStats",
    "RTCIceCandidateStats",
    "RTCIceCandidateType",
    "RTCIceComponent",
    "RTCIceConnectionState",
    "RTCIceGatherOptions",
    "RTCIceGathererState",
    "RTCIceGatheringState",
    "RTCIceParameters",
    "RTCIceProtocol",
    "RTCIceRole",
    "RTCIceServer",
    "RTCIceServerTransportProtocol",
    "RTCIceTcpCandidateType",
    "RTCIceTransport",
    "RTCIceTransportPolicy",
    "RTCIceTransportState",
    "RTCIdentityAssertion",
    "RTCIdentityAssertionResult",
    "RTCIdentityProvider",
    "RTCIdentityProviderDetails",
    "RTCIdentityProviderGlobalScope",
    "RTCIdentityProviderOptions",
    "RTCIdentityProviderRegistrar",
    "RTCIdentityValidationResult",
    "RTCInboundRtpStreamStats",
    "RTCLocalSessionDescriptionInit",
    "RTCMediaSourceStats",
    "RTCOfferAnswerOptions",
    "RTCOfferOptions",
    "RTCOutboundRtpStreamStats",
    "RTCPeerConnection",
    "RTCPeerConnectionErrorCallback",
    "RTCPeerConnectionIceErrorEvent",
    "RTCPeerConnectionIceErrorEventInit",
    "RTCPeerConnectionIceEvent",
    "RTCPeerConnectionIceEventInit",
    "RTCPeerConnectionState",
    "RTCPeerConnectionStats",
    "RTCPriorityType",
    "RTCQualityLimitationReason",
    "RTCReceivedRtpStreamStats",
    "RTCRemoteInboundRtpStreamStats",
    "RTCRemoteOutboundRtpStreamStats",
    "RTCRtcpMuxPolicy",
    "RTCRtcpParameters",
    "RTCRtpCapabilities",
    "RTCRtpCodec",
    "RTCRtpCodecCapability",
    "RTCRtpCodecParameters",
    "RTCRtpCodingParameters",
    "RTCRtpContributingSource",
    "RTCRtpEncodingParameters",
    "RTCRtpHeaderExtensionCapability",
    "RTCRtpHeaderExtensionParameters",
    "RTCRtpParameters",
    "RTCRtpReceiveParameters",
    "RTCRtpReceiver",
    "RTCRtpScriptTransform",
    "RTCRtpScriptTransformer",
    "RTCRtpSendParameters",
    "RTCRtpSender",
    "RTCRtpStreamStats",
    "RTCRtpSynchronizationSource",
    "RTCRtpTransceiver",
    "RTCRtpTransceiverDirection",
    "RTCRtpTransceiverInit",
    "RTCRtpTransform",
    "RTCSctpTransport",
    "RTCSctpTransportState",
    "RTCSdpType",
    "RTCSentRtpStreamStats",
    "RTCSessionDescription",
    "RTCSessionDescriptionCallback",
    "RTCSessionDescriptionInit",
    "RTCSetParameterOptions",
    "RTCSignalingState",
    "RTCStats",
    "RTCStatsIceCandidatePairState",
    "RTCStatsReport",
    "RTCStatsType",
    "RTCTrackEvent",
    "RTCTrackEventInit",
    "RTCTransformEvent",
    "RTCTransportStats",
    "RTCVideoSourceStats",
    "RadioNodeList",
    "Range",
    "RangeError",
    "RangeException",
    "RawBytesToNumeric",
    "RawBytesToNumeric(type, rawBytes, isLittleEndian)",
    "RdfDataset",
    "RdfGraph",
    "RdfLiteral",
    "RdfTriple",
    "ReadOnlyError",
    "ReadOptions",
    "ReadableByteStreamController",
    "ReadableByteStreamControllerCallPullIfNeeded",
    "ReadableByteStreamControllerClearAlgorithms",
    "ReadableByteStreamControllerClearPendingPullIntos",
    "ReadableByteStreamControllerClose",
    "ReadableByteStreamControllerCommitPullIntoDescriptor",
    "ReadableByteStreamControllerConvertPullIntoDescriptor",
    "ReadableByteStreamControllerEnqueue",
    "ReadableByteStreamControllerEnqueueChunkToQueue",
    "ReadableByteStreamControllerEnqueueClonedChunkToQueue",
    "ReadableByteStreamControllerEnqueueDetachedPullIntoToQueue",
    "ReadableByteStreamControllerError",
    "ReadableByteStreamControllerFillHeadPullIntoDescriptor",
    "ReadableByteStreamControllerFillPullIntoDescriptorFromQueue",
    "ReadableByteStreamControllerFillReadRequestFromQueue",
    "ReadableByteStreamControllerGetBYOBRequest",
    "ReadableByteStreamControllerGetDesiredSize",
    "ReadableByteStreamControllerHandleQueueDrain",
    "ReadableByteStreamControllerInvalidateBYOBRequest",
    "ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue",
    "ReadableByteStreamControllerProcessReadRequestsUsingQueue",
    "ReadableByteStreamControllerPullInto",
    "ReadableByteStreamControllerRespond",
    "ReadableByteStreamControllerRespondInClosedState",
    "ReadableByteStreamControllerRespondInReadableState",
    "ReadableByteStreamControllerRespondInternal",
    "ReadableByteStreamControllerRespondWithNewView",
    "ReadableByteStreamControllerShiftPendingPullInto",
    "ReadableByteStreamControllerShouldCallPull",
    "ReadableByteStreamTee",
    "ReadableStream",
    "ReadableStreamAddReadIntoRequest",
    "ReadableStreamAddReadRequest",
    "ReadableStreamBYOBReader",
    "ReadableStreamBYOBReaderErrorReadIntoRequests",
    "ReadableStreamBYOBReaderRead",
    "ReadableStreamBYOBReaderReadOptions",
    "ReadableStreamBYOBReaderRelease",
    "ReadableStreamBYOBRequest",
    "ReadableStreamCancel",
    "ReadableStreamClose",
    "ReadableStreamController",
    "ReadableStreamDefaultController",
    "ReadableStreamDefaultControllerCallPullIfNeeded",
    "ReadableStreamDefaultControllerCanCloseOrEnqueue",
    "ReadableStreamDefaultControllerClearAlgorithms",
    "ReadableStreamDefaultControllerClose",
    "ReadableStreamDefaultControllerEnqueue",
    "ReadableStreamDefaultControllerError",
    "ReadableStreamDefaultControllerGetDesiredSize",
    "ReadableStreamDefaultControllerHasBackpressure",
    "ReadableStreamDefaultControllerShouldCallPull",
    "ReadableStreamDefaultReader",
    "ReadableStreamDefaultReaderErrorReadRequests",
    "ReadableStreamDefaultReaderRead",
    "ReadableStreamDefaultReaderRelease",
    "ReadableStreamDefaultTee",
    "ReadableStreamError",
    "ReadableStreamFromIterable",
    "ReadableStreamFulfillReadIntoRequest",
    "ReadableStreamFulfillReadRequest",
    "ReadableStreamGenericReader",
    "ReadableStreamGetNumReadIntoRequests",
    "ReadableStreamGetNumReadRequests",
    "ReadableStreamGetReaderOptions",
    "ReadableStreamHasBYOBReader",
    "ReadableStreamHasDefaultReader",
    "ReadableStreamIteratorOptions",
    "ReadableStreamPipeTo",
    "ReadableStreamReadResult",
    "ReadableStreamReader",
    "ReadableStreamReaderGenericCancel",
    "ReadableStreamReaderGenericInitialize",
    "ReadableStreamReaderGenericRelease",
    "ReadableStreamReaderMode",
    "ReadableStreamTee",
    "ReadableStreamType",
    "ReadableWritablePair",
    "ReadyState",
    "RealTimeContribution",
    "RealTimeReporting",
    "RecordingState",
    "RedEyeReduction",
    "ReferenceError",
    "ReferrerPolicy",
    "Reflect",
    "RefreshPolicy",
    "RegExp",
    "RegExpAlloc",
    "RegExpAlloc(newTarget)",
    "RegExpBuiltinExec",
    "RegExpBuiltinExec(R, S)",
    "RegExpCreate",
    "RegExpCreate(P, F)",
    "RegExpExec",
    "RegExpExec(R, S)",
    "RegExpHasFlag",
    "RegExpHasFlag(R, codeUnit)",
    "RegExpInitialize",
    "RegExpInitialize(obj, pattern, flags)",
    "Region",
    "RegistrationOptions",
    "RegistrationResponseJSON",
    "RejectPromise",
    "RejectPromise(promise, reason)",
    "RelatedApplication",
    "RelativeOrientationSensor",
    "RemoteDocument",
    "RemotePlayback",
    "RemotePlaybackAvailabilityCallback",
    "RemotePlaybackState",
    "Remove Entries from Format 1 Patch Map",
    "Remove Entries from Format 2 Patch Map",
    "RemoveWaiter",
    "RemoveWaiter(WL, waiterRecord)",
    "RemoveWaiters",
    "RemoveWaiters(WL, c)",
    "RenderBlockingStatusType",
    "RenderingContext",
    "RepeatMatcher",
    "RepeatMatcher(m, min, max, greedy, x, c, parenIndex, parenCount)",
    "Replace the drawing buffer",
    "Replaceable",
    "Report",
    "ReportBody",
    "ReportEventType",
    "ReportList",
    "ReportResultBrowserSignals",
    "ReportWinBrowserSignals",
    "ReportingBrowserSignals",
    "ReportingObserver",
    "ReportingObserverCallback",
    "ReportingObserverOptions",
    "Request",
    "Request a Credential",
    "RequestCache",
    "RequestCredentials",
    "RequestDestination",
    "RequestDeviceOptions",
    "RequestDuplex",
    "RequestInfo",
    "RequestInit",
    "RequestMode",
    "RequestPriority",
    "RequestRedirect",
    "RequireInternalSlot",
    "RequireInternalSlot(O, internalSlot)",
    "RequireObjectCoercible",
    "RequireObjectCoercible(argument)",
    "Reset the render pass binding state",
    "ResetQueue",
    "ResidentKeyRequirement",
    "ResizeObservation",
    "ResizeObserver",
    "ResizeObserverBoxOptions",
    "ResizeObserverCallback",
    "ResizeObserverEntry",
    "ResizeObserverOptions",
    "ResizeObserverSize",
    "ResizeQuality",
    "ResolveBinding",
    "ResolveBinding(name, env)",
    "ResolvePrivateIdentifier",
    "ResolvePrivateIdentifier(privateEnv, identifier)",
    "ResolveThisBinding",
    "ResolveThisBinding()",
    "Response",
    "ResponseInit",
    "ResponseType",
    "RestrictionTarget",
    "RevalidateAtomicAccess",
    "RevalidateAtomicAccess(typedArray, byteIndexInBuffer)",
    "RotationMatrixType",
    "RoundMVResult",
    "RoundMVResult(n)",
    "RouterCondition",
    "RouterRule",
    "RouterSource",
    "RouterSourceDict",
    "RouterSourceEnum",
    "RsaHashedImportParams",
    "RsaHashedKeyAlgorithm",
    "RsaHashedKeyGenParams",
    "RsaKeyAlgorithm",
    "RsaKeyGenParams",
    "RsaOaepParams",
    "RsaOtherPrimesInfo",
    "RsaPssParams",
    "RunFunctionForSharedStorageSelectURLOperation",
    "RunningStatus",
    "RuntimeError",
    "SFrameTransform",
    "SFrameTransformErrorEvent",
    "SFrameTransformErrorEventInit",
    "SFrameTransformErrorEventType",
    "SFrameTransformOptions",
    "SFrameTransformRole",
    "SVGAElement",
    "SVGAngle",
    "SVGAnimatedAngle",
    "SVGAnimatedBoolean",
    "SVGAnimatedEnumeration",
    "SVGAnimatedInteger",
    "SVGAnimatedLength",
    "SVGAnimatedLengthList",
    "SVGAnimatedNumber",
    "SVGAnimatedNumberList",
    "SVGAnimatedPoints",
    "SVGAnimatedPreserveAspectRatio",
    "SVGAnimatedRect",
    "SVGAnimatedString",
    "SVGAnimatedTransformList",
    "SVGBoundingBoxOptions",
    "SVGCircleElement",
    "SVGClipPathElement",
    "SVGComponentTransferFunctionElement",
    "SVGDefsElement",
    "SVGDescElement",
    "SVGElement",
    "SVGElementInstance",
    "SVGEllipseElement",
    "SVGFEBlendElement",
    "SVGFEColorMatrixElement",
    "SVGFEComponentTransferElement",
    "SVGFECompositeElement",
    "SVGFEConvolveMatrixElement",
    "SVGFEDiffuseLightingElement",
    "SVGFEDisplacementMapElement",
    "SVGFEDistantLightElement",
    "SVGFEDropShadowElement",
    "SVGFEFloodElement",
    "SVGFEFuncAElement",
    "SVGFEFuncBElement",
    "SVGFEFuncGElement",
    "SVGFEFuncRElement",
    "SVGFEGaussianBlurElement",
    "SVGFEImageElement",
    "SVGFEMergeElement",
    "SVGFEMergeNodeElement",
    "SVGFEMorphologyElement",
    "SVGFEOffsetElement",
    "SVGFEPointLightElement",
    "SVGFESpecularLightingElement",
    "SVGFESpotLightElement",
    "SVGFETileElement",
    "SVGFETurbulenceElement",
    "SVGFilterElement",
    "SVGFilterPrimitiveStandardAttributes",
    "SVGFitToViewBox",
    "SVGForeignObjectElement",
    "SVGGElement",
    "SVGGeometryElement",
    "SVGGradientElement",
    "SVGGraphicsElement",
    "SVGImageElement",
    "SVGLength",
    "SVGLengthList",
    "SVGLineElement",
    "SVGLinearGradientElement",
    "SVGMarkerElement",
    "SVGMaskElement",
    "SVGMatrix",
    "SVGMetadataElement",
    "SVGNumber",
    "SVGNumberList",
    "SVGPathElement",
    "SVGPatternElement",
    "SVGPoint",
    "SVGPointList",
    "SVGPolygonElement",
    "SVGPolylineElement",
    "SVGPreserveAspectRatio",
    "SVGRadialGradientElement",
    "SVGRect",
    "SVGRectElement",
    "SVGSVGElement",
    "SVGScriptElement",
    "SVGStopElement",
    "SVGStringList",
    "SVGStyleElement",
    "SVGSwitchElement",
    "SVGSymbolElement",
    "SVGTSpanElement",
    "SVGTests",
    "SVGTextContentElement",
    "SVGTextElement",
    "SVGTextPathElement",
    "SVGTextPositioningElement",
    "SVGTitleElement",
    "SVGTransform",
    "SVGTransformList",
    "SVGURIReference",
    "SVGUnitTypes",
    "SVGUnknownElement",
    "SVGUseElement",
    "SVGUseElementShadowRoot",
    "SVGViewElement",
    "SVGZoomAndPan",
    "SameObject",
    "SameSiteCookiesType",
    "SameValue",
    "SameValue(x, y)",
    "SameValueNonNumber",
    "SameValueNonNumber(x, y)",
    "SameValueZero",
    "SameValueZero(x, y)",
    "SandboxProxy",
    "SandboxWindowProxy",
    "Sanitizer",
    "SanitizerAttribute",
    "SanitizerAttributeNamespace",
    "SanitizerConfig",
    "SanitizerElement",
    "SanitizerElementNamespace",
    "SanitizerElementNamespaceWithAttributes",
    "SanitizerElementWithAttributes",
    "SaveFilePickerOptions",
    "Scheduler",
    "SchedulerPostTaskCallback",
    "SchedulerPostTaskOptions",
    "Scheduling",
    "ScoreAdOutput",
    "ScoringBrowserSignals",
    "Screen",
    "ScreenDetailed",
    "ScreenDetails",
    "ScreenIdleState",
    "ScreenOrientation",
    "ScriptEvaluation",
    "ScriptEvaluation(scriptRecord)",
    "ScriptInvokerType",
    "ScriptProcessorNode",
    "ScriptWindowAttribution",
    "ScriptingPolicyReportBody",
    "ScriptingPolicyViolationType",
    "ScrollAxis",
    "ScrollBehavior",
    "ScrollIntoViewOptions",
    "ScrollLogicalPosition",
    "ScrollOptions",
    "ScrollRestoration",
    "ScrollSetting",
    "ScrollTimeline",
    "ScrollTimelineOptions",
    "ScrollToOptions",
    "SecFromTime",
    "SecFromTime(t)",
    "SecureContext",
    "SecurePaymentConfirmationRequest",
    "SecurityError",
    "SecurityPolicyViolationEvent",
    "SecurityPolicyViolationEventDisposition",
    "SecurityPolicyViolationEventInit",
    "SelectSettings",
    "Selection",
    "SelectionMode",
    "SelfCapturePreferenceEnum",
    "Sensor",
    "SensorErrorEvent",
    "SensorErrorEventInit",
    "SensorOptions",
    "SequenceEffect",
    "Serial",
    "SerialInputSignals",
    "SerialOptions",
    "SerialOutputSignals",
    "SerialPort",
    "SerialPortFilter",
    "SerialPortInfo",
    "SerialPortRequestOptions",
    "Serializable",
    "SerializeJSONArray",
    "SerializeJSONArray(state, value)",
    "SerializeJSONObject",
    "SerializeJSONObject(state, value)",
    "SerializeJSONProperty",
    "SerializeJSONProperty(state, key, holder)",
    "ServiceEventHandlers",
    "ServiceWorker",
    "ServiceWorkerContainer",
    "ServiceWorkerGlobalScope",
    "ServiceWorkerRegistration",
    "ServiceWorkerState",
    "ServiceWorkerUpdateViaCache",
    "Set",
    "Set(O, P, V, Throw)",
    "SetDataHas",
    "SetDataHas(setData, value)",
    "SetDataIndex",
    "SetDataIndex(setData, value)",
    "SetDataSize",
    "SetDataSize(setData)",
    "SetDefaultGlobalBindings",
    "SetDefaultGlobalBindings(realmRec)",
    "SetFunctionLength",
    "SetFunctionLength(F, length)",
    "SetFunctionName",
    "SetFunctionName(F, name, prefix)",
    "SetHTMLOptions",
    "SetImmutablePrototype",
    "SetImmutablePrototype(O, V)",
    "SetIntegrityLevel",
    "SetIntegrityLevel(O, level)",
    "SetTypedArrayFromArrayLike",
    "SetTypedArrayFromArrayLike(target, targetOffset, source)",
    "SetTypedArrayFromTypedArray",
    "SetTypedArrayFromTypedArray(target, targetOffset, source)",
    "SetUpCrossRealmTransformReadable",
    "SetUpCrossRealmTransformWritable",
    "SetUpReadableByteStreamController",
    "SetUpReadableByteStreamControllerFromUnderlyingSource",
    "SetUpReadableStreamBYOBReader",
    "SetUpReadableStreamDefaultController",
    "SetUpReadableStreamDefaultControllerFromUnderlyingSource",
    "SetUpReadableStreamDefaultReader",
    "SetUpTransformStreamDefaultController",
    "SetUpTransformStreamDefaultControllerFromTransformer",
    "SetUpWritableStreamDefaultController",
    "SetUpWritableStreamDefaultControllerFromUnderlyingSink",
    "SetUpWritableStreamDefaultWriter",
    "SetValueInBuffer",
    "SetValueInBuffer(arrayBuffer, byteIndex, type, value, isTypedArray, order, isLittleEndian)",
    "SetViewValue",
    "SetViewValue(view, requestIndex, isLittleEndian, type, value)",
    "Settings",
    "ShadowAnimation",
    "ShadowRoot",
    "ShadowRootInit",
    "ShadowRootMode",
    "ShareData",
    "SharedArrayBuffer",
    "SharedDataBlockEventSet",
    "SharedDataBlockEventSet(execution)",
    "SharedStorage",
    "SharedStorageDataOrigin",
    "SharedStoragePrivateAggregationConfig",
    "SharedStorageResponse",
    "SharedStorageRunOperationMethodOptions",
    "SharedStorageSetMethodOptions",
    "SharedStorageUrlWithMetadata",
    "SharedStorageWorklet",
    "SharedStorageWorkletGlobalScope",
    "SharedStorageWorkletOptions",
    "SharedWorker",
    "SharedWorkerGlobalScope",
    "SharedWorkerOptions",
    "Should Trusted Type policy creation be blocked by Content Security Policy?",
    "Should request be allowed to use feature?",
    "Should sink type mismatch violation be blocked by Content Security Policy?",
    "SlotAssignmentMode",
    "Slottable",
    "SmallCryptoKeyID",
    "SmartCardAccessMode",
    "SmartCardConnectOptions",
    "SmartCardConnectResult",
    "SmartCardConnection",
    "SmartCardConnectionState",
    "SmartCardConnectionStatus",
    "SmartCardContext",
    "SmartCardDisposition",
    "SmartCardError",
    "SmartCardErrorOptions",
    "SmartCardGetStatusChangeOptions",
    "SmartCardProtocol",
    "SmartCardReaderStateFlagsIn",
    "SmartCardReaderStateFlagsOut",
    "SmartCardReaderStateIn",
    "SmartCardReaderStateOut",
    "SmartCardResourceManager",
    "SmartCardResponseCode",
    "SmartCardTransactionCallback",
    "SmartCardTransactionOptions",
    "SmartCardTransmitOptions",
    "SnapEvent",
    "SnapEventInit",
    "SocketDnsQueryType",
    "SoftNavigationEntry",
    "SortIndexedProperties",
    "SortIndexedProperties(obj, len, SortCompare, holes)",
    "SourceBuffer",
    "SourceBufferList",
    "SpatialNavigationDirection",
    "SpatialNavigationSearchOptions",
    "SpeciesConstructor",
    "SpeciesConstructor(O, defaultConstructor)",
    "SpeechGrammar",
    "SpeechGrammarList",
    "SpeechRecognition",
    "SpeechRecognitionAlternative",
    "SpeechRecognitionErrorCode",
    "SpeechRecognitionErrorEvent",
    "SpeechRecognitionErrorEventInit",
    "SpeechRecognitionEvent",
    "SpeechRecognitionEventInit",
    "SpeechRecognitionResult",
    "SpeechRecognitionResultList",
    "SpeechSynthesis",
    "SpeechSynthesisErrorCode",
    "SpeechSynthesisErrorEvent",
    "SpeechSynthesisErrorEventInit",
    "SpeechSynthesisEvent",
    "SpeechSynthesisEventInit",
    "SpeechSynthesisUtterance",
    "SpeechSynthesisVoice",
    "StartInDirectory",
    "StartViewTransitionOptions",
    "StatefulAnimator",
    "StatelessAnimator",
    "StaticRange",
    "StaticRangeInit",
    "StereoPannerNode",
    "StereoPannerOptions",
    "Storage",
    "StorageAccessHandle",
    "StorageAccessTypes",
    "StorageBucket",
    "StorageBucketManager",
    "StorageBucketOptions",
    "StorageEstimate",
    "StorageEvent",
    "StorageEventInit",
    "StorageManager",
    "Store a Credential",
    "StreamPipeOptions",
    "String",
    "StringCreate",
    "StringCreate(value, prototype)",
    "StringGetOwnProperty",
    "StringGetOwnProperty(S, P)",
    "StringIndexOf",
    "StringIndexOf(string, searchValue, fromIndex)",
    "StringLastIndexOf",
    "StringLastIndexOf(string, searchValue, fromIndex)",
    "StringPad",
    "StringPad(S, maxLength, fillString, placement)",
    "StringPaddingBuiltinsImpl",
    "StringPaddingBuiltinsImpl(O, maxLength, fillString, placement)",
    "StringToBigInt",
    "StringToBigInt(str)",
    "StringToNumber",
    "StringToNumber(str)",
    "StructuredClone",
    "StructuredDeserialize",
    "StructuredDeserializeWithTransfer",
    "StructuredSerialize",
    "StructuredSerializeForStorage",
    "StructuredSerializeInternal",
    "StructuredSerializeOptions",
    "StructuredSerializeWithTransfer",
    "StylePropertyMap",
    "StylePropertyMapReadOnly",
    "StyleSheet",
    "StyleSheetList",
    "SubmitEvent",
    "SubmitEventInit",
    "SubtleCrypto",
    "SurfaceSwitchingPreferenceEnum",
    "SuspendThisAgent",
    "SuspendThisAgent(WL, waiterRecord)",
    "SvcOutputMetadata",
    "Symbol",
    "SymbolDescriptiveString",
    "SymbolDescriptiveString(sym)",
    "SyncEvent",
    "SyncEventInit",
    "SyncManager",
    "SyntaxError",
    "SystemAudioPreferenceEnum",
    "SystemTimeZoneIdentifier",
    "SystemTimeZoneIdentifier()",
    "TCPServerSocket",
    "TCPServerSocketOpenInfo",
    "TCPServerSocketOptions",
    "TCPSocket",
    "TCPSocketOpenInfo",
    "TCPSocketOptions",
    "Table",
    "TableDescriptor",
    "TableKind",
    "TaskAttributionTiming",
    "TaskController",
    "TaskControllerInit",
    "TaskPriority",
    "TaskPriorityChangeEvent",
    "TaskPriorityChangeEventInit",
    "TaskSignal",
    "TaskSignalAnyInit",
    "TestIntegrityLevel",
    "TestIntegrityLevel(O, level)",
    "TestUtils",
    "Text",
    "TextDecodeOptions",
    "TextDecoder",
    "TextDecoderCommon",
    "TextDecoderOptions",
    "TextDecoderStream",
    "TextDetector",
    "TextDirection",
    "TextEncoder",
    "TextEncoderCommon",
    "TextEncoderEncodeIntoResult",
    "TextEncoderStream",
    "TextEvent",
    "TextFormat",
    "TextFormatInit",
    "TextFormatUpdateEvent",
    "TextFormatUpdateEventInit",
    "TextMetrics",
    "TextTrack",
    "TextTrackCue",
    "TextTrackCueList",
    "TextTrackKind",
    "TextTrackList",
    "TextTrackMode",
    "TextUpdateEvent",
    "TextUpdateEventInit",
    "ThisBigIntValue",
    "ThisBigIntValue(value)",
    "ThisBooleanValue",
    "ThisBooleanValue(value)",
    "ThisNumberValue",
    "ThisNumberValue(value)",
    "ThisStringValue",
    "ThisStringValue(value)",
    "ThisSymbolValue",
    "ThisSymbolValue(value)",
    "ThrowCompletion",
    "ThrowCompletion(value)",
    "TimeClip",
    "TimeClip(time)",
    "TimeFromYear",
    "TimeFromYear(y)",
    "TimeRanges",
    "TimeString",
    "TimeString(tv)",
    "TimeWithinDay",
    "TimeWithinDay(t)",
    "TimeZoneString",
    "TimeZoneString(tv)",
    "TimelineRangeOffset",
    "TimeoutError",
    "TimerHandler",
    "ToBigInt",
    "ToBigInt(argument)",
    "ToBigInt64",
    "ToBigInt64(argument)",
    "ToBigUint64",
    "ToBigUint64(argument)",
    "ToBoolean",
    "ToBoolean(argument)",
    "ToDateString",
    "ToDateString(tv)",
    "ToIndex",
    "ToIndex(value)",
    "ToInt16",
    "ToInt16(argument)",
    "ToInt32",
    "ToInt32(argument)",
    "ToInt8",
    "ToInt8(argument)",
    "ToIntegerOrInfinity",
    "ToIntegerOrInfinity(argument)",
    "ToLength",
    "ToLength(argument)",
    "ToNumber",
    "ToNumber(argument)",
    "ToNumeric",
    "ToNumeric(value)",
    "ToObject",
    "ToObject(argument)",
    "ToPrimitive",
    "ToPrimitive(input, preferredType)",
    "ToPropertyDescriptor",
    "ToPropertyDescriptor(Obj)",
    "ToPropertyKey",
    "ToPropertyKey(argument)",
    "ToString",
    "ToString(argument)",
    "ToUint16",
    "ToUint16(argument)",
    "ToUint32",
    "ToUint32(argument)",
    "ToUint8",
    "ToUint8(argument)",
    "ToUint8Clamp",
    "ToUint8Clamp(argument)",
    "ToZeroPaddedDecimalString",
    "ToZeroPaddedDecimalString(n, minLength)",
    "ToggleEvent",
    "ToggleEventInit",
    "TokenBinding",
    "TokenBindingStatus",
    "TokenVersion",
    "TopLevelStorageAccessPermissionDescriptor",
    "Touch",
    "TouchEvent",
    "TouchEventInit",
    "TouchInit",
    "TouchList",
    "TouchType",
    "TrackEvent",
    "TrackEventInit",
    "TrackingExData",
    "TrackingExResult",
    "TransactionInactiveError",
    "TransferArrayBuffer",
    "TransferFunction",
    "Transferable",
    "TransformStream",
    "TransformStreamDefaultController",
    "TransformStreamDefaultControllerClearAlgorithms",
    "TransformStreamDefaultControllerEnqueue",
    "TransformStreamDefaultControllerError",
    "TransformStreamDefaultControllerPerformTransform",
    "TransformStreamDefaultControllerTerminate",
    "TransformStreamDefaultSinkAbortAlgorithm",
    "TransformStreamDefaultSinkCloseAlgorithm",
    "TransformStreamDefaultSinkWriteAlgorithm",
    "TransformStreamDefaultSourceCancelAlgorithm",
    "TransformStreamDefaultSourcePullAlgorithm",
    "TransformStreamError",
    "TransformStreamErrorWritableAndUnblockWrite",
    "TransformStreamSetBackpressure",
    "TransformStreamUnblockWrite",
    "Transformer",
    "TransformerCancelCallback",
    "TransformerFlushCallback",
    "TransformerStartCallback",
    "TransformerTransformCallback",
    "TransitionEvent",
    "TransitionEventInit",
    "TreeWalker",
    "TriggerPromiseReactions",
    "TriggerPromiseReactions(reactions, argument)",
    "TrimString",
    "TrimString(string, where)",
    "TrustedHTML",
    "TrustedScript",
    "TrustedScriptURL",
    "TrustedType",
    "TrustedTypePolicy",
    "TrustedTypePolicyFactory",
    "TrustedTypePolicyOptions",
    "TypeError",
    "TypeInfo",
    "TypeMismatchError",
    "TypedArray",
    "TypedArrayByteLength",
    "TypedArrayByteLength(taRecord)",
    "TypedArrayCreate",
    "TypedArrayCreate(prototype)",
    "TypedArrayCreateFromConstructor",
    "TypedArrayCreateFromConstructor(constructor, argumentList)",
    "TypedArrayCreateSameType",
    "TypedArrayCreateSameType(exemplar, argumentList)",
    "TypedArrayElementSize",
    "TypedArrayElementSize(O)",
    "TypedArrayElementType",
    "TypedArrayElementType(O)",
    "TypedArrayGetElement",
    "TypedArrayGetElement(O, index)",
    "TypedArrayLength",
    "TypedArrayLength(taRecord)",
    "TypedArraySetElement",
    "TypedArraySetElement(O, index, value)",
    "TypedArraySpeciesCreate",
    "TypedArraySpeciesCreate(exemplar, argumentList)",
    "UADataValues",
    "UALowEntropyJSON",
    "UDPMessage",
    "UDPSocket",
    "UDPSocketOpenInfo",
    "UDPSocketOptions",
    "UIEvent",
    "UIEventInit",
    "ULongRange",
    "URIError",
    "URL",
    "URLMismatchError",
    "URLPattern",
    "URLPatternCompatible",
    "URLPatternComponentResult",
    "URLPatternInit",
    "URLPatternInput",
    "URLPatternOptions",
    "URLPatternResult",
    "URLSearchParams",
    "USB",
    "USBAlternateInterface",
    "USBBlocklistEntry",
    "USBConfiguration",
    "USBConnectionEvent",
    "USBConnectionEventInit",
    "USBControlTransferParameters",
    "USBDevice",
    "USBDeviceFilter",
    "USBDeviceRequestOptions",
    "USBDirection",
    "USBEndpoint",
    "USBEndpointType",
    "USBInTransferResult",
    "USBInterface",
    "USBIsochronousInTransferPacket",
    "USBIsochronousInTransferResult",
    "USBIsochronousOutTransferPacket",
    "USBIsochronousOutTransferResult",
    "USBOutTransferResult",
    "USBPermissionDescriptor",
    "USBPermissionResult",
    "USBPermissionStorage",
    "USBRecipient",
    "USBRequestType",
    "USBTransferStatus",
    "USVString",
    "UTC",
    "UTC(t)",
    "UUID",
    "Uint16Array",
    "Uint32Array",
    "Uint8Array",
    "Uint8ClampedArray",
    "UncalibratedMagnetometer",
    "UnderlineStyle",
    "UnderlineThickness",
    "UnderlyingSink",
    "UnderlyingSinkAbortCallback",
    "UnderlyingSinkCloseCallback",
    "UnderlyingSinkStartCallback",
    "UnderlyingSinkWriteCallback",
    "UnderlyingSource",
    "UnderlyingSourceCancelCallback",
    "UnderlyingSourcePullCallback",
    "UnderlyingSourceStartCallback",
    "UnicodeEscape",
    "UnicodeEscape(C)",
    "UnicodeMatchProperty",
    "UnicodeMatchProperty(rer, p)",
    "UnicodeMatchPropertyValue",
    "UnicodeMatchPropertyValue(p, v)",
    "UnknownError",
    "Unscopable",
    "UpdateCallback",
    "UpdateEmpty",
    "UpdateEmpty(completionRecord, value)",
    "UrnOrConfig",
    "UserActivation",
    "UserDataHandler",
    "UserIdleState",
    "UserVerificationRequirement",
    "UvmEntries",
    "UvmEntry",
    "VTTCue",
    "VTTRegion",
    "Validate encoder bind groups",
    "Validate texture format required features",
    "Validate the encoder state",
    "Validate timestampWrites",
    "ValidateAndApplyPropertyDescriptor",
    "ValidateAndApplyPropertyDescriptor(O, P, extensible, Desc, current)",
    "ValidateAssertionCallback",
    "ValidateAtomicAccess",
    "ValidateAtomicAccess(taRecord, requestIndex)",
    "ValidateAtomicAccessOnIntegerTypedArray",
    "ValidateAtomicAccessOnIntegerTypedArray(typedArray, requestIndex, waitable)",
    "ValidateIntegerTypedArray",
    "ValidateIntegerTypedArray(typedArray, waitable)",
    "ValidateNonRevokedProxy",
    "ValidateNonRevokedProxy(proxy)",
    "ValidateTypedArray",
    "ValidateTypedArray(O, order)",
    "Validating GPUFragmentState's color attachment bytes per sample",
    "Validating GPURenderPassDescriptor's color attachment bytes per sample",
    "ValidityState",
    "ValidityStateFlags",
    "ValueEvent",
    "ValueEventInit",
    "ValueOfReadEvent",
    "ValueOfReadEvent(execution, R)",
    "ValueType",
    "VersionError",
    "VibratePattern",
    "VideoColorPrimaries",
    "VideoColorSpace",
    "VideoColorSpaceInit",
    "VideoConfiguration",
    "VideoDecoder",
    "VideoDecoderConfig",
    "VideoDecoderInit",
    "VideoDecoderSupport",
    "VideoEncoder",
    "VideoEncoderBitrateMode",
    "VideoEncoderConfig",
    "VideoEncoderEncodeOptions",
    "VideoEncoderEncodeOptionsForAv1",
    "VideoEncoderEncodeOptionsForAvc",
    "VideoEncoderEncodeOptionsForHevc",
    "VideoEncoderEncodeOptionsForVp9",
    "VideoEncoderInit",
    "VideoEncoderSupport",
    "VideoFacingModeEnum",
    "VideoFrame",
    "VideoFrameBufferInit",
    "VideoFrameCallbackMetadata",
    "VideoFrameCopyToOptions",
    "VideoFrameInit",
    "VideoFrameMetadata",
    "VideoFrameOutputCallback",
    "VideoFrameRequestCallback",
    "VideoMatrixCoefficients",
    "VideoPixelFormat",
    "VideoPlaybackQuality",
    "VideoResizeModeEnum",
    "VideoTrack",
    "VideoTrackGenerator",
    "VideoTrackList",
    "VideoTransferCharacteristics",
    "ViewTimeline",
    "ViewTimelineOptions",
    "ViewTransition",
    "ViewTransitionNavigation",
    "ViewTransitionTypeSet",
    "ViewTransitionUpdateCallback",
    "Viewport",
    "VirtualKeyboard",
    "VisibilityStateEntry",
    "VisualViewport",
    "VoidFunction",
    "WGSLLanguageFeatures",
    "WakeLock",
    "WakeLockSentinel",
    "WakeLockType",
    "WatchAdvertisementsOptions",
    "WaveShaperNode",
    "WaveShaperOptions",
    "WeakMap",
    "WeakRef",
    "WeakRefDeref",
    "WeakRefDeref(weakRef)",
    "WeakSet",
    "WebAssembly",
    "WebAssemblyInstantiatedSource",
    "WebCodecsErrorCallback",
    "WebGL2RenderingContext",
    "WebGL2RenderingContextBase",
    "WebGL2RenderingContextOverloads",
    "WebGLActiveInfo",
    "WebGLBuffer",
    "WebGLContextAttributes",
    "WebGLContextEvent",
    "WebGLFramebuffer",
    "WebGLObject",
    "WebGLProgram",
    "WebGLQuery",
    "WebGLRenderbuffer",
    "WebGLRenderingContext",
    "WebGLRenderingContextBase",
    "WebGLSampler",
    "WebGLShader",
    "WebGLShaderPrecisionFormat",
    "WebGLSync",
    "WebGLTexture",
    "WebGLTransformFeedback",
    "WebGLUniformLocation",
    "WebGLVertexArrayObject",
    "WebKitCSSMatrix",
    "WebSocket",
    "WebTransport",
    "WebTransportBidirectionalStream",
    "WebTransportCloseInfo",
    "WebTransportCongestionControl",
    "WebTransportConnectionStats",
    "WebTransportDatagramDuplexStream",
    "WebTransportDatagramStats",
    "WebTransportError",
    "WebTransportErrorOptions",
    "WebTransportErrorSource",
    "WebTransportHash",
    "WebTransportOptions",
    "WebTransportReceiveStream",
    "WebTransportReceiveStreamStats",
    "WebTransportReliabilityMode",
    "WebTransportSendGroup",
    "WebTransportSendStream",
    "WebTransportSendStreamOptions",
    "WebTransportSendStreamStats",
    "WebTransportWriter",
    "WeekDay",
    "WeekDay(t)",
    "WellKnownDirectory",
    "WheelEvent",
    "WheelEventInit",
    "Window",
    "WindowClient",
    "WindowControlsOverlay",
    "WindowControlsOverlayGeometryChangeEvent",
    "WindowControlsOverlayGeometryChangeEventInit",
    "WindowEventHandlers",
    "WindowLocalStorage",
    "WindowOrWorkerGlobalScope",
    "WindowPostMessageOptions",
    "WindowProxy",
    "WindowSessionStorage",
    "WordCharacters",
    "WordCharacters(rer)",
    "Worker",
    "WorkerGlobalScope",
    "WorkerLocation",
    "WorkerNavigator",
    "WorkerOptions",
    "WorkerType",
    "Worklet",
    "WorkletAnimation",
    "WorkletAnimationEffect",
    "WorkletGlobalScope",
    "WorkletGroupEffect",
    "WorkletOptions",
    "WritableStream",
    "WritableStreamAbort",
    "WritableStreamAddWriteRequest",
    "WritableStreamClose",
    "WritableStreamCloseQueuedOrInFlight",
    "WritableStreamDealWithRejection",
    "WritableStreamDefaultController",
    "WritableStreamDefaultControllerAdvanceQueueIfNeeded",
    "WritableStreamDefaultControllerClearAlgorithms",
    "WritableStreamDefaultControllerClose",
    "WritableStreamDefaultControllerError",
    "WritableStreamDefaultControllerErrorIfNeeded",
    "WritableStreamDefaultControllerGetBackpressure",
    "WritableStreamDefaultControllerGetChunkSize",
    "WritableStreamDefaultControllerGetDesiredSize",
    "WritableStreamDefaultControllerProcessClose",
    "WritableStreamDefaultControllerProcessWrite",
    "WritableStreamDefaultControllerWrite",
    "WritableStreamDefaultWriter",
    "WritableStreamDefaultWriterAbort",
    "WritableStreamDefaultWriterClose",
    "WritableStreamDefaultWriterCloseWithErrorPropagation",
    "WritableStreamDefaultWriterEnsureClosedPromiseRejected",
    "WritableStreamDefaultWriterEnsureReadyPromiseRejected",
    "WritableStreamDefaultWriterGetDesiredSize",
    "WritableStreamDefaultWriterRelease",
    "WritableStreamDefaultWriterWrite",
    "WritableStreamFinishErroring",
    "WritableStreamFinishInFlightClose",
    "WritableStreamFinishInFlightCloseWithError",
    "WritableStreamFinishInFlightWrite",
    "WritableStreamFinishInFlightWriteWithError",
    "WritableStreamHasOperationMarkedInFlight",
    "WritableStreamMarkCloseRequestInFlight",
    "WritableStreamMarkFirstWriteRequestInFlight",
    "WritableStreamRejectCloseAndClosedPromiseIfNeeded",
    "WritableStreamStartErroring",
    "WritableStreamUpdateBackpressure",
    "WriteCommandType",
    "WriteParams",
    "WrongDocumentError",
    "XMLDocument",
    "XMLHttpRequest",
    "XMLHttpRequestBodyInit",
    "XMLHttpRequestEventTarget",
    "XMLHttpRequestResponseType",
    "XMLHttpRequestUpload",
    "XMLSerializer",
    "XPathEvaluator",
    "XPathEvaluatorBase",
    "XPathExpression",
    "XPathNSResolver",
    "XPathResult",
    "XRAnchor",
    "XRAnchorSet",
    "XRBoundedReferenceSpace",
    "XRCPUDepthInformation",
    "XRCamera",
    "XRCompositionLayer",
    "XRCubeLayer",
    "XRCubeLayerInit",
    "XRCylinderLayer",
    "XRCylinderLayerInit",
    "XRDOMOverlayInit",
    "XRDOMOverlayState",
    "XRDOMOverlayType",
    "XRDepthDataFormat",
    "XRDepthInformation",
    "XRDepthStateInit",
    "XRDepthUsage",
    "XREnvironmentBlendMode",
    "XREquirectLayer",
    "XREquirectLayerInit",
    "XREye",
    "XRFrame",
    "XRFrameRequestCallback",
    "XRHand",
    "XRHandJoint",
    "XRHandedness",
    "XRHitTestOptionsInit",
    "XRHitTestResult",
    "XRHitTestSource",
    "XRHitTestTrackableType",
    "XRInputSource",
    "XRInputSourceArray",
    "XRInputSourceEvent",
    "XRInputSourceEventInit",
    "XRInputSourcesChangeEvent",
    "XRInputSourcesChangeEventInit",
    "XRInteractionMode",
    "XRJointPose",
    "XRJointSpace",
    "XRLayer",
    "XRLayerEvent",
    "XRLayerEventInit",
    "XRLayerInit",
    "XRLayerLayout",
    "XRLayerQuality",
    "XRLightEstimate",
    "XRLightProbe",
    "XRLightProbeInit",
    "XRMediaBinding",
    "XRMediaCylinderLayerInit",
    "XRMediaEquirectLayerInit",
    "XRMediaLayerInit",
    "XRMediaQuadLayerInit",
    "XRMesh",
    "XRMeshBlock",
    "XRMeshQuality",
    "XRMeshSet",
    "XRMetadata",
    "XRNearMesh",
    "XRNearMeshFeature",
    "XRPermissionDescriptor",
    "XRPermissionStatus",
    "XRPlane",
    "XRPlaneOrientation",
    "XRPlaneSet",
    "XRPose",
    "XRProjectionLayer",
    "XRProjectionLayerInit",
    "XRQuadLayer",
    "XRQuadLayerInit",
    "XRRay",
    "XRRayDirectionInit",
    "XRReferenceSpace",
    "XRReferenceSpaceEvent",
    "XRReferenceSpaceEventInit",
    "XRReferenceSpaceType",
    "XRReflectionFormat",
    "XRRenderState",
    "XRRenderStateInit",
    "XRRigidTransform",
    "XRSession",
    "XRSessionEvent",
    "XRSessionEventInit",
    "XRSessionInit",
    "XRSessionMode",
    "XRSessionSupportedPermissionDescriptor",
    "XRSpace",
    "XRSubImage",
    "XRSystem",
    "XRTargetRayMode",
    "XRTextureType",
    "XRTransientInputHitTestOptionsInit",
    "XRTransientInputHitTestResult",
    "XRTransientInputHitTestSource",
    "XRView",
    "XRViewerPose",
    "XRViewport",
    "XRVisibilityState",
    "XRWebGLBinding",
    "XRWebGLDepthInformation",
    "XRWebGLLayer",
    "XRWebGLLayerInit",
    "XRWebGLRenderingContext",
    "XRWebGLSubImage",
    "XRWorldMesh",
    "XRWorldMeshFeature",
    "XSLTProcessor",
    "YearFromTime",
    "YearFromTime(t)",
    "Yield",
    "Yield(value)",
    "[DelayWhilePrerendering]",
    "[[codec implementation]]",
    "[[codec work queue]]",
    "[[constrainedbitspersecond]]",
    "[[constrainedmimetype]]",
    "[[control message queue]]",
    "[[crossoriginpropertydescriptormap]]",
    "[[datachannelpriority]]",
    "[[defaultproperties]]",
    "[[message queue blocked]]",
    "[[videokeyframeintervalcount]]",
    "[[videokeyframeintervalduration]]",
    "[[window]]",
    "_charset_",
    "`sec-purpose`",
    "a",
    "a known definite encoding",
    "a label",
    "a language",
    "a list of zero or more cues",
    "a mode",
    "a new device",
    "a new exported function",
    "a new gamepad",
    "a new gamepadhapticactuator",
    "a new geolocationposition",
    "a new promise",
    "a pause-on-exit flag",
    "a plausible language",
    "a priori authenticated url",
    "a promise rejected with",
    "a promise resolved with",
    "a readiness state",
    "a serialization of the bitmap as a file",
    "a start time",
    "a type that the user agent knows it cannot render",
    "a valid filter",
    "a-rate",
    "aaguid",
    "ab",
    "ab note",
    "abbr",
    "abjad",
    "able to retrieve and buffer data in an efficient way",
    "abnf",
    "abort",
    "abort a document and its descendants",
    "abort a parser",
    "abort a pending make read-only operation",
    "abort a pending write operation",
    "abort a running script",
    "abort a transaction",
    "abort a writable stream",
    "abort all active watchadvertisements",
    "abort an upgrade transaction",
    "abort controller",
    "abort the fetch() call",
    "abort the image request",
    "abort the ongoing navigation",
    "abort the request",
    "abort the running script",
    "abort the update",
    "abort transfers currently scheduled on an interface",
    "abort watchadvertisements",
    "abort when",
    "aborted network error",
    "about base url",
    "about-to-be-notified rejected promises list",
    "about:blank",
    "about:html-kind",
    "about:legacy-compat",
    "about:srcdoc",
    "abrupt-closing-of-empty-comment",
    "abrupt-doctype-public-identifier",
    "abrupt-doctype-system-identifier",
    "abs()",
    "absence-of-digits-in-numeric-character-reference",
    "absolute color",
    "absolute length",
    "absolute length unit",
    "absolute orientation",
    "absolute orientation sensor",
    "absolute path",
    "absolute position",
    "absolute positioning containing block",
    "absolute positioning layout",
    "absolute positioning layout model",
    "absolute-orientation virtual sensor type",
    "absolute-position containing block",
    "absolute-url",
    "absolute-url record",
    "absolute-url string",
    "absolute-url-with-fragment string",
    "absolutely position",
    "absolutely positioned box",
    "absolutely positioned element",
    "absolutely-positioned",
    "abstract dimensions",
    "abstract numeric types",
    "abstract operation hostresizearraybuffer",
    "abstractfloat",
    "abstractint",
    "abugida",
    "ac",
    "ac appeal",
    "ac representative",
    "ac review",
    "acceleration",
    "acceleration with gravity",
    "accelerometer",
    "accelerometer virtual sensor type",
    "accent color",
    "accent-color",
    "accentbaseheight",
    "accept",
    "accept alert",
    "accept insecure tls",
    "accept insecure tls certificates",
    "accept-ch cache",
    "acceptable anchor element",
    "accepted",
    "accepted @position-try properties",
    "accepting",
    "accepts",
    "access key",
    "access mode",
    "access-control-allow-credentials",
    "access-control-allow-headers",
    "access-control-allow-methods",
    "access-control-allow-origin",
    "access-control-allow-private-network",
    "access-control-expose-headers",
    "access-control-max-age",
    "access-control-request-headers",
    "access-control-request-method",
    "access-control-request-private-network",
    "accessibility api",
    "accessibility apis",
    "accessibility child",
    "accessibility children",
    "accessibility considerations",
    "accessibility descendant",
    "accessibility descendants",
    "accessibility parent",
    "accessibility subtree",
    "accessibility tree",
    "accessible description",
    "accessible name",
    "accessible names",
    "accessible object",
    "accessible objects",
    "accessor is openee",
    "accessor is opener",
    "accessor-accessed relationship",
    "accounts endpoint",
    "accumulated 3d transformation matrix",
    "accumulation for one-based values",
    "accumulation procedure",
    "acfg",
    "acknowledged",
    "acos()",
    "acquaintance",
    "acquire a position",
    "acquire a wake lock",
    "acquire the content",
    "acquire the contents of an audiobuffer",
    "acquire the wake lock",
    "acquire wake lock",
    "acquired",
    "acquires the wake lock",
    "acquiring a position",
    "acquiring system resources",
    "acronym",
    "action",
    "action object",
    "action record",
    "actions",
    "actions options",
    "actions queue",
    "activate",
    "activate a content index entry",
    "activate a navigable",
    "activate a portal browsing context",
    "activate a sensor object",
    "activate an event handler",
    "activate data collection",
    "activate history entry",
    "activate view transition",
    "activated reader objects",
    "activated sensor objects",
    "activation",
    "activation behavior",
    "activation notification",
    "activation trigger",
    "activation triggering input event",
    "active",
    "active (pseudo-class)",
    "active bidi sessions",
    "active buffer mapping",
    "active buttons state",
    "active codec",
    "active context",
    "active credential types",
    "active document",
    "active duration",
    "active editcontext",
    "active element",
    "active fingerprinting",
    "active flag",
    "active flag was set when the script started",
    "active graph",
    "active http sessions",
    "active immersive session",
    "active interval",
    "active listeners",
    "active match",
    "active media session",
    "active needed worker",
    "active notification context set",
    "active object",
    "active parser",
    "active parser was aborted",
    "active periodic sync registrations",
    "active picture-in-picture session",
    "active pointer",
    "active property",
    "active reader",
    "active render state",
    "active replace state",
    "active scanning",
    "active script",
    "active session history entry",
    "active sessions",
    "active shadow tree",
    "active source",
    "active speculative html parser",
    "active subject",
    "active time",
    "active time space",
    "active timeline",
    "active touch point",
    "active track buffers",
    "active user consent",
    "active window",
    "active windowproxy",
    "active writer",
    "active-after boundary time",
    "activeborder",
    "activecaption",
    "actively processing",
    "actual playback rate",
    "actual playback state",
    "actual value",
    "actual values",
    "actual viewport",
    "actually disabled",
    "ad descriptor",
    "ad keyword replacement",
    "ad size",
    "ad structure",
    "ad-auction-additional-bid",
    "ad-auction-allow-trusted-scoring-signals-from",
    "ad-auction-allowed",
    "ad-auction-signals",
    "adapter",
    "add",
    "add a css style sheet",
    "add a flag",
    "add a part",
    "add a performanceresourcetiming entry",
    "add a platform contribution",
    "add a token",
    "add a token with default length",
    "add a token with default position and length",
    "add a track",
    "add a vcard line",
    "add an element to the top layer",
    "add an event listener",
    "add an icalendar line",
    "add an input source",
    "add an upcoming traverse api method tracker",
    "add cookie",
    "add credential",
    "add default values",
    "add device to storage",
    "add or put",
    "add the track",
    "add to the top layer",
    "add value",
    "add virtual authenticator",
    "add-ons",
    "added modules list",
    "adding a cookie",
    "addition procedure",
    "additional bids",
    "additional capability deserialization algorithm",
    "additional webdriver capabilities",
    "additional webdriver capability",
    "additional-name",
    "additionaldata",
    "additive color space",
    "additive environment blending",
    "additive light",
    "additive tuple",
    "address",
    "address spaces",
    "address type strings",
    "address-of",
    "addressable character",
    "addsourcebuffer",
    "addtrack",
    "adequate implementation experience",
    "adjoining",
    "adjoining margins",
    "adjust bid list based on k-anonymity",
    "adjust foreign attributes",
    "adjust mathml attributes",
    "adjust svg attributes",
    "adjusted current node",
    "adjusted pressure state",
    "adjustedradicalkernafterdegree",
    "adjustedradicalkernbeforedegree",
    "administratively prohibited",
    "adopt",
    "adopt the predecessor browsing context",
    "adopted draft",
    "adopting steps",
    "adoption agency algorithm",
    "adr",
    "advanced constraints",
    "advanced to the next child of the table",
    "advertising agent",
    "advertising data",
    "advertising event",
    "advertising events",
    "advisory board",
    "advisory committee",
    "advisory committee appeal",
    "advisory committee representative",
    "advisory committee review",
    "advisory information",
    "aescbcparams",
    "aesctrparams",
    "aesderivedkeyparams",
    "aesgcmparams",
    "aeskeyalgorithm",
    "aeskeygenparams",
    "affected by a base url change",
    "affected range",
    "after",
    "after after body",
    "after after frameset",
    "after attribute name state",
    "after attribute value (quoted) state",
    "after body",
    "after doctype name state",
    "after doctype public identifier state",
    "after doctype public keyword state",
    "after doctype system identifier state",
    "after doctype system keyword state",
    "after frameset",
    "after head",
    "after-change style",
    "agent",
    "agent certificate",
    "agent cluster key",
    "agent cluster map",
    "agent fingerprint",
    "agent-info",
    "agent-info-event",
    "agent-info-request",
    "agent-info-response",
    "agent-status-request",
    "agent-status-response",
    "aggregatable attribution report",
    "aggregatable attribution report cache",
    "aggregatable contribution",
    "aggregatable debug rate-limit cache",
    "aggregatable debug rate-limit record",
    "aggregatable debug rate-limit window",
    "aggregatable debug report",
    "aggregatable debug reporting config",
    "aggregatable dedup key",
    "aggregatable key value",
    "aggregatable report",
    "aggregatable report cache",
    "aggregatable source registration time configuration",
    "aggregatable trigger data",
    "aggregatable values configuration",
    "aggregatable-debug-reporting json key",
    "aggregation coordinator",
    "aggregation coordinator map",
    "alert steps",
    "algorithm",
    "algorithm for assigning header cells",
    "algorithm for determining the form of an embellished operator",
    "algorithm for determining the properties of an embellished operator",
    "algorithm for ending a row group",
    "algorithm for extracting a character encoding from a meta element",
    "algorithm for growing downward-growing cells",
    "algorithm for processing row groups",
    "algorithm for processing rows",
    "algorithm for stretching operators along the block axis",
    "algorithm for stretching operators along the inline axis",
    "algorithm normalization",
    "algorithm queue",
    "algorithm set",
    "algorithm to convert a date object to a string",
    "algorithm to convert a number to a string",
    "algorithm to convert a string to a date object",
    "algorithm to convert a string to a number",
    "algorithm to determine the category of an operator",
    "algorithm to open a midiport",
    "algorithm to set the properties of an operator from its category",
    "algorithm_cached",
    "algorithmidentifier",
    "alias",
    "aliceblue",
    "align descendants",
    "align-content",
    "align-items",
    "align-self",
    "aligned",
    "aligned subtree",
    "alignment",
    "alignment baseline",
    "alignment container",
    "alignment context",
    "alignment point",
    "alignment subject",
    "alignment-baseline",
    "alignof",
    "alignofmember",
    "all",
    "all associated cookies",
    "all fetch listeners are empty",
    "allocate color textures",
    "allocate color textures for projection layers",
    "allocate depth textures",
    "allocate depth textures for projection layers",
    "allocate motion vector textures for projection layers",
    "allocate the color textures for the secondary views",
    "allocate the depth textures for the secondary views",
    "allow new features",
    "allow-cross-origin-event-reporting",
    "allow-csp-from",
    "allow-fenced-frame-automatic-beacons",
    "allow-list",
    "allow-list-value",
    "allowed aggregatable budget per source",
    "allowed aggregation coordinator set",
    "allowed buffer usages",
    "allowed by sandboxing to navigate",
    "allowed in the body",
    "allowed number of groups",
    "allowed public key algorithms",
    "allowed required constraints for device selection",
    "allowed signed exchange link info",
    "allowed texture usages",
    "allowed to modify the clipboard",
    "allowed to navigate",
    "allowed to play",
    "allowed to read from clipboard",
    "allowed to resize and move",
    "allowed to start",
    "allowed to use",
    "allowed value step",
    "allowlist",
    "allowlists",
    "allowpost",
    "allows adding render-blocking elements",
    "allows auto-sizes",
    "allows downloading",
    "alltypes",
    "alpha",
    "alpha channel",
    "alpha compaction",
    "alpha component",
    "alpha separation",
    "alpha table",
    "alpha-blend environment blending",
    "alpha-to-coverage mask",
    "alphabet",
    "alphabetic baseline",
    "alphanumeric section",
    "already constructed marker",
    "already started",
    "alt ac rep",
    "alt flag",
    "alternate",
    "alternate ac representative",
    "alternate advisory committee representative",
    "alternate signed exchange",
    "alternate signed exchange link",
    "alternate signed exchange link info",
    "alternate signed exchange preload info",
    "alternative",
    "altgraph flag",
    "alwaysuv feature is disabled",
    "alwaysuv feature is enabled",
    "ambient light reading quantization algorithm",
    "ambient light sensor",
    "ambient light threshold check algorithm",
    "ambient-light virtual sensor type",
    "ambient-light-sensor",
    "ambiguous ampersand",
    "ambiguous ampersand state",
    "an end time",
    "an exception was thrown",
    "an identifier",
    "an iframe srcdoc document",
    "an in-band metadata track dispatch type",
    "an unstyled document view",
    "an+b",
    "analogous components",
    "analysernode",
    "analyseroptions",
    "ancestor",
    "ancestor details revealing algorithm",
    "ancestor hidden-until-found revealing algorithm",
    "ancestor origins list",
    "ancestor-source",
    "ancestor-source-list",
    "anchor",
    "anchor element",
    "anchor functions",
    "anchor name",
    "anchor node selection algorithm",
    "anchor point",
    "anchor positioning",
    "anchor specifier",
    "anchor unit",
    "anchor()",
    "anchor-name",
    "anchor-scope",
    "anchor-size()",
    "anchors",
    "ancillary chunk",
    "android key attestation certificate extension data",
    "angles",
    "angular velocity",
    "animatable",
    "animate",
    "animate function",
    "animated image",
    "animated image document",
    "animated png",
    "animatemotion",
    "animatetransform",
    "animation",
    "animation addition attributes",
    "animation animator name",
    "animation attachment range",
    "animation class",
    "animation composite order",
    "animation direction",
    "animation effect",
    "animation effect start time",
    "animation element",
    "animation event attribute",
    "animation events",
    "animation frame",
    "animation frame callback identifier",
    "animation model",
    "animation origin",
    "animation playback events",
    "animation property name to idl attribute name",
    "animation requested flag",
    "animation time to origin-relative time",
    "animation time to timeline time",
    "animation timing attributes",
    "animation type",
    "animation value attributes",
    "animation worklet",
    "animation-composition",
    "animation-delay",
    "animation-direction",
    "animation-duration",
    "animation-fill-mode",
    "animation-iteration-count",
    "animation-name",
    "animation-play-state",
    "animation-range",
    "animation-range-end",
    "animation-range-start",
    "animation-tainted",
    "animation-timeline",
    "animation-timing-function",
    "animator",
    "animator current time",
    "animator definition",
    "animator definitions",
    "animator effect",
    "animator instance",
    "animator instance set",
    "animator name",
    "animator name to animator definition map",
    "animator serialized options",
    "animator timeline",
    "anniversary",
    "annotated asset id",
    "annotated location",
    "annotated types",
    "annotated unexpected alert open error",
    "annotation",
    "annotation box",
    "annotation level",
    "annotation syntax",
    "annotation-syntax",
    "annotation-xml",
    "announce an RTCDataChannel as open",
    "announce an rtcdatachannel as open",
    "announce the connection",
    "announce the rtcdatachannel as open",
    "anonca",
    "anonymization ca",
    "anonymous",
    "anonymous <mrow> box",
    "anonymous box",
    "anonymous button content box",
    "anonymous fieldset content box",
    "anonymous inline boxes",
    "answerer's system state",
    "antiquewhite",
    "any",
    "any role",
    "anystring",
    "anyuri",
    "api url parser",
    "api value",
    "app-assisted individualization",
    "app-region",
    "app_id",
    "appeal",
    "appearance",
    "appearance of a cross-fade()",
    "append",
    "append a request `origin` header",
    "append an attribute",
    "append an entry to the contribution cache",
    "append client hints to request",
    "append error",
    "append or modify a request `sec-browsing-topics` header",
    "append or modify a sec-shared-storage-writable request header",
    "append private state token issue request headers",
    "append private state token redemption record headers",
    "append private state token redemption request headers",
    "append session history synchronous navigation steps",
    "append session history traversal steps",
    "append the Fetch metadata headers for a request",
    "append to a bidding signals per-interest group data map",
    "append to an event path",
    "append window",
    "appid",
    "appinstalled",
    "appleproduct",
    "applet",
    "applicability",
    "applicable",
    "applicable specification",
    "applicable wake lock",
    "application context",
    "application internal identifiers",
    "application life-cycle task source",
    "application manifest",
    "application manifest media type",
    "application server",
    "application's name",
    "application-set content hint",
    "application/atom+xml",
    "application/json",
    "application/manifest+json",
    "application/microdata+json",
    "application/rss+xml",
    "application/tracking-status+json",
    "application/x-www-form-urlencoded",
    "application/x-www-form-urlencoded percent-encode set",
    "application/xhtml+xml",
    "application/xml",
    "applied",
    "applies to",
    "apply",
    "apply a default",
    "apply a position option",
    "apply any component ads target to a bid",
    "apply any pending playback rate",
    "apply interest groups limits to prioritized list",
    "apply link options from parsed header attributes",
    "apply orientation lock",
    "apply rappor noise",
    "apply request modifiers from url value",
    "apply scroll margin to a scrollport",
    "apply source location",
    "apply the history step",
    "apply the nominal frame rate",
    "apply the pending render state",
    "apply the percent hint",
    "apply the push/replace history step",
    "apply the reload history step",
    "apply the traverse history step",
    "apply to",
    "apply webvtt cue settings",
    "applyconstraints template method",
    "applying",
    "applying a blackman window",
    "applying a fourier transform",
    "applying the restriction transformation",
    "appropriate end tag token",
    "appropriate network error",
    "appropriate place for inserting a node",
    "appropriate template contents owner document",
    "appworkspace",
    "aqua",
    "aquamarine",
    "arbitrary substitution",
    "arbitrary substitution function",
    "archive mime type",
    "archive type pattern matching algorithm",
    "arcs linejoin",
    "are a valid escape",
    "are same-party in an embedding context",
    "area",
    "arg",
    "arg_i",
    "aria attributes",
    "aria-*",
    "ariamixin getter steps",
    "ariamixin setter steps",
    "armenian",
    "array",
    "array key",
    "array layer",
    "array layer count",
    "arraybuffer",
    "arraybufferview",
    "arrow pad",
    "art direction",
    "article",
    "as a download",
    "as a timestamp",
    "ascending",
    "ascent metric",
    "ascii alpha",
    "ascii alphanumeric",
    "ascii byte",
    "ascii case-insensitive",
    "ascii case-insensitive matching",
    "ascii code point",
    "ascii decode",
    "ascii digit",
    "ascii encode",
    "ascii hex digit",
    "ascii lower alpha",
    "ascii lower hex digit",
    "ascii lowercase",
    "ascii serialization of an origin",
    "ascii string",
    "ascii tab or newline",
    "ascii tabs or newlines",
    "ascii upper alpha",
    "ascii upper hex digit",
    "ascii uppercase",
    "ascii whitespace",
    "ascii-capable",
    "aside",
    "asin()",
    "ask the user to choose a Credential",
    "asks for a reset",
    "aspect",
    "aspect value",
    "aspect-ratio",
    "aspect-specific format",
    "aspectratio",
    "assemble primitives",
    "assemblyglyphcount",
    "assembysize",
    "assert",
    "asserted",
    "asserted triple",
    "assertion",
    "assertion signature",
    "assertionmethod",
    "assign a slot",
    "assign slottables",
    "assign slottables for a tree",
    "assignable table width",
    "assigned access key",
    "assigned launch consumer",
    "assigned media provider object",
    "assistive technologies",
    "assistive technology",
    "associable",
    "associable by an entity",
    "associable by the application",
    "associable value",
    "associate animator instance of worklet animation",
    "associate the issuer",
    "associated",
    "associated background image requests",
    "associated baseaudiocontext",
    "associated bone",
    "associated cookies",
    "associated css style sheet",
    "associated document",
    "associated effect end",
    "associated element",
    "associated focus navigation owner",
    "associated image request",
    "associated inert template document",
    "associated interface",
    "associated mediadevices",
    "associated navigator",
    "associated node",
    "associated offscreencanvas object",
    "associated option object",
    "associated realm",
    "associated screenorientation",
    "associated session",
    "associated storage partition",
    "associated store",
    "associated user context",
    "associated useractivation",
    "associated video element",
    "associated with a timeline",
    "associated with an animation",
    "associated with connection",
    "async",
    "async pipeline creation",
    "asynchronous iterator initialization steps",
    "asynchronous iterator prototype object",
    "asynchronous iterator return",
    "asynchronous read method",
    "asynchronous waits",
    "asynchronously compile a webassembly module",
    "asynchronously execute a request",
    "asynchronously finish reporting",
    "asynchronously instantiate a webassembly module",
    "asynchronously iterable declaration",
    "asynchronously wait",
    "at progress timeline boundary",
    "at risk",
    "at-keyword",
    "at-risk",
    "at-rule",
    "at-rules",
    "atan()",
    "atan2()",
    "atomic http redirect handling",
    "atomic initial letter",
    "atomic initial letter box",
    "atomic inline",
    "atomic inline box",
    "atomic inline-level box",
    "atomic inline-level boxes",
    "atomic modification",
    "atomic type",
    "atomically",
    "att bearer",
    "attach",
    "attach a shadow root",
    "attach a webvtt internal node object",
    "attached",
    "attached internals",
    "attaching to a media element",
    "attca",
    "attempt to create a non-fetch scheme document",
    "attempt to decrypt",
    "attempt to deliver a debug report",
    "attempt to deliver a report",
    "attempt to deliver a verbose debug report",
    "attempt to deliver an aggregatable debug report",
    "attempt to disconnect",
    "attempt to populate the history entry's document",
    "attempt to queue reports for sending",
    "attempt to resume playback if necessary",
    "attempt to send an automatic beacon",
    "attempting to access the depth buffer",
    "attestation",
    "attestation ca",
    "attestation certificate",
    "attestation conveyance",
    "attestation key pair",
    "attestation object",
    "attestation private key",
    "attestation public key",
    "attestation signature",
    "attestation statement",
    "attestation statement format",
    "attestation statement format identifier",
    "attestation trust path",
    "attestation type",
    "attested credential data",
    "attr localname",
    "attr()",
    "attr-iframe-credentialless",
    "attr.localname",
    "attr.namespaceuri",
    "attr.prefix",
    "attr.value",
    "attribute",
    "attribute caching",
    "attribute change steps",
    "attribute getter",
    "attribute handle",
    "attribute list",
    "attribute name state",
    "attribute names",
    "attribute node selector",
    "attribute selector",
    "attribute setter",
    "attribute type",
    "attribute value (double-quoted) state",
    "attribute value (single-quoted) state",
    "attribute value (unquoted) state",
    "attribute values",
    "attribute's serialized name",
    "attributes",
    "attributes and default actions",
    "attributes for form submission",
    "attribution",
    "attribution caches",
    "attribution debug info",
    "attribution destination website",
    "attribution rate-limit cache",
    "attribution rate-limit record",
    "attribution rate-limit window",
    "attribution report",
    "attribution reporting eligibility",
    "attribution scopes",
    "attribution source",
    "attribution source cache",
    "attribution source id",
    "attribution trigger",
    "attribution-reporting-eligible",
    "attribution-reporting-support",
    "auction",
    "auction config",
    "auction nonce",
    "auction report info",
    "audience segmentation",
    "audio",
    "audio buffer underrun",
    "audio focus",
    "audio or video mime type",
    "audio or video type pattern matching algorithm",
    "audio sample",
    "audio sample type",
    "audio splice frame",
    "audio splice rendering",
    "audio(src)",
    "audio-encoding-offer",
    "audio-frame",
    "audiobuffer",
    "audiobufferoptions",
    "audiobuffersourcenode",
    "audiobuffersourceoptions",
    "audiocontext",
    "audiocontextoptions",
    "audiodestinationnode",
    "audiolistener",
    "audionode",
    "audionodeoptions",
    "audioparam",
    "audioparamdescriptor",
    "audioprocessingevent",
    "audioprocessingeventinit",
    "audiorenderCapacity",
    "audiorenderCapacityevent",
    "audiorenderCapacityoptions",
    "audioscheduledsourcenode",
    "audiotimestamp",
    "audioworklet",
    "audioworkletglobalscope",
    "audioworkletnode",
    "audioworkletnodeoptions",
    "audioworkletprocessor",
    "audit",
    "auditory icon",
    "augmented certificate",
    "augmented grid",
    "aural box model",
    "auth-capabilities",
    "auth-initiation-token",
    "auth-spake2-confirmation",
    "auth-spake2-handshake",
    "auth-status",
    "authentication",
    "authentication assertion",
    "authentication ceremony",
    "authentication entry",
    "authentication extension",
    "authentication factor capability",
    "authenticator",
    "authenticator attachment modality",
    "authenticator configuration",
    "authenticator data",
    "authenticator data claimed to have been used for the attestation",
    "authenticator data for the attestation",
    "authenticator extension",
    "authenticator extension capabilities",
    "authenticator extension input",
    "authenticator extension output",
    "authenticator extension processing",
    "authenticator model",
    "authenticator operation",
    "authenticator operations",
    "authenticator session",
    "authenticator type",
    "authenticatorcancel",
    "authenticatorgetassertion",
    "authenticatorgetassertion response structure",
    "authenticatorid",
    "authenticatormakecredential",
    "authenticatormakecredential response structure",
    "author",
    "author origin",
    "author presentational hint origin",
    "author request headers",
    "author style sheet",
    "author-origin",
    "authoring tool",
    "authorization gesture",
    "authorization server",
    "auto",
    "auto (direction)",
    "auto base direction",
    "auto direction",
    "auto directionality",
    "auto paragraph direction",
    "auto-column",
    "auto-directionality form-associated elements",
    "auto-hidden",
    "auto-hide",
    "auto-placement",
    "auto-placement cursor",
    "auto-reauthenticated",
    "auto-releasing wake locks",
    "auto_design_width",
    "autoaccept",
    "autocapitalization hints",
    "autocapitalize-inheriting elements",
    "autofill anchor mantle",
    "autofill and credentialless iframe",
    "autofill detail tokens",
    "autofill expectation mantle",
    "autofill field",
    "autofill field name",
    "autofill hint set",
    "autofill scope",
    "autofills form controls",
    "autofocus candidates",
    "autofocus delegate",
    "autofocus processed flag",
    "autogaincontrol",
    "automated install prompt",
    "automatic",
    "automatic block size",
    "automatic column position",
    "automatic column span",
    "automatic expiry task source",
    "automatic grid position",
    "automatic grid span",
    "automatic inline size",
    "automatic minimum size",
    "automatic numbering",
    "automatic placement",
    "automatic position",
    "automatic row position",
    "automatic row span",
    "automatic size",
    "automatic span",
    "automation event time",
    "automation events",
    "automation local testing mode",
    "automation local testing mode enabled",
    "automation method",
    "autonomous custom element",
    "autoplay",
    "autoreject",
    "auxclick",
    "auxiliary action",
    "auxiliary browsing context",
    "auxiliary input source",
    "av1 alpha image item",
    "av1 alpha image sequence",
    "av1 auxiliary image item",
    "av1 auxiliary image sequence",
    "av1 depth image item",
    "av1 depth image sequence",
    "av1 image file format",
    "av1 image item",
    "av1 image item data",
    "av1 image sequence",
    "av1 item configuration property",
    "av1 sample",
    "av1c",
    "av1codecconfigurationbox",
    "av1f",
    "av1forwardkeyframesamplegroupentry",
    "av1layeredimageindexingproperty",
    "av1metadatasamplegroupentry",
    "av1multiframesamplegroupentry",
    "av1s",
    "av1sampleentry",
    "av1switchframesamplegroupentry",
    "availability",
    "availability sources set",
    "available",
    "available block space",
    "available font faces",
    "available grid space",
    "available height",
    "available inline space",
    "available locales list",
    "available presentation display",
    "available presentation displays",
    "available space",
    "available width",
    "availablefromtimeline",
    "avoid break values",
    "await a navigation",
    "await a stable state",
    "awaits",
    "axis",
    "axis value",
    "axis-lock",
    "axisheight",
    "azimuth",
    "azure",
    "b",
    "back",
    "back-facing",
    "backdrop",
    "backdrop root",
    "backdrop root image",
    "backdrop-filter",
    "backed up",
    "backface-visibility",
    "background",
    "background codec",
    "background color",
    "background fetch",
    "background fetch click",
    "background fetch record",
    "background fetch response",
    "background fetch task source",
    "background image",
    "background image layer",
    "background painting area",
    "background positioning area",
    "background suitability",
    "background text style values",
    "background-attachment",
    "background-blend-mode",
    "background-clip",
    "background-color",
    "background-image",
    "background-origin",
    "background-position",
    "background-position-block",
    "background-position-inline",
    "background-position-x",
    "background-position-y",
    "background-repeat",
    "background-repeat-block",
    "background-repeat-inline",
    "background-repeat-x",
    "background-repeat-y",
    "background-size",
    "background-tbd",
    "background_text_style",
    "backgroundblur",
    "backing observable array exotic object",
    "backing struct",
    "backpressure",
    "backslash escapes",
    "backup element queue",
    "backup eligibility",
    "backup eligible",
    "backup incumbent settings object stack",
    "backup state",
    "backwards",
    "bad import script response",
    "bad port",
    "badge",
    "barred the element from constraint validation",
    "base",
    "base box",
    "base direction",
    "base iri",
    "base level",
    "base size",
    "base text level",
    "base url",
    "base url change steps",
    "base-uri",
    "base64 encoding",
    "base64 vlq",
    "base64-value",
    "base64url encoding",
    "baseaudiocontext",
    "basefont",
    "baseline",
    "baseline alignment",
    "baseline alignment preference",
    "baseline content-alignment",
    "baseline of a cell",
    "baseline of a table-root",
    "baseline of the row",
    "baseline self-alignment",
    "baseline set",
    "baseline table",
    "baseline-relative shift values",
    "baseline-sharing group",
    "baseline-shift",
    "baseline-source",
    "baseline-table",
    "basic",
    "basic attestation",
    "basic filtered response",
    "basic language range",
    "basic multilingual plane",
    "basic multilingual plane (bmp)",
    "basic shape",
    "basic url parser",
    "batch attestation",
    "batch cache operations",
    "batch or fetch trusted bidding signals",
    "batching scope",
    "battery status task source",
    "bd_addr",
    "bday",
    "bdi",
    "bdo",
    "be",
    "be directionally scrolled",
    "bearer credential",
    "bearer credentials",
    "bearing angle",
    "become browsing-context connected",
    "become browsing-context disconnected",
    "become disconnected",
    "becomes connected",
    "becomes lost",
    "before",
    "before attribute name state",
    "before attribute value state",
    "before doctype name state",
    "before doctype public identifier state",
    "before doctype system identifier state",
    "before flag",
    "before head",
    "before html",
    "before request sent map",
    "before-active boundary time",
    "before-change style",
    "beforeinput",
    "beforeinstallprompt",
    "beforexrselect",
    "begin",
    "begin offline rendering",
    "beginning edges",
    "behave as auto",
    "behaves as auto",
    "behaving as auto",
    "behavior",
    "behavioral requirements",
    "beige",
    "being activated",
    "being actively pointed at",
    "being rendered",
    "being used as relevant canvas fallback content",
    "best representation of the number n as a floating-point number",
    "between doctype public and system identifiers state",
    "between zero and b",
    "bfc",
    "bfcache blocking details",
    "bgsound",
    "bi-orientational",
    "bi-orientational transform",
    "bias value",
    "biased fragment depth",
    "bicameral",
    "bid debug reporting info",
    "bid with currency",
    "bidding script failure bucket",
    "bidding signals per interest group data",
    "bidi",
    "bidi algorithm",
    "bidi flag",
    "bidi formatting characters",
    "bidi isolate",
    "bidi isolation",
    "bidi paragraph",
    "bidi session",
    "bidi text",
    "bidi-isolate",
    "bidi-isolated",
    "bidirectional isolate",
    "bidirectional text",
    "bidirectionality",
    "bidirectionality (bidi)",
    "bidirectionally broadcastable",
    "bidirectionally broadcasting",
    "big",
    "big5",
    "big5 decoder",
    "big5 encoder",
    "big5 lead",
    "bigint",
    "biginteger",
    "billing address",
    "binary data byte",
    "binary object store",
    "binding edge",
    "binding member",
    "binding resource type",
    "binding type",
    "binding usage",
    "biometric authenticator",
    "biometric recognition",
    "biquadfilternode",
    "biquadfilteroptions",
    "bisque",
    "bit debit",
    "bit pack",
    "bitmap",
    "bitmap data",
    "bitmap mode",
    "bitmaprenderer",
    "black",
    "blanchedalmond",
    "blank",
    "blank line",
    "blank node",
    "blank node identifier",
    "blank node identifiers",
    "blank node to quads map",
    "blank nodes",
    "blankspace",
    "bleed area",
    "blend technique",
    "blendable",
    "blendable format",
    "blink",
    "blob",
    "blob url",
    "blob url entry",
    "blob url store",
    "block",
    "block (unicode)",
    "block access",
    "block at-rule",
    "block axis",
    "block bad port",
    "block box",
    "block boxes",
    "block comment",
    "block container",
    "block container box",
    "block dimension",
    "block direction",
    "block elements",
    "block end",
    "block flow direction",
    "block formatting context",
    "block formatting context root",
    "block layout",
    "block offset",
    "block overflow ellipsis",
    "block rendering",
    "block scripts",
    "block size",
    "block start",
    "block stretch size constraint",
    "block-axis",
    "block-ellipsis",
    "block-end",
    "block-flow direction",
    "block-level",
    "block-level box",
    "block-level boxes",
    "block-level content",
    "block-level element",
    "block-level elements",
    "block-size",
    "block-start",
    "block-step",
    "block-step-align",
    "block-step-insert",
    "block-step-round",
    "block-step-size",
    "blockable mixed content",
    "blocked bluetooth service class uuid",
    "blocked by a blocklist rule",
    "blocked by a modal dialog",
    "blocked media element",
    "blocked report",
    "blocked request map",
    "blocked-on-parser",
    "blockification",
    "blockify",
    "blocking attribute",
    "blocking tokens set",
    "blocklist",
    "blocklisted",
    "blocklisted for reads",
    "blocklisted for writes",
    "blocklisted manufacturer data",
    "blocklisted manufacturer data filter",
    "blockquote",
    "blue",
    "bluetooth device",
    "bluetooth device name",
    "blueviolet",
    "blur",
    "bmp",
    "board",
    "board of directors",
    "bod",
    "body",
    "body element",
    "body with type",
    "body-ok",
    "bogus comment state",
    "bogus doctype state",
    "bom sniff",
    "bond",
    "bookmark-label",
    "bookmark-level",
    "bookmark-state",
    "bookmarks",
    "bool",
    "boolean",
    "boolean attributes",
    "boolean context",
    "boolean literal",
    "bopomofo",
    "bopomofo characters",
    "bopomofo tone marks",
    "border",
    "border (of a box)",
    "border area",
    "border box",
    "border color",
    "border edge",
    "border image",
    "border image area",
    "border image region",
    "border properties",
    "border radius",
    "border style",
    "border width",
    "border-block",
    "border-block-color",
    "border-block-end",
    "border-block-end-color",
    "border-block-end-radius",
    "border-block-end-style",
    "border-block-end-width",
    "border-block-start",
    "border-block-start-color",
    "border-block-start-radius",
    "border-block-start-style",
    "border-block-start-width",
    "border-block-style",
    "border-block-width",
    "border-bottom",
    "border-bottom-color",
    "border-bottom-left-radius",
    "border-bottom-radius",
    "border-bottom-right-radius",
    "border-bottom-style",
    "border-bottom-width",
    "border-boundary",
    "border-clip",
    "border-clip-bottom",
    "border-clip-left",
    "border-clip-right",
    "border-clip-top",
    "border-collapse",
    "border-color",
    "border-end-end-radius",
    "border-end-start-radius",
    "border-image",
    "border-image-outset",
    "border-image-repeat",
    "border-image-slice",
    "border-image-source",
    "border-image-width",
    "border-inline",
    "border-inline-color",
    "border-inline-end",
    "border-inline-end-color",
    "border-inline-end-radius",
    "border-inline-end-style",
    "border-inline-end-width",
    "border-inline-start",
    "border-inline-start-color",
    "border-inline-start-radius",
    "border-inline-start-style",
    "border-inline-start-width",
    "border-inline-style",
    "border-inline-width",
    "border-left",
    "border-left-color",
    "border-left-radius",
    "border-left-style",
    "border-left-width",
    "border-limit",
    "border-radius",
    "border-right",
    "border-right-color",
    "border-right-radius",
    "border-right-style",
    "border-right-width",
    "border-spacing",
    "border-start-end-radius",
    "border-start-start-radius",
    "border-style",
    "border-top",
    "border-top-color",
    "border-top-left-radius",
    "border-top-radius",
    "border-top-right-radius",
    "border-top-style",
    "border-top-width",
    "border-width",
    "border::of a box",
    "bottle map",
    "bottom",
    "bounce tracking",
    "bounce tracking activation lifetime",
    "bounce tracking grace period",
    "bounce tracking record",
    "bounce tracking timer",
    "bounce tracking timer period",
    "bound",
    "bound credential",
    "boundary box",
    "boundary default action",
    "boundary point",
    "bounded reference spaces are supported",
    "bounding box",
    "bounds",
    "box alignment properties",
    "box fragment",
    "box metrics of the radical glyph",
    "box-corner",
    "box-decoration-break",
    "box-shadow",
    "box-shadow-blur",
    "box-shadow-color",
    "box-shadow-offset",
    "box-shadow-position",
    "box-shadow-spread",
    "box-sizing",
    "box-snap",
    "box::border",
    "box::content",
    "box::content height",
    "box::content width",
    "box::margin",
    "box::overflow",
    "box::padding",
    "br",
    "br/edr bonding procedure",
    "branch factor encoding",
    "branches of a readable stream tee",
    "break",
    "break calibration",
    "break-after",
    "break-before",
    "break-inside",
    "brightness",
    "broadcast",
    "broadcast active observations",
    "broadcast active resize observations",
    "broadcaster",
    "broadcasting",
    "broadcasting to other browsing contexts",
    "broken",
    "brotli patch",
    "brown",
    "browser",
    "browser chrome",
    "browser chrome element",
    "browser chrome elements",
    "browser fingerprinting",
    "browser initiated remote playback",
    "browsing context",
    "browsing context container",
    "browsing context group",
    "browsing context group node map",
    "browsing context group set",
    "browsing context input state map",
    "browsing context scope origin",
    "browsing context set",
    "browsing profile",
    "browsing topics task source",
    "browsing-context connected",
    "browsing-topics",
    "bsize field",
    "bucket file system",
    "bucket map",
    "buffer a log event",
    "buffer append",
    "buffer source types",
    "buffer types",
    "buffer view types",
    "buffer-binding-aliasing",
    "bufferedchange",
    "buffersource",
    "build a content range",
    "build a url pattern from a web idl value",
    "build a url pattern from an infra value",
    "build a urlpattern object from a web idl value",
    "build an interest group passed to generatebid",
    "build bid generators map",
    "build not restored reasons for a top-level traversable and its descendants",
    "build not restored reasons for document state",
    "build the list of related website sets",
    "build trusted bidding signals url",
    "build trusted scoring signals url",
    "built-in default config",
    "built-in functions",
    "built-in input value",
    "built-in output value",
    "built-in user verification method",
    "built-in value name-token",
    "built-in values",
    "builtin functions that compute a derivative",
    "bulk transfers",
    "bundle",
    "bundle-only",
    "bundle-policy",
    "burlywood",
    "button",
    "button layout",
    "button press threshold",
    "buttonface",
    "buttonhighlight",
    "buttons",
    "buttonshadow",
    "buttontext",
    "by",
    "by computed value",
    "byob reader",
    "byte",
    "byte length queuing strategy size function",
    "byte less than",
    "byte order",
    "byte pattern",
    "byte sequence",
    "byte stream format specifications",
    "byte stream formats",
    "byte-case-insensitive",
    "byte-lowercase",
    "byte-serializing a request origin",
    "byte-size",
    "byte-uppercase",
    "bytes",
    "c",
    "c0 control",
    "c0 control or space",
    "c0 control percent-encode set",
    "c0 controls or spaces",
    "cache",
    "cache batch operation",
    "cache entry",
    "cache entry match",
    "cache mode",
    "cacheable",
    "cached attr-associated elements",
    "cached attr-associated elements object",
    "cached ecmascript object",
    "cadetblue",
    "calc()",
    "calc-mix()",
    "calc-size basis",
    "calc-size calculation",
    "calc-size()",
    "calcmode",
    "calculate box size",
    "calculate depth for node",
    "calculate dom path",
    "calculate linear easing output progress",
    "calculate mouseevent button attribute",
    "calculate the absolute position",
    "calculate the ad slot size query param",
    "calculate the aspect ratio",
    "calculate the device posture information",
    "calculate the epochs for caller",
    "calculate the part element map",
    "calculate the topics for caller",
    "calculate user topics",
    "calculation tree",
    "calibrated",
    "calibrated magnetic field",
    "calibration",
    "call a user object's operation",
    "call an exported function",
    "call back with error",
    "call for exclusion",
    "call for review",
    "call site",
    "call site tag",
    "call the update callback",
    "callback context",
    "callback function",
    "callback function types",
    "callback interface",
    "callback interface member",
    "callback interface types",
    "callback reaction",
    "callback this value",
    "called function",
    "callee",
    "caller",
    "calling function",
    "calling site",
    "callsitenorestriction",
    "callsiterequiredtobeuniform.s",
    "camera information can be exposed",
    "camera-access",
    "can add resource timing entry",
    "can attribution rate-limit record be removed",
    "can autoplay flag",
    "can be displayed",
    "can be manually scrolled",
    "can be scrolled manually",
    "can expose sensor readings",
    "can have its url rewritten",
    "can make digital goods service algorithm",
    "can make payment algorithm",
    "can't be displayed",
    "cancel",
    "cancel a hit test source",
    "cancel a hit test source for transient input",
    "cancel a readable stream",
    "cancel action",
    "cancel an animation",
    "cancel event",
    "cancel the outstanding getstatuschange",
    "cancelaction",
    "canceled",
    "canceled event",
    "candidate",
    "candidate addition",
    "candidate amendment",
    "candidate correction",
    "candidate examination algorithm",
    "candidate for constraint validation",
    "candidate recommendation",
    "candidate recommendation draft",
    "candidate recommendation review period",
    "candidate recommendation snapshot",
    "candidate registry",
    "candidate registry draft",
    "candidate registry snapshot",
    "candidate-attribute",
    "canexcluderoot",
    "cannot be manually scrolled",
    "cannot be scrolled manually",
    "cannot be used together",
    "cannot have a username/password/port",
    "cannot navigate",
    "cannot show simple dialogs",
    "canonical identifier",
    "canonical index",
    "canonical indices",
    "canonical issuer",
    "canonical keyword",
    "canonical lexical form",
    "canonical locale",
    "canonical n-quads",
    "canonical n-quads document",
    "canonical n-quads form",
    "canonical n-triples document",
    "canonical paymentcurrencyamount",
    "canonical tag",
    "canonical unicode locale identifier",
    "canonical unit",
    "canonicalization function",
    "canonicalization state",
    "canonicalize a configuration",
    "canonicalize a hash",
    "canonicalize a hostname",
    "canonicalize a password",
    "canonicalize a pathname",
    "canonicalize a port",
    "canonicalize a protocol",
    "canonicalize a sanitizer element list",
    "canonicalize a sanitizer name",
    "canonicalize a search",
    "canonicalize a username",
    "canonicalize an ipv6 hostname",
    "canonicalize an opaque pathname",
    "canonicalized dataset",
    "canvas",
    "canvas background",
    "canvas blob serialization task source",
    "canvas context mode",
    "canvas pixel arraybuffer",
    "canvas surface",
    "cap shapes",
    "cap-height baseline",
    "capabilities",
    "capabilities processing",
    "capability",
    "capability name",
    "capabilitydelegation",
    "capabilityinvocation",
    "capable of supporting",
    "caption",
    "caption width minimum (capmin)",
    "caption-side",
    "captions",
    "captiontext",
    "capture actions",
    "capture control type",
    "capture rendering characteristics",
    "capture the image",
    "capture the new state",
    "capture the old state",
    "capture-session",
    "captured additional bids headers",
    "captured element",
    "captured in a view transition",
    "capturedmousechange",
    "captures snap positions",
    "capturing the image",
    "caret",
    "caret node",
    "caret offset",
    "caret position",
    "caret range",
    "caret-animation",
    "caret-color",
    "caret-shape",
    "carried forward",
    "cascade",
    "cascade layers",
    "cascade origin",
    "cascade-dependent keyword",
    "cascaded independently",
    "cascaded value",
    "cascading style sheets",
    "cascading style sheets (css)",
    "case clause",
    "case folding",
    "case mapping",
    "case sensitive matching",
    "case-folded",
    "case-insensitive",
    "case-sensitive",
    "cast",
    "categories",
    "cbcs",
    "cbcs-1-9",
    "cbor",
    "ccdtostring",
    "ccs",
    "cdata section bracket state",
    "cdata section end state",
    "cdata section state",
    "cdata sections",
    "cdata-in-html-content",
    "cddl",
    "cdm",
    "cdm unavailable",
    "ceiling expression",
    "cell",
    "cell intrinsic offsets",
    "cenc",
    "center",
    "center point",
    "central",
    "central baseline",
    "ceo",
    "ceremony",
    "certificate chain",
    "certificate serial number",
    "certificate serial number base",
    "certificate serial number counter",
    "cf field",
    "cf_after",
    "cf_i",
    "cf_start",
    "ch-device-memory",
    "ch-downlink",
    "ch-dpr",
    "ch-ect",
    "ch-prefers-color-scheme",
    "ch-prefers-contrast",
    "ch-prefers-forced-colors",
    "ch-prefers-reduced-motion",
    "ch-prefers-reduced-transparency",
    "ch-rtt",
    "ch-save-data",
    "ch-ua",
    "ch-ua-arch",
    "ch-ua-bitness",
    "ch-ua-form-factors",
    "ch-ua-full-version",
    "ch-ua-full-version-list",
    "ch-ua-mobile",
    "ch-ua-model",
    "ch-ua-platform",
    "ch-ua-platform-version",
    "ch-ua-wow64",
    "ch-viewport-height",
    "ch-viewport-width",
    "ch-width",
    "chain",
    "chain an operation",
    "chain transform algorithm",
    "chaining",
    "chair",
    "chair decisions",
    "challenge",
    "change",
    "change an attribute",
    "change in contributing factors is substantial",
    "change password url",
    "change payment details algorithm",
    "change payment method algorithm",
    "change process",
    "change remote playback state",
    "change state",
    "change the encoding",
    "change the frozenness of a document",
    "change the frozenness of a top-level document",
    "change the preferred css style sheet set name",
    "changes to selected/enabled track state",
    "changing navigable continuation state",
    "channel",
    "channel format",
    "channel formats",
    "channel keyword",
    "channel messaging",
    "channel name",
    "channel transfer function",
    "channelcount",
    "channelmergernode",
    "channelmergeroptions",
    "channels",
    "channelsplitternode",
    "channelsplitteroptions",
    "chapters",
    "chapters metadata",
    "character",
    "character encoding",
    "character encoding declaration",
    "character encoding form",
    "character height",
    "character map",
    "character reference code",
    "character reference state",
    "character references",
    "character set",
    "character value",
    "character width",
    "character-reference-outside-unicode-range",
    "characteristic",
    "characteristic descriptor discovery",
    "characteristic descriptors",
    "characteristic discovery",
    "characteristic extended properties",
    "characteristic properties",
    "characteristic value indications",
    "characteristic value notification",
    "characteristic value read",
    "characteristic value write",
    "characterized",
    "characters",
    "characterstring",
    "charge shared storage navigation budget",
    "charge shared storage reporting budget",
    "chargingchange",
    "chargingtimechange",
    "charter",
    "charter extension",
    "chartered groups",
    "chartreuse",
    "charwidth",
    "check a currency tag",
    "check a global object's embedder policy",
    "check a navigation response's adherence to `x-frame-options`",
    "check a navigation response's adherence to its embedder policy",
    "check ancestor for task",
    "check ancestor set for task",
    "check and canonicalize amount",
    "check and canonicalize total amount",
    "check clipboard read permission",
    "check clipboard write permission",
    "check configuration support",
    "check created records",
    "check encrypted decoding support",
    "check if a popup window is requested",
    "check if a scheme is suitable",
    "check if a text directive can be scrolled",
    "check if a window feature is set",
    "check if addmodule is allowed and update state",
    "check if aggregatable debug reporting should be blocked by rate-limit",
    "check if an access between two browsing contexts should be reported",
    "check if an aggregatable attribution report should be unconditionally sent",
    "check if an attribution source and attribution trigger have matching attribution scopes",
    "check if an attribution source can create aggregatable contributions",
    "check if an attribution source exceeds the per day destination limits",
    "check if an attribution source exceeds the time-based destination limits",
    "check if an attribution source should be blocked by reporting-origin per site limit",
    "check if an attribution trigger contains aggregatable data",
    "check if an origin is suitable",
    "check if attribution debugging can be enabled",
    "check if attribution should be blocked by attribution rate limit",
    "check if attribution should be blocked by rate limits",
    "check if cookie-based debugging is allowed",
    "check if coop values require a browsing context group switch",
    "check if enforcing report-only coop would require a browsing context group switch",
    "check if hardware exposure is allowed",
    "check if negotiation is needed",
    "check if required seller capabilities are permitted",
    "check if source has compatible attribution scope fields",
    "check if string-like",
    "check if the device is configured",
    "check if three code points would start a number",
    "check if three code points would start a unicode-range",
    "check if three code points would start an ident sequence",
    "check if two code points are a valid escape",
    "check if unloading is canceled",
    "check if user preference setting allows access to shared storage",
    "check if we can run script",
    "check interest group permissions",
    "check parsed records",
    "check permission",
    "check permissions for device",
    "check popover validity",
    "check sensor policy-controlled features",
    "check soft navigation",
    "check soft navigation contentful paint",
    "check soft navigation same document commit",
    "check that a key could be injected into a value",
    "check the completion record",
    "check the layers state",
    "check the usability of the image argument",
    "check the validity of the control transfer parameters",
    "check user prompt handler matches",
    "check validity steps",
    "check whether a bit debit is expired",
    "check whether a moment falls within a window",
    "check whether a string is a valid currency tag",
    "check whether negative targeted",
    "check-for-apache-bug flag",
    "checkedness",
    "checking permission",
    "child",
    "child combinator",
    "child effect",
    "child element",
    "child elements",
    "child layout",
    "child navigable",
    "child selector",
    "child text content",
    "child-src",
    "children",
    "children array",
    "children changed steps",
    "chocolate",
    "chorded button interactions",
    "chorded buttons",
    "chroma_sample_position",
    "chroma_subsampling_x",
    "chroma_subsampling_y",
    "chromatic adaptation transform",
    "chromaticity",
    "chunk",
    "chunked",
    "circ",
    "circle",
    "circled-lower-latin",
    "circular reference",
    "circumgraph",
    "cite",
    "cjk",
    "claim",
    "claim validation",
    "claims",
    "clamp a grid area",
    "clamp and coarsen connection timing info",
    "clamp()",
    "clamped to the range",
    "class",
    "class constructor",
    "class selector",
    "class string",
    "classes",
    "classic conformance",
    "classic history api state",
    "classic script",
    "classic scrollbars",
    "classichistoryapistate",
    "classify",
    "cldr",
    "clean up",
    "clean up after running a callback",
    "clean up after running script",
    "clean up the disconnected device",
    "clean up the pending scan",
    "cleanup remote end state",
    "cleanup the session",
    "clear",
    "clear DOM-accessible storage for origin",
    "clear a content editable element",
    "clear a resettable element",
    "clear algorithm",
    "clear an object store",
    "clear cache entries",
    "clear cache for host",
    "clear cache for origin",
    "clear cookies for host",
    "clear cookies for origin",
    "clear data with buckets",
    "clear excess interest groups",
    "clear key",
    "clear non-cookie storage for host",
    "clear registration",
    "clear site data",
    "clear site data for response",
    "clear the forward session history",
    "clear the list of active formatting elements up to the last marker",
    "clear the modifier key state",
    "clear the negotiation-needed flag",
    "clear the operationinprogress",
    "clear the stack back to a table body context",
    "clear the stack back to a table context",
    "clear the stack back to a table row context",
    "clear view transition",
    "clear-site-data",
    "clearance",
    "clearance.",
    "click",
    "click focusable",
    "click in progress flag",
    "click source website",
    "click source-attribute-on pair",
    "click, auxclick, and contextmenu events",
    "client",
    "client bounce detection timer period",
    "client characteristic configuration",
    "client coordinate system",
    "client data",
    "client device",
    "client extension",
    "client extension input",
    "client extension output",
    "client extension processing",
    "client extension processing (authentication)",
    "client extension processing (registration)",
    "client hints set",
    "client hints token",
    "client metadata endpoint",
    "client mode targets",
    "client platform",
    "client-side",
    "client-side credential storage modality",
    "client-side discoverable credential",
    "client-side discoverable public key credential source",
    "clienthints",
    "clip",
    "clip position",
    "clip space coordinates",
    "clip steps",
    "clip volume",
    "clip-path",
    "clip-rule",
    "clipboard item",
    "clipboard items",
    "clipboard task source",
    "clippath",
    "clipped by intervening elements",
    "clipping path",
    "clipping region",
    "clock",
    "clone",
    "clone a node",
    "clone a policy container",
    "clone a track",
    "clone an object",
    "clone audiodata",
    "clone configuration",
    "clone videoframe",
    "cloning steps",
    "close",
    "close a database connection",
    "close a p element",
    "close a portal element",
    "close a presentation connection",
    "close a top-level traversable",
    "close a worker",
    "close action",
    "close any associated document picture-in-picture windows",
    "close any existing picture-in-picture windows",
    "close audiodata",
    "close audiodecoder",
    "close audioencoder",
    "close request",
    "close request steps",
    "close sentinel",
    "close steps",
    "close the cell",
    "close the connection",
    "close the presentation connection",
    "close the session",
    "close the websocket connections",
    "close to the viewport",
    "close videodecoder",
    "close videoencoder",
    "close videoframe",
    "close watcher",
    "close watcher manager",
    "close window",
    "close window algorithm",
    "close-quote",
    "closeaction",
    "closed",
    "closed flag",
    "closed subpath",
    "closed-shadow-hidden",
    "closest-side",
    "closewritable",
    "closing procedure",
    "clustered scripts",
    "cm",
    "cmaf av1 track",
    "coalesced events",
    "coalesced events list",
    "coarsen time",
    "coarsened moments",
    "coarsened shared current time",
    "code",
    "code 128",
    "code 39",
    "code point",
    "code point substring",
    "code point substring by positions",
    "code point substring to the end of the string",
    "code unit",
    "code unit less than",
    "code unit prefix",
    "code unit substring",
    "code unit substring by positions",
    "code unit substring to the end of the string",
    "code unit suffix",
    "codec",
    "codec dictionary match",
    "codec processing model",
    "codec string",
    "codec task source",
    "coded character set",
    "coded frame",
    "coded frame duration",
    "coded frame end timestamp",
    "coded frame eviction",
    "coded frame group",
    "coded frame processing",
    "coded frame removal",
    "codepoint rects",
    "codepoint rects start index",
    "coercion",
    "col",
    "colgroup",
    "collapse",
    "collapse through",
    "collapsed",
    "collapsed flex item",
    "collapsed grid track",
    "collapsed gutter",
    "collapsed margin",
    "collapsed track",
    "collapsible white space",
    "collapsing margin",
    "colleague",
    "collect Credentials from the credential store",
    "collect a sequence of code points",
    "collect a single fordebuggingonly report",
    "collect a webvtt block",
    "collect a webvtt timestamp",
    "collect an http quoted string",
    "collect attribute values",
    "collect attribute values of an inheritance stack",
    "collect documents to unfullscreen",
    "collect fordebuggingonly reports",
    "collect nodes using accessibility attributes",
    "collect page topics calculation input data",
    "collect topics caller domain",
    "collect webvtt cue timings and settings",
    "collect webvtt region settings",
    "collecting a sequence of code points",
    "collecting an http quoted string",
    "collecting the first vcard subproperty",
    "collecting vcard subproperties",
    "collection",
    "collection tag",
    "collection type",
    "collects",
    "collectsenders",
    "collecttransceivers",
    "color",
    "color functions",
    "color renderable format",
    "color scheme",
    "color scheme values",
    "color space",
    "color stop",
    "color stop list",
    "color temperature",
    "color transition hint",
    "color type",
    "color()",
    "color-adjust",
    "color-interpolation",
    "color-interpolation-filters",
    "color-layers()",
    "color-mix()",
    "color-rendering",
    "color-scheme",
    "color_scheme",
    "colortextures",
    "column",
    "column box",
    "column break",
    "column combinator",
    "column gap",
    "column group",
    "column group header",
    "column header",
    "column height",
    "column rule",
    "column width",
    "column-count",
    "column-fill",
    "column-gap",
    "column-rule",
    "column-rule-color",
    "column-rule-style",
    "column-rule-width",
    "column-span",
    "column-width",
    "columns",
    "columnspan",
    "combinator",
    "combinators",
    "combine",
    "combined buffer layout",
    "combined depth-stencil format",
    "combining character",
    "combining character sequence",
    "combining mark",
    "combining shadow lists",
    "comma-containing productions",
    "command",
    "commands",
    "comment",
    "comment end bang state",
    "comment end dash state",
    "comment end state",
    "comment less-than sign bang dash dash state",
    "comment less-than sign bang dash state",
    "comment less-than sign bang state",
    "comment less-than sign state",
    "comment start dash state",
    "comment start state",
    "comment state",
    "commentary",
    "comments",
    "commit a transaction",
    "commit computed styles",
    "commit early hints",
    "committed promise",
    "committed-to entry",
    "common key systems",
    "common locale data repository",
    "common safety checks",
    "common writing system keys",
    "compact",
    "compact form",
    "compact iri",
    "compacted",
    "compacted document form",
    "compacted form",
    "compacting",
    "compaction",
    "compacts",
    "compare media queries",
    "compare topics based on priority and count",
    "compare two keys",
    "compatibility character",
    "compatibility mapping with mouse events",
    "compatibility mouse events",
    "compatible baseline alignment preferences",
    "compatible graphics adapter",
    "compatible remote playback device",
    "compatible units",
    "compatible usage list",
    "compatible with cross-origin isolation",
    "compile a component",
    "compile a potential webassembly response",
    "compile a webassembly module",
    "compiled pattern regular expression",
    "complete",
    "complete a record",
    "completed transition",
    "completely available",
    "completely finish loading",
    "completely loaded",
    "completely loaded time",
    "completionsteps",
    "complex selector",
    "compliance",
    "component",
    "component percent-encode set",
    "component type",
    "component-wise",
    "components",
    "composite",
    "composite (verb)",
    "composite face",
    "composite message",
    "composite operation",
    "composite operation accumulate",
    "composite operation add",
    "composite operation replace",
    "composite vowel",
    "composited",
    "composited value",
    "compositeoperation",
    "composition",
    "composition end",
    "composition start",
    "compositionend",
    "compositionstart",
    "compositionupdate",
    "compound assignment",
    "compound parameter",
    "compound selector",
    "compound statement",
    "compress and enqueue a chunk",
    "compress flush and enqueue",
    "compressed format",
    "compression",
    "compression context",
    "compression curve",
    "compressorname",
    "computational graph",
    "computationally independent",
    "compute",
    "compute a certificate hash",
    "compute a property value",
    "compute a speculative action referrer policy",
    "compute all hit test results",
    "compute an mp3 frame size",
    "compute copy element count",
    "compute hit test results",
    "compute hit test results for transient input",
    "compute interactionid",
    "compute missing keyframe offsets",
    "compute protocol matches a special scheme flag",
    "compute render extent",
    "compute shader grid",
    "compute shader stage",
    "compute the channel capacity of a source",
    "compute the connection status",
    "compute the effective overload set",
    "compute the intersection",
    "compute the key hash of reporting id",
    "compute the scopes channel capacity of a source",
    "compute the tick duration",
    "computed <image>",
    "computed color",
    "computed keyframe offset",
    "computed keyframe offsets",
    "computed keyframe order",
    "computed keyframes",
    "computed length",
    "computed mime type",
    "computed plane layout",
    "computed repeat notation",
    "computed stylepropertymap",
    "computed track list",
    "computed track size",
    "computed value",
    "computed values",
    "computed writing suggestions value",
    "computedfrequency",
    "computednumberofchannels",
    "computedoscfrequency",
    "computedplaybackrate",
    "computedvalue",
    "computing a block of audio",
    "computing device memory value",
    "computing the envelope rate",
    "computing the makeup gain",
    "computing the manifest url",
    "computing the tick duration",
    "concept",
    "concept namespace",
    "concept-algorithm-exception",
    "concept-context-namespace",
    "concept-fragment-serializing-algorithm",
    "concept-generate-prefix",
    "concept-generated-prefix",
    "concept-namespace-localname-set",
    "concept-namespace-prefix-map",
    "concept-or-literal",
    "concept-parse-fragment",
    "concept-record-namespace-info",
    "concept-serialize-attr-value",
    "concept-serialize-doctype",
    "concept-serialize-html",
    "concept-serialize-xml",
    "concept-serialize-xml-attributes",
    "concept-well-formed",
    "concept-xml-serialization-algorithm",
    "concrete",
    "concrete object size",
    "concrete rdf syntax",
    "concretization",
    "concretization of a value",
    "conditional group rule",
    "conditional import",
    "conditional processing attribute",
    "conditional rule chain",
    "conditionally exposed",
    "conditionally hang",
    "conditionally hsts-safe origin",
    "confidence",
    "config",
    "config file",
    "configobus",
    "configuration descriptor",
    "configuration point",
    "configure the image decoder",
    "confirm idp login dialog",
    "conflicting credentials exist",
    "conformance",
    "conformant server",
    "conformant user agent",
    "conforming cryptographic suite specification",
    "conforming document",
    "conforming documents",
    "conforming implementation",
    "conforming issuer implementation",
    "conforming javascript implementation",
    "conforming processor",
    "conforming rdf/xml document",
    "conforming scripted web animations user agent",
    "conforming secured document",
    "conforming set of idl fragments",
    "conforming user agent",
    "conforming verifier implementation",
    "conforming-touch-behavior",
    "conforms to an element's touch-action",
    "conic-gradient()",
    "conjunct",
    "connect",
    "connect stream",
    "connect to sensor",
    "connect-src",
    "connected",
    "connected accounts set",
    "connecting",
    "connection",
    "connection pool",
    "connection queue",
    "connection state",
    "connection timing info",
    "connection type",
    "connection types",
    "connection-checking wrapper",
    "connectionavailable",
    "consecutive",
    "consensus",
    "consider speculation",
    "considered for event timing",
    "considered text",
    "console",
    "console steps",
    "consonant cluster",
    "const-declaration",
    "const-expressions",
    "const-functions",
    "constant",
    "constantsourcenode",
    "constantsourceoptions",
    "constrainable object",
    "constrainedness",
    "constraint",
    "constraint rectangle",
    "constraint validation api",
    "constraint-id",
    "construct",
    "construct a fragment result",
    "construct a geolocation sensor object",
    "construct a gyroscope object",
    "construct a magnetometer object",
    "construct a pending fenced frame config",
    "construct a proximity sensor object",
    "construct a stack trace",
    "construct a webassembly module object",
    "construct a websocket resource name",
    "construct a websocket url",
    "construct an accelerometer object",
    "construct an ambient light sensor object",
    "construct an orientation sensor object",
    "constructible",
    "constructing a gamepadhapticactuator",
    "constructing entry list",
    "constructing the entry list",
    "construction stack",
    "constructor operations",
    "constructor steps",
    "constructor string parser",
    "consume a block",
    "consume a block's contents",
    "consume a component value",
    "consume a data type name",
    "consume a declaration",
    "consume a function",
    "consume a list of component values",
    "consume a list of declarations",
    "consume a list of rules",
    "consume a number",
    "consume a numeric token",
    "consume a preloaded resource",
    "consume a qualified rule",
    "consume a required token",
    "consume a simple block",
    "consume a string token",
    "consume a style block's contents",
    "consume a stylesheet's contents",
    "consume a syntax component",
    "consume a syntax definition",
    "consume a token",
    "consume a unicode-range token",
    "consume a url token",
    "consume an at-rule",
    "consume an escaped code point",
    "consume an html character reference",
    "consume an ident sequence",
    "consume an ident-like token",
    "consume budget if permitted",
    "consume comments",
    "consume history-action user activation",
    "consume text",
    "consume the next input token",
    "consume the remnants of a bad declaration",
    "consume the remnants of a bad url",
    "consume the value of a unicode-range descriptor",
    "consume user activation",
    "consumed as part of an attribute",
    "consumer",
    "contact",
    "contact geometry",
    "contact picker is showing flag",
    "contact picker task source",
    "contacts source",
    "contagious invalidity",
    "contain",
    "contain constraint",
    "contain the nesting selector",
    "contain-fit sizing",
    "contain-intrinsic-block-size",
    "contain-intrinsic-height",
    "contain-intrinsic-inline-size",
    "contain-intrinsic-size",
    "contain-intrinsic-width",
    "contained text auto directionality",
    "container",
    "container document",
    "container element",
    "container feature",
    "container frame element",
    "container mapping",
    "container policy",
    "container query",
    "container query length",
    "container query length unit",
    "container resource",
    "container root url",
    "container size query",
    "container style query",
    "container-name",
    "container-progress()",
    "container-type",
    "containing block",
    "containing block chain",
    "containing block for all descendants",
    "containing block::initial",
    "containing only",
    "containment",
    "contains",
    "contains a gamepad user gesture",
    "contains a header-delivered content security policy",
    "contains background fetch",
    "content",
    "content (of a box)",
    "content area",
    "content attributes",
    "content box",
    "content decryption module (cdm)",
    "content display area",
    "content distribution",
    "content document",
    "content edge",
    "content encoding",
    "content height",
    "content index entry",
    "content language",
    "content language state",
    "content model",
    "content models",
    "content plane",
    "content rating",
    "content rect",
    "content security policy",
    "content security policy object",
    "content security policy state",
    "content set",
    "content size suggestion",
    "content timeline",
    "content timeline property",
    "content type",
    "content url",
    "content width",
    "content window",
    "content writing system",
    "content()",
    "content-based minimum size",
    "content-distribution",
    "content-distribution properties",
    "content-empty page",
    "content-encoding",
    "content-security-policy",
    "content-security-policy-report-only",
    "content-timeline example term",
    "content-type metadata",
    "content-visibility",
    "content::of a box",
    "content::rendered",
    "contenteditable=false element",
    "contentful",
    "contentful image",
    "contents",
    "contents of an arraybuffer",
    "context",
    "context cleanup steps",
    "context definition",
    "context document",
    "context element",
    "context is capturing",
    "context lost",
    "context lost steps",
    "context mode",
    "context namespace",
    "context object",
    "context type",
    "context validation result",
    "context-base-iri",
    "context-dependent name",
    "context-inverse",
    "context-specific sniffing algorithm",
    "contextmenu",
    "contexts in which this element can be used",
    "contiguous exclusive text nodes",
    "contiguous text nodes",
    "continue",
    "continuous event",
    "continuous event task",
    "continuous media",
    "contractee",
    "contrast",
    "contrast base color",
    "contrast color candidates",
    "contrast ratio",
    "contrast-color()",
    "contributes a script-blocking style sheet",
    "contributing factors",
    "contribution cache",
    "contribution cache entry",
    "control",
    "control barrier",
    "control bounds",
    "control flag",
    "control message",
    "control message queue",
    "control message steps",
    "control pad",
    "control thread",
    "control transfer",
    "control's data",
    "control-character-in-input-stream",
    "control-character-reference",
    "controlled",
    "controller",
    "controller document",
    "controlling",
    "controlling browsing context",
    "controlling browsing contexts",
    "controlling user agent",
    "controls",
    "controls of the window",
    "conversion to db",
    "conversionrank",
    "convert",
    "convert a cssunitvalue",
    "convert a json-derived javascript value to an infra value",
    "convert a key to a value",
    "convert a list of dimensions to a list of pixel values",
    "convert a mark to a timestamp",
    "convert a modifier to a string",
    "convert a name to a timestamp",
    "convert a non-negative integer i to an octet string of length n",
    "convert a string to a number",
    "convert a value to a key",
    "convert a value to a key range",
    "convert a value to a multientry key",
    "convert an ad render",
    "convert an ad size to a map",
    "convert an ad size to a string",
    "convert an infra value to a json-compatible javascript value",
    "convert artwork algorithm",
    "convert code unit to scalar value",
    "convert data to a format suitable for ingestion into the target",
    "convert fetch timestamp",
    "convert from native entity type",
    "convert generatebidoutput to generated bid",
    "convert header names to a sorted-lowercase set",
    "convert line endings to native",
    "convert ndefrecord.data bytes",
    "convert one or many generatebidoutputs to a list of generated bids",
    "convert to a list of name-value pairs",
    "convert to a string sequence",
    "convert to absolute url",
    "convert to an auctionad sequence",
    "converted to a javascript value",
    "converted to a numeric type or bigint",
    "converted to an ecmascript value",
    "converted to an idl value",
    "converted to ecmascript values",
    "converted to idl values",
    "converted to javascript values",
    "converting a character width to pixels",
    "converting a color value from a non-premultiplied representation to a premultiplied one",
    "converting a color value from a premultiplied representation to a non-premultiplied one",
    "converting a json-derived javascript value to an infra value",
    "converting a quaternion to rotation matrix",
    "converting an infra value to a json-compatible javascript value",
    "converting arguments for an asynchronous iterator method",
    "converting line endings to native",
    "converting nodes into a node",
    "converttofloat",
    "converttoint",
    "convolvernode",
    "convolveroptions",
    "cookie",
    "cookie change",
    "cookie change subscription",
    "cookie change subscription list",
    "cookie domain",
    "cookie expiry time",
    "cookie http only",
    "cookie name",
    "cookie name filter",
    "cookie path",
    "cookie same site",
    "cookie secure only",
    "cookie store",
    "cookie value",
    "cookie-averse document object",
    "cookie-like fingerprinting",
    "cookies",
    "coop enforcement result",
    "coordinated self-alignment preference",
    "coordinated value list",
    "coordinating list base property",
    "coordinating list property",
    "coordinating list property group",
    "copy",
    "copy a namespace prefix map",
    "copy an mloperand",
    "copy prefetch cookies",
    "copy secondary buffer",
    "copy-compatible",
    "copy-into",
    "copylink",
    "copymove",
    "coral",
    "core",
    "core attributes",
    "core media type resource",
    "core properties",
    "corner diagonal",
    "corner-shape",
    "corners",
    "cornflowerblue",
    "cornsilk",
    "correctly rounded",
    "correspond to",
    "corresponding animator instance",
    "corresponding effect",
    "corresponding element",
    "corresponding use element",
    "corrupted video frame count",
    "cors check",
    "cors filtered response",
    "cors non-wildcard request-header name",
    "cors protocol",
    "cors request",
    "cors settings attribute",
    "cors settings attribute credentials mode",
    "cors-cross-origin",
    "cors-preflight cache",
    "cors-preflight fetch",
    "cors-preflight request",
    "cors-safelisted method",
    "cors-safelisted request-header",
    "cors-safelisted response-header name",
    "cors-same-origin",
    "cors-unsafe request-header byte",
    "cors-unsafe request-header names",
    "cos()",
    "council report",
    "council team contact",
    "count map",
    "count queuing strategy size function",
    "count the records in a range",
    "counter",
    "counter properties",
    "counter scope",
    "counter style",
    "counter symbol",
    "counter()",
    "counter-increment",
    "counter-reset",
    "counter-set",
    "counters",
    "counters()",
    "country-name",
    "cover",
    "cover constraint",
    "cr",
    "crash reports",
    "crd",
    "create a 'webgpu' context on a canvas",
    "create a 2d matrix",
    "create a 3d matrix",
    "create a MediaDevices",
    "create a MediaStreamTrack",
    "create a bluetoothcharacteristicproperties instance from the characteristic",
    "create a bluetoothremotegattcharacteristic representing",
    "create a bluetoothremotegattdescriptor representing",
    "create a bluetoothremotegattservice representing",
    "create a brand-version list",
    "create a cancelable mouseevent",
    "create a channel",
    "create a chapterinformation",
    "create a classic script",
    "create a clipboarditem object",
    "create a component match result",
    "create a connection",
    "create a connection between the rp and the idp account",
    "create a constructed cssstylesheet",
    "create a context",
    "create a cookie",
    "create a cookielistitem",
    "create a cpu depth information instance",
    "create a croptarget",
    "create a cross-origin opener policy enforcement result for navigation",
    "create a css module script",
    "create a css style sheet",
    "create a cssunitvalue from a pair",
    "create a cssunitvalue from a sum value item",
    "create a date object",
    "create a dependent abort signal",
    "create a dependent task signal",
    "create a dommatrix from the 2d dictionary",
    "create a dommatrix from the dictionary",
    "create a dommatrixreadonly from the 2d dictionary",
    "create a dommatrixreadonly from the dictionary",
    "create a dompoint from the dictionary",
    "create a dompointreadonly from the dictionary",
    "create a domquad from the domquadinit dictionary",
    "create a domquad from the domrectinit dictionary",
    "create a domrect from the dictionary",
    "create a domrectreadonly from the dictionary",
    "create a fixed length memory buffer",
    "create a fixed priority unabortable task signal",
    "create a fresh top-level traversable",
    "create a frozen array",
    "create a global object",
    "create a hid report item",
    "create a hit test result",
    "create a hit test result for transient input",
    "create a hit test source",
    "create a hit test source for transient input",
    "create a host function",
    "create a javascript module script",
    "create a json module script",
    "create a key input source",
    "create a largestcontentfulpaint entry",
    "create a layout api context",
    "create a layout constraints object",
    "create a layout fragment",
    "create a legacy callback interface object",
    "create a legacy factory function",
    "create a linear easing function",
    "create a link request",
    "create a map iterator",
    "create a mediacapabilitiesdecodinginfo",
    "create a mediacapabilitiesencodinginfo",
    "create a mediaerror",
    "create a medialist object",
    "create a memory object",
    "create a named properties object",
    "create a namespace object",
    "create a navigation request",
    "create a new WebGPU object",
    "create a new animator instance",
    "create a new application context",
    "create a new auxiliary browsing context and document",
    "create a new browsing context and document",
    "create a new browsing context group and document",
    "create a new cache entry",
    "create a new child navigable",
    "create a new filesystemsyncaccesshandle",
    "create a new filesystemwritablefilestream",
    "create a new memory attribution",
    "create a new memory breakdown entry",
    "create a new memory measurement",
    "create a new nested traversable",
    "create a new realm",
    "create a new script fetcher",
    "create a new script runner agent",
    "create a new script runner realm",
    "create a new signed exchange report",
    "create a new top-level browsing context and document",
    "create a new top-level traversable",
    "create a non-cancelable mouseevent",
    "create a notification",
    "create a notification with a settings object",
    "create a notrestoredreasondetails object",
    "create a notrestoredreasons object",
    "create a null input source",
    "create a paintrenderingcontext2d object",
    "create a permissionstatus",
    "create a pointer input source",
    "create a pointerevent",
    "create a potential-cors request",
    "create a preload key",
    "create a push subscription",
    "create a quaternion from euler angles",
    "create a receiving browsing context",
    "create a reference space",
    "create a report request",
    "create a reserved client",
    "create a resizable memory buffer",
    "create a restrictiontarget",
    "create a sandbox realm",
    "create a scheduler task queue",
    "create a session",
    "create a set iterator",
    "create a shared storage bucket",
    "create a shared storage shelf",
    "create a soft navigation entry",
    "create a sorted name list",
    "create a source set",
    "create a speculative mock element",
    "create a storage bucket",
    "create a storage shelf",
    "create a sum value",
    "create a table object",
    "create a task handle",
    "create a task scope",
    "create a type from a unit map",
    "create a unified platform version string",
    "create a videoframe",
    "create a webgl depth information instance",
    "create a wheel input source",
    "create a worklet global scope",
    "create aggregatable contributions",
    "create aggregatable contributions from aggregation keys and aggregatable values",
    "create an RTCDTMFSender",
    "create an RTCDataChannel",
    "create an RTCIceCandidate",
    "create an RTCIceCandidatePair",
    "create an RTCRtpReceiver",
    "create an RTCRtpSender",
    "create an RTCRtpTransceiver",
    "create an RTCSctpTransport",
    "create an agent",
    "create an anchor from frame",
    "create an anchor from hit test result",
    "create an answer",
    "create an arbitrary brand",
    "create an arbitrary version",
    "create an attribution trigger",
    "create an element",
    "create an element for a token",
    "create an event",
    "create an exports object",
    "create an identity transformstream",
    "create an identitycredential",
    "create an import map parse result",
    "create an inheritance stack",
    "create an input source",
    "create an input state",
    "create an interface object",
    "create an interface prototype object",
    "create an internal representation",
    "create an intrinsic sizes object",
    "create an mloperand",
    "create an mloperanddescriptor",
    "create an offer",
    "create an opaque timing info",
    "create an rtcdatachannel",
    "create an rtcdtmfsender",
    "create an rtcicecandidate",
    "create an rtcrtpreceiver",
    "create an rtcrtpsender",
    "create an rtcrtptransceiver",
    "create an rtcsctptransport",
    "create and initialize a document object",
    "create and populate a resizeobserverentry",
    "create brands",
    "create camera instance",
    "create client",
    "create fetch event and dispatch",
    "create job",
    "create link options from element",
    "create mesh object",
    "create navigation params by fetching",
    "create navigation params from a prefetch record",
    "create navigation params from a srcdoc resource",
    "create ndef message",
    "create ndef record",
    "create nested configs",
    "create new anchor object",
    "create or override the cached client hints set",
    "create plane object",
    "create pointerevent from mouseevent",
    "create record objects",
    "create script entry point",
    "create the attribution",
    "create the navigation timing entry",
    "create window client",
    "create-document-policy",
    "create-for-browsingcontext",
    "create-nested-context-required-document-policy",
    "createanswer",
    "created",
    "created on",
    "createhandwritingrecognizer(constraint)",
    "createoffer",
    "createproof",
    "creating a child filesystemdirectoryhandle",
    "creating a child filesystemfilehandle",
    "creating a cookie",
    "creating a device info object",
    "creating a frozen array",
    "creating a frozen array from an iterable",
    "creating a header list from the cbor map",
    "creating a hid report item",
    "creating a list of device info objects",
    "creating a new browsing context",
    "creating a new filesystemdirectoryhandle",
    "creating a new filesystemfilehandle",
    "creating a new memory attribution",
    "creating a new memory breakdown entry",
    "creating a new memory measurement",
    "creating a new session",
    "creating a policy container from a fetch response",
    "creating a sequence from an iterable",
    "creating a sum value",
    "creating an RTCIceCandidate",
    "creating an RTCIceCandidatePair",
    "creating an answer",
    "creating an element",
    "creating an event",
    "creating an identity transformstream",
    "creating an observable array exotic object",
    "creating an offer",
    "creating an opaque timing info",
    "creating an operation function",
    "creating an rtcicecandidate",
    "creating record objects",
    "creation",
    "creation-fixed footprint",
    "creator",
    "credblob value",
    "credential",
    "credential chooser",
    "credential descriptor for a credential record",
    "credential id",
    "credential key pair",
    "credential parameters",
    "credential private key",
    "credential properties",
    "credential public key",
    "credential record",
    "credential repositories",
    "credential repository",
    "credential source",
    "credential storage modality",
    "credential store",
    "credential type examples",
    "credential verifier's",
    "credential verifiers",
    "credentialid",
    "credentialless window",
    "credentials",
    "credentials mode",
    "credentialsubject",
    "credprops",
    "credprotect value",
    "crimson",
    "critical chunk",
    "critical subresources",
    "critical-ch restart time",
    "crop bitmap data to the source rectangle with formatting",
    "crop-session target",
    "crop-states",
    "cropped",
    "cropping mechanism",
    "croptarget production",
    "cross axis",
    "cross dimension",
    "cross origin limitations",
    "cross size",
    "cross size property",
    "cross-axis",
    "cross-axis baseline set",
    "cross-context communication model",
    "cross-document messaging",
    "cross-end",
    "cross-fade()",
    "cross-origin accessible window property name",
    "cross-origin credentials",
    "cross-origin isolation mode",
    "cross-origin opener policy",
    "cross-origin opener policy enforcement result",
    "cross-origin opener policy value",
    "cross-origin prefetch ip anonymization policy",
    "cross-origin request",
    "cross-origin resource policy check",
    "cross-origin resource policy internal check",
    "cross-origin-ancestor",
    "cross-origin-descendant",
    "cross-origin-embedder-policy",
    "cross-origin-embedder-policy allows credentials",
    "cross-origin-embedder-policy-report-only",
    "cross-origin-isolated",
    "cross-origin-opener-policy",
    "cross-origin-opener-policy-report-only",
    "cross-origin-referrer request",
    "cross-origin-resource-policy",
    "cross-origin-unreachable",
    "cross-platform attachment",
    "cross-size",
    "cross-start",
    "crossorigin",
    "crossoriginget",
    "crossorigingetownpropertyhelper",
    "crossoriginownpropertykeys",
    "crossoriginproperties",
    "crossoriginpropertyfallback",
    "crossoriginset",
    "crs",
    "crush",
    "crypto",
    "cryptographic agility",
    "cryptographic layering",
    "cryptographic nonce",
    "cryptographic nonce metadata",
    "cryptographic suite",
    "cryptokey",
    "cryptokeypair",
    "cryptosuite",
    "cryptosuite instance",
    "cryptosuite instantiation algorithm",
    "cryptosuite verification result",
    "csp list",
    "csp violation report",
    "csp-derived sandboxing flags",
    "css",
    "css bracketed range notation",
    "css color profile",
    "css counters set",
    "css declaration",
    "css declaration block",
    "css feature queries",
    "css gamut map",
    "css gamut mapped",
    "css gamut mapping algorithm",
    "css grammar production block",
    "css ident sequence",
    "css layout box",
    "css level 1",
    "css level 2",
    "css level 3",
    "css level 4",
    "css link parameter",
    "css module script",
    "css property to idl attribute",
    "css qualified name",
    "css region",
    "css resources",
    "css rule",
    "css selector",
    "css style sheet",
    "css style sheet set",
    "css style sheet set name",
    "css-connected",
    "css-wide keywords",
    "cssfontfacerule",
    "cssfontfeaturevaluesrule",
    "ctap2 canonical cbor encoding form",
    "cubic bézier easing function",
    "cue",
    "cue component class names",
    "cue computed line",
    "cue computed position",
    "cue computed position alignment",
    "cue payload",
    "cue text",
    "cue-after",
    "cue-before",
    "culprit browsing context container",
    "cumulative layout shift (cls) score",
    "currency tag",
    "current",
    "current battery status information",
    "current browsing context",
    "current compositing and blending operator",
    "current context is navigation source",
    "current default path",
    "current dimension value",
    "current document",
    "current document readiness",
    "current drag operation",
    "current element queue",
    "current entry",
    "current entry index",
    "current error scope",
    "current filter",
    "current finished promise",
    "current focus chain of a top-level traversable",
    "current frame timing info",
    "current frequency data",
    "current global object",
    "current high resolution time",
    "current input character",
    "current input code point",
    "current input token",
    "current iteration",
    "current iteration index",
    "current layout",
    "current light level",
    "current minimum pin length",
    "current navigation was lazy loaded",
    "current node",
    "current parent browsing context",
    "current pixel density",
    "current playback position",
    "current posture",
    "current pressure state",
    "current queue timestamp",
    "current ready promise",
    "current request",
    "current screen",
    "current session history entry",
    "current session history step",
    "current settings object",
    "current stack trace",
    "current svg document fragment",
    "current target element",
    "current template insertion mode",
    "current text position",
    "current time-domain data",
    "current top-level browsing context",
    "current transaction automation mode",
    "current transformation matrix",
    "current transition generation",
    "current translate point object",
    "current user prompt",
    "current value",
    "current wall time",
    "currentcolor",
    "currently defined authenticatorconfig subcommands",
    "currently focused area of a top-level traversable",
    "currently logged in user",
    "currently running task",
    "currentstoredpin",
    "cursive",
    "cursive script",
    "cursor",
    "cursor position",
    "custodian",
    "custom certificate requirements",
    "custom data attribute",
    "custom effect",
    "custom element",
    "custom element constructor",
    "custom element definition",
    "custom element reaction queue",
    "custom element reactions",
    "custom element reactions stack",
    "custom function",
    "custom highlight",
    "custom highlight name",
    "custom highlight pseudo-element",
    "custom media query",
    "custom property",
    "custom property name string",
    "custom property registration",
    "custom selector",
    "custom state pseudo-class",
    "custom validity error message",
    "customized built-in element",
    "cx",
    "cy",
    "cyan",
    "cycle",
    "cyclic module record",
    "cyclic percentage size",
    "cylindrical polar color",
    "d",
    "d-entails",
    "d-interpretation",
    "d-satisfiable",
    "d-unsatisfiability",
    "d-unsatisfiable",
    "d50 whitepoint",
    "d65 whitepoint",
    "dark color scheme",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "dash list",
    "dash positions",
    "dashed",
    "data",
    "data adjustment",
    "data block",
    "data collection",
    "data integrity cryptographic suite instance",
    "data integrity cryptographic suite instantiation algorithm",
    "data integrity proof",
    "data model",
    "data stage",
    "data state",
    "data transport",
    "data type name",
    "data url",
    "data validation",
    "data-",
    "data-*",
    "data-encoding-offer",
    "data-frame",
    "data-version",
    "data: url processor",
    "data: url struct",
    "database",
    "database access task source",
    "dataerror",
    "datafld",
    "dataformatas",
    "datalist",
    "dataset isomorphism",
    "dataset-isomorphic",
    "datasrc",
    "datastream",
    "datatype",
    "datatype iri",
    "datatype map",
    "date",
    "date serialize",
    "datetime connector record",
    "datetime date range record",
    "datetime format record",
    "datetime range pattern format record",
    "datetime range pattern part record",
    "datetime range pattern record",
    "datetime style range record",
    "datetime style record",
    "datetime styles record",
    "datetime time range record",
    "datetime value",
    "daylight saving",
    "daylight saving time",
    "daylight savings time",
    "dblclick",
    "dc:contributor",
    "dc:creator",
    "dc:date",
    "dc:identifier",
    "dc:language",
    "dc:subject",
    "dc:title",
    "dc:type",
    "dcterms:modified",
    "dd",
    "de-percentify a calc-size calculation",
    "deactivate",
    "deactivate a document for a cross-document navigation",
    "deactivate a sensor object",
    "deactivate an editcontext",
    "deactivate an event handler",
    "deactivate data collection",
    "deactivated",
    "dead key",
    "debug data type",
    "debug details",
    "debug report cooldown",
    "debug report lockout until",
    "debug scope",
    "debug scope map",
    "decentralized identifier",
    "decentralized identifiers",
    "decibels to linear gain unit",
    "decimal",
    "decimal character reference start state",
    "decimal character reference state",
    "decimal floating point literal",
    "decimal-leading-zero",
    "declaration",
    "declaration block",
    "declarative custom selector",
    "declare the direct manipulation behavior",
    "declared",
    "declared origin",
    "declared playback state",
    "declared policy",
    "declared stylepropertymap",
    "declared value",
    "declaring direct manipulation behavior",
    "declination angle",
    "decode",
    "decode an additional bid json",
    "decode and enqueue a chunk",
    "decode timestamp",
    "decode track metadata",
    "decoded additional bid",
    "decoder",
    "decoding",
    "decompose",
    "decomposed",
    "decompress and enqueue a chunk",
    "decompress flush and enqueue",
    "decorated bounding box",
    "decorating box",
    "decreasing",
    "decrement statement",
    "decrypt",
    "decryption key id",
    "dedicated media source failure steps",
    "dedicated worker agent",
    "deep link",
    "deeppink",
    "deepskyblue",
    "default",
    "default `user-agent` value",
    "default action",
    "default aggregation coordinator",
    "default anchor element",
    "default anchor specifier",
    "default asynchronous iterator object",
    "default base direction",
    "default behavior",
    "default button",
    "default cache behavior",
    "default classic script fetch options",
    "default clause",
    "default control pipe",
    "default display mode",
    "default endpoint",
    "default entry lifetime",
    "default event-level attributions per source",
    "default face",
    "default fallback constant",
    "default features",
    "default fetch and process the linked resource",
    "default filtering id max bytes",
    "default filtering id value",
    "default graph",
    "default index",
    "default initial value",
    "default inline xr device",
    "default iterator object",
    "default language",
    "default max event states",
    "default maximum",
    "default method steps",
    "default microphone",
    "default minimum",
    "default mock microphone",
    "default namespace",
    "default object",
    "default object size",
    "default options",
    "default origin",
    "default passive value",
    "default permission key comparison algorithm",
    "default permission key generation algorithm",
    "default permission query algorithm",
    "default permission request algorithm",
    "default permissions",
    "default pipeline layout",
    "default playback start position",
    "default pointer parameters",
    "default port",
    "default powerful feature",
    "default presentation request",
    "default reader",
    "default reading order",
    "default referrer policy",
    "default rule thickness",
    "default screen orientation",
    "default sensor",
    "default sizing algorithm",
    "default state",
    "default step",
    "default step base",
    "default style sheet",
    "default style state",
    "default summary",
    "default theme color",
    "default tojson steps",
    "default trigger data cardinality",
    "default unlock gesture",
    "default url search variance",
    "default user context",
    "default value",
    "default value override",
    "default values for storage partition key attributes",
    "default viewport-percentage units",
    "default-alone clause",
    "default-policy-explanation",
    "default-src",
    "default/on",
    "defaultcolorspace",
    "defaultvalue",
    "define an algorithm",
    "define the asynchronous iteration methods",
    "define the attributes",
    "define the constants",
    "define the global property references",
    "define the iteration methods",
    "define the operations",
    "define the regular attributes",
    "define the regular operations",
    "define the static attributes",
    "define the static operations",
    "define the unforgeable regular attributes",
    "define the unforgeable regular operations",
    "defined property name",
    "defines",
    "defining term",
    "definite",
    "definite column position",
    "definite column span",
    "definite grid position",
    "definite grid span",
    "definite position",
    "definite row position",
    "definite row span",
    "definite size",
    "definite span",
    "definition",
    "definition of keys and values",
    "definitions",
    "deflate",
    "defs",
    "degenerate ratio",
    "degradationpreference",
    "del",
    "delaying the load event",
    "delaying-the-load-event flag",
    "delaynode",
    "delayoptions",
    "delayreader",
    "delays the load event",
    "delaywriter",
    "delegate-ch",
    "delegated_capability_timestamps",
    "delegating its rendering to its children",
    "delete a content index entry",
    "delete a cookie",
    "delete a database",
    "delete all cookies",
    "delete an anchor",
    "delete an existing named property",
    "delete cookie",
    "delete cookies",
    "delete expired sources",
    "delete records from an object store",
    "delete session",
    "delete sources for unexpired destination limit",
    "delete the content attribute",
    "deleted",
    "deleter",
    "deliver resize loop error notification",
    "delivered image",
    "delivery type",
    "delta",
    "delta traverse",
    "denies the wake lock",
    "denominator",
    "denotation",
    "denote",
    "denoted",
    "denotes",
    "density-corrected natural width and height",
    "deny a wake lock",
    "deny wake lock",
    "dependent vowel",
    "deprecate",
    "deprecated",
    "deprecates",
    "deprecation",
    "deprecation reports",
    "depth clipping",
    "depth coordinates transformation matrix",
    "depth-or-stencil format",
    "depth-sensing",
    "depthstenciltextures",
    "derive a permissions policy directly from a fenced frame config instance",
    "derive render targets layout from pass",
    "derive render targets layout from pipeline",
    "derive the accessible name",
    "derive top 5 topics",
    "derivebits",
    "derivekey",
    "deriving the accessible name",
    "desc",
    "descendant",
    "descendant combinator",
    "descendant text content",
    "descendant-selectors",
    "descent metric",
    "description",
    "descriptions",
    "descriptive element",
    "descriptor",
    "descriptors",
    "deserialization steps",
    "deserialize a serialized abort reason",
    "deserialize a shadow root",
    "deserialize a web element",
    "deserialize a web frame",
    "deserialize a web window",
    "deserialize arguments",
    "deserialize as a page load strategy",
    "deserialize as a proxy",
    "deserialize as an unhandled prompt behavior",
    "deserialize as timeouts configuration",
    "deserialize filter",
    "deserialize header",
    "deserialize key-value list",
    "deserialize local value",
    "deserialize primitive protocol value",
    "deserialize protocol bytes",
    "deserialize protocol messages",
    "deserialize remote object reference",
    "deserialize remote reference",
    "deserialize shared reference",
    "deserialize value list",
    "design mode enabled",
    "design space segment",
    "design_width",
    "designated resource",
    "designates",
    "desired size to fill a stream's internal queue",
    "desktop focus",
    "desktop focus event",
    "desktop focus events",
    "destination",
    "destination browsing context",
    "destination limit record",
    "destination node",
    "destination rate-limit result",
    "destination rate-limit window",
    "destination-atop",
    "destination-in",
    "destination-out",
    "destination-over",
    "destinationshe",
    "destinationurl",
    "destroy",
    "destroy a child navigable",
    "destroy a document and its descendants",
    "destroy a top-level traversable",
    "desynchronized",
    "detached",
    "detached shadow root",
    "detaching from a media element",
    "details",
    "details name group",
    "details notification task steps",
    "details of touch-action values",
    "details toggle task tracker",
    "detect phrase boundaries",
    "detect word boundaries",
    "detecting phrase boundaries",
    "detecting word boundaries",
    "detector curve",
    "determine a field's category",
    "determine a signal's numeric value",
    "determine eligibility for an associated site",
    "determine if DTMF can be sent",
    "determine if a performance entry buffer is full",
    "determine if a randomized null attribution report is generated",
    "determine if a report should be sent deterministically",
    "determine if a request has top-level storage access",
    "determine if an origin is an aggregation coordinator",
    "determine if dtmf can be sent",
    "determine navigation params policy container",
    "determine nosniff",
    "determine remaining navigation budget",
    "determine reporting budget to charge",
    "determine request's referrer",
    "determine the active editcontext",
    "determine the creation sandboxing flags",
    "determine the device pixel ratio",
    "determine the fallback encoding",
    "determine the http cache partition",
    "determine the intrinsic sizes",
    "determine the ip address space",
    "determine the layout attribute",
    "determine the maximum scalefactor",
    "determine the member type",
    "determine the network partition key",
    "determine the origin",
    "determine the point on an ellipse steps",
    "determine the position fallback styles",
    "determine the preflight mode",
    "determine the purpose of an image",
    "determine the scroll-into-view position",
    "determine the start page",
    "determine the target of an event handler",
    "determine the type of a calculation",
    "determine the used color scheme",
    "determine the value of a named property",
    "determine the value of an indexed property",
    "determine whether a base element should be blocked by Scripting Policy",
    "determine whether a plugin element should be blocked by Scripting Policy",
    "determine whether a request can currently use shared storage",
    "determine whether a script element should be blocked by Scripting Policy",
    "determine whether an event handler be blocked by Scripting Policy",
    "determine whether associating an issuer would exceed the top-level limit",
    "determine whether shared storage is allowed by context",
    "determine whether the user agent explicitly allows unpartitioned cookie access",
    "determine-compatibility",
    "determines the set of origins on which the public key credential may be exercised",
    "determining the start page",
    "deterministic operation timeout duration",
    "device",
    "device address",
    "device administrator",
    "device change notification steps",
    "device coordinate system",
    "device descriptor",
    "device discovery procedure",
    "device enumeration can proceed",
    "device information can be exposed",
    "device motion and orientation task source",
    "device permission revocation algorithm",
    "device pixel",
    "device pixel ratio overrides",
    "device posture change steps",
    "device private key",
    "device prompt",
    "device prompt id",
    "device public key",
    "device public key attestation object",
    "device sensor",
    "device timeline",
    "device timeline property",
    "device-bound key",
    "device-cmyk()",
    "device-pixel-ratio",
    "device-posture",
    "device-timeline example term",
    "device_type",
    "devicechange",
    "devicecompat",
    "deviceid",
    "devicepubkey",
    "devolvable",
    "devolvable widget",
    "devolved",
    "devolved widget",
    "dfn",
    "diagnostic",
    "diagnostic filter",
    "diagnostic name-token",
    "dialog",
    "dialog focusing steps",
    "dice",
    "dictionary",
    "dictionary members",
    "dictionary types",
    "did",
    "did-perform-automatic-track-selection",
    "dids",
    "differs significantly",
    "digest",
    "digestmultibase",
    "digit",
    "digital credential",
    "digital publication",
    "digital publication's",
    "digital publications",
    "digital signature",
    "digital signatures",
    "digitizer",
    "dimension",
    "dimension attribute source",
    "dimension attributes",
    "dimgray",
    "dimgrey",
    "dir",
    "direct from seller signals",
    "direct from seller signals key",
    "direct individualization",
    "direct manipulation",
    "direct manipulation behavior",
    "directed progress",
    "direction",
    "direction at the end of a path segment",
    "direction at the start of a path segment",
    "direction mapping",
    "direction of a path",
    "direction of playback",
    "direction-agnostic size",
    "directional embedding",
    "directional keyword",
    "directional language-tagged string",
    "directional override",
    "directionality",
    "directionality of an attribute",
    "directionality-capable attributes",
    "directionally scroll an element",
    "directionally scroll the element",
    "directionless",
    "directive",
    "directive state",
    "directive-name",
    "directive-value",
    "directives",
    "directly associated with an animation",
    "directory",
    "directory entry",
    "directory id",
    "directory locator",
    "dirtiness",
    "dirty checkedness",
    "dirty checkedness flag",
    "dirty value flag",
    "disable internals",
    "disable remote playback",
    "disabled",
    "disabled fieldset",
    "disabled state",
    "disallow further import maps",
    "disassociate animator instance of worklet animation",
    "disc",
    "discard",
    "discard tokens",
    "discarded",
    "dischargingtimechange",
    "disclosure",
    "disclosure requests",
    "disclosure requirement",
    "disconnect",
    "disconnect endpoint",
    "disconnect from a remote playback device",
    "disconnected crop-session target",
    "discontinued draft",
    "discover all characteristic descriptors",
    "discover characteristics by uuid",
    "discover primary service by service uuid",
    "discoverable",
    "discoverable credential",
    "discoverable credential capable",
    "discoverable mode",
    "discoverablecredentialmetadata",
    "discrete",
    "disentangle",
    "dismiss",
    "dismiss alert",
    "dismissal",
    "dismissed",
    "dismisses",
    "dispatch",
    "dispatch a composition event",
    "dispatch a keydown action",
    "dispatch a keyup action",
    "dispatch a list of actions",
    "dispatch a pause action",
    "dispatch a pointercancel action",
    "dispatch a pointerdown action",
    "dispatch a pointermove action",
    "dispatch a pointerup action",
    "dispatch a scroll action",
    "dispatch actions",
    "dispatch actions for a string",
    "dispatch actions inner",
    "dispatch character bounds update event",
    "dispatch command",
    "dispatch error",
    "dispatch nfc content",
    "dispatch pending event timing entries",
    "dispatch size",
    "dispatch text format update event",
    "dispatch text update event",
    "dispatch the event",
    "dispatch the events for a typeable string",
    "dispatch tick actions",
    "dispatches navbeforefocus event",
    "dispatches navnotarget event",
    "dispatching navbeforefocus event",
    "dispatching navnotarget event",
    "display",
    "display frame rate",
    "display mode",
    "display modes list",
    "display name",
    "display no plugin",
    "display size",
    "display state",
    "display surface",
    "display surfaces",
    "display technology",
    "display type",
    "display-surface",
    "displayed document",
    "displayoperatorminheight",
    "displaystyle",
    "displaysurface",
    "disregarding",
    "dissent",
    "distance",
    "distance along the ray",
    "distance fraction",
    "distinctive",
    "distinctive identifier",
    "distinctive identifier(s)",
    "distinctive permanent identifier",
    "distinctive permanent identifier(s)",
    "distinctive value",
    "distinguishable",
    "distinguishing argument index",
    "distribute extra space",
    "distributed alignment",
    "distributed meeting",
    "distributed width",
    "distributing excess width to columns",
    "distribution list",
    "div",
    "dl",
    "dn-unfenced",
    "dns resolution",
    "dnt",
    "dnt:0",
    "dnt:1",
    "do bytes match metadatalist?",
    "do not apply",
    "do-not-sell-or-share interaction",
    "do-not-sell-or-share preference",
    "doctype",
    "doctype legacy string",
    "doctype name",
    "doctype name state",
    "doctype public identifier (double-quoted) state",
    "doctype public identifier (single-quoted) state",
    "doctype state",
    "doctype system identifier (double-quoted) state",
    "doctype system identifier (single-quoted) state",
    "doctype.name",
    "document",
    "document `accept` header value",
    "document animator definition",
    "document animator definitions",
    "document base url",
    "document character set",
    "document cumulative layout shift (dcls) score",
    "document element",
    "document has implicit focus",
    "document language",
    "document layout definition",
    "document layout definitions",
    "document load timing",
    "document load timing info",
    "document open steps",
    "document order",
    "document paint definition",
    "document paint definitions",
    "document picture-in-picture support",
    "document policy",
    "document policy directive",
    "document rule conjunction",
    "document rule css selector predicate",
    "document rule disjunction",
    "document rule negation",
    "document rule predicate",
    "document rule url pattern predicate",
    "document state",
    "document time space",
    "document timeline",
    "document tree",
    "document unload timing info",
    "document white space",
    "document white space characters",
    "document write steps",
    "document's body element",
    "document-policy",
    "document-policy-report-only",
    "document-scoped view transition name",
    "document-tree child navigable target name property set",
    "document-tree child navigables",
    "dodgerblue",
    "does filter data match",
    "does not contain background fetch",
    "does url match expression in origin with redirect count?",
    "doesn't match the stored exchange",
    "dom anchor",
    "dom interface",
    "dom manipulation task source",
    "dom tree accessors",
    "dom-domparser",
    "dom-domparser-parsefromstring",
    "dom-element-innerhtml",
    "dom-element-insertadjacenthtml",
    "dom-element-outerhtml",
    "dom-range-createcontextualfragment",
    "dom-xmlserializer",
    "dom-xmlserializer-serializetostring",
    "domactivate",
    "domain",
    "domain label",
    "domain to ascii",
    "domain to unicode",
    "domain-invalid-code-point",
    "domain-to-ascii",
    "domain-to-unicode",
    "domattrmodified",
    "domcharacterdatamodified",
    "domexception",
    "domexception names table",
    "domfocusin",
    "domfocusout",
    "dominant baseline",
    "dominant-baseline",
    "domnodeinserted",
    "domnodeinsertedintodocument",
    "domnoderemoved",
    "domnoderemovedfromdocument",
    "domstring",
    "domsubtreemodified",
    "dotted",
    "double",
    "double-dot url path segment",
    "down",
    "down-mixing",
    "downlinkmax for an available interface",
    "download the hyperlink",
    "draft note",
    "draft registry",
    "drag and drop",
    "drag data store",
    "drag data store allowed effects state",
    "drag data store bitmap",
    "drag data store default feedback",
    "drag data store hot spot coordinate",
    "drag data store item list",
    "drag data store mode",
    "draggable region",
    "draggable regions",
    "draw a bounding box from the framebuffer",
    "draw a paint image",
    "draw command",
    "draw focus if needed",
    "drawing",
    "drawing model",
    "drawing states",
    "dropped entries count",
    "dropped initial",
    "dropped video frame count",
    "dropzone",
    "dt",
    "dtend",
    "dtmf playout task steps",
    "dtstart",
    "duplex printing",
    "duplex stream",
    "duplicate-attribute",
    "duration",
    "duration change",
    "duration from",
    "duration time component",
    "duration time component scale",
    "during-loading navigation id for webdriver bidi",
    "dynamic context",
    "dynamic error",
    "dynamic markup insertion",
    "dynamic range",
    "dynamic statement instance",
    "dynamic viewport size",
    "dynamic viewport-percentage units",
    "dynamic-range-limit",
    "dynamic-range-limit-mix()",
    "dynamicscompressornode",
    "dynamicscompressoroptions",
    "eager",
    "eager page loading strategy",
    "ean-13",
    "earliest possible position",
    "earliest possible position when the script started",
    "early error result",
    "early hints",
    "earth's reference coordinate system",
    "easing function",
    "ecdh",
    "ecdh curve name",
    "ecdh derivation steps",
    "ecdh generation steps",
    "ecdh key export steps",
    "ecdh key import steps",
    "ecdhkeyderiveparams",
    "ecdsa curve name",
    "ecdsa generation steps",
    "ecdsa key export steps",
    "ecdsa key import steps",
    "ecdsa signature steps",
    "ecdsa verification steps",
    "ecdsaparams",
    "echocancellation",
    "eckeyalgorithm",
    "eckeygenparams",
    "eckeyimportparams",
    "ect",
    "ed",
    "editable",
    "editable context",
    "editable element",
    "editcontext editing host",
    "editcontext-handled inputtype",
    "editing host",
    "editor draft",
    "editor's draft",
    "editorial change",
    "effect",
    "effect stack",
    "effect value",
    "effective automation rate",
    "effective buffer binding size",
    "effective character map",
    "effective connection type",
    "effective connection types",
    "effective directive value",
    "effective domain",
    "effective frame rate",
    "effective minimum sync interval for origin",
    "effective overload set",
    "effective playback rate",
    "effective position of the legacy mouse pointer",
    "effective resident key requirement for credential creation",
    "effective source list",
    "effective transformation matrix",
    "effective user verification requirement for assertion",
    "effective user verification requirement for credential creation",
    "effective visual size",
    "effective zoom",
    "effective-value-type",
    "eight-bit decimal value",
    "elapsed time",
    "elected groups",
    "element",
    "element clear",
    "element click",
    "element click intercepted",
    "element contents",
    "element count",
    "element definition",
    "element definition is running",
    "element displayed state",
    "element has the focus",
    "element instance",
    "element interface",
    "element location strategy",
    "element not interactable",
    "element queue",
    "element send keys",
    "element stride",
    "element type",
    "element with default preferred size",
    "element's",
    "element()",
    "element-not-rendered",
    "element.localname",
    "element.namespaceuri",
    "element.prefix",
    "element::following",
    "element::preceding",
    "elementcontenteditable",
    "elements",
    "elements from point",
    "elements with default margins",
    "elevated permissions",
    "elevation",
    "eligibility",
    "eligible feed links",
    "eligible for autoplay",
    "eligible for messaging",
    "eligible for restriction",
    "eligible for same-party membership when embedded within",
    "eligible key",
    "eligible to be largest contentful paint",
    "eligible track",
    "ellipse",
    "ellipse method steps",
    "elliptic curve diffie-hellman",
    "em",
    "em (unit)",
    "em-over baseline",
    "em-under baseline",
    "email",
    "embed",
    "embed task source",
    "embedded accessible name",
    "embedded content",
    "embedded context",
    "embedded document",
    "embedded flag",
    "embedded proof",
    "embedded watch action",
    "embedder policy",
    "embedder policy value",
    "embedding",
    "embedding custom non-visible data",
    "embedding document",
    "embedding-csp",
    "embellished operator",
    "emergency",
    "emit a context created event",
    "emit a script message",
    "emit an event",
    "emit soft navigation entry",
    "emoji presentation participating code points",
    "empty",
    "empty cell",
    "empty crop-session target",
    "empty graph",
    "empty host",
    "empty import map",
    "empty metadata",
    "empty permissions policy",
    "empty record",
    "empty string",
    "empty table",
    "empty user context",
    "empty-cells",
    "emulated native anchors",
    "enable a css style sheet set",
    "enable directive",
    "enable-extension",
    "enable_pull_down_refresh",
    "enabled",
    "enabled css style sheet set",
    "enabled for",
    "encapsulation contexts",
    "encode",
    "encode a canvas as base64",
    "encode a canvas as base64 a canvas element",
    "encode an integer for the payload",
    "encode an unsigned k-byte integer",
    "encode and enqueue a chunk",
    "encode and flush",
    "encode or fail",
    "encode trusted signals keys",
    "encoder",
    "encoder state",
    "encoding",
    "encoding a canvas as base64",
    "encoding callback",
    "encoding declaration state",
    "encoding sniffing algorithm",
    "encoding-parse a url",
    "encoding-parse-and-serialize a url",
    "encrypt",
    "encrypt the payload",
    "encrypted",
    "encrypted block encountered",
    "encrypted-media",
    "encrypteddata",
    "encryptedkey",
    "encryption",
    "enctype",
    "end any settled transaction",
    "end collection tag",
    "end delay",
    "end of iteration",
    "end of stream",
    "end page value",
    "end tag open state",
    "end tags",
    "end the session",
    "end the transaction",
    "end time",
    "end-of-queue",
    "end-tag-with-attributes",
    "end-tag-with-trailing-solidus",
    "ended",
    "ended playback",
    "ending edges",
    "ending point",
    "ending shape",
    "ending token",
    "endpoint",
    "endpoint descriptor",
    "endpoint group",
    "endpoint node",
    "endpoint pair",
    "endpoint-on-the-path",
    "endpoints",
    "ends for any reason other than the stop() method being invoked",
    "ends in a number checker",
    "endstreaming",
    "enforce a response's cross-origin opener policy",
    "enforced",
    "enforcement",
    "enough data to ensure uninterrupted playback",
    "enough managed data to ensure uninterrupted playback",
    "enqueue a custom element callback reaction",
    "enqueue a custom element upgrade reaction",
    "enqueue an element on the appropriate element queue",
    "enqueues a control message",
    "ensure an immersive xr device is selected",
    "ensure details exclusivity by closing other elements if needed",
    "ensure details exclusivity by closing the given element if needed",
    "ensure there is a subpath",
    "ensurecspdoesnotblockstringcompilation(realm, parameterstrings, bodystring, codestring, compilationtype, parameterargs, bodyarg)",
    "ensurecspdoesnotblockwasmbytecompilationrealm",
    "entailment",
    "entailment regime",
    "entails recognizing d",
    "entangle",
    "enterprise",
    "enterprise attestation capable",
    "enterprise attestation is disabled",
    "enterprise attestation is enabled",
    "enterprise context",
    "entities",
    "entity",
    "entity's",
    "entries",
    "entries to be queued",
    "entry",
    "entry construction algorithm",
    "entry execution context",
    "entry global object",
    "entry list",
    "entry point",
    "entry realm",
    "entry settings object",
    "entry value",
    "entrymaprecord",
    "entrytype",
    "enumerant",
    "enumerate all devices attached to the system",
    "enumerate immersive xr devices",
    "enumerated attribute",
    "enumeration",
    "enumeration types",
    "enumeration value",
    "enumeration's values",
    "env()",
    "envelopefollower",
    "enveloping proof",
    "environment",
    "environment discarding steps",
    "environment encoding",
    "environment settings object",
    "eof code point",
    "eof-before-tag-name",
    "eof-in-cdata",
    "eof-in-comment",
    "eof-in-doctype",
    "eof-in-script-html-comment-like-text",
    "eof-in-tag",
    "eotf",
    "epatt",
    "epsilon",
    "epub conformance checker",
    "epub container",
    "epub content document",
    "epub creator",
    "epub manifest",
    "epub navigation document",
    "epub publication",
    "epub reading system",
    "epub reading systems",
    "epub spine",
    "epub:type",
    "epubreadingsystem",
    "equal dictionaries",
    "equal numeric value",
    "equal to",
    "equivalence",
    "equivalence map",
    "equivalent",
    "equivalent modulo search variance",
    "equivalent opaque format",
    "equivalent path",
    "equivalent texel representation",
    "equivalent to",
    "equivalent to an empty string",
    "equivalent token sequence",
    "erase all event listeners and handlers",
    "errata",
    "erratum",
    "error",
    "error code",
    "error data",
    "error mode",
    "error reporting steps",
    "error response",
    "error response data",
    "error to rethrow",
    "escapable raw text elements",
    "escape a character",
    "escape a character as code point",
    "escape a pattern string",
    "escape a regexp string",
    "escape the vcard text string",
    "escaped as code point",
    "escaping",
    "escaping a string",
    "essential claims",
    "establish a close watcher",
    "establish a connection with the remote playback device",
    "establish a presentation connection",
    "establish a websocket connection",
    "establish an independent formatting context",
    "establish an orthogonal flow",
    "established an independent formatting context",
    "establishes an independent formatting context",
    "establishing an independent formatting context",
    "establishing the media timeline",
    "estimated floor level",
    "estimated monotonic time of the unix epoch",
    "euc-jp",
    "euc-jp decoder",
    "euc-jp encoder",
    "euc-jp jis0212",
    "euc-jp lead",
    "euc-kr",
    "euc-kr decoder",
    "euc-kr encoder",
    "euc-kr lead",
    "european digits",
    "evaluate a bidding script",
    "evaluate a custom function",
    "evaluate a javascript: url",
    "evaluate a key path on a value",
    "evaluate a path",
    "evaluate a reporting script",
    "evaluate a scoring script",
    "evaluate a script",
    "evaluate function body",
    "evaluate media queries and report changes",
    "evaluating a selector",
    "event",
    "event attribute",
    "event constructing steps",
    "event enabled navigables",
    "event focus",
    "event handler",
    "event handler content attribute",
    "event handler event type",
    "event handler idl attribute",
    "event is enabled",
    "event listener",
    "event loop",
    "event loop processing model",
    "event target",
    "event type",
    "event-level report",
    "event-level report cache",
    "event-level trigger configuration",
    "event-level-report-replacement result",
    "events",
    "eventual snap target",
    "ever populated",
    "evidence",
    "evidence of user interaction",
    "ex (unit)",
    "exact matching",
    "example term",
    "examples",
    "examples of these types",
    "exceeds the binding slot limits",
    "exception",
    "exception objects",
    "exceptionsenabled",
    "excess width",
    "exchange",
    "exchange mtu",
    "exchange record",
    "exchange signature",
    "excluded subtree",
    "excluding input",
    "exclusion area",
    "exclusion box",
    "exclusion draft",
    "exclusion draft charter",
    "exclusion element",
    "exclusion opportunity",
    "exclusive access",
    "exclusive text node",
    "exdate",
    "execute a file handler launch",
    "execute a function body",
    "execute async script",
    "execute graph",
    "execute script",
    "execute the script element",
    "execution scope",
    "execution-while-not-rendered",
    "execution-while-out-of-viewport",
    "executioncontexts",
    "exempt resource",
    "exit fullscreen",
    "exit picture-in-picture algorithm",
    "exit pointer lock",
    "exit value",
    "exp()",
    "expand a storage partition spec",
    "expandable separators",
    "expanded",
    "expanded document form",
    "expanded form",
    "expanded name",
    "expanded term definition",
    "expanded transition property name",
    "expanding",
    "expansion",
    "experimental flexible event support",
    "expiration",
    "expiration time",
    "expire",
    "expired",
    "expires",
    "explicit \"eof\" character",
    "explicit column span",
    "explicit consent",
    "explicit grid",
    "explicit grid column",
    "explicit grid properties",
    "explicit grid row",
    "explicit grid span",
    "explicit grid track",
    "explicit inclusion flag",
    "explicit intrinsic inner size",
    "explicit row span",
    "explicit span",
    "explicitchar",
    "explicitly enabled",
    "explicitly set attr-element",
    "explicitly set attr-elements",
    "explicitly supported json mime type",
    "explicitly supported xml mime type",
    "explicitly-assigned line name",
    "exported function",
    "exported function cache",
    "exportkey",
    "expose",
    "expose a user interface to the user",
    "expose legacy touch event apis",
    "exposed",
    "exposed for paint timing",
    "exposing hardware is allowed",
    "exposure",
    "exposure compensation",
    "exposure decision algorithm for devices other than camera and microphone",
    "exposure set",
    "exposure set intersection",
    "exposure time",
    "express intention",
    "express permission",
    "expression",
    "expressions",
    "extended attribute",
    "extended grapheme cluster",
    "extended inquiry response",
    "extended language range",
    "extended navigation",
    "extended real",
    "extended-address",
    "extension",
    "extension capabilities",
    "extension capability",
    "extension command uri template",
    "extension commands",
    "extension identifier",
    "extension modules",
    "extension sensor interface",
    "extension specification",
    "extension storage partition key attributes",
    "extension-token",
    "extensions",
    "extensions to the predefined set of link types",
    "extensions to the predefined set of metadata names",
    "extern value cache",
    "external",
    "external application resource",
    "external application resource's",
    "external file reference",
    "external label",
    "external resource link",
    "external source dimensions",
    "external type",
    "external type name",
    "external type record",
    "extract a byte sequence",
    "extract a four-bit decimal value",
    "extract a key from a value using a key path",
    "extract a marked token",
    "extract a six-bit decimal value",
    "extract a source map url from a webassembly source",
    "extract a source map url from javascript through parsing",
    "extract a source map url from javascript without parsing",
    "extract an action sequence",
    "extract any vcard data represented by those nodes",
    "extract any vevent data represented by those nodes",
    "extract challenges",
    "extract container element attributes",
    "extract content-range values",
    "extract error information",
    "extract header list values",
    "extract header values",
    "extract links from headers",
    "extract the json fetch response",
    "extract the locale",
    "extract the microdata from those nodes into a json form",
    "extract the script arguments from a request",
    "extract the start page from manifest",
    "extract the start page from uri",
    "extractable",
    "extracting container element attributes",
    "extracting content-range values",
    "extracting header list values",
    "extracting header values",
    "extracting the fallback url",
    "extracting the locale",
    "extracting the start page from manifest",
    "extracting the start page from uri",
    "extrinsic sizing",
    "f16",
    "f32",
    "face-to-face meeting",
    "facets",
    "facing pages",
    "facingmode",
    "factor",
    "factory method",
    "fail",
    "fail the connection",
    "failed",
    "failed to load",
    "failover class",
    "failure reason",
    "failure sampling rate",
    "failure_fraction",
    "failures",
    "fake worklet 1",
    "fake worklet 2",
    "fakeworklet1",
    "fakeworklet2",
    "fallback",
    "fallback adapter",
    "fallback alignment",
    "fallback base url",
    "fallback chain",
    "fallback content",
    "fallback size",
    "false",
    "false in the negative range",
    "false-by-default",
    "familiar with",
    "family-name",
    "fantasy",
    "far away from the viewport",
    "farthest-side",
    "fatal error",
    "fatal errors",
    "fax",
    "feasible automatic conversion",
    "featural syllabary",
    "feature",
    "feature descriptor",
    "feature map",
    "feature requirements",
    "feature separator",
    "feature tag",
    "feature-identifier",
    "featureless",
    "featurerecord",
    "feblend",
    "fecolormatrix",
    "fecomponenttransfer",
    "fecomposite",
    "feconvolvematrix",
    "fediffuselighting",
    "fedisplacementmap",
    "fedistantlight",
    "fedropshadow",
    "feflood",
    "fefunca",
    "fefuncb",
    "fefuncg",
    "fefuncr",
    "fegaussianblur",
    "feimage",
    "femerge",
    "femergenode",
    "femorphology",
    "fenced frame config",
    "fenced frame config instance",
    "fenced frame config mapping",
    "fenced navigable containers",
    "fenced-frame-src",
    "fencedframe",
    "feoffset",
    "fepointlight",
    "fespecularlighting",
    "fespotlight",
    "fetch",
    "fetch a classic script",
    "fetch a classic worker script",
    "fetch a classic worker-imported script",
    "fetch a css style sheet",
    "fetch a font",
    "fetch a module worker script graph",
    "fetch a modulepreload module script graph",
    "fetch a single imported module script",
    "fetch a single module script",
    "fetch a style resource",
    "fetch a worklet script graph",
    "fetch a worklet/module worker script graph",
    "fetch accounts step",
    "fetch an @import",
    "fetch an external color profile",
    "fetch an external image for a stylesheet",
    "fetch an external module script graph",
    "fetch an external resource for a shape",
    "fetch an identity assertion",
    "fetch an inline module script graph",
    "fetch and decode trusted scoring signals",
    "fetch and process the linked resource",
    "fetch client",
    "fetch controller",
    "fetch destination from module type",
    "fetch directives",
    "fetch image algorithm",
    "fetch index",
    "fetch metadata headers",
    "fetch params",
    "fetch payment method manifests",
    "fetch priority",
    "fetch priority attribute",
    "fetch request",
    "fetch response handover",
    "fetch scheme",
    "fetch script",
    "fetch steps",
    "fetch the account picture",
    "fetch the accounts",
    "fetch the client metadata",
    "fetch the config file",
    "fetch the current outstanding trusted signals batch",
    "fetch the descendants of and link",
    "fetch the web app manifest for a default payment app",
    "fetch timing info",
    "fetch trusted signals",
    "fetch webassembly",
    "fetching an image resource",
    "fetile",
    "feturbulence",
    "fictional tag sequence",
    "fido interfaces",
    "field that blocks implicit submission",
    "field-based formats",
    "field-based time format",
    "field-name",
    "field-sizing",
    "fieldset",
    "figcaption",
    "figure",
    "file",
    "file entry",
    "file extension",
    "file handler",
    "file locator",
    "file name",
    "file names",
    "file path",
    "file read error",
    "file reading task source",
    "file system",
    "file system access result",
    "file system entry",
    "file system locator",
    "file system path",
    "file system queue",
    "file system root",
    "file type",
    "file type guidelines",
    "file-invalid-windows-drive-letter",
    "file-invalid-windows-drive-letter-host",
    "filelock",
    "filename",
    "fill",
    "fill in a pending fenced frame config",
    "fill in the contribution",
    "fill in the signal value",
    "fill light mode",
    "fill mode",
    "fill painting area",
    "fill positioning area",
    "fill rule",
    "fill steps",
    "fill style",
    "fill-break",
    "fill-color",
    "fill-image",
    "fill-opacity",
    "fill-origin",
    "fill-position",
    "fill-repeat",
    "fill-rule",
    "fill-size",
    "filled",
    "filter",
    "filter buffer by name and type",
    "filter buffer map by name and type",
    "filter config",
    "filter map",
    "filter method",
    "filter primitive",
    "filter primitive attributes",
    "filter primitive subregion",
    "filter primitive tree",
    "filter region",
    "filter value",
    "filter()",
    "filter-primitive",
    "filterable",
    "filterable format",
    "filtered response",
    "final sample mask",
    "final sandboxing flag set",
    "final steps to create an answer",
    "final steps to create an offer",
    "finalize",
    "finalize a cross-document navigation",
    "finalize a reporting destination",
    "finalize a same-document navigation",
    "finalize event timing",
    "finalize focus decision algorithm",
    "find",
    "find a list of configuration descriptors for the connected usb device",
    "find a list of descriptors for a configuration",
    "find a list of endpoint descriptors",
    "find a matching complete prefetch record",
    "find a matching complete prerender record",
    "find a matching trigger spec",
    "find a potential indicated element",
    "find a range from a node list",
    "find a range from a text directive",
    "find a related website set",
    "find a slot",
    "find a string in range",
    "find client hint value",
    "find element",
    "find element from element",
    "find element from shadow root",
    "find elements",
    "find elements from element",
    "find elements from shadow root",
    "find flattened slottables",
    "find focusable areas",
    "find if the interface is claimed",
    "find matching ad",
    "find matching links",
    "find matching sources",
    "find slottables",
    "find sources with common destinations and reporting origin",
    "find supported configuration combination",
    "find the alternate index",
    "find the alternate interface for the current alternate setting",
    "find the current configuration",
    "find the device descriptor for the connected usb device",
    "find the endpoint",
    "find the endpoint descriptor",
    "find the interface index",
    "find the intersecting or enclosed descendants",
    "find the matching font faces",
    "find the non-container graphics elements",
    "find the opposite of true",
    "find the shortest distance",
    "find the topmost auto popover",
    "find the typographic character for a character",
    "find-in-page",
    "find-in-page interface",
    "finding a slot",
    "finding flattened slottables",
    "finding focusable areas",
    "finding slottables",
    "finding the shortest distance",
    "fingerprint",
    "fingerprinting surface",
    "fingerprints",
    "finish",
    "finish an animation",
    "finish event",
    "finish job",
    "finish notification steps",
    "finish()",
    "finished",
    "finished promise",
    "fire a background fetch click event",
    "fire a blob event",
    "fire a buffer full event",
    "fire a change event",
    "fire a clipboard event",
    "fire a content delete event",
    "fire a dnd event",
    "fire a download request navigate event",
    "fire a focus event",
    "fire a font load event",
    "fire a functional event",
    "fire a layoutchange event",
    "fire a page transition event",
    "fire a periodicsync event",
    "fire a pointer event",
    "fire a progress event",
    "fire a push/replace/reload navigate event",
    "fire a selectionchange event",
    "fire a service worker notification event",
    "fire a success event",
    "fire a sync event",
    "fire a track event",
    "fire a traverse navigate event",
    "fire a version change event",
    "fire an advertisementreceived event",
    "fire an error event",
    "fire an event",
    "fire an input source event",
    "fire an orientation event",
    "fire functional event",
    "fire the \"pushsubscriptionchange\" event",
    "fire the pageswap event",
    "firebrick",
    "firefoxplatform",
    "firefoxversion",
    "firing",
    "firing a click event",
    "firing a synthetic pointer event named e",
    "firing a track event named e",
    "firing submission events",
    "first available font",
    "first baseline set",
    "first baselines",
    "first common ancestor",
    "first contentful paint",
    "first cross-axis baseline set",
    "first formatted line",
    "first letter",
    "first main-axis baseline set",
    "first paint",
    "first party",
    "first public working draft",
    "first symbol value",
    "first-baseline alignment",
    "first-baseline content-alignment",
    "first-baseline self-alignment",
    "first-child",
    "first-factor roaming authenticator",
    "first-letter",
    "first-letter text",
    "first-line",
    "first-party-site context",
    "first-person observer view",
    "first-strong detection",
    "first-valid()",
    "fit-content block size",
    "fit-content inline size",
    "fit-content size",
    "fitness distance",
    "fixed footprint",
    "fixed position",
    "fixed positioning containing block",
    "fixed sizing function",
    "fixed-layout document",
    "fixed-positioned",
    "fixed-positioned box",
    "fixed-size array",
    "flagged as full",
    "flags data type",
    "flat tree",
    "flattened",
    "flattened document form",
    "flattened element tree",
    "flattened tabindex-ordered focus navigation scope",
    "flattening",
    "flex",
    "flex base size",
    "flex container",
    "flex direction",
    "flex factor",
    "flex factor sum",
    "flex formatting context",
    "flex fraction",
    "flex item",
    "flex layout",
    "flex line",
    "flex space",
    "flex-basis",
    "flex-direction",
    "flex-flow",
    "flex-grow",
    "flex-level",
    "flex-shrink",
    "flex-wrap",
    "flexible",
    "flexible length",
    "flexible sizing function",
    "flexible tracks",
    "float",
    "float anchor",
    "float area",
    "float block formatting context",
    "float containing block formatting context",
    "float reference",
    "float rules",
    "float-defer",
    "float-offset",
    "float-reference",
    "floating point literal",
    "floating times",
    "flood-color",
    "flood-opacity",
    "floor",
    "floor expression",
    "floor value",
    "floralwhite",
    "flow content",
    "flow fragment height",
    "flow layout",
    "flow of an element",
    "flow-from",
    "flow-into",
    "flow-relative",
    "flow-relative direction",
    "flush and enqueue",
    "flush autofocus candidates",
    "flush code points consumed as a character reference",
    "flush to zero",
    "fn",
    "focus",
    "focus (pseudo-class)",
    "focus and origin check",
    "focus chain",
    "focus changed during ongoing navigation",
    "focus delegate",
    "focus distance",
    "focus mode",
    "focus navigation scope",
    "focus navigation scope owner",
    "focus reset behavior",
    "focus ring",
    "focus state",
    "focus update steps",
    "focus-unfenced",
    "focusable",
    "focusable area",
    "focused",
    "focused area of the document",
    "focusin",
    "focusing steps",
    "focusout",
    "follow the hyperlink",
    "following element",
    "font",
    "font block period",
    "font document",
    "font download timer",
    "font failure period",
    "font feature value declaration",
    "font mime type",
    "font patch",
    "font representation",
    "font source",
    "font specific",
    "font style source object",
    "font subset",
    "font subset definition",
    "font swap period",
    "font task source",
    "font type pattern matching algorithm",
    "font-family",
    "font-feature-settings",
    "font-kerning",
    "font-language-override",
    "font-optical-sizing",
    "font-palette",
    "font-relative lengths",
    "font-size",
    "font-size-adjust",
    "font-src",
    "font-stretch",
    "font-style",
    "font-synthesis",
    "font-synthesis-position",
    "font-synthesis-small-caps",
    "font-synthesis-style",
    "font-synthesis-weight",
    "font-variant",
    "font-variant-alternates",
    "font-variant-caps",
    "font-variant-east-asian",
    "font-variant-emoji",
    "font-variant-ligatures",
    "font-variant-numeric",
    "font-variant-position",
    "font-variation-settings",
    "font-weight",
    "font-width",
    "fontface",
    "footer",
    "footnote",
    "footnote counter",
    "footnote-display",
    "footnote-policy",
    "forbidden domain code point",
    "forbidden host code point",
    "forbidden method",
    "forbidden request-header",
    "forbidden response-header name",
    "force async",
    "force sample",
    "force-quirks flag",
    "forced break",
    "forced break values",
    "forced colors mode",
    "forced line break",
    "forced paragraph break",
    "forced-color-adjust",
    "forcibly close",
    "fordebuggingonly reports",
    "foreign content document",
    "foreign elements",
    "foreign resource",
    "foreignobject",
    "forestgreen",
    "forget the media element's media-resource-specific tracks",
    "forgiving-base64 decode",
    "forgiving-base64 encode",
    "form",
    "form element pointer",
    "form submission",
    "form-action",
    "form-associated",
    "form-associated custom element",
    "form-associated elements",
    "form_factor",
    "formal objection",
    "formal parameter",
    "formally addressed",
    "format 1 patch map",
    "format 2 patch map",
    "formatting",
    "formatting context",
    "formatting structure",
    "formdataentrylist",
    "forward",
    "forward-compatible parsing",
    "forwards",
    "foster parenting",
    "found",
    "found a suitable namespace prefix",
    "four-bit decimal value",
    "fraction line thickness",
    "fractiondenomdisplaystylegapmin",
    "fractiondenominatordisplaystyleshiftdown",
    "fractiondenominatorgapmin",
    "fractiondenominatorshiftdown",
    "fractionnumdisplaystylegapmin",
    "fractionnumeratordisplaystyleshiftup",
    "fractionnumeratorgapmin",
    "fractionnumeratorshiftup",
    "fractionrulethickness",
    "fragment",
    "fragment box",
    "fragment case",
    "fragment coordinates",
    "fragment directive",
    "fragment directive delimiter",
    "fragment identifier",
    "fragment identifiers",
    "fragment parsing algorithm steps",
    "fragment percent-encode set",
    "fragment pseudo-element",
    "fragment serializing algorithm steps",
    "fragment shader stage",
    "fragmentainer",
    "fragmentation",
    "fragmentation break",
    "fragmentation container",
    "fragmentation context",
    "fragmentation direction",
    "fragmentation root",
    "fragmentdestination",
    "fragmentdirective",
    "fragmented flow",
    "frame",
    "frame border color",
    "frame buffer",
    "frame object",
    "frame requested flag",
    "frame timing info",
    "frame update",
    "frame-ancestors",
    "frame-current",
    "frame-requested",
    "frame-src",
    "framebuffer",
    "framebuffer coordinates",
    "framebuffer memory",
    "framed document form",
    "framerate",
    "frames",
    "frameset",
    "frameset-ok flag",
    "framework",
    "framing",
    "framing keywords",
    "framing state",
    "free space",
    "freely fragmentable",
    "freeze steps",
    "fresh response",
    "friend",
    "from an external file",
    "from entry",
    "front-facing",
    "frozen",
    "frozen array of supported entry types",
    "frozen array type",
    "frozen base url",
    "fuchsia",
    "fulfill",
    "fulfilled",
    "fulfillment",
    "full assignment",
    "full conformance",
    "full glyph cell",
    "full invalidation",
    "full path",
    "full pointer",
    "full reference",
    "full wildcard regexp value",
    "full-range image",
    "full-width",
    "fullscreen",
    "fullscreen an element",
    "fullscreen element",
    "fullscreen element ready check",
    "fullscreen flag",
    "fullscreen is supported",
    "fullscreen window",
    "fullscreen window state",
    "fullscreen-feature",
    "fullwidth",
    "fullwidth closing punctuation",
    "fullwidth colon punctuation",
    "fullwidth dot punctuation",
    "fullwidth middle dot punctuation",
    "fullwidth opening punctuation",
    "fully addressed",
    "fully clipped",
    "fully decodable",
    "fully elaborated",
    "fully exit fullscreen",
    "fully inflexible",
    "fully transparent black",
    "fully unlock the screen orientation steps",
    "fully visible",
    "function body",
    "function call",
    "function declaration",
    "function dependency",
    "function key",
    "function parameter",
    "function scope",
    "function section",
    "function tag",
    "functional keys",
    "functional notation",
    "functional pseudo-class",
    "functional pseudo-element",
    "functions in a shader stage",
    "furthest ancestral svg viewport",
    "fwd_distance",
    "g",
    "ga",
    "gain focus",
    "gainnode",
    "gainoptions",
    "gainsboro",
    "gamepad",
    "gamepad task source",
    "gamepad user gesture",
    "gamepadconnected",
    "gamepaddisconnected",
    "gamepadhapticactuator",
    "gamma",
    "gamma encoding",
    "gamma value",
    "gamut",
    "gamut-map",
    "gap",
    "gap interoperability requirements",
    "garbage-collect the connection",
    "gather active observations at depth",
    "gather active resize observations at depth",
    "gatt",
    "gatt assigned characteristics",
    "gatt assigned descriptors",
    "gatt assigned services",
    "gatt blocklist",
    "gatt client",
    "gatt procedure",
    "gatt procedures",
    "gatt profile hierarchy",
    "gatt server",
    "gb18030",
    "gb18030 decoder",
    "gb18030 encoder",
    "gb18030 first",
    "gb18030 second",
    "gb18030 third",
    "gbk",
    "gbk decoder",
    "gbk encoder",
    "geckoversion",
    "gender-identity",
    "general category",
    "general discovery procedure",
    "general json-ld processing",
    "generalized rdf (rdfs) closure",
    "generalized rdf dataset",
    "generalized rdf graph",
    "generalized rdf triple",
    "generate a change password url",
    "generate a counter",
    "generate a counter representation",
    "generate a fragment",
    "generate a key",
    "generate a network report",
    "generate a new blob url",
    "generate a pattern string",
    "generate a prefix",
    "generate a random uuid",
    "generate a regular expression and name list",
    "generate a report",
    "generate a report url",
    "generate a segment wildcard regexp",
    "generate a tiggering event url",
    "generate a validation error",
    "generate a verbose debug report url",
    "generate all implied end tags thoroughly",
    "generate an aggregatable debug report url",
    "generate an attribution report url",
    "generate an id",
    "generate an internal error",
    "generate an out-of-memory error",
    "generate and queue a report",
    "generate and score bids",
    "generate baselines",
    "generate implied end tags",
    "generate key frame algorithm",
    "generate masked tokens",
    "generate null attribution reports",
    "generate potentially multiple bids",
    "generate test report",
    "generate the internal representation",
    "generateassertioncallback",
    "generated",
    "generated bid",
    "generated code",
    "generated content",
    "generated namespace prefix index",
    "generatekey",
    "generates an anonymous <mrow> box",
    "generating a new blob url",
    "generating a prefix",
    "generating a uuid",
    "generating authenticator",
    "generation",
    "generator-unable-to-provide-required-alt",
    "generic attribute profile",
    "generic javascript object formatting",
    "generic raw text element parsing algorithm",
    "generic rcdata element parsing algorithm",
    "generic sensor permission revocation algorithm",
    "geo",
    "geolocation",
    "geolocation reading parsing algorithm",
    "geolocation sensor",
    "geolocation task source",
    "geolocation virtual sensor type",
    "geometry properties",
    "georgian",
    "get",
    "get Trusted Types-compliant attribute value",
    "get a backgroundfetchregistration instance",
    "get a copy of the buffer source",
    "get a copy of the bytes held by the buffer source",
    "get a copy of the image contents of a context",
    "get a debug details",
    "get a document layout definition",
    "get a domstringmap's name-value pairs",
    "get a final encoding",
    "get a final mime type",
    "get a frame id",
    "get a known element",
    "get a known shadow root",
    "get a layout child",
    "get a layout class instance",
    "get a layout definition",
    "get a navigable",
    "get a node",
    "get a permission store entry",
    "get a platform sensor's sampling bounds",
    "get a pointer id",
    "get a promise to wait for all",
    "get a prompt",
    "get a realm",
    "get a realm from a navigable",
    "get a realm from a target",
    "get a response mime type",
    "get a safe token",
    "get a sandbox name",
    "get a session id for a websocket resource",
    "get a stack id",
    "get a style map",
    "get a virtual pressure source",
    "get a webelement origin",
    "get action url",
    "get active element",
    "get alert text",
    "get all agent clusters",
    "get all cookies",
    "get all navigables that might experience a cross-document traversal",
    "get all navigables that only need history object length/index update",
    "get all navigables whose current session history entry will change or reload",
    "get all system font representations",
    "get all used history steps",
    "get an attribute",
    "get an attribute by name",
    "get an attribute by namespace and local name",
    "get an attribute value",
    "get an element id",
    "get an element's noopener",
    "get an element's target",
    "get an eligibility from attributionreportingrequestoptions",
    "get an encoder",
    "get an encoding",
    "get an input source",
    "get an output encoding",
    "get an xml encoding",
    "get boundary point at index",
    "get client lifecycle state",
    "get computed label",
    "get computed role",
    "get configuration",
    "get consent status",
    "get coordinates relative to an origin",
    "get credentials",
    "get current interaction data",
    "get current task",
    "get current task id",
    "get current url",
    "get deadline time",
    "get descendant topics",
    "get descriptor",
    "get direct from seller signals",
    "get direct from seller signals for a buyer",
    "get direct from seller signals for a seller",
    "get element attribute",
    "get element css value",
    "get element from input.elementorigin steps",
    "get element origin",
    "get element property",
    "get element rect",
    "get element shadow root",
    "get element tag name",
    "get element text",
    "get exception details",
    "get frame type",
    "get matching cookies",
    "get named cookie",
    "get newest worker",
    "get or create a batching scope",
    "get or create a node reference",
    "get or create a sandbox realm",
    "get or create a shadow root reference",
    "get or create a web element reference",
    "get or create an input source",
    "get or expire a bucket",
    "get os registrations from a header value",
    "get page source",
    "get registration",
    "get registration info from a header list",
    "get related navigables",
    "get router source",
    "get session history entries",
    "get session history entries for the navigation api",
    "get shared id for a node",
    "get sources to delete for the unexpired destination limit",
    "get supported capabilities for audio/video type",
    "get supported configuration",
    "get supported configuration and consent",
    "get supported registrars",
    "get text content",
    "get the \"all\"-indexed element",
    "get the \"all\"-indexed or named element(s)",
    "get the \"all\"-named element(s)",
    "get the active user prompt",
    "get the automatic beacon data mapping to use",
    "get the bluetoothdevice representing",
    "get the canonical url string if valid",
    "get the child navigables",
    "get the content attribute",
    "get the cookie store",
    "get the current permission state",
    "get the current value of the event handler",
    "get the descendant script fetch options",
    "get the element",
    "get the entry point",
    "get the fetch timings",
    "get the focusable area",
    "get the global key state",
    "get the history object length and index",
    "get the initiator",
    "get the input state",
    "get the legacy windows version number",
    "get the lock request queue",
    "get the login status",
    "get the navigable",
    "get the navigable info",
    "get the navigation api entry index",
    "get the navigation info",
    "get the network intercepts",
    "get the next code point",
    "get the next iteration result",
    "get the notifications permission state",
    "get the number of distinct versions in epochs",
    "get the object",
    "get the origin rectangle",
    "get the parent",
    "get the parent navigable",
    "get the platform version",
    "get the privateaggregation",
    "get the prompt handler",
    "get the protocol",
    "get the realm info",
    "get the registration platform",
    "get the request data",
    "get the response content info",
    "get the response data",
    "get the runnable task queues",
    "get the select-url result index",
    "get the service worker object",
    "get the service worker registration object",
    "get the source",
    "get the string value",
    "get the supported loading modes",
    "get the target history entry",
    "get the text steps",
    "get the used step",
    "get the worker's owners",
    "get time origin timestamp",
    "get timeouts",
    "get title",
    "get unique urls",
    "get url",
    "get user context",
    "get uuid from string",
    "get valid values for colorscheme",
    "get valid values for contrast",
    "get valid values for reduceddata",
    "get valid values for reducedmotion",
    "get valid values for reducedtransparency",
    "get value from latest reading",
    "get window handle",
    "get window handles",
    "get window rect",
    "get-policy-value",
    "getUserMedia specific failure is allowed",
    "getdisplaymedia prompt result",
    "getgattchildren",
    "getglobalvalue",
    "getprioritizedhashfunction",
    "getprioritizedhashfunction(a, b)",
    "getrandomvalues",
    "getter",
    "getter steps",
    "getting a backgroundfetchregistration instance",
    "getting a promise to wait for all",
    "getting a property",
    "getting a property with default",
    "getting a text response",
    "getting all agent clusters",
    "getting allowed signed exchange link info",
    "getting alternate signed exchange link info",
    "getting an encoder",
    "getting an encoding",
    "getting properties",
    "getting the current permission state",
    "getting the endpoint attribute",
    "getting the expirationtime attribute",
    "getting the locator",
    "getting the property",
    "getting the property with default",
    "getting the service worker object",
    "getting the service worker registration object",
    "getusermedia prompt result",
    "ghostwhite",
    "given-name",
    "global",
    "global alpha",
    "global animation list",
    "global attributes",
    "global data checks",
    "global date and time",
    "global diagnostic filter",
    "global duration",
    "global identifier",
    "global invocation id",
    "global items",
    "global key state",
    "global names",
    "global object",
    "global object cache",
    "global set of availability callbacks",
    "global type",
    "global view transition user agent style sheet",
    "globalcrypto",
    "glyph",
    "glyph assembly ascent",
    "glyph assembly descent",
    "glyph assembly height",
    "glyph assembly stretch size",
    "glyph assembly width",
    "glyph closure",
    "glyph keyed patch",
    "glyph map",
    "glyph modifier key",
    "glyph-midline",
    "glyph-orientation-vertical",
    "glyphpatches",
    "go",
    "gold",
    "goldenrod",
    "gossip path",
    "gpcatnavigation",
    "gpu command",
    "gpu error scope",
    "gpucomputepipeline",
    "gpurenderpipeline",
    "gradient box",
    "gradient element",
    "gradient function",
    "gradient line",
    "gradient-average-color",
    "grantable",
    "graph",
    "graph isomorphism",
    "graph name",
    "graph object",
    "grapheme",
    "grapheme cluster",
    "graphical document",
    "graphical documents",
    "graphics element",
    "graphics referencing element",
    "graphs",
    "gravity",
    "gravity sensor",
    "gravity virtual sensor type",
    "gray",
    "graytext",
    "grdfd1",
    "greater than",
    "green",
    "greenyellow",
    "gregorian calendar",
    "grey",
    "grey sample",
    "greyscale",
    "greyscale with alpha",
    "grid",
    "grid area",
    "grid axis",
    "grid cell",
    "grid column",
    "grid column line",
    "grid container",
    "grid formatting context",
    "grid item",
    "grid item placement algorithm",
    "grid layout",
    "grid layout algorithm",
    "grid line",
    "grid order",
    "grid placement",
    "grid position",
    "grid row",
    "grid row line",
    "grid sizing algorithm",
    "grid span",
    "grid track",
    "grid-area",
    "grid-auto-columns",
    "grid-auto-flow",
    "grid-auto-rows",
    "grid-column",
    "grid-column-end",
    "grid-column-gap",
    "grid-column-start",
    "grid-gap",
    "grid-level",
    "grid-modified document order",
    "grid-placement property",
    "grid-row",
    "grid-row-end",
    "grid-row-gap",
    "grid-row-start",
    "grid-template",
    "grid-template-areas",
    "grid-template-columns",
    "grid-template-rows",
    "groove",
    "ground",
    "group",
    "group alignment",
    "group decision",
    "group effect",
    "group note",
    "group stack",
    "group-align",
    "group-aligned",
    "group-equivalent",
    "group_count_x",
    "group_count_y",
    "group_count_z",
    "grouped",
    "groupid",
    "grouping elements",
    "groups",
    "grow the memory buffer",
    "growth limit",
    "guaranteed-invalid value",
    "guessed playback state",
    "guidelines for exposing cues",
    "gutter",
    "gyroscope",
    "gyroscope virtual sensor type",
    "h1",
    "h2",
    "h3",
    "h4",
    "h5",
    "h6",
    "half-leading",
    "half-width",
    "halfwidth",
    "hand-off to external software",
    "handle",
    "handle a connection closing",
    "handle a redeem response",
    "handle a shared-storage-write response",
    "handle ad auction signals header value",
    "handle an incoming message",
    "handle an input promise in configuration",
    "handle an issue response",
    "handle any user prompts",
    "handle attribute changes",
    "handle close events",
    "handle closing the readable stream",
    "handle closing the tcpserversocket readable stream",
    "handle closing the tcpsocket readable stream",
    "handle closing the tcpsocket writable stream",
    "handle closing the udpsocket readable stream",
    "handle closing the udpsocket writable stream",
    "handle closing the writable stream",
    "handle content codings",
    "handle errors",
    "handle event callback",
    "handle fetch",
    "handle fetch task source",
    "handle for an object",
    "handle functional event task source",
    "handle input for editcontext",
    "handle media session action",
    "handle native mouse click",
    "handle native mouse double click",
    "handle native mouse down",
    "handle native mouse move",
    "handle native mouse up",
    "handle object map",
    "handle response end-of-body",
    "handle service worker client unload",
    "handle topics response",
    "handle transition frame",
    "handle user agent shutdown",
    "handlenewframe",
    "handler",
    "handler key",
    "handling a canmakepaymentevent",
    "handling a paymentrequestevent",
    "handling a protocol launch",
    "handling document loss of full activity",
    "handling document loss of visibility",
    "handling the certificate reference",
    "handwriting recognizer",
    "hang",
    "hanging baseline",
    "hanging glyph",
    "hanging-punctuation",
    "hard",
    "hard iron distortion",
    "hardware-bound device key pair",
    "has a border",
    "has a flag",
    "has a home tab",
    "has a new tab button",
    "has a protected interface class",
    "has a reversed range",
    "has a runnable task",
    "has a style sheet that is blocking scripts",
    "has active observations",
    "has active resize observations",
    "has an attribute",
    "has been revealed",
    "has been scrolled by the user",
    "has been shipped",
    "has block-level display",
    "has change in data",
    "has default method steps",
    "has dispatched input event",
    "has dispatched scroll event",
    "has entries and events disabled",
    "has focus steps",
    "has no style sheet that is blocking scripts",
    "has not shifted",
    "has proxy configuration",
    "has range limitations",
    "has scheduled selectionchange event",
    "has shifted",
    "has skipped observations",
    "has skipped resize observations",
    "has system focus",
    "has transient activation",
    "hash",
    "hash algorithm",
    "hash to blank nodes map",
    "hash-algo",
    "hash-algorithm",
    "hash-expression",
    "hash-source",
    "hash-with-options",
    "hashalgorithmidentifier",
    "hashing",
    "hashing algorithm",
    "have a particular element in button scope",
    "have a particular element in list item scope",
    "have a particular element in scope",
    "have a particular element in select scope",
    "have a particular element in table scope",
    "have a periodic domain",
    "have a runnable task",
    "have an element target node in a specific scope",
    "have default method steps",
    "hdr",
    "hdr headroom",
    "hdr10 static metadata",
    "hdr10+ metadata",
    "hdr10+ metadata obu",
    "head",
    "head element pointer",
    "header",
    "header errors debug data type",
    "header list",
    "header name",
    "header policy",
    "header value",
    "header-name cache entry match",
    "headers guard",
    "heading content",
    "heading level",
    "headings",
    "height",
    "helper invocation",
    "hex color",
    "hex color notation",
    "hex digit",
    "hexadecimal character reference start state",
    "hexadecimal character reference state",
    "hexadecimal floating point literal",
    "hexadecimal representation",
    "hgroup",
    "hid blocklist",
    "hid device task source",
    "hid interface",
    "hid usages",
    "hidden",
    "hidden annotation",
    "hidden ruby annotation",
    "hidden state",
    "hidden until found",
    "hide",
    "hide a popover",
    "hide all popovers until",
    "hierarchically correct main element",
    "high",
    "high boundary",
    "high dynamic range",
    "high water mark",
    "high word",
    "high-entropy client hint",
    "high-level",
    "high_bitdepth",
    "highest end timestamp",
    "highlight",
    "highlight overlay",
    "highlight pseudo-element",
    "highlight registry",
    "highlighttext",
    "hint",
    "historical agent cluster key map",
    "historical bytes",
    "history handling behavior",
    "history object",
    "history policy container",
    "history-action activation",
    "history-action activation-consuming api",
    "historyhandling",
    "hit test",
    "hit-test",
    "hit-testing",
    "hkdfparams",
    "hlg",
    "hmac key export steps",
    "hmac key import steps",
    "hmacimportparams",
    "hmackeyalgorithm",
    "hmackeygenparams",
    "holder",
    "holder's",
    "holders",
    "holders'",
    "home",
    "home document",
    "home sequential focus navigation order",
    "home tab context",
    "home_tab",
    "honeydew",
    "honor user preferences for automatic text track selection",
    "honorific-prefix",
    "honorific-suffix",
    "horizontal axis",
    "horizontal block flow",
    "horizontal dimension",
    "horizontal script",
    "horizontal typographic mode",
    "horizontal writing mode",
    "horizontal-only",
    "host",
    "host and optional port",
    "host browsing context",
    "host element",
    "host interfaces",
    "host language",
    "host parser",
    "host parsing",
    "host serializer",
    "host syntax",
    "host-char",
    "host-including inclusive ancestor",
    "host-invalid-code-point",
    "host-missing",
    "host-part",
    "host-part match",
    "host-shareable",
    "host-source",
    "hostcalljobcallback",
    "hostenqueuefinalizationregistrycleanupjob",
    "hostenqueuegenericjob",
    "hostenqueuepromisejob",
    "hostenqueuetimeoutjob",
    "hostensurecanaddprivateelement",
    "hostensurecancompilestrings",
    "hostgetcodeforeval",
    "hostgetimportmetaproperties",
    "hostgetsupportedimportattributes",
    "hostloadimportedmodule",
    "hostmakejobcallback",
    "hostname",
    "hostname options",
    "hostname pattern is an ipv6 address",
    "hostpromiserejectiontracker",
    "hostsystemutcepochnanoseconds",
    "hotpink",
    "hover (pseudo-class)",
    "hr",
    "href",
    "hsl()",
    "hsla()",
    "hsts-safe origin",
    "html",
    "html character reference in annotation state",
    "html character reference in data state",
    "html document",
    "html element insertion steps",
    "html element removing steps",
    "html elements",
    "html fragment parsing algorithm",
    "html fragment serialization algorithm",
    "html integration point",
    "html mime type",
    "html namespace",
    "html parser",
    "html resource",
    "html resources",
    "html script extraction",
    "html-ns",
    "htmldocument",
    "htmlmediaelement",
    "http compliant",
    "http fetch",
    "http flag",
    "http header layer division",
    "http newline byte",
    "http quoted-string token code point",
    "http session",
    "http tab or space",
    "http tab or space byte",
    "http token code point",
    "http whitespace",
    "http whitespace byte",
    "http(s) scheme",
    "http-default-style",
    "http-network fetch",
    "http-network-or-cache fetch",
    "http-no-service-worker fetch",
    "http-redirect fetch",
    "http://microformats.org/profile/hcalendar#vevent",
    "http://microformats.org/profile/hcard",
    "http://n.whatwg.org/work",
    "human palatability",
    "hwb()",
    "hyperbolic angle",
    "hyperlink",
    "hyperlink annotations",
    "hyperlink auditing",
    "hyperlinksuffix",
    "hyphen-separated matching",
    "hyphenate",
    "hyphenate-character",
    "hyphenate-limit-chars",
    "hyphenate-limit-last",
    "hyphenate-limit-lines",
    "hyphenate-limit-zone",
    "hyphenation",
    "hyphenation opportunity",
    "hyphens",
    "hypot()",
    "hypothetical cross size",
    "hypothetical fr size",
    "hypothetical main size",
    "hysteresis",
    "i",
    "i/o queue",
    "i18n",
    "i18n directory",
    "i32",
    "iana language subtag registry",
    "ibm866",
    "ice agent",
    "ice candidate pool size",
    "ice connection state",
    "ice gathering state",
    "ice servers list",
    "ice transports setting",
    "icecast header",
    "icon",
    "icon purposes",
    "icon purposes list",
    "icon record",
    "iconify the window",
    "icons",
    "ictcp",
    "id",
    "id field",
    "id length field",
    "id map",
    "id selector",
    "idempotent",
    "ident code point",
    "ident sequence",
    "ident-start code point",
    "identified",
    "identified with",
    "identifier",
    "identifier counter",
    "identifier issuer",
    "identifier prefix",
    "identifiers",
    "identifies",
    "identify",
    "identity",
    "identity assertion endpoint",
    "identity resolving key",
    "identity transform",
    "identity transform function",
    "identity transform stream",
    "identity-credentials-get",
    "ideograph",
    "ideographic-ink-over baseline",
    "ideographic-ink-under baseline",
    "ideographic-over baseline",
    "ideographic-under baseline",
    "ideographs",
    "idl attribute name to animation property name",
    "idl attribute to css property",
    "idl fragment",
    "idl-exposed autofill value",
    "idle callback identifier",
    "idle detection task source",
    "idle period",
    "idp",
    "idref",
    "if aborted",
    "if()",
    "iframe",
    "iframe fullscreen flag",
    "iframe load event steps",
    "iframe load in progress",
    "iframe sandboxing flag set",
    "ignore",
    "ignore higher-layer caching",
    "ignore namespace definition attribute",
    "ignore unknown",
    "ignore valid",
    "ignore-destructive-writes counter",
    "ignored",
    "ignorelist",
    "iirfilternode",
    "iirfilteroptions",
    "ijam",
    "il field",
    "ill-typed",
    "illegal",
    "illuminance",
    "illuminance reading parsing algorithm",
    "illuminance rounding multiple",
    "illuminance threshold value",
    "image",
    "image candidate string",
    "image copy",
    "image data",
    "image decoding hint",
    "image format-based selection",
    "image height",
    "image map",
    "image mime type",
    "image request",
    "image resolution",
    "image resource",
    "image source",
    "image type pattern matching algorithm",
    "image width",
    "image()",
    "image(width, height)",
    "image-orientation",
    "image-rendering",
    "image-rendering rectangle",
    "image-resolution",
    "image-set()",
    "image/gif",
    "image/jpeg",
    "image/png",
    "image/svg+xml",
    "imagebitmaprenderingcontext creation algorithm",
    "imagecopytexture physical subresource size",
    "images pending rendering",
    "ime",
    "img",
    "img-src",
    "immediate pipeline creation",
    "immediate user selection",
    "immediately",
    "immersive session",
    "immersive session request is allowed",
    "immersive xr device",
    "immutable property",
    "immutable value example term",
    "impact fraction",
    "impact region",
    "implementation",
    "implementation-check an object",
    "implementation-defined",
    "implementation-defined memory measurement",
    "implements",
    "implicit anchor element",
    "implicit column span",
    "implicit consent",
    "implicit grid",
    "implicit grid column",
    "implicit grid lines",
    "implicit grid properties",
    "implicit grid row",
    "implicit grid span",
    "implicit grid track",
    "implicit pointer capture",
    "implicit release of pointer capture",
    "implicit row span",
    "implicit signals",
    "implicit span",
    "implicitly convert a duration to a timestamp",
    "implicitly named graph",
    "implicitly potentially render-blocking",
    "implicitly release the pointer capture",
    "implicitly releasing pointer capture",
    "implicitly-assigned line name",
    "implicitly-named area",
    "implied document",
    "implied event loop",
    "import conditions",
    "import map",
    "import map authoring requirements",
    "import map parse result",
    "import maps allowed",
    "import scripts into worker global scope",
    "important",
    "importattribute record",
    "importentry record",
    "importkey",
    "imports",
    "impp",
    "in",
    "in a document",
    "in a document tree",
    "in a formal activation state",
    "in auto mode",
    "in body",
    "in caption",
    "in cell",
    "in collapsed-borders mode",
    "in column group",
    "in effect",
    "in fixed mode",
    "in flow",
    "in foreign content",
    "in frameset",
    "in head",
    "in head noscript",
    "in parallel",
    "in play",
    "in row",
    "in scope",
    "in select",
    "in select in table",
    "in separated-borders mode",
    "in table",
    "in table body",
    "in table text",
    "in template",
    "in the background",
    "in the context of a shadow tree",
    "in the context of the shadow tree",
    "in the future",
    "in the past",
    "in the previous frame",
    "in the top layer",
    "in transfers",
    "in view",
    "in-band outline",
    "in-bounds index",
    "in-flow",
    "in-gamut",
    "in-parallel steps to create an answer",
    "in-parallel steps to create an offer",
    "in-view center point",
    "inactive",
    "inactive codec",
    "inactive timeline",
    "inactiveborder",
    "inactivecaption",
    "inactivecaptiontext",
    "inappropriate for a control",
    "include credentials",
    "include_subdomains",
    "included block",
    "included service",
    "includes a nullable type",
    "includes credentials",
    "includes statement",
    "includes undefined",
    "inclusion criteria",
    "inclusive-dn-unfenced",
    "inconsistency",
    "inconsistent",
    "incorrectly-closed-comment",
    "incorrectly-opened-comment",
    "increase interaction count",
    "increasing",
    "increment a winning bid's k-anonymity count",
    "increment ad k-anonymity count",
    "increment component ad k-anonymity count",
    "increment k-anonymity count",
    "increment reporting id k-anonymity count",
    "increment statement",
    "increment the marquee current loop index",
    "incremental font",
    "incremental time",
    "incremental webvtt parser",
    "incrementally-read loop",
    "incumbent",
    "incumbent global object",
    "incumbent realm",
    "incumbent settings object",
    "indefinite",
    "indefinite column span",
    "indefinite grid span",
    "indefinite row span",
    "indefinite size",
    "indefinite span",
    "independent formatting context",
    "independent vowel",
    "indeterminate value",
    "index",
    "index big5",
    "index big5 pointer",
    "index code point",
    "index euc-kr",
    "index gb18030",
    "index gb18030 ranges",
    "index gb18030 ranges code point",
    "index gb18030 ranges pointer",
    "index handle",
    "index iso-2022-jp katakana",
    "index jis0208",
    "index jis0212",
    "index map",
    "index mapping",
    "index of the host function",
    "index pointer",
    "index shift_jis pointer",
    "index single-byte",
    "indexed properties",
    "indexed property getter",
    "indexed property setter",
    "indexed-color",
    "indexing",
    "indexing expression",
    "indianred",
    "indicate focus",
    "indicated part",
    "indicates",
    "indigo",
    "indirect dispatch parameters",
    "indirect draw parameters",
    "indirect drawindexed parameters",
    "indirection",
    "indistinguishable by user agent string",
    "individual",
    "individualization",
    "inert",
    "infinitely growable",
    "info",
    "infobackground",
    "inform the navigation api about aborting navigation",
    "inform the navigation api about child navigable destruction",
    "informative",
    "infotext",
    "ingest payment method manifests",
    "inherent vowel",
    "inherit",
    "inherit counters",
    "inherit its getter",
    "inherit-by-default",
    "inheritance",
    "inherited dictionaries",
    "inherited from",
    "inherited interfaces",
    "inherited ns",
    "inherited policy for a feature",
    "inherited property",
    "inherited time",
    "inherited value",
    "initial",
    "initial containing block",
    "initial float reference",
    "initial free space",
    "initial letter",
    "initial letter box",
    "initial objects",
    "initial point",
    "initial representation for the counter value",
    "initial scroll position",
    "initial scroll target",
    "initial serialized large-blob array",
    "initial url",
    "initial value",
    "initial viewport",
    "initial-letter",
    "initial-letter-align",
    "initial-letter-wrap",
    "initial-window-credentialless",
    "initial_presentation_delay_minus_one",
    "initial_presentation_delay_present",
    "initialinsertion",
    "initialization data",
    "initialization data encountered",
    "initialization data type",
    "initialization segment",
    "initialization segment received",
    "initialize a Document's Scripting Policy",
    "initialize a cylinder layer",
    "initialize a equirect layer",
    "initialize a global object",
    "initialize a global object's Scripting Policy",
    "initialize a global's endpoint list",
    "initialize a memory object",
    "initialize a mouseevent",
    "initialize a new intersectionobserver",
    "initialize a performanceentry",
    "initialize a pointerevent",
    "initialize a quad layer",
    "initialize a response",
    "initialize a sensor object",
    "initialize a table object",
    "initialize a uievent",
    "initialize a worker global scope's policy container",
    "initialize an active buffer mapping",
    "initialize an imagedata object",
    "initialize an instance object",
    "initialize axes",
    "initialize buttons",
    "initialize event timing",
    "initialize pointerlock attributes for mouseevent",
    "initialize tcpserversocket readable stream",
    "initialize tcpsocket readable stream",
    "initialize tcpsocket writable stream",
    "initialize the navigable",
    "initialize the navigation api entries for a new document",
    "initialize the nested traversable",
    "initialize the render state",
    "initialize the session",
    "initialize the tcpserversocket readable stream",
    "initialize the tcpsocket readable stream",
    "initialize the tcpsocket writable stream",
    "initialize the udpsocket readable stream",
    "initialize the udpsocket writable stream",
    "initialize the underlying source",
    "initialize the viewport",
    "initialize udpsocket readable stream",
    "initialize udpsocket writable stream",
    "initialize webtransport over http",
    "initializing",
    "initializing axes",
    "initializing buttons",
    "initiate remote playback",
    "initiate the drag-and-drop operation",
    "initiator",
    "initiator origin",
    "initiator type",
    "initiators of active picture-in-picture sessions",
    "inject a key into a value using a key path",
    "injection sink",
    "ink line-ascent",
    "ink line-descent",
    "ink overflow",
    "ink overflow area",
    "ink overflow rectangle",
    "ink overflow region",
    "ink-over baseline",
    "ink-under baseline",
    "inline",
    "inline axis",
    "inline base direction",
    "inline block",
    "inline block box",
    "inline box",
    "inline check",
    "inline clip crosser",
    "inline dimension",
    "inline documentation for external scripts",
    "inline elements",
    "inline end",
    "inline float",
    "inline formatting context",
    "inline initial letter",
    "inline initial letter box",
    "inline layout",
    "inline offset",
    "inline session",
    "inline session request is allowed",
    "inline size",
    "inline start",
    "inline stretch size constraint",
    "inline xr device",
    "inline-axis",
    "inline-base direction",
    "inline-block",
    "inline-end",
    "inline-level",
    "inline-level box",
    "inline-level boxes",
    "inline-level content",
    "inline-level element",
    "inline-level elements",
    "inline-size",
    "inline-size containment",
    "inline-sizing",
    "inline-start",
    "inline-table",
    "inlinification",
    "inlinify",
    "inner block size",
    "inner display type",
    "inner edge",
    "inner event creation steps",
    "inner height",
    "inner inline size",
    "inner invoke",
    "inner navigate event firing algorithm",
    "inner size",
    "inner text shadows",
    "inner width",
    "innermost",
    "input",
    "input activation behavior",
    "input audioparam buffer",
    "input blank node identifier map",
    "input buffer",
    "input byte stream",
    "input cancel list",
    "input dataset",
    "input datasets",
    "input document",
    "input frame",
    "input id",
    "input method editor",
    "input progress value",
    "input source",
    "input state",
    "input state map",
    "input stream",
    "input tag",
    "input-security",
    "inputreport",
    "inputs",
    "ins",
    "insecure certificate",
    "insecure requests policy",
    "insecure tls certificates",
    "insert",
    "insert a character",
    "insert a comment",
    "insert a css rule",
    "insert a foreign element",
    "insert a token",
    "insert adjacent",
    "insert an element at the adjusted insertion location",
    "insert an html element",
    "insert children",
    "insert entries to map",
    "inserted into a document",
    "insertion mode",
    "insertion point",
    "insertion steps",
    "inset",
    "inset properties",
    "inset-area",
    "inset-area grid",
    "inset-block",
    "inset-block-end",
    "inset-block-start",
    "inset-inline",
    "inset-inline-end",
    "inset-inline-start",
    "inset-modified containing block",
    "inside",
    "inside area",
    "install",
    "installability signal",
    "installation",
    "installed",
    "installed app",
    "installed apps",
    "installed font fallback",
    "installed web application",
    "installing",
    "instance",
    "instance root",
    "instance with respect to",
    "instant scroll",
    "instantiate a config",
    "instantiate a promise of a module",
    "instantiate counter",
    "instantiate the core of a webassembly module",
    "integer",
    "integer literal",
    "integer scalar",
    "integer types",
    "integrity",
    "integrity metadata",
    "integrity-metadata",
    "intended direction",
    "intended direction and end position",
    "intended end position",
    "intended path",
    "intent",
    "intent concept dictionary",
    "inter-annotation white space",
    "inter-base white space",
    "inter-element whitespace",
    "inter-level white space",
    "inter-segment white space",
    "interactable",
    "interactable element",
    "interaction data",
    "interactive content",
    "interactive-widget",
    "interactively validate the constraints",
    "intercept map",
    "interception state",
    "interest group",
    "interest group ad",
    "interest group note",
    "interest group set",
    "interest group set max owners",
    "interest group update",
    "interest groups",
    "interest-cohort",
    "interface",
    "interface descriptor",
    "interface member",
    "interface mixin",
    "interface mixin member",
    "interface object",
    "interface of a shader",
    "interface prototype object",
    "interface types",
    "interior nodes",
    "interlaced png image",
    "interleaved",
    "interlinear annotations",
    "intermediary node",
    "intermediary nodes",
    "intermediate memory breakdown entry",
    "intermediate memory measurement",
    "internal",
    "internal algorithm for scanning and assigning header cells",
    "internal close watcher",
    "internal content attribute map",
    "internal createelementns steps",
    "internal error",
    "internal json clone",
    "internal key modifier state",
    "internal object",
    "internal pause steps",
    "internal pending output",
    "internal play steps",
    "internal queues",
    "internal raw uncompiled handler",
    "internal representation",
    "internal resource links",
    "internal ruby box",
    "internal ruby boxes",
    "internal ruby display types",
    "internal ruby element",
    "internal table box",
    "internal table element",
    "internal usage",
    "internally create a new object implementing the interface",
    "internalretry",
    "international preferences",
    "internationalisation",
    "internationalization",
    "internationalization components for unicode (icu) library",
    "internationalized",
    "interpolate",
    "interpolate-size",
    "interpolation",
    "interpolation color space",
    "interpolation procedure",
    "interpolation sampling",
    "interpolation sampling name-token",
    "interpolation type",
    "interpolation type name-token",
    "interpretation",
    "interpreter",
    "interrupt transfers",
    "intersect the viewport",
    "intersection observer",
    "intersectionobserver task source",
    "interval",
    "interval end",
    "interval start",
    "intervention reports",
    "intialize a composition layer",
    "intl mathematical value",
    "intra-level white space",
    "intra-ruby white space",
    "intrinsic dimensions",
    "intrinsic iteration duration",
    "intrinsic percentage width of a column",
    "intrinsic percentage width of a column based on cells of span up to 1",
    "intrinsic percentage width of a column based on cells of span up to n (n > 1)",
    "intrinsic size",
    "intrinsic size constraint",
    "intrinsic size contribution",
    "intrinsic sizes valid flag",
    "intrinsic sizing",
    "intrinsic sizing function",
    "intrinsic stretch axis",
    "intrinsic-sizes-invalid",
    "intrinsic-sizes-valid",
    "invalid",
    "invalid anchor function",
    "invalid anchor-size function",
    "invalid argument",
    "invalid at computed-value time",
    "invalid color",
    "invalid condition",
    "invalid cookie domain",
    "invalid element state",
    "invalid image",
    "invalid load",
    "invalid memory reference",
    "invalid pointer",
    "invalid reference",
    "invalid rule error",
    "invalid selector",
    "invalid session id",
    "invalid store",
    "invalid value",
    "invalid value default",
    "invalid-character-sequence-after-doctype-name",
    "invalid-credentials",
    "invalid-first-character-of-tag-name",
    "invalid-reverse-solidus",
    "invalid-url-unit",
    "invalidaccesserror",
    "invalidate",
    "invalidate layout functions",
    "invalidated",
    "invalidates",
    "invalidstateerror",
    "inverse channel transfer function",
    "inverse context",
    "invert",
    "invisible",
    "invisible elements",
    "invisible line box",
    "invited expert in a working group",
    "invited expert in an interest group",
    "invocation",
    "invocations",
    "invoke",
    "invoke a intrinsic sizes callback",
    "invoke a layout callback",
    "invoke a paint callback",
    "invoke a protocol handler",
    "invoke an intrinsic sizes callback",
    "invoke custom element reactions",
    "invoke idle callback timeout algorithm",
    "invoke idle callbacks algorithm",
    "invoke text directives",
    "invoke the indexed property setter",
    "invoke the named property setter",
    "invoked",
    "io attributes",
    "iosversion",
    "ip address",
    "ip address space",
    "ipv4 address",
    "ipv4 number parser",
    "ipv4 parser",
    "ipv4 serializer",
    "ipv4-empty-part",
    "ipv4-in-ipv6-invalid-code-point",
    "ipv4-in-ipv6-out-of-range-part",
    "ipv4-in-ipv6-too-few-parts",
    "ipv4-in-ipv6-too-many-pieces",
    "ipv4-non-decimal-part",
    "ipv4-non-numeric-part",
    "ipv4-out-of-range-part",
    "ipv4-too-many-parts",
    "ipv6 address",
    "ipv6 parser",
    "ipv6 piece",
    "ipv6 serializer",
    "ipv6-invalid-code-point",
    "ipv6-invalid-compression",
    "ipv6-multiple-compression",
    "ipv6-too-few-pieces",
    "ipv6-too-many-pieces",
    "ipv6-unclosed",
    "iri",
    "iri compacting",
    "iri equality",
    "iri expanding",
    "iri mapping",
    "iri reference",
    "iri references",
    "irk",
    "is a duplicate name",
    "is a group close",
    "is a group open",
    "is a hash prefix",
    "is a non-special pattern char",
    "is a password prefix",
    "is a pathname start",
    "is a platform object",
    "is a port prefix",
    "is a protocol suffix",
    "is a registrable domain suffix of or is equal to",
    "is a search prefix",
    "is a valid name code point",
    "is active",
    "is allowed to show a file picker",
    "is an absolute pathname",
    "is an array index",
    "is an environment settings object contextually secure?",
    "is an identity terminator",
    "is an ipv6 close",
    "is an ipv6 open",
    "is ascii",
    "is associated with",
    "is async module",
    "is at a word boundary",
    "is auxiliary",
    "is base allowed for document?",
    "is closing",
    "is composing",
    "is currently stalled",
    "is debugging only in cooldown or lockout",
    "is delaying load events",
    "is detached",
    "is document picture-in-picture",
    "is element enabled",
    "is element origin",
    "is element selected",
    "is gbk",
    "is initial about:blank",
    "is input.elementorigin",
    "is local",
    "is modal",
    "is not a registrable domain suffix of and is not equal to",
    "is not a valid filter",
    "is not an array index",
    "is not origin-clean",
    "is not special",
    "is origin-keyed",
    "is persistent session type?",
    "is point in path steps",
    "is point in stroke steps",
    "is policy compatible",
    "is popup",
    "is running cancel action",
    "is same document",
    "is same-party with its top-level embedder",
    "is special",
    "is stale",
    "is type supported",
    "is utf-16be decoder",
    "is-value-compatible",
    "is-value-compatible-or-report",
    "isindex",
    "iso",
    "iso-2022-jp",
    "iso-2022-jp decoder",
    "iso-2022-jp decoder ascii",
    "iso-2022-jp decoder escape",
    "iso-2022-jp decoder escape start",
    "iso-2022-jp decoder katakana",
    "iso-2022-jp decoder lead byte",
    "iso-2022-jp decoder output state",
    "iso-2022-jp decoder roman",
    "iso-2022-jp decoder state",
    "iso-2022-jp decoder trail byte",
    "iso-2022-jp encoder",
    "iso-2022-jp encoder ascii",
    "iso-2022-jp encoder jis0208",
    "iso-2022-jp encoder roman",
    "iso-2022-jp encoder state",
    "iso-2022-jp lead",
    "iso-2022-jp output",
    "iso-8601",
    "iso-8859-10",
    "iso-8859-13",
    "iso-8859-14",
    "iso-8859-15",
    "iso-8859-16",
    "iso-8859-2",
    "iso-8859-3",
    "iso-8859-4",
    "iso-8859-5",
    "iso-8859-6",
    "iso-8859-7",
    "iso-8859-8",
    "iso-8859-8-i",
    "isochronous transfers",
    "isolated sequence",
    "isolation",
    "isomorphic",
    "isomorphic decode",
    "isomorphic encode",
    "isplatformobjectsameorigin",
    "issamedocument",
    "issue a haptic effect",
    "issued identifiers map",
    "issuer",
    "issuer's",
    "issuerassociations",
    "issuerequest",
    "issueresponse",
    "issuers",
    "it is appropriate to resolve percentage heights on direct children of a table-cell",
    "italic correction",
    "item",
    "item data field",
    "item types",
    "itemref",
    "iterable",
    "iterable declaration",
    "iterate a cursor",
    "iteration",
    "iteration composite operation",
    "iteration composite operation accumulate",
    "iteration composite operation replace",
    "iteration count",
    "iteration duration",
    "iteration index",
    "iteration interval",
    "iteration progress",
    "iteration start",
    "iteration time",
    "iteration time space",
    "iterationcompositeoperation",
    "iterations",
    "iterator prototype object",
    "iterator result",
    "iv",
    "ivory",
    "jake diagram",
    "jamo",
    "javascript engine task source",
    "javascript error",
    "javascript mime type",
    "javascript mime type essence match",
    "javascript module script",
    "javascript string",
    "job",
    "job queue",
    "join-ad-interest-group",
    "json clone",
    "json deserialization",
    "json deserialize",
    "json literal",
    "json mime type",
    "json module script",
    "json serialization",
    "json type",
    "json-ld context document",
    "json-ld document",
    "json-ld frame",
    "json-ld input",
    "json-ld internal representation",
    "json-ld output",
    "json-ld processor",
    "json-ld script element",
    "json-ld value",
    "jsonldprocessor-compact-context",
    "jsonldprocessor-compact-input",
    "jsonldprocessor-compact-options",
    "jsonldprocessor-expand-input",
    "jsonldprocessor-expand-options",
    "jsonldprocessor-flatten-context",
    "jsonldprocessor-flatten-input",
    "jsonldprocessor-flatten-options",
    "jsonldprocessor-frame-frame",
    "jsonldprocessor-frame-input",
    "jsonldprocessor-frame-options",
    "jsonldprocessor-fromrdf-input",
    "jsonldprocessor-fromrdf-options",
    "jsonldprocessor-tordf-input",
    "jsonldprocessor-tordf-options",
    "jsonwebkey",
    "justification opportunity",
    "justify-content",
    "justify-items",
    "justify-self",
    "jzazbz",
    "jzczhz",
    "k-anonymity duration",
    "k-anonymity server",
    "k-anonymity threshold",
    "k-rate",
    "kana",
    "kbd",
    "key",
    "key attribute value",
    "key chunk",
    "key code attribute value",
    "key commitment",
    "key export steps",
    "key frame",
    "key generator",
    "key id",
    "key import steps",
    "key input source",
    "key location",
    "key mapping",
    "key modifier name",
    "key modifier state",
    "key path",
    "key range",
    "key session",
    "key string",
    "key system",
    "key value",
    "key(s)",
    "keyagreement",
    "keyalgorithm",
    "keyboard accessible",
    "keyboard-inset-bottom",
    "keyboard-inset-height",
    "keyboard-inset-left",
    "keyboard-inset-right",
    "keyboard-inset-top",
    "keyboard-inset-width",
    "keyboard-interactable",
    "keyboard-interactable element",
    "keydown",
    "keyframe",
    "keyframe effect",
    "keyframe offset",
    "keyframe-specific composite operation",
    "keyframe-specific easing function",
    "keygen",
    "keypad",
    "keypress",
    "keystatuseschange",
    "keyup",
    "keyword",
    "keyword alias",
    "keyword-source",
    "khaki",
    "kill buffer",
    "kin",
    "kind",
    "kind strings",
    "known",
    "known attributes",
    "known concept",
    "known elements",
    "known key",
    "known prompt handlers",
    "koi8-r",
    "koi8-u",
    "l2v",
    "lab()",
    "label",
    "labelable elements",
    "labeled control",
    "landing page",
    "landmark",
    "landmarks",
    "landscape",
    "landscape orientation",
    "landscape-primary",
    "landscape-secondary",
    "lang",
    "lang (pseudo-class)",
    "language",
    "language extension",
    "language map",
    "language mapping",
    "language metadata",
    "language negotiation",
    "language priority list",
    "language range",
    "language subtag",
    "language tag",
    "language tag extension",
    "language-range",
    "language-tagged string",
    "large viewport size",
    "large viewport-percentage units",
    "large-blob array",
    "large-blob map",
    "largeblob",
    "largeblobkey",
    "largeblobmapconform",
    "largest contentful paint candidate",
    "largest contentful paint size",
    "last activation timestamp",
    "last baseline set",
    "last baselines",
    "last call for review of proposed additions",
    "last call for review of proposed amendments",
    "last call for review of proposed corrections",
    "last call for review of proposed corrections and additions",
    "last cross-axis baseline set",
    "last css style sheet set name",
    "last decode timestamp",
    "last event id string",
    "last frame duration",
    "last history-action activation timestamp",
    "last idle period start time",
    "last line",
    "last main-axis baseline set",
    "last modification date",
    "last mouse dom path",
    "last mouse element",
    "last mouse move",
    "last performance entry id",
    "last position updated time",
    "last presented frame identifier",
    "last remembered size",
    "last render opportunity time",
    "last reported playback position",
    "last selected source",
    "last successful position option",
    "last usable css region",
    "last usable region",
    "last-baseline alignment",
    "last-baseline content-alignment",
    "last-baseline self-alignment",
    "last-event-id",
    "last-modified",
    "latency",
    "latest entry",
    "latest geolocation reading",
    "latest reading",
    "launch a web application",
    "launch a web application with handling",
    "launch the new_note_url",
    "launching a shortcut",
    "launching a web application",
    "launching a web application with handling",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "layer name",
    "layer_size",
    "laying out in-place",
    "layout api children",
    "layout api container",
    "layout api context",
    "layout api formatting context",
    "layout api work task",
    "layout attributes",
    "layout bounds",
    "layout box",
    "layout class instances",
    "layout containment",
    "layout containment box",
    "layout cycles",
    "layout definition",
    "layout definitions",
    "layout shift value",
    "layout valid flag",
    "layout viewport",
    "layout-internal",
    "layout-invalid",
    "layout-valid",
    "layoutchange",
    "lazy",
    "lazy load intersection observer",
    "lazy load resumption steps",
    "lazy load scroll margin",
    "lazy loading attribute",
    "lbw",
    "lch()",
    "le bonding procedure",
    "leader()",
    "leading",
    "leading bid info",
    "leading surrogate",
    "lean",
    "left",
    "left page",
    "left-hand side",
    "left-to-right",
    "leftover space",
    "legacy callback interface object",
    "legacy character encodings",
    "legacy color syntax",
    "legacy extract an encoding",
    "legacy factory function",
    "legacy name alias",
    "legacy platform objects",
    "legacy selector alias",
    "legacy shorthand",
    "legacy-clone a traversable storage shed",
    "legacy-obtain service worker fetch event listener callbacks",
    "legacy-uppercased-byte less than",
    "legacyfactoryfunction identifier",
    "legacywindowalias identifier",
    "legal caret positions",
    "legend",
    "lemonchiffon",
    "length",
    "less than",
    "let-declaration",
    "letter",
    "letter spacing",
    "letter-spacing",
    "letterspacing",
    "level",
    "levelchange",
    "levels",
    "levels of detail",
    "lexical form",
    "lexical space",
    "lexical-to-value mapping",
    "lhsvalue",
    "li",
    "liaison",
    "license",
    "licensing commitment",
    "lifecycle callbacks",
    "lifetime",
    "light color scheme",
    "light dismiss open popovers",
    "light source",
    "light tree",
    "light-dark()",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lighter",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lighting-color",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "limit",
    "limit class",
    "limit for associated sites",
    "limit maximum sampling frequency",
    "limit number of delivered readings",
    "limit the amount of information",
    "limited max-content contribution",
    "limited min-content contribution",
    "limited to only known values",
    "limited to only non-negative numbers",
    "limited to only positive numbers",
    "limited to only positive numbers with fallback",
    "limited-quirks mode",
    "limiting",
    "line",
    "line box",
    "line break",
    "line breaking",
    "line breaking process",
    "line gap metric",
    "line grid",
    "line join shape",
    "line name",
    "line name set",
    "line orientation",
    "line segments",
    "line-ascent",
    "line-break",
    "line-clamp",
    "line-descent",
    "line-ending comment",
    "line-fit-edge",
    "line-grid",
    "line-height",
    "line-height-step",
    "line-left",
    "line-left offset",
    "line-over",
    "line-padding",
    "line-relative",
    "line-relative direction",
    "line-relative shift values",
    "line-right",
    "line-snap",
    "line-under",
    "linear acceleration",
    "linear acceleration sensor",
    "linear device acceleration",
    "linear easing function",
    "linear easing point",
    "linear gain unit to decibel",
    "linear pcm",
    "linear timing function",
    "linear()",
    "linear-acceleration virtual sensor type",
    "linear-gradient()",
    "lineargradient",
    "linen",
    "link",
    "link (pseudo-class)",
    "link decoration",
    "link processing options",
    "link text",
    "link text selector",
    "link-parameters",
    "linked resource",
    "linked resource fetch setup steps",
    "linked resources",
    "linkedresource",
    "linkedresources",
    "linkmove",
    "links",
    "list",
    "list element",
    "list interfaces",
    "list item",
    "list object",
    "list of active formatting elements",
    "list of active xr input sources",
    "list of animation frame callbacks",
    "list of available images",
    "list of available presentation displays",
    "list of available remote playback devices",
    "list of color formats for non-projection layers",
    "list of color formats for projection layers",
    "list of complex selectors",
    "list of compound selectors",
    "list of currently running animation frame callbacks",
    "list of depth formats for non-projection layers",
    "list of depth formats for projection layers",
    "list of dragged nodes",
    "list of elements with class names classnames",
    "list of elements with namespace namespace and local name localname",
    "list of elements with qualified name qualifiedname",
    "list of full-sized viewports",
    "list of idle request callbacks",
    "list of immersive xr devices",
    "list of implemented header extensions for receiving",
    "list of implemented header extensions for sending",
    "list of implemented receive codecs",
    "list of inherent constrainable track properties",
    "list of inline sessions",
    "list of joints",
    "list of mock cameras",
    "list of mock microphones",
    "list of newly introduced cues",
    "list of notifications",
    "list of options",
    "list of pending fullscreen events",
    "list of pending play promises",
    "list of pending text tracks",
    "list of registered performance observer objects",
    "list of related website sets",
    "list of representations",
    "list of runnable idle callbacks",
    "list of scripts that will execute in order as soon as possible",
    "list of scripts that will execute when the document has finished parsing",
    "list of selectors",
    "list of simple selectors",
    "list of speculative fetch urls",
    "list of stack frames",
    "list of sufficiently strict speculative navigation referrer policies",
    "list of supported modes",
    "list of sync registrations",
    "list of text tracks",
    "list of video frame request callbacks",
    "list of viewport objects",
    "list of websocket resources",
    "list of webvtt node objects",
    "list owner",
    "list properties",
    "list-item",
    "list-style",
    "list-style-image",
    "list-style-position",
    "list-style-type",
    "list-valued properties",
    "listed elements",
    "listening agent",
    "listing",
    "literal",
    "literal term equality",
    "literal value",
    "live",
    "live ranges",
    "live region",
    "live regions",
    "load",
    "load a document",
    "load a media document",
    "load a multipart/x-mixed-replace document",
    "load a text document",
    "load an html document",
    "load rule",
    "load value",
    "loaddocumentcallback-options",
    "loaded",
    "loadedmodulerequest record",
    "loading",
    "loading a document for inline content that doesn't have a dom",
    "loading image",
    "loading xml documents",
    "local",
    "local address",
    "local audio playback suppression",
    "local boundary default action",
    "local context",
    "local coordinate system",
    "local date and time",
    "local default namespace",
    "local end",
    "local end definition",
    "local ends",
    "local file system handle factories",
    "local font-relative lengths",
    "local invocation id",
    "local invocation index",
    "local items",
    "local name",
    "local name data type",
    "local playback device",
    "local playback state",
    "local prefixes map",
    "local scheme",
    "local storage",
    "local storage area",
    "local storage bucket",
    "local storage holder",
    "local time",
    "local time space",
    "local type",
    "local type name",
    "local variable",
    "local-fonts",
    "local-urls-only flag",
    "locale",
    "locale fallback",
    "locale neutral",
    "locale-aware",
    "locale-neutral",
    "localisation",
    "locality",
    "localizable content",
    "localizable member",
    "localizable members",
    "localizable string",
    "localizable text",
    "localizablestring",
    "localizablestrings",
    "localization",
    "localization resources",
    "locally substitute a var()",
    "localname",
    "localtestingmode",
    "locate a namespace",
    "locate a namespace prefix",
    "locate nodes using accessibility attributes",
    "locate nodes using css",
    "locate nodes using inner text",
    "locate nodes using xpath",
    "locating a namespace prefix",
    "locating an entry",
    "location",
    "location-object navigate",
    "lock",
    "lock manager",
    "lock request",
    "lock request queue",
    "lock requests queue",
    "lock task queue",
    "lock the screen orientation",
    "lock-concept",
    "locked",
    "locked for focus",
    "locked for reset",
    "locked to a reader",
    "locked to a writer",
    "locking the screen orientation",
    "lockout period",
    "lod",
    "log event buffer",
    "log()",
    "logged-in",
    "logged-out",
    "logical",
    "logical combination pseudo-classes",
    "logical display surface",
    "logical expression",
    "logical height",
    "logical maximum tag",
    "logical minimum tag",
    "logical miplevel-specific texture extent",
    "logical order",
    "logical property group",
    "logical texel address",
    "logical width",
    "logically connected",
    "logicalsurface",
    "login status map",
    "logo",
    "long",
    "long animation frame",
    "long attribute values",
    "long cooldown period",
    "long cooldown rate",
    "long long",
    "long task",
    "longer",
    "longhand",
    "longhand property",
    "look up a custom element definition",
    "look up penultimate redemption",
    "look up per-buyer currency",
    "look up per-buyer multi-bid limit",
    "look up the key commitments",
    "look up the latest keys",
    "lookup race response",
    "loop",
    "loop body",
    "loosely sorted by offset",
    "lose the device",
    "lossless",
    "low",
    "low boundary",
    "low entropy hint table",
    "low-entropy hint table",
    "low-level",
    "lower-alpha",
    "lower-greek",
    "lower-latin",
    "lower-roman",
    "lowercase letter",
    "lowerlimitbaselinedropmin",
    "lowerlimitgapmin",
    "lstr",
    "ltr",
    "luminance",
    "lz77",
    "machine-readable equivalent of the element's contents",
    "macintosh",
    "maction",
    "magenta",
    "magic numbers",
    "magnetic declination",
    "magnetic field",
    "magnetometer",
    "mail as body",
    "mail with headers",
    "main",
    "main axis",
    "main dimension",
    "main fetch",
    "main items",
    "main size",
    "main size property",
    "main tv episode",
    "main-axis",
    "main-axis baseline set",
    "main-desc",
    "main-end",
    "main-size",
    "main-start",
    "majorversion",
    "make a background attributionsrc request",
    "make a component string",
    "make active",
    "make an nfc tag permanently read-only",
    "make background attributionsrc requests",
    "make disappear",
    "make document unsalvageable",
    "making a buffer available for reading",
    "making content read-only",
    "managed data task source",
    "managed state",
    "managed states",
    "managedconfigurationchange",
    "mandatory data types",
    "manifest",
    "manifest fallback chain",
    "manifest image resource",
    "manifest plane",
    "manifest url",
    "manifest's",
    "manifest-src",
    "manifests",
    "manual",
    "manual installation",
    "manually",
    "manufacturer data blocklist",
    "manufacturer specific data",
    "map",
    "map a url to ndef",
    "map absolute-url to ndef",
    "map and normalize axes",
    "map and normalize buttons",
    "map binary data to ndef",
    "map document language elements to table elements",
    "map empty record to ndef",
    "map entries",
    "map external data to ndef",
    "map local type to ndef",
    "map of animation frame callbacks",
    "map of flattened subjects",
    "map of navigables to device prompts",
    "map of preloaded resources",
    "map size getter",
    "map smart poster to ndef",
    "map text to ndef",
    "map to the aspect-ratio property",
    "map to the aspect-ratio property (using dimension rules)",
    "maplike",
    "maplike declaration",
    "mapping entries",
    "mapping entry",
    "mapping logic",
    "mappings",
    "maps to the dimension property",
    "maps to the dimension property (ignoring zero)",
    "maps to the pixel length property",
    "margin",
    "margin (of a box)",
    "margin area",
    "margin at-rule",
    "margin box",
    "margin context",
    "margin edge",
    "margin properties",
    "margin-block",
    "margin-block-end",
    "margin-block-start",
    "margin-bottom",
    "margin-break",
    "margin-inline",
    "margin-inline-end",
    "margin-inline-start",
    "margin-left",
    "margin-right",
    "margin-top",
    "margin-trim",
    "margin::of a box",
    "mark",
    "mark a debug scope complete",
    "mark a promise as handled",
    "mark as handled",
    "mark as ready",
    "mark paint timing",
    "mark resource timing",
    "mark_feature_usage",
    "mark_fully_loaded",
    "mark_fully_visible",
    "mark_interactive",
    "marker",
    "marker box",
    "marker image",
    "marker properties",
    "marker string",
    "marker-end",
    "marker-mid",
    "marker-side",
    "marker-start",
    "markers",
    "markup declaration open state",
    "maroon",
    "marquee",
    "marquee current loop index",
    "marquee loop count",
    "marquee scroll distance",
    "marquee scroll interval",
    "mask",
    "mask border image",
    "mask border image area",
    "mask image",
    "mask layer image",
    "mask painting area",
    "mask positioning area",
    "mask-border",
    "mask-border-mode",
    "mask-border-outset",
    "mask-border-repeat",
    "mask-border-slice",
    "mask-border-source",
    "mask-border-width",
    "mask-clip",
    "mask-composite",
    "mask-image",
    "mask-mode",
    "mask-origin",
    "mask-position",
    "mask-repeat",
    "mask-size",
    "mask-type",
    "masked",
    "masonry axis",
    "masonry box",
    "masonry layout",
    "mat2x2f",
    "mat2x2h",
    "mat2x3f",
    "mat2x3h",
    "mat2x4f",
    "mat2x4h",
    "mat3x2f",
    "mat3x2h",
    "mat3x3f",
    "mat3x3h",
    "mat3x4f",
    "mat3x4h",
    "mat4x2f",
    "mat4x2h",
    "mat4x3f",
    "mat4x3h",
    "mat4x4f",
    "mat4x4h",
    "match",
    "match a complex selector against an element",
    "match a device filter",
    "match a device in prompt",
    "match a request",
    "match a selector against a pseudo-element",
    "match a selector against a tree",
    "match a selector against an element",
    "match a source map url in a comment",
    "match an attribution source against a filter config",
    "match an attribution source against filters",
    "match an attribution source against filters and negated filters",
    "match an installed app",
    "match an mp3 header",
    "match any filter",
    "match cookie",
    "match cross-origin opener policy values",
    "match filter values",
    "match filter values with negation",
    "match none",
    "match router condition",
    "match service worker registration",
    "match url pattern",
    "matched capability serialization algorithm",
    "matches",
    "matches a filter",
    "matches about:blank",
    "matches about:srcdoc",
    "matches an integrity metadata list",
    "matches any collection",
    "matches any filter",
    "matches the collection",
    "matches the device ids",
    "matches the environment",
    "matches the filter",
    "matches the interface filter",
    "matches the signature for mp3 without id3",
    "matches the signature for mp4",
    "matches the signature for webm",
    "matches the stored exchange",
    "matching a padded sequence",
    "matching capabilities",
    "matching transition delay",
    "matching transition duration",
    "matching transition timing function",
    "matching transition-property value",
    "math",
    "math axis",
    "math baseline",
    "math content box",
    "math function",
    "math-depth",
    "math-shift",
    "math-style",
    "mathbackground",
    "mathcolor",
    "mathematical baseline",
    "mathitalicscorrectioninfo",
    "mathml attributes",
    "mathml core elements",
    "mathml element",
    "mathml namespace",
    "mathml text integration point",
    "mathsize",
    "mathtopaccentattachment",
    "mathvariant",
    "matrix",
    "matrix object",
    "matrix3d()",
    "max",
    "max aggregatable attribution reports per attribution destination",
    "max aggregatable debug budget per rate-limit window",
    "max aggregatable reports per source",
    "max aggregation keys per source registration",
    "max attribution reporting origins per rate-limit window",
    "max attribution scopes per source",
    "max attributions per rate-limit window",
    "max batch size",
    "max bindings per shader stage",
    "max contributions per aggregatable debug report",
    "max cross size",
    "max cross size property",
    "max destinations covered by unexpired sources",
    "max destinations per rate-limit window",
    "max destinations per source",
    "max destinations per source reporting site per day",
    "max distinct trigger data per source",
    "max entries per filter data",
    "max event-level attribution scopes channel capacity per source",
    "max event-level channel capacity per source",
    "max event-level reports per attribution destination",
    "max height",
    "max inner height",
    "max inner width",
    "max interest groups total size per owner",
    "max length of attribution scope for source",
    "max length per aggregation key identifier",
    "max length per filter string",
    "max length per trigger context id",
    "max main size",
    "max main size property",
    "max negative interest groups per owner",
    "max pending sources per source origin",
    "max queued records",
    "max regular interest groups per owner",
    "max settable event-level attributions per source",
    "max settable event-level epsilon",
    "max settable event-level report windows",
    "max shader stages per pipeline",
    "max size",
    "max size property",
    "max source reporting origins per rate-limit window",
    "max source reporting origins per source reporting site",
    "max track sizing function",
    "max trigger-state cardinality",
    "max values per filter data entry",
    "max width",
    "max()",
    "max-block-size",
    "max-content",
    "max-content block size",
    "max-content block-size contribution",
    "max-content constraint",
    "max-content contribution",
    "max-content inline size",
    "max-content inline-size contribution",
    "max-content size",
    "max-content sizing-guess",
    "max-content width",
    "max-content width of a column",
    "max-content width of a column based on cells of span up to 1",
    "max-content width of a column based on cells of span up to n (n > 1)",
    "max-content width of a table",
    "max-height",
    "max-inline-size",
    "max-lines",
    "max-width",
    "max_age",
    "maxbuffersize",
    "maximize the window",
    "maximize window",
    "maximized window state",
    "maximum",
    "maximum allowed code point",
    "maximum allowed target",
    "maximum allowed value length",
    "maximum far clip plane",
    "maximum height",
    "maximum inline field of view",
    "maximum mipLevel count",
    "maximum move distance",
    "maximum number of actions",
    "maximum number of retries",
    "maximum report contributions",
    "maximum size",
    "maximum value",
    "maximum width",
    "maxsize",
    "maxtemplatefriendlyname",
    "maxuvattemptsforinternalretries",
    "maxuvretries",
    "may",
    "may have a guest browsing context",
    "may receive data",
    "maybe add a part from the pending fixed value",
    "maybe defer and then complete trigger attribution",
    "maybe obtain an interest group",
    "maybe replace event-level report",
    "maybe send pointerdown event",
    "maybe send pointerenter event",
    "maybe send pointerleave event",
    "maybe send pointermove event",
    "maybe send pointerout event",
    "maybe send pointerover event",
    "maybe send pointerup event",
    "maybe set the upcoming non-traverse api method tracker",
    "maybe show context menu",
    "maybenonuniform",
    "maybereadframe",
    "mb field",
    "mbit/s",
    "mc",
    "me",
    "me field",
    "measurable properties",
    "media",
    "media capture mechanism",
    "media condition",
    "media content image",
    "media data processing steps list",
    "media description",
    "media element",
    "media element attributes",
    "media element event task source",
    "media element load algorithm",
    "media element stall timeout",
    "media element state",
    "media feature",
    "media feed broadcast event",
    "media feed document",
    "media feed item url",
    "media feed items",
    "media feed property",
    "media feed store",
    "media feed url",
    "media flinging",
    "media group",
    "media groups",
    "media image",
    "media item action",
    "media item author",
    "media item content rating",
    "media item episode",
    "media item id",
    "media item interaction statistic",
    "media item season",
    "media item third party identifier",
    "media item third party identifier set",
    "media item types",
    "media keys",
    "media logo",
    "media mirroring",
    "media overlay document",
    "media pixels",
    "media provider object",
    "media query",
    "media query list",
    "media query modifier",
    "media receiver",
    "media remoting",
    "media resource",
    "media segment",
    "media sender",
    "media session action",
    "media session action source",
    "media session actions update algorithm",
    "media stream \"identification-tag\"",
    "media timeline",
    "media transport",
    "media type",
    "media()",
    "media-dependent import",
    "media-feed link relation type",
    "media-progress()",
    "media-resource-specific text track",
    "media-src",
    "mediadevices",
    "mediaelementaudiosourcenode",
    "mediaelementaudiosourceoptions",
    "mediarecorder",
    "mediasource object url",
    "mediastream",
    "mediastreamaudiodestinationnode",
    "mediastreamaudiosourcenode",
    "mediastreamaudiosourceoptions",
    "mediastreamconstraints",
    "mediastreamtrack",
    "mediastreamtrack source type",
    "mediastreamtrack source-specific clone steps",
    "mediastreamtrack source-specific construction steps",
    "mediastreamtrackaudiosourcenode",
    "mediastreamtrackaudiosourceoptions",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "megabit",
    "megabits per second",
    "member",
    "member association",
    "member associations",
    "member representative in a working group",
    "member representative in an interest group",
    "member submission",
    "member-only",
    "members",
    "memory access",
    "memory attribution token",
    "memory footprint",
    "memory layout",
    "memory locations",
    "memory measurement allowed predicate",
    "memory object cache",
    "memory scope",
    "memory view",
    "mention",
    "mention set",
    "menu",
    "menuitem",
    "menutext",
    "merge",
    "merge with the next text node",
    "merged",
    "merged annotation",
    "merging",
    "merging capabilities",
    "merror",
    "mesh-detection",
    "message",
    "message entity",
    "message port post message steps",
    "met",
    "meta",
    "meta flag",
    "metadata",
    "metadata content",
    "metadata frames",
    "metadata_specific_parameters",
    "metadata_type",
    "meter",
    "method",
    "method cache entry match",
    "method steps",
    "methoddata population algorithm",
    "metric name",
    "mfrac",
    "mi",
    "microdata",
    "microdata errors",
    "microphone information can be exposed",
    "microtask",
    "microtask queue",
    "microtask task source",
    "midi",
    "midi device",
    "midi input port",
    "midi interface",
    "midi message",
    "midi output port",
    "midnightblue",
    "midpoint-on-the-path",
    "mifare standard",
    "migrate an animator instance",
    "millisecond",
    "milliseconds",
    "mime",
    "mime type",
    "mime type record",
    "mime type sniffing algorithm",
    "mime types array",
    "min",
    "min cross size",
    "min cross size property",
    "min height",
    "min inner height",
    "min inner width",
    "min main size",
    "min main size property",
    "min report window",
    "min size",
    "min size property",
    "min track sizing function",
    "min width",
    "min()",
    "min-block-size",
    "min-content",
    "min-content block size",
    "min-content block-size contribution",
    "min-content constraint",
    "min-content contribution",
    "min-content inline size",
    "min-content inline-size contribution",
    "min-content size",
    "min-content sizing-guess",
    "min-content width",
    "min-content width of a column",
    "min-content width of a column based on cells of span up to 1",
    "min-content width of a column based on cells of span up to n (n > 1)",
    "min-content width of a table",
    "min-content-percentage sizing-guess",
    "min-content-specified sizing-guess",
    "min-height",
    "min-inline-size",
    "min-intrinsic-sizing",
    "min-width",
    "minde",
    "miniapp",
    "miniapp css resource",
    "miniapp css resources",
    "miniapp html resource",
    "miniapp html resources",
    "miniapp localization resource",
    "miniapp localization resources",
    "miniapp manifest",
    "miniapp manifest's",
    "miniapp package",
    "miniapp packages",
    "miniapp page",
    "miniapp page route",
    "miniapp pages",
    "miniapp permission resource",
    "miniapp permission resource's",
    "miniapp platform version resource",
    "miniapp platform version resource's",
    "miniapp platform version resources",
    "miniapp resource",
    "miniapp resources",
    "miniapp root directories",
    "miniapp root directory",
    "miniapp scripting resource",
    "miniapp signing block",
    "miniapp signing blocks",
    "miniapp start page",
    "miniapp start pages",
    "miniapp user agent",
    "miniapp user agents",
    "miniapp version resource",
    "miniapp version resource's",
    "miniapp widget",
    "miniapp widget resource",
    "miniapp widget resource's",
    "miniapp widgets",
    "miniapp window resource",
    "miniapp window resource's",
    "miniapp zip container",
    "miniapp zip containers",
    "miniapps",
    "minimal culprit attribution",
    "minimize a supported mime type",
    "minimize window",
    "minimized window state",
    "minimum",
    "minimum allowed target",
    "minimum allowed value length",
    "minimum block text size",
    "minimum buffer binding size",
    "minimum contribution",
    "minimum height",
    "minimum inline field of view",
    "minimum near clip plane",
    "minimum periodic sync interval across origins",
    "minimum periodic sync interval for any origin",
    "minimum readable text size",
    "minimum report delay",
    "minimum role",
    "minimum size",
    "minimum value",
    "minimum width",
    "minority opinion",
    "minorversion",
    "mintcream",
    "minutes",
    "mip level",
    "mipmap level",
    "mirror if necessary",
    "mismatch dialog step",
    "missing color component",
    "missing value default",
    "missing-attribute-value",
    "missing-doctype-name",
    "missing-doctype-public-identifier",
    "missing-doctype-system-identifier",
    "missing-end-tag-name",
    "missing-quote-before-doctype-public-identifier",
    "missing-quote-before-doctype-system-identifier",
    "missing-scheme-non-relative-url",
    "missing-semicolon-after-character-reference",
    "missing-whitespace-after-doctype-public-keyword",
    "missing-whitespace-after-doctype-system-keyword",
    "missing-whitespace-before-doctype-name",
    "missing-whitespace-between-attributes",
    "missing-whitespace-between-doctype-public-and-system-identifiers",
    "mistyrose",
    "mix end value",
    "mix notations",
    "mix progress value",
    "mix start value",
    "mix()",
    "mix-blend-mode",
    "mixed content",
    "mixed content limitations",
    "mixed download",
    "mixing rules",
    "ml task source",
    "mmultiscripts",
    "mmultiscripts base",
    "mmultiscripts postscripts",
    "mmultiscripts prescripts",
    "mn",
    "mo",
    "mobileosname",
    "moccasin",
    "mock capture device set",
    "mod()",
    "mode",
    "model",
    "modern color syntax",
    "modifier key",
    "modifiers population algorithm",
    "module",
    "module integrity map",
    "module map",
    "module responses map",
    "module scope",
    "module script",
    "module specifier map",
    "module type allowed",
    "module type from module request",
    "modulerequest record",
    "moduluslength",
    "mojibake",
    "moment",
    "monitor for cdm state changes",
    "monitor the list of available presentation displays",
    "monitor the list of available remote playback devices",
    "monitored",
    "monitored object",
    "monitoring incoming presentation connections",
    "monochrome",
    "monolithic",
    "monospace",
    "monotonic",
    "monotonic clock",
    "monotonically increasing timeline",
    "month",
    "most recent navigation",
    "most-negative-single-float",
    "most-positive-single-float",
    "motionvectortextures",
    "mouse button bitmask",
    "mousedown",
    "mouseenter",
    "mouseleave",
    "mousemove",
    "mouseout",
    "mouseover",
    "mouseup",
    "move",
    "move distance",
    "move target out of bounds",
    "move vector",
    "mover",
    "mover base",
    "mover overscript",
    "movie-fragment relative addressing",
    "mpadded",
    "mpadded inner box",
    "mpath",
    "mpeg audio frame",
    "mpeg2ts_timestampoffset",
    "mphantom",
    "mprescripts",
    "mroot",
    "mroot base",
    "mroot index",
    "mrow",
    "mrst",
    "ms",
    "mspace",
    "msqrt",
    "msqrt base",
    "mst",
    "mstyle",
    "msub",
    "msub base",
    "msub subscript",
    "msubsup",
    "msubsup base",
    "msubsup subscript",
    "msubsup superscript",
    "msup",
    "msup base",
    "msup superscript",
    "mtable",
    "mtd",
    "mtext",
    "mtr",
    "multi-col line",
    "multi-column container",
    "multi-column formatting context",
    "multi-column layout",
    "multi-column line",
    "multi-column spanner",
    "multi-column spanning element",
    "multi-device credential",
    "multi-factor capable",
    "multi-line flex container",
    "multi-screen origin",
    "multicol",
    "multicol container",
    "multicol line",
    "multiline",
    "multipart/form-data",
    "multipart/form-data boundary string",
    "multipart/form-data encoding algorithm",
    "multipart/mixed",
    "multipart/x-mixed-replace",
    "multiple declarations",
    "multiple values",
    "multiple-contexts",
    "multiply",
    "multiply transforms",
    "munder",
    "munder base",
    "munder underscript",
    "munderover",
    "munderover base",
    "munderover overscript",
    "munderover underscript",
    "muse",
    "must",
    "must not",
    "must not be exposed",
    "mutable",
    "mutable element",
    "mutable elements",
    "mutable form control element",
    "mutable form control elements",
    "mutate action url",
    "mutation observer microtask queued",
    "mute",
    "mute iframe load",
    "muted errors",
    "muting",
    "n",
    "n-quads document",
    "n-quads parser",
    "n-triples document",
    "n-triples parser",
    "naively convert from cmyk to rgba",
    "naively convert from rgba to cmyk",
    "naively converted to cmyk",
    "naively converted to rgba",
    "name",
    "name discovery procedure",
    "name of the webassembly function",
    "name to cache map",
    "name-start code point",
    "named attribute",
    "named character reference state",
    "named character references",
    "named color",
    "named component expression",
    "named definition",
    "named elements",
    "named flow",
    "named graph",
    "named graphs",
    "named grid area",
    "named key attribute value",
    "named objects",
    "named page",
    "named properties",
    "named properties object",
    "named property deleter",
    "named property getter",
    "named property setter",
    "named property visibility algorithm",
    "named scroll progress timelines",
    "named string",
    "named timeline range",
    "named view progress timelines",
    "named view transition pseudo-elements",
    "namedcurve",
    "namedflows",
    "namedspace",
    "names",
    "namespace",
    "namespace concept",
    "namespace iri",
    "namespace member",
    "namespace object",
    "namespace prefix",
    "namespace prefix lists",
    "namespace prefix map",
    "namespace uris",
    "namespaceuri",
    "naming prohibited",
    "nan-safe maximum",
    "nan-safe minimum",
    "narrow-range image",
    "native appearance",
    "native camera",
    "native depth sensing",
    "native entity type",
    "native hit test",
    "native hit test result",
    "native hit test results",
    "native mesh detection",
    "native mesh objects",
    "native plane detection",
    "native plane objects",
    "native webgl framebuffer resolution",
    "natural",
    "natural aspect ratio",
    "natural dimension",
    "natural dimensions of a cross-fade()",
    "natural end-point",
    "natural height",
    "natural language",
    "natural resolution",
    "natural size",
    "natural width",
    "nav",
    "nav-down",
    "nav-left",
    "nav-right",
    "nav-up",
    "navajowhite",
    "navigable",
    "navigable cache behavior",
    "navigable cache behavior map",
    "navigable container",
    "navigable id",
    "navigable seen nodes map",
    "navigable target name",
    "navigate",
    "navigate an iframe or frame",
    "navigate to",
    "navigate to a fragment",
    "navigate to a javascript: url",
    "navigating to a fragment identifier",
    "navigating url attributes list",
    "navigation and traversal task source",
    "navigation api",
    "navigation api id",
    "navigation api key",
    "navigation api method tracker",
    "navigation api method tracker-derived result",
    "navigation api state",
    "navigation budget epoch",
    "navigation budget lifetime",
    "navigation can trigger a cross-document view-transition?",
    "navigation entropy allowance",
    "navigation entropy ledger",
    "navigation handler list",
    "navigation id",
    "navigation object",
    "navigation params",
    "navigation request",
    "navigation style values",
    "navigation task",
    "navigation timing entry",
    "navigation timing type",
    "navigation type",
    "navigation-credentialless",
    "navigation-failure",
    "navigation-override",
    "navigation-params-credentialless",
    "navigation_bar_background_color",
    "navigation_bar_text_style",
    "navigation_bar_title_text",
    "navigation_style",
    "navigational tracking",
    "navigationapistate",
    "navigationtype",
    "navigator",
    "navigator compatibility mode",
    "navigatornetworkinformation",
    "navy",
    "ndc",
    "ndef",
    "ndef message",
    "ndef record",
    "ndef signature",
    "near",
    "nearest ancestor autofocus scoping root element",
    "nearest block ancestor",
    "nearest containing group name",
    "nearest enclosing diagnostic filter",
    "nearest inclusive open popover",
    "nearest inclusive target popover for invoker",
    "nearest neighbor",
    "nearest same-origin root",
    "nearest scrollport",
    "need new subpath",
    "need random access point flag",
    "needs a browsing context group switch",
    "needs scroll adjustment",
    "negative interest group",
    "negative scrollable overflow region",
    "negative target info",
    "negative targeting",
    "negotiation-needed flag",
    "neighbor",
    "nel",
    "nel policies",
    "nel policy",
    "nemeth braille",
    "nest value",
    "nested context required document policy",
    "nested declarations rule",
    "nested grid",
    "nested group rules",
    "nested histories",
    "nested history",
    "nested property",
    "nested region context",
    "nested style rule",
    "nested-comment",
    "nesting depth",
    "nesting selector",
    "nesting style rule",
    "network byte order",
    "network error",
    "network error report",
    "network error reports",
    "network errors",
    "network interaction",
    "network intercept",
    "network partition key",
    "network reporting endpoint",
    "network request",
    "network requests",
    "network_reporting_endpoints",
    "networking task source",
    "neutral value for composition",
    "never support",
    "never-rendered element",
    "new",
    "new adapter info",
    "new broadcastchannel(name)",
    "new closewatcher(options)",
    "new connection setting",
    "new domparser()",
    "new entry",
    "new information about the user's intent",
    "new messagechannel()",
    "new read buffer",
    "new session",
    "new sessions",
    "new unique internal value",
    "new unit value",
    "new window",
    "new_tab_button",
    "newline",
    "newlines",
    "next",
    "next input character",
    "next input code point",
    "next input token",
    "next is authority slashes",
    "next non-whitespace position",
    "next sibling not included",
    "next token",
    "next user interaction allows a new group",
    "next-sibling combinator",
    "nextid",
    "nfc",
    "nfc adapter",
    "nfc content",
    "nfc device",
    "nfc forum type 1",
    "nfc forum type 2",
    "nfc forum type 3",
    "nfc forum type 4",
    "nfc forum type 5",
    "nfc handover",
    "nfc is suspended",
    "nfc listen algorithm",
    "nfc peer",
    "nfc reading algorithm",
    "nfc state",
    "nfc tag",
    "nfd",
    "nfkc",
    "nfkd",
    "nickname",
    "nnonext",
    "no",
    "no corresponding role",
    "no cors",
    "no invalidation",
    "no longer open",
    "no popover",
    "no role",
    "no such alert",
    "no such cookie",
    "no such device",
    "no such element",
    "no such frame",
    "no such prompt",
    "no such shadow root",
    "no such window",
    "no-close-quote",
    "no-cors-safelisted request-header",
    "no-cors-safelisted request-header name",
    "no-open-quote",
    "no-quirks mode",
    "no-sniff flag",
    "no-translate",
    "no-validate state",
    "no-vary-search",
    "nobr",
    "node",
    "node id map",
    "node impact region",
    "node is inserted into a document",
    "node is removed from a document",
    "node name to parameter descriptor map",
    "node name to processor constructor map",
    "node navigable",
    "node object",
    "node pattern",
    "node reference",
    "node reference is known",
    "node tree",
    "node type",
    "node types",
    "nodeiterator pre-removing steps",
    "nodes",
    "noembed",
    "noframes",
    "noisesuppression",
    "nominal frame rate",
    "nominal range",
    "non-ascii code point",
    "non-ascii ident code point",
    "non-associable",
    "non-associable by an entity",
    "non-associable by application",
    "non-associable by the application",
    "non-autofill credential type",
    "non-codec",
    "non-control character",
    "non-devolvable",
    "non-devolvable widget",
    "non-discoverable credential",
    "non-discoverable credentials",
    "non-empty",
    "non-fetch scheme navigation params",
    "non-ideographic letters",
    "non-ideographic numerals",
    "non-linguistic field",
    "non-local boundary default action",
    "non-normative",
    "non-overridable counter-style names",
    "non-persistent notification",
    "non-printable code point",
    "non-rendered element",
    "non-replaced",
    "non-replaced element",
    "non-resident credential",
    "non-searchable subtree",
    "non-secure context",
    "non-strict code",
    "non-subresource request",
    "non-typeable form control",
    "non-void-html-element-start-tag-with-trailing-solidus",
    "nonce",
    "nonce-source",
    "noncharacter",
    "noncharacter-character-reference",
    "noncharacter-in-input-stream",
    "none",
    "none page loading strategy",
    "norestriction",
    "normal",
    "normal elements",
    "normal page loading strategy",
    "normal window state",
    "normalisation",
    "normalization",
    "normalization form c",
    "normalization form d",
    "normalization form kc",
    "normalization form kd",
    "normalize",
    "normalize a feature name",
    "normalize a module integrity map",
    "normalize a specifier key",
    "normalize an algorithm",
    "normalize data",
    "normalize into a token stream",
    "normalize newlines",
    "normalize non-finite values",
    "normalize protocol handler parameters",
    "normalize rect",
    "normalize specified timing",
    "normalize the source densities",
    "normalized identifier string",
    "normalized key value",
    "normalized timeranges object",
    "normalized value",
    "normalized value of a usages list",
    "normalized view coordinates",
    "normalized windows drive letter",
    "normative",
    "noscript",
    "not additive",
    "not animatable",
    "not determined",
    "not enabled",
    "not hidden",
    "not in the same tree",
    "not loaded",
    "not origin-clean",
    "not overlapping",
    "not required",
    "not restored reason details",
    "not restored reasons",
    "note",
    "note_taking",
    "notfound",
    "nothing",
    "notification",
    "notification show steps",
    "notifications",
    "notify about playing",
    "notify about rejected promises",
    "notify about the committed-to entry",
    "notify activated state",
    "notify controller change",
    "notify error",
    "notify intersection observers",
    "notify mutation observers",
    "notify new reading",
    "notify pressure observers",
    "notify the close watcher manager about user activation",
    "notsupportederror",
    "nquads",
    "nruntime",
    "null body status",
    "null input source",
    "null key",
    "null-character-reference",
    "nullable type",
    "number",
    "number of days in month month of year year",
    "number of nullable member types",
    "number of pixels to significance",
    "number of platform buckets",
    "number of tokens",
    "number of user buckets",
    "numerator",
    "numeric",
    "numeric character reference end state",
    "numeric character reference state",
    "numeric data types",
    "numeric literal",
    "numeric scalar",
    "numeric scalar conversion to floating point",
    "numeric type value",
    "numeric types",
    "numeric vector",
    "numpad",
    "nyquist frequency",
    "oauth client",
    "object",
    "object bounding box",
    "object descriptor",
    "object embed flag",
    "object size negotiation",
    "object store",
    "object store handle",
    "object types",
    "object url",
    "object-fit",
    "object-position",
    "object-src",
    "object-view-box",
    "objects",
    "obscured",
    "obscuring",
    "observable",
    "observable array exotic object",
    "observable array type",
    "observable changes",
    "observable policy",
    "observation procedure",
    "observe a target element",
    "observe-browsing-topics",
    "observed attributes",
    "observer",
    "observer buffer",
    "observer callback",
    "observer type",
    "obsolete recommendation",
    "obsolete registry",
    "obtain a Scripting Policy from a Structured Header",
    "obtain a Scripting Policy pair from a response",
    "obtain a boolean parameter value",
    "obtain a browsing context to use for a navigation response",
    "obtain a connection",
    "obtain a cross-origin opener policy",
    "obtain a dedicated/shared worker agent",
    "obtain a dictionary structured header value",
    "obtain a fake report",
    "obtain a local storage bottle map",
    "obtain a local storage shelf",
    "obtain a lock manager",
    "obtain a null attribution report",
    "obtain a physical form",
    "obtain a randomized response",
    "obtain a randomized source response",
    "obtain a randomized source response pick rate",
    "obtain a report delivery time",
    "obtain a report's shared info",
    "obtain a reporting endpoint",
    "obtain a script runner agent",
    "obtain a service worker agent",
    "obtain a session storage bottle map",
    "obtain a set of css boxes",
    "obtain a set of event names",
    "obtain a set of possible trigger states",
    "obtain a shared storage bottle map",
    "obtain a shared storage shelf",
    "obtain a similar-origin window agent",
    "obtain a site",
    "obtain a storage bottle map",
    "obtain a storage key",
    "obtain a storage key for non-storage purposes",
    "obtain a storage shelf",
    "obtain a string-like parameter value",
    "obtain a url search variance",
    "obtain a url search variance hint",
    "obtain a websocket connection",
    "obtain a window memory attribution token",
    "obtain a worker memory attribution token",
    "obtain a worker/worklet agent",
    "obtain a worklet agent",
    "obtain an aggregatable attribution report",
    "obtain an aggregatable attribution report delivery time",
    "obtain an aggregatable report",
    "obtain an aggregatable report body",
    "obtain an embedder policy",
    "obtain an event-level report",
    "obtain an event-level report body",
    "obtain an event-level report delivery time",
    "obtain an expanded url",
    "obtain and deliver a verbose debug report",
    "obtain and deliver a verbose debug report on source registration",
    "obtain and deliver a verbose debug report on trigger registration",
    "obtain and deliver an aggregatable debug report",
    "obtain and deliver an aggregatable debug report on registration",
    "obtain and deliver an aggregatable debug report on source registration",
    "obtain and deliver an aggregatable debug report on trigger registration",
    "obtain and deliver debug reports on os registrations",
    "obtain and deliver debug reports on registration header errors",
    "obtain and deliver debug reports on source registration",
    "obtain and deliver debug reports on trigger registration",
    "obtain camera",
    "obtain camera image",
    "obtain cpu depth information",
    "obtain default effective windows",
    "obtain depth at coordinates",
    "obtain hit test results",
    "obtain hit test results for transient input",
    "obtain permission",
    "obtain rounded source time",
    "obtain the aggregation coordinator",
    "obtain the aggregation service payloads",
    "obtain the current device",
    "obtain the encrypted payload",
    "obtain the plaintext payload",
    "obtain the pre-specified report parameters",
    "obtain the private aggregation coordinator",
    "obtain the private aggregation coordinator from a string",
    "obtain the public key for encryption",
    "obtain their numeric values",
    "obtain verbose debug data body on trigger registration",
    "obtain verbose debug data on trigger registration",
    "obtain webgl depth information",
    "obtaining a window memory attribution token",
    "obtaining a worker memory attribution token",
    "obtaining permission",
    "obviously discoverable",
    "occupied",
    "ocf abstract container",
    "ocf zip container",
    "octet",
    "octet string",
    "octet string containing",
    "octet string containing a bit string",
    "oetf",
    "off",
    "offerer's system state",
    "official playback position",
    "offlineaudiocompletionevent",
    "offlineaudiocompletioneventinit",
    "offlineaudiocontext",
    "offlineaudiocontextoptions",
    "offscreen 2d context creation algorithm",
    "offset",
    "offset anchor point",
    "offset distance",
    "offset path",
    "offset position",
    "offset starting position",
    "offset transform",
    "offset-anchor",
    "offset-distance",
    "offset-path",
    "offset-position",
    "offset-rotate",
    "offsetk",
    "offsetofmember",
    "offsets-adjusted min-width, width, and max-width",
    "ok status",
    "oklab()",
    "oklch()",
    "ol",
    "old entry",
    "old state",
    "oldest message",
    "oldlace",
    "olive",
    "olivedrab",
    "omax",
    "omax,theorical",
    "omin",
    "omit default flag",
    "omit graph flag",
    "omiterror",
    "omitted",
    "on",
    "on document ready",
    "on event contribution cache",
    "on event contribution cache entry",
    "on response available",
    "on_reach_bottom_distance",
    "oncapturehandlechange",
    "one permitted sandboxed navigator",
    "one-dimensional image",
    "ongoing api method tracker",
    "ongoing navigate event",
    "ongoing navigation",
    "online",
    "only if border is not equivalent to zero",
    "onoverscroll",
    "onscrollend",
    "onshow",
    "ontology",
    "op_index",
    "opacity",
    "opaque",
    "opaque black",
    "opaque environment blending",
    "opaque filtered response",
    "opaque framebuffer",
    "opaque host",
    "opaque large-blob data",
    "opaque origin",
    "opaque texture",
    "opaque-host parser",
    "opaque-host-and-port string",
    "opaque-redirect filtered response",
    "open",
    "open a bucket",
    "open a database connection",
    "open properties",
    "open screen protocol agent",
    "open subpath",
    "open the port",
    "open window algorithm",
    "open-quote",
    "opener browsing context",
    "opener origin at creation",
    "operable",
    "operating coordinate space",
    "operatingpointselectorproperty",
    "operation",
    "operationerror",
    "operations chain",
    "operators",
    "optgroup",
    "optimal viewing region",
    "optimally useful formatting",
    "optimum point",
    "option",
    "option id",
    "option-expression",
    "optional",
    "optional api surface",
    "optional argument",
    "optional basic constraints",
    "optional data types",
    "optional features",
    "optional trigger priority",
    "optional unsanitized data types",
    "optional-ascii-whitespace",
    "optionality list",
    "optionality values",
    "optionally truncate a simple dialog string",
    "options",
    "options list",
    "orange",
    "orangered",
    "orchid",
    "order",
    "order-modified document order",
    "ordered map",
    "ordered set",
    "ordered set of unique space-separated tokens",
    "ordered set parser",
    "ordered set serializer",
    "ordinal value",
    "ordinary",
    "org",
    "organization-name",
    "organization-unit",
    "orientation",
    "orientation sensor",
    "orientation values",
    "orientationchange",
    "origin",
    "origin color",
    "origin rate-limit window",
    "origin time",
    "origin-agent-cluster",
    "origin-bound one-time code",
    "origin-bound one-time code message",
    "origin-clean",
    "origin-only flag",
    "original base url",
    "original containing block",
    "original insertion mode",
    "original opener",
    "original source",
    "originally specified color space",
    "originate",
    "originating element",
    "originating line",
    "originating line box",
    "originating pseudo-element",
    "originating variable",
    "orphans",
    "orthogonal",
    "orthogonal flow",
    "os debug data type",
    "os registration",
    "os specific custom map name",
    "os specific custom name",
    "os specific well-known format",
    "oscillatornode",
    "oscillatoroptions",
    "oscpu",
    "osp agent",
    "other applicable specifications",
    "other space separators",
    "otherwise",
    "othographic syllable",
    "otp-credentials-feature",
    "out of flow",
    "out of gamut",
    "out transfers",
    "out-of-band outline",
    "out-of-bounds access",
    "out-of-bounds index",
    "out-of-flow",
    "out-of-gamut premultiplied rgba value",
    "out-of-memory error",
    "outer block size",
    "outer display type",
    "outer edge",
    "outer height",
    "outer inline size",
    "outer max width",
    "outer max-content",
    "outer min width",
    "outer min-content",
    "outer size",
    "outer text shadows",
    "outer width",
    "outermost svg element",
    "outline",
    "outline-color",
    "outline-offset",
    "outline-style",
    "outline-width",
    "output",
    "output audiodata",
    "output bitmap",
    "output buffer",
    "output encodedaudiochunks",
    "output encodedvideochunks",
    "output of the cascade",
    "output progress value",
    "output tag",
    "output videoframes",
    "outputs",
    "outset",
    "outside",
    "outside and inside",
    "outside of home tab scope",
    "outstanding rejected promises weak set",
    "over",
    "overall progress",
    "overbarextraascender",
    "overbarverticalgap",
    "overflow",
    "overflow alignment",
    "overflow clip edge",
    "overflow columns",
    "overflow directions",
    "overflow-anchor",
    "overflow-block",
    "overflow-clip-margin",
    "overflow-clip-margin-block",
    "overflow-clip-margin-block-end",
    "overflow-clip-margin-block-start",
    "overflow-clip-margin-bottom",
    "overflow-clip-margin-inline",
    "overflow-clip-margin-inline-end",
    "overflow-clip-margin-inline-start",
    "overflow-clip-margin-left",
    "overflow-clip-margin-right",
    "overflow-clip-margin-top",
    "overflow-inline",
    "overflow-wrap",
    "overflow-x",
    "overflow-y",
    "overlaid",
    "overlap",
    "overlay",
    "overlay element",
    "overlay scrollbars",
    "overlays-content",
    "overload",
    "overload candidates",
    "overload resolution",
    "overload resolution algorithm",
    "overloaded",
    "overridden constructor steps",
    "override mime type",
    "override the color scheme",
    "override-declaration",
    "override-expressions",
    "overrule",
    "overscroll",
    "overscroll behavior",
    "overscroll-behavior",
    "overscroll-behavior-block",
    "overscroll-behavior-inline",
    "overscroll-behavior-x",
    "overscroll-behavior-y",
    "own audio restriction",
    "own autocapitalization hint",
    "own exposure set",
    "owned",
    "owned child",
    "owned element",
    "owned element's",
    "owned elements",
    "owning",
    "owning document set",
    "owning element",
    "p",
    "package",
    "package document",
    "padding",
    "padding (of a box)",
    "padding area",
    "padding box",
    "padding edge",
    "padding properties",
    "padding-block",
    "padding-block-end",
    "padding-block-start",
    "padding-bottom",
    "padding-inline",
    "padding-inline-end",
    "padding-inline-start",
    "padding-left",
    "padding-right",
    "padding-top",
    "padding::of a box",
    "pag",
    "pag proposal",
    "page",
    "page area",
    "page border",
    "page box",
    "page break",
    "page context",
    "page credentialless nonce",
    "page float",
    "page footer",
    "page group",
    "page header",
    "page load",
    "page load strategy",
    "page loading strategy",
    "page margin",
    "page orientation",
    "page padding",
    "page progression",
    "page property",
    "page pseudo-class",
    "page route",
    "page routes",
    "page selector",
    "page selectors",
    "page sheet",
    "page showing",
    "page type selector",
    "page visibility change steps",
    "page zoom",
    "page's supported color schemes",
    "page-break-after",
    "page-break-before",
    "page-break-inside",
    "page-context",
    "page-margin boxes",
    "page-margin property",
    "paged media",
    "pager",
    "pages",
    "pagination",
    "paint",
    "paint a block's decorations",
    "paint a box in a line box",
    "paint a document",
    "paint a stacking container",
    "paint a stacking context",
    "paint class instances",
    "paint containment",
    "paint containment box",
    "paint definition",
    "paint definitions",
    "paint line",
    "paint order",
    "paint server element",
    "paint source",
    "paint tree",
    "paint()",
    "paint-order",
    "paint-timing eligible",
    "paintable",
    "paintable bounding rect",
    "paintable pseudo-element",
    "painting of the surd",
    "pair asynchronously iterable declaration",
    "pair iterator",
    "paired default highlight colors",
    "pairing",
    "palegoldenrod",
    "palegreen",
    "palette",
    "palette-mix()",
    "paleturquoise",
    "palevioletred",
    "palpable content",
    "pan",
    "pannernode",
    "panneroptions",
    "papayawhip",
    "par",
    "paragraph",
    "paragraph direction",
    "parallel queue",
    "param",
    "param_i",
    "param_i_contents",
    "parameter return tag",
    "parameter tag",
    "parameter type",
    "parametercontentsrequiredtobeuniform.s",
    "parameterdescriptors",
    "parameterized",
    "parameternorestriction",
    "parameterrequiredtobeuniform.s",
    "parameterreturncontentsrequiredtobeuniform",
    "parameterreturnnorestriction",
    "parameters",
    "params",
    "parent",
    "parent directionality",
    "parent element",
    "parent grid",
    "parent group",
    "parent layout",
    "parent media source",
    "parse a block's contents",
    "parse a boolean feature",
    "parse a calculation",
    "parse a clear-site-data header with buckets",
    "parse a comma-separated list of component values",
    "parse a component value",
    "parse a constructor string",
    "parse a css <color> value",
    "parse a css declaration block",
    "parse a css rule",
    "parse a css stylesheet",
    "parse a css value",
    "parse a cssstylevalue",
    "parse a date component",
    "parse a date or time string",
    "parse a date string",
    "parse a declaration",
    "parse a document rule predicate",
    "parse a duration",
    "parse a duration string",
    "parse a filter pair",
    "parse a global date and time string",
    "parse a group of selectors",
    "parse a json string to a javascript value",
    "parse a json string to an infra value",
    "parse a jwk",
    "parse a key",
    "parse a list of component values",
    "parse a list of css page selectors",
    "parse a list of declarations",
    "parse a list of rules",
    "parse a local date and time string",
    "parse a local type record",
    "parse a margin",
    "parse a media query",
    "parse a media query list",
    "parse a mime type",
    "parse a mime type from bytes",
    "parse a month component",
    "parse a month string",
    "parse a page range",
    "parse a pattern string",
    "parse a percentage string",
    "parse a privatekeyinfo",
    "parse a relative selector",
    "parse a response's Content Security Policies",
    "parse a rule",
    "parse a sandboxing directive",
    "parse a selector",
    "parse a serialized CSP",
    "parse a serialized CSP list",
    "parse a server-timing header field",
    "parse a signed additional bid",
    "parse a single range header value",
    "parse a sizes attribute",
    "parse a smart-poster action record",
    "parse a smart-poster size record",
    "parse a smart-poster type record",
    "parse a source aggregatable debug reporting config",
    "parse a speculation rule",
    "parse a srcset attribute",
    "parse a string into an abstract matrix",
    "parse a style block's contents",
    "parse a stylesheet",
    "parse a stylesheet's contents",
    "parse a subjectpublickeyinfo",
    "parse a subset",
    "parse a text directive",
    "parse a time component",
    "parse a time string",
    "parse a time-zone offset component",
    "parse a time-zone offset string",
    "parse a url",
    "parse a url search variance",
    "parse a vint",
    "parse a week string",
    "parse a yearless date component",
    "parse a yearless date string",
    "parse aggregatable debug reporting data",
    "parse aggregatable dedup keys",
    "parse aggregatable filtering id max bytes",
    "parse aggregatable key-values",
    "parse aggregatable trigger data",
    "parse aggregatable values",
    "parse aggregation keys",
    "parse allowed trusted scoring signals origins",
    "parse an adrender ad size",
    "parse an adrender dimension value",
    "parse an advertising data filter",
    "parse an aggregatable debug reporting config",
    "parse an aggregation coordinator",
    "parse an aggregation key piece",
    "parse an asn.1 structure",
    "parse an attribution destination",
    "parse an equivalence map",
    "parse an event-trigger value",
    "parse an https origin",
    "parse an import map string",
    "parse an mp3 frame",
    "parse an ndef absolute-url record",
    "parse an ndef external type record",
    "parse an ndef mime type record",
    "parse an ndef record",
    "parse an ndef smart-poster record",
    "parse an ndef text record",
    "parse an ndef unknown record",
    "parse an ndef url record",
    "parse an optional 64-bit signed integer",
    "parse an optional 64-bit unsigned integer",
    "parse an origin-bound one-time code message",
    "parse and validate a site",
    "parse and validate server response",
    "parse and verify a bidding code or update url",
    "parse and verify a trusted signals url",
    "parse as a forgiving selector list",
    "parse as an integer",
    "parse attribution destinations",
    "parse attribution scope values for source",
    "parse attribution scopes",
    "parse attribution scopes for trigger",
    "parse document policy",
    "parse error",
    "parse errors",
    "parse event triggers",
    "parse filter config",
    "parse filter data",
    "parse filter values",
    "parse filters",
    "parse html from a string",
    "parse json bytes to a javascript value",
    "parse json bytes to an infra value",
    "parse json from bytes",
    "parse json into infra values",
    "parse max event states",
    "parse orientation data reading",
    "parse records from bytes",
    "parse report windows",
    "parse response's Clear-Site-Data header",
    "parse response's content security policies",
    "parse single-value number reading",
    "parse source-registration json",
    "parse speculation rules",
    "parse summary buckets",
    "parse summary operator",
    "parse the fragment directive",
    "parse the report descriptor",
    "parse the webvtt cue settings",
    "parse top-level report windows",
    "parse trigger data into a trigger spec map",
    "parse trigger specs",
    "parse url",
    "parse url pattern",
    "parse xyz reading",
    "parsed as a forgiving selector list",
    "parsed payment method manifest",
    "parser cannot change the mode flag",
    "parser document",
    "parser inserted flag",
    "parser metadata",
    "parser pause flag",
    "parser-aborted",
    "parsing",
    "parsing a calculation",
    "parsing a json string to a javascript value",
    "parsing a json string to an infra value",
    "parsing a signed exchange",
    "parsing as a forgiving selector list",
    "parsing as json",
    "parsing b2 cbor headers",
    "parsing b3 cbor headers",
    "parsing json bytes to a javascript value",
    "parsing json bytes to an infra value",
    "parsing the blocklist",
    "parsing the bluetooth service class id blocklist",
    "parsing the gatt assigned numbers",
    "parsing the gatt blocklist",
    "parsing the invariant prefix",
    "parsing the manufacturer data blocklist",
    "parsing the report descriptor",
    "parsing the signature header field",
    "parsing_init_segment",
    "parsing_media_segment",
    "part",
    "part list",
    "part-like pseudo-elements",
    "partial assignment",
    "partial canonicalization function",
    "partial derivative",
    "partial dictionary",
    "partial interface",
    "partial interface mixin",
    "partial invalidation",
    "partial link text",
    "partial link text selector",
    "partial namespace",
    "partial reference",
    "partially available",
    "partially visible",
    "participant",
    "participants in a working group",
    "participants in an interest group",
    "participate in a working group as an invited expert",
    "partition nonce",
    "party",
    "pass extraction",
    "pass through filter",
    "pass-through",
    "passes rate obfuscation test",
    "passes rate test",
    "passive fingerprinting",
    "passive scanning",
    "passkey",
    "passkey platform authenticator",
    "password",
    "past names map",
    "patch application algorithm",
    "patch format",
    "patch map",
    "patch map entries",
    "patent advisory group",
    "patent review draft",
    "patent review drafts",
    "path",
    "path components",
    "path id map",
    "path percent-encode set",
    "path segment",
    "path-absolute-non-windows-file-url string",
    "path-absolute-url string",
    "path-part",
    "path-part match",
    "path-relative-scheme-less-url string",
    "path-relative-url string",
    "pathname options",
    "pattern",
    "pattern mask",
    "pattern matching algorithm",
    "pattern parser",
    "pattern string",
    "pause",
    "pause an animation",
    "pause-after",
    "pause-before",
    "paused for in-band content",
    "paused for user interaction",
    "pausing all input sources",
    "payee",
    "payer",
    "payer detail changed algorithm",
    "payer details",
    "payerdetailchange",
    "payload field",
    "payload length field",
    "payment",
    "payment app failure algorithm",
    "payment handler",
    "payment handler window",
    "payment method",
    "payment method identifier",
    "payment method manifest",
    "payment method provider",
    "payment request is showing",
    "payment-relevant browsing context",
    "paymentmethodchange",
    "paymentrequest updated algorithm",
    "paymentrequest(methoddata, details, options)",
    "paymentrequest.paymentrequest()",
    "pbkdf2params",
    "pcenchar",
    "pdf viewer mime type objects",
    "pdf viewer mime types",
    "pdf viewer plugin names",
    "pdf viewer plugin objects",
    "pdf viewer supported",
    "peachpuff",
    "peak brightness",
    "peeridentity",
    "pending",
    "pending abort request",
    "pending animation event queue",
    "pending external speculation rule resource",
    "pending first pointer down",
    "pending image record",
    "pending immersive session",
    "pending initial intersectionobserver targets",
    "pending key downs",
    "pending makereadonly tuple",
    "pending mutation observers",
    "pending parsing-blocking script",
    "pending pause task",
    "pending play task",
    "pending playback rate",
    "pending pointer capture target override",
    "pending pointer downs",
    "pending processor construction data",
    "pending render state",
    "pending request",
    "pending resource-timing start time",
    "pending scroll event targets",
    "pending shared storage budget debit",
    "pending table character tokens",
    "pending text track change notification flag",
    "pending top layer removals",
    "pending write tuple",
    "pending-substitution value",
    "pendingdisposition",
    "pendingexception",
    "per buyer bid generator",
    "per signals url bid generator",
    "per table brotli patch",
    "per-type virtual sensor metadata",
    "perceivable",
    "percent encoded",
    "percent encoding",
    "percent-column",
    "percent-decode a text directive term",
    "percent-encoded byte",
    "percent-encoding",
    "percentage",
    "percentage contribution",
    "percentencodedbyte",
    "perform a background fetch",
    "perform a microtask checkpoint",
    "perform a navigation api traversal",
    "perform a pointer move",
    "perform a scroll",
    "perform a security check",
    "perform actions",
    "perform automatic text track selection",
    "perform implementation-specific action dispatch steps",
    "perform pending transition operations",
    "perform shared checks",
    "perform storage maintenance",
    "perform vibration",
    "performance",
    "performance entry buffer",
    "performance entry buffer map",
    "performance observer task queued flag",
    "performance timeline",
    "performance timeline task source",
    "performancemark constructor",
    "performbuiltinuv(internalretry)",
    "performing a microtask checkpoint",
    "periodic sync processing queue",
    "periodic sync registration",
    "periodic sync scheduler",
    "periodicsync event",
    "periodicwave",
    "periodicwaveconstraints",
    "periodicwaveoptions",
    "peripheral",
    "permanent identifier",
    "permanent identifier(s)",
    "permanently de-identified",
    "permissible worker",
    "permission",
    "permission key",
    "permission request algorithm",
    "permission resource",
    "permission state",
    "permission store",
    "permission store entry",
    "permissions",
    "permissions policy",
    "permissions policy state",
    "permissions policy violation reports",
    "permissions rp id",
    "permissions task source",
    "permissions-policy",
    "permissions-policy-report-only",
    "permissions-source-expression",
    "permissionstatus update steps",
    "persisted replace state",
    "persisted user state",
    "persistent css style sheet",
    "persistent notification",
    "personalization",
    "perspective",
    "perspective matrix",
    "perspective()",
    "perspective-origin",
    "peru",
    "phase",
    "phases",
    "phony assignment",
    "photo",
    "phrase boundary",
    "phrase boundary detection",
    "phrasing content",
    "physical",
    "physical address",
    "physical bottom",
    "physical dimensions",
    "physical direction",
    "physical hand input source",
    "physical left",
    "physical maximum tag",
    "physical minimum tag",
    "physical miplevel-specific texture extent",
    "physical resources",
    "physical right",
    "physical top",
    "physical unit",
    "pick an encoding for a form",
    "picked",
    "picture",
    "picture-in-picture support",
    "picture-in-picture window",
    "pin/uv auth protocol",
    "pinch zoom",
    "pincodepointlength",
    "ping-from",
    "ping-to",
    "pink",
    "pinretries",
    "pinuvauthtoken permissions",
    "pipe chain",
    "pipeline",
    "pipeline constant id",
    "pipeline creation",
    "pipeline-creation error",
    "pipeline-overridable",
    "pipeline-overridable constant default value",
    "pipeline-overridable constant identifier string",
    "piping",
    "pitch",
    "pitch-range",
    "pixel",
    "pixel density descriptor",
    "pixel density descriptor value",
    "pixel manipulation",
    "pixel unit",
    "pixel-column",
    "pixels",
    "place-content",
    "place-items",
    "place-self",
    "placeholder",
    "placeholder axis",
    "placeholder button",
    "placeholder canvas element",
    "placeholder label option",
    "plain type",
    "plaintext",
    "plaintext state",
    "plaintext-only",
    "plan to navigate",
    "planar",
    "plane",
    "plane-detection",
    "planned navigation",
    "platform",
    "platform attachment",
    "platform authenticators",
    "platform collector",
    "platform collector mapping",
    "platform contribution buckets",
    "platform contribution priority weight",
    "platform credential",
    "platform descriptor",
    "platform key-agreement key",
    "platform object",
    "platform sensor",
    "platform version resource",
    "platform wake lock",
    "platform-managed enterprise attestation",
    "platform_version",
    "play an animation",
    "play effects with type",
    "play next episode",
    "play-during",
    "playback control",
    "playback direction",
    "playback rate",
    "playback volume",
    "playbackorder",
    "playhead position",
    "playing",
    "plug-ins",
    "plugin",
    "plugins array",
    "plum",
    "plural rules operands record",
    "plus-darker",
    "plus-lighter",
    "pmi",
    "png datastream",
    "png editor",
    "png four-byte unsigned integer",
    "png image",
    "png two-byte unsigned integer",
    "point",
    "pointer",
    "pointer capture",
    "pointer capture target override",
    "pointer event types",
    "pointer events are not disabled",
    "pointer events disabled",
    "pointer input source",
    "pointer interaction value map",
    "pointer is drag set",
    "pointer lock state",
    "pointer parameter tag",
    "pointer type",
    "pointer-events",
    "pointer-interactable",
    "pointer-interactable element",
    "pointer-interactable paint tree",
    "pointer-lock options",
    "pointer-lock target",
    "pointercancel",
    "pointerdown",
    "pointerlockchange",
    "pointerlockerror",
    "pointermove",
    "pointerparametermaybenonuniform",
    "pointerparameternorestriction",
    "pointerup",
    "points of interest",
    "policies",
    "policy",
    "policy cache",
    "policy configuration",
    "policy container",
    "policy directive",
    "policy directives",
    "policy origin",
    "policy request headers",
    "policy response headers",
    "policy value",
    "policy-controlled client hints features",
    "policy-controlled feature",
    "policy-token",
    "poly",
    "polygon",
    "polyline",
    "pop a ruby level",
    "pop tag",
    "popover close watcher",
    "popover focusing steps",
    "popover invoker",
    "popover light dismiss",
    "popover pointerdown target",
    "popover showing or hiding",
    "popover target attribute activation behavior",
    "popover target element",
    "popover toggle task tracker",
    "popover visibility state",
    "populate the bluetooth cache",
    "populate the list of pending text tracks",
    "populate the pose",
    "populate with html/head/body",
    "popup sandboxing flag set",
    "port 1",
    "port 2",
    "port message queue",
    "port-invalid",
    "port-out-of-range",
    "port-part",
    "port-part matches",
    "portal",
    "portal browsing context",
    "portal host object",
    "portal state",
    "portal task source",
    "portal-src",
    "portrait",
    "portrait orientation",
    "portrait-primary",
    "portrait-secondary",
    "poses may be reported",
    "poses must be limited",
    "position",
    "position box",
    "position fallback origin",
    "position option",
    "position options list",
    "position state",
    "position-anchor",
    "position-area",
    "position-area grid",
    "position-try",
    "position-try-fallbacks",
    "position-try-options",
    "position-try-order",
    "position-visibility",
    "positional alignment",
    "positioned",
    "positioned box",
    "positioned element/box",
    "positioning rectangle",
    "positioning scheme",
    "positioning schemes:",
    "positive-integer",
    "possible blocking tokens",
    "possibly appropriate alternatives",
    "possibly update the key generator",
    "post",
    "post resource",
    "post-alignment shift",
    "post-connection steps",
    "post-multiplied",
    "post-multiply",
    "post-navigation checks",
    "post-office-box",
    "post-prerendering activation geolocation watch process id",
    "postal-code",
    "posted message task source",
    "posted task task source",
    "poster frame",
    "posture",
    "posture values table",
    "potential crop-target",
    "potential destination",
    "potential event target",
    "potential-trigger-set",
    "potentialcustomelementname",
    "potentially active",
    "potentially add a largestcontentfulpaint entry",
    "potentially delays the load event",
    "potentially process scroll behavior",
    "potentially render-blocking",
    "potentially reset the focus",
    "potentially scrollable",
    "potentially strip trailing spaces from an opaque path",
    "potentially trustworthy origin",
    "potentially trustworthy url",
    "pow()",
    "powderblue",
    "power efficient",
    "powerful feature",
    "powerless color component",
    "pq",
    "pr",
    "pragma-set default language",
    "pre",
    "pre-base",
    "pre-base vowel",
    "pre-configured minimum pin length",
    "pre-flight",
    "pre-insert",
    "pre-interpretation",
    "pre-lock conditions",
    "pre-multiplied",
    "pre-multiplied data type name",
    "pre-multiply",
    "pre-remove",
    "pre-specified report parameters",
    "pre-specified report parameters map",
    "preceding element",
    "precomposed",
    "preconnect",
    "predeclared",
    "predicate",
    "predicted events",
    "predicted events list",
    "predominant figure position",
    "preferable candidate",
    "preference",
    "preferred artwork image",
    "preferred aspect ratio",
    "preferred color scheme",
    "preferred css style sheet set name",
    "preferred density-corrected dimensions",
    "preferred facing mode",
    "preferred height",
    "preferred inline size of a glyph stretched along the block axis",
    "preferred line height",
    "preferred native depth sensing capability",
    "preferred native depth sensing format",
    "preferred order",
    "preferred resolution",
    "preferred size",
    "preferred size property",
    "preferred width",
    "prefetch",
    "prefetch candidate",
    "prefetch ip anonymization policy",
    "prefetch record",
    "prefetchrecord",
    "prefix",
    "prefix flag",
    "prefix index",
    "prefix map",
    "prefixed",
    "prefixed name",
    "preload",
    "preload entry",
    "preload key",
    "preload script",
    "preload script map",
    "preloadable hsts host",
    "premultiplied alpha",
    "premultiplied color values",
    "preparation-time document",
    "prepare an application context",
    "prepare an event",
    "prepare an image for presentation",
    "prepare append",
    "prepare lists",
    "prepare the platform runtime",
    "prepare the script element",
    "prepare to clear origin's data",
    "prepare to run a callback",
    "prepare to run script",
    "preparing the platform runtime",
    "prerender candidate",
    "prerender record",
    "prerendering navigable",
    "prerendering traversable",
    "prescan a byte stream to determine its encoding",
    "present an install prompt",
    "present coordinates",
    "presentation",
    "presentation attributes",
    "presentation connection",
    "presentation connection state",
    "presentation connections",
    "presentation controllers monitor",
    "presentation controllers promise",
    "presentation display",
    "presentation display availability",
    "presentation displays",
    "presentation identifier",
    "presentation identifiers",
    "presentation interval",
    "presentation message data",
    "presentation message type",
    "presentation of the install prompt",
    "presentation order",
    "presentation request url",
    "presentation request urls",
    "presentation response",
    "presentation start time",
    "presentation style",
    "presentation time",
    "presentation timestamp",
    "presentation url",
    "presentation-change-event",
    "presentation-connection-close-event",
    "presentation-connection-message",
    "presentation-connection-open-request",
    "presentation-connection-open-response",
    "presentation-start-request",
    "presentation-start-response",
    "presentation-termination-event",
    "presentation-termination-request",
    "presentation-termination-response",
    "presentation-url-availability-event",
    "presentation-url-availability-request",
    "presentation-url-availability-response",
    "presentational hint",
    "presentations",
    "presenting an install prompt",
    "preserved white space",
    "pressure observer task queued",
    "pressure source",
    "pressure source sample",
    "pressure states",
    "pressureobserver task source",
    "preventdefault",
    "preview",
    "previous block",
    "previous context",
    "previous current time",
    "previous document unload timing",
    "previous frame starting point",
    "previous frame transform-indifferent starting point",
    "previous frame visual representation",
    "previous win",
    "previously focused element",
    "previousproof",
    "prf",
    "primary",
    "primary action",
    "primary affiliation",
    "primary content element",
    "primary entry page",
    "primary filter primitive tree",
    "primary image track",
    "primary input source",
    "primary interface",
    "primary orientation",
    "primary pointer",
    "primary service discovery",
    "primary squeeze action",
    "primary squeeze button",
    "primary trigger",
    "primary view",
    "primitive appearance",
    "primitive restart value",
    "primitive types",
    "principal block-level box",
    "principal box",
    "principal writing mode",
    "print page",
    "print when loaded",
    "print-color-adjust",
    "printable area",
    "printing steps",
    "priority",
    "priority candidates",
    "privacy feature",
    "privacy feature in an observer",
    "privacy policy",
    "privacypolicy",
    "private address",
    "private field values",
    "private network access check",
    "private network request",
    "private-aggregation",
    "private-network-access-id",
    "private-network-access-name",
    "privatekey",
    "privileged no-cors request-header name",
    "problemdetails",
    "procedure timeouts",
    "process a base url string",
    "process a color member",
    "process a fetch storage access for bounce tracking mitigations",
    "process a file handler item",
    "process a general storage access for bounce tracking mitigations",
    "process a key action",
    "process a keyframe-like object",
    "process a keyframes argument",
    "process a link header",
    "process a miniapp manifest",
    "process a miniapp package",
    "process a network event",
    "process a null action",
    "process a pause action",
    "process a pointer action",
    "process a pointer move action",
    "process a pointer up or pointer down action",
    "process a queue",
    "process a shortcut",
    "process a text member",
    "process a timing argument",
    "process a tokenizing error",
    "process a urlpatterninit",
    "process a web authentication assertion for bounce tracking mitigations",
    "process a wheel action",
    "process accept types",
    "process an attribution eligible response",
    "process an attribution source",
    "process an attribution source response",
    "process an attribution trigger response",
    "process an attributionsrc response",
    "process an html paste event",
    "process an image resource from json",
    "process an image that finished loading",
    "process an imageresource from an api",
    "process an input source action sequence",
    "process an item",
    "process blob parts",
    "process capabilities",
    "process close watchers",
    "process contributions for a batching scope",
    "process cookie changes",
    "process document load for bounce tracking",
    "process dt or dd",
    "process early hint headers",
    "process fragment",
    "process hash for init",
    "process hostname for init",
    "process image resources",
    "process image that finished loading",
    "process internal resource link",
    "process internal resource links",
    "process link headers",
    "process navigation start for bounce tracking",
    "process password for init",
    "process pathname for init",
    "process pending external speculation rule resources",
    "process pending pointer capture",
    "process periodic sync registrations",
    "process pointer parameters",
    "process port for init",
    "process protocol for init",
    "process remote tracks",
    "process response received for bounce tracking",
    "process scoread output",
    "process scroll behavior",
    "process search for init",
    "process the addition of a remote track",
    "process the app_id member",
    "process the client_mode member",
    "process the color_scheme member",
    "process the control message queue",
    "process the description member",
    "process the device_type member",
    "process the digital signatures",
    "process the dir member",
    "process the display member",
    "process the file_handlers member",
    "process the frame attributes",
    "process the home_tab member",
    "process the id member",
    "process the iframe attributes",
    "process the lang member",
    "process the linked resource",
    "process the lock request queue",
    "process the miniapp manifest",
    "process the new_note_url member",
    "process the new_tab_button member",
    "process the note_taking member",
    "process the orientation member",
    "process the pages member",
    "process the permission resource's name member",
    "process the permission resource's reason member",
    "process the platform version's min_code member",
    "process the platform version's release_type member",
    "process the platform version's target_code member",
    "process the platform_version member",
    "process the private aggregation contributions for an auction",
    "process the protocol_handlers member",
    "process the related_applications member",
    "process the removal of a remote track",
    "process the req_permissions member",
    "process the result of a begintransaction",
    "process the scope member",
    "process the scope_patterns member",
    "process the share_target member",
    "process the shortcuts member",
    "process the speculation-rules header",
    "process the start_url member",
    "process the tab_strip member",
    "process the url member of an application",
    "process the version member",
    "process the version's code member",
    "process the version's name member",
    "process the widget's min_code member",
    "process the widget's name member",
    "process the widget's path member",
    "process the widgets member",
    "process the window member",
    "process the window's auto_design_width member",
    "process the window's background_text_style member",
    "process the window's design_width member",
    "process the window's enable_pull_down_refresh member",
    "process the window's fullscreen member",
    "process the window's navigation_bar_text_style member",
    "process the window's navigation_bar_title_text member",
    "process the window's navigation_style member",
    "process the window's on_reach_bottom_distance member",
    "process the window's orientation member",
    "process top layer removals",
    "process unconsumed launch params",
    "process updateifolderthanms",
    "process username for init",
    "process vertices",
    "process()",
    "processing",
    "processing a manifest",
    "processing a miniapp manifest",
    "processing a queue",
    "processing algorithm",
    "processing an input buffer",
    "processing an item",
    "processing blob parts",
    "processing mode",
    "processing model",
    "processing modes",
    "processing the backup element queue",
    "processing the digital signatures",
    "processing the launch_handler member",
    "processing the manifest",
    "processing the miniapp manifest",
    "processing units",
    "processing vibration patterns",
    "processing-input-buffer",
    "processor construction data",
    "processor state",
    "processorcancel",
    "processorclose",
    "processorpull",
    "processors",
    "produce a generator result",
    "producer",
    "producing an xml serialization of a dom node",
    "product id",
    "product name",
    "product of two unit maps",
    "profile",
    "profile fundamentals",
    "profile(s)",
    "profiles",
    "profiling session",
    "program error",
    "progress",
    "progress end value",
    "progress start value",
    "progress value",
    "progress()",
    "progress-based timeline",
    "progressiondirection",
    "progressive image",
    "progressive image frame generation",
    "prohibited",
    "proleptic gregorian calendar",
    "proleptic-gregorian date",
    "prolog",
    "promise",
    "promise rejection delay",
    "promise type",
    "promote an upcoming api method tracker to ongoing",
    "prompt handler configuration",
    "prompt the user to choose",
    "prompting the user to choose",
    "proof",
    "proof chain",
    "proof generation",
    "proof graph",
    "proof purpose",
    "proof serialization algorithm",
    "proof set",
    "proof verification",
    "proof verification algorithm",
    "proofgraph",
    "proofpurpose",
    "proofvalue",
    "propagate",
    "propagation",
    "proper instance",
    "proper subgraph",
    "proper table child",
    "proper table row parent",
    "proper table-row parent",
    "properties",
    "properties that disable native appearance for widgets",
    "property",
    "property names",
    "property that disables native appearance for widgets",
    "property value",
    "property-name",
    "property-scoped context",
    "proposed additions",
    "proposed amendments",
    "proposed corrections",
    "proposed envelope",
    "proposed recommendation",
    "proprietary extension",
    "protected",
    "protected by some form of user verification",
    "protected mode",
    "protected term definition",
    "protected worker",
    "protocol component matches a special scheme",
    "protocol handler description",
    "provisioning profile",
    "provoking vertex",
    "proximity",
    "proximity reading parsing algorithm",
    "proximity sensor",
    "proximity to the viewport",
    "proximity virtual sensor type",
    "proximity-sensor-feature",
    "proxy",
    "proxy configuration",
    "proxy configuration object",
    "proxy-authentication entry",
    "proxytype",
    "pseudo-class",
    "pseudo-class:::first",
    "pseudo-class:::left",
    "pseudo-class:::right",
    "pseudo-classes",
    "pseudo-classes:::active",
    "pseudo-classes:::focus",
    "pseudo-classes:::hover",
    "pseudo-classes:::lang",
    "pseudo-classes:::link",
    "pseudo-classes:::visited",
    "pseudo-compound selector",
    "pseudo-element",
    "pseudo-element root",
    "pseudo-element tree",
    "pseudo-elements",
    "pseudo-elements:::after",
    "pseudo-elements:::before",
    "pseudo-elements:::first-letter",
    "pseudo-elements:::first-line",
    "pseudo-units",
    "pstevaluate",
    "pstfinalize",
    "pstkeycommitments",
    "public",
    "public address",
    "public bluetooth address",
    "public device address",
    "public key",
    "public key credential",
    "public key credential source",
    "public participants",
    "publication context",
    "publication date",
    "publication manifest",
    "publication resource",
    "publication type",
    "publicexponent",
    "publickey",
    "publickey-credentials-create-feature",
    "publickey-credentials-get-feature",
    "publish",
    "publishing web site",
    "pull source",
    "pull-into descriptor",
    "pullbidirectionalstream",
    "pulldatagrams",
    "pullunidirectionalstream",
    "pulse()",
    "purge expired bit debits from all navigation entropy ledgers",
    "purple",
    "push a ruby annotation",
    "push a ruby level",
    "push endpoint",
    "push message",
    "push onto the list of active formatting elements",
    "push service",
    "push source",
    "push subscription",
    "push tag",
    "pushsubscriptionchange",
    "q",
    "quad",
    "quad width",
    "quadrilateral",
    "quads",
    "qualified name",
    "qualifiers",
    "quality",
    "quantization",
    "query",
    "query a permission",
    "query ad k-anonymity count",
    "query cache",
    "query component ad k-anonymity count",
    "query container",
    "query container name",
    "query cookies",
    "query file system permission",
    "query generated bid k-anonymity count",
    "query k-anonymity count",
    "query percent-encode set",
    "query reporting id k-anonymity count",
    "query the \"bluetooth\" permission",
    "query the bluetooth cache",
    "queryhandwritingrecognizer(constraint)",
    "querying file system permission",
    "queue",
    "queue a \"message\" event",
    "queue a bgfetch task",
    "queue a contact picker task",
    "queue a control message",
    "queue a cross-origin embedder policy corp violation report",
    "queue a cross-origin embedder policy inheritance violation",
    "queue a details toggle event task",
    "queue a fetch task",
    "queue a global task",
    "queue a global task for GPUDevice",
    "queue a media element task",
    "queue a microtask",
    "queue a mutation observer microtask",
    "queue a mutation record",
    "queue a navigation performanceentry",
    "queue a performanceentry",
    "queue a popover toggle event task",
    "queue a pressure observer task",
    "queue a record",
    "queue a scheduler task",
    "queue a signed exchange report",
    "queue a storage task",
    "queue a task",
    "queue a tree mutation record",
    "queue a violation report for access from an opened window",
    "queue a violation report for access from another window",
    "queue a violation report for access from the opener",
    "queue a violation report for access to an opened window",
    "queue a violation report for access to another window",
    "queue a violation report for access to the opener",
    "queue a violation report for browsing context group switch when navigating away from a coop response",
    "queue a violation report for browsing context group switch when navigating to a coop response",
    "queue an automatic expiry task",
    "queue an element task",
    "queue an intersection observer task",
    "queue an intersectionobserverentry",
    "queue an ml task",
    "queue reports for delivery",
    "queue the navigation timing entry",
    "queue the performanceobserver task",
    "queue timeline",
    "queue timeline property",
    "queue violation reports for accesses",
    "queue-timeline example term",
    "queuing strategy",
    "quirks mode",
    "quotaexceedederror",
    "quotation mark system",
    "quote depth",
    "quotes",
    "qwerty",
    "r",
    "race response",
    "radial-gradient()",
    "radialgradient",
    "radical elements",
    "radical gap",
    "radical glyph",
    "radicaldegreebottomraisepercent",
    "radicaldisplaystyleverticalgap",
    "radicalextraascender",
    "radicalkernafterdegree",
    "radicalkernbeforedegree",
    "radicalrulethickness",
    "radicalverticalgap",
    "radio button group",
    "raised initial",
    "random access point",
    "random()",
    "random-caching key",
    "random-item()",
    "randomized aggregatable attribution report delay",
    "randomized null attribution report rate excluding source registration time",
    "randomized null attribution report rate including source registration time",
    "randomized report delay",
    "randomized response output configuration",
    "randomized source response",
    "range",
    "range context",
    "range diagnostic filter",
    "range end",
    "range removal",
    "range start",
    "rasterization mask",
    "rasterizationpoint",
    "rasterize",
    "rasterize polygon",
    "rate limiting",
    "rate obfuscation",
    "rate-limit scope",
    "ratio",
    "ratio-dependent axis",
    "ratio-determining axis",
    "raw text elements",
    "raw value",
    "rawtext end tag name state",
    "rawtext end tag open state",
    "rawtext less-than sign state",
    "rawtext state",
    "ray()",
    "rb",
    "rcdata end tag name state",
    "rcdata end tag open state",
    "rcdata less-than sign state",
    "rcdata state",
    "rdate",
    "rdf dataset",
    "rdf document",
    "rdf entail",
    "rdf graph",
    "rdf interpretation",
    "rdf literal",
    "rdf serializer/deserializer",
    "rdf serializers/deserializers",
    "rdf source",
    "rdf statement",
    "rdf term",
    "rdf terms",
    "rdf triple",
    "rdf unsatisfiable",
    "rdf vocabulary",
    "rdf-compatible xsd types",
    "rdf/xml document",
    "rdf:html",
    "rdf:json",
    "rdf:xmlliteral",
    "rdfc-1.0",
    "rdfd1",
    "rdfd1a",
    "rdfd2",
    "rdfdataset-add-graph",
    "rdfdataset-add-graphname",
    "rdfgraph-add-triple",
    "rdfs entails",
    "rdfs interpretation",
    "rdfs vocabulary",
    "rdfs1",
    "rdfs10",
    "rdfs11",
    "rdfs12",
    "rdfs13",
    "rdfs2",
    "rdfs3",
    "rdfs4a",
    "rdfs4b",
    "rdfs5",
    "rdfs6",
    "rdfs7",
    "rdfs8",
    "rdfs9",
    "re-snap",
    "re-used graphics",
    "react to changes in the environment",
    "react to the user revoking permission",
    "read a body",
    "read access",
    "read as a font representation",
    "read bd_addr command",
    "read buffer",
    "read bytes",
    "read characteristic descriptors",
    "read errors",
    "read long characteristic descriptors",
    "read method",
    "read only",
    "read only arraybuffer",
    "read operation",
    "read request",
    "read the imports",
    "read the resource header",
    "read web custom format",
    "read-into request",
    "read-loop",
    "read-only depth-stencil",
    "read-only mode",
    "read-only parameter",
    "read/write mode",
    "readEncodedData",
    "readable byte stream",
    "readable byte stream queue entry",
    "readable side",
    "readable stream",
    "readable stream reader",
    "reader",
    "readiness state",
    "reading a body",
    "reading progression direction",
    "reading quantization algorithm",
    "reading system",
    "reading systems",
    "reading timestamp",
    "reading-flow",
    "ready",
    "ready for post-load tasks",
    "ready to be parser-executed",
    "real time reporting contribution",
    "real time reporting contributions map",
    "real-world environment",
    "realm id",
    "reason",
    "reasons",
    "reasons array",
    "reassociation",
    "rec",
    "rec track",
    "rec2100-hlg",
    "rec2100-linear",
    "rec2100-pq",
    "rec709 color space",
    "receive a message",
    "receive-algorithm",
    "received bytes",
    "received ip address",
    "received signal strength",
    "receivedatagrams",
    "receiver",
    "receives new button or axis input values",
    "receiving browsing context",
    "receiving browsing contexts",
    "receiving user agent",
    "recently picked directory map",
    "reclaim a codec",
    "recognize",
    "recognized",
    "recognized algorithm name",
    "recognized datatype iri",
    "recognized datatype iris",
    "recognized key format values",
    "recognized key type values",
    "recognized key usage values",
    "recognized types",
    "recommendation",
    "recommendation track",
    "recommendation-track",
    "recommended",
    "recommended motion vector texture resolution",
    "recommended range and default for a webauthn ceremony timeout",
    "recommended use",
    "recommended webgl color texture resolution",
    "recommended webgl depth texture resolution",
    "recommended webgl framebuffer resolution",
    "reconnection time",
    "reconstruct the active formatting elements",
    "reconsume",
    "reconsume the current input code point",
    "reconsume the current input token",
    "record",
    "record a redemption record",
    "record a user activation",
    "record classic script creation time",
    "record classic script execution start time",
    "record connection timing info",
    "record identifier",
    "record module script execution start time",
    "record of license destruction",
    "record pause duration",
    "record redemption timestamp",
    "record rendering time",
    "record stateful bounces for bounce tracking",
    "record task end time",
    "record task start time",
    "record timing info for event listener",
    "record timing info for microtask checkpoint",
    "record timing info for promise resolver",
    "record timing info for timer handler",
    "record timing info for user callback",
    "record type",
    "record(s) of license destruction",
    "record-namespace-loop",
    "recording the input",
    "recording the namespace information",
    "records of license destruction",
    "rect",
    "rectangle",
    "rectangle intersection",
    "rectangular orthogonal color",
    "rectify a csscolorangle",
    "rectify a csscolornumber",
    "rectify a csscolorpercent",
    "rectify a csscolorrgbcomp",
    "rectify a keywordish value",
    "rectify a numberish value",
    "recursively emit context created events",
    "recursively wait until configuration input promises resolve",
    "red",
    "red eye reduction",
    "redeemrequest",
    "redeemresponse",
    "redemption record",
    "redemptionrecords",
    "redemptiontimes",
    "redirect chain",
    "redirect count",
    "redirect status",
    "reduce accuracy",
    "reduced images",
    "reestablish the connection",
    "refer to",
    "reference",
    "reference blank node identifier",
    "reference box",
    "reference combinator",
    "reference image",
    "reference pixel",
    "reference space is supported",
    "reference type",
    "referenced",
    "referenced document subtree",
    "referenced element",
    "referencing modes",
    "referent",
    "referrals",
    "referrer policy",
    "referrer policy attribute",
    "referrer-policy",
    "referrerpolicy",
    "referrerurl",
    "reflect",
    "reflected content attribute name",
    "reflected idl attribute",
    "reflected target",
    "refresh",
    "refresh state",
    "refresh the memory buffer",
    "region",
    "region break",
    "region chain",
    "region flow content box",
    "region-fragment",
    "register",
    "register a custom property",
    "register a protocol handler",
    "register a system key press handler",
    "register an import map",
    "register bids for fordebuggingonly reports",
    "register file handlers",
    "register reporting metadata",
    "registered",
    "registered class constructors map",
    "registered custom property",
    "registered observer",
    "registered observer list",
    "registered performance observer",
    "registered storage endpoints",
    "registerfake(type, classconstructor)",
    "registerprotocolhandler() automation mode",
    "registrable origin label",
    "registrar",
    "registration",
    "registration ceremony",
    "registration extension",
    "registration info",
    "registration map",
    "registration state",
    "registry",
    "registry change",
    "registry data",
    "registry data report",
    "registry definition",
    "registry entry",
    "registry report",
    "registry section",
    "registry table",
    "registry track",
    "regular attribute",
    "regular interest group",
    "regular operation",
    "reification",
    "reified as a cssstylevalue",
    "reifier",
    "reify a <transform-function>",
    "reify a <transform-list>",
    "reify a color value",
    "reify a list of component values",
    "reify a math expression",
    "reify a numeric value",
    "reify a registered custom property value",
    "reify a var() reference",
    "reify an identifier",
    "reify as a cssstylevalue",
    "reifying triple",
    "reinitialize url",
    "reject",
    "reject and nullify the current lock promise",
    "reject job promise",
    "reject pending play promises",
    "reject the finished promise",
    "rejected",
    "rejecting",
    "rejection",
    "rel",
    "related",
    "related application",
    "related member",
    "related origins validation procedure",
    "related website set",
    "relationship",
    "relationship discovery",
    "relationship strings",
    "relationships",
    "relative color",
    "relative device orientation",
    "relative high resolution coarse time",
    "relative high resolution time",
    "relative iri reference",
    "relative iri references",
    "relative length",
    "relative length unit",
    "relative orientation sensor",
    "relative path",
    "relative position",
    "relative positioning",
    "relative selector",
    "relative selector anchor elements",
    "relative units",
    "relative-orientation virtual sensor type",
    "relative-url string",
    "relative-url-with-fragment string",
    "relatively position",
    "relatively positioned box",
    "relatively-positioned",
    "release",
    "release a lock",
    "release a read lock",
    "release a wake lock",
    "release a write lock",
    "release actions",
    "release early candidates",
    "release nfc",
    "release pointer capture",
    "release system resources",
    "release the lock",
    "release the wake lock",
    "release wake lock",
    "releases the wake lock",
    "releasing pointer capture",
    "relevant",
    "relevant agent",
    "relevant animations",
    "relevant animations for a subtree",
    "relevant child nodes",
    "relevant document",
    "relevant frame timing info",
    "relevant global object",
    "relevant mutations",
    "relevant name to cache map",
    "relevant owner to add",
    "relevant performance entry tuple",
    "relevant realm",
    "relevant request response list",
    "relevant settings object",
    "relevant to the user",
    "relevant types",
    "relevant value",
    "reload",
    "reload a document",
    "reload browsing contexts",
    "reload pending",
    "relying parties",
    "relying party",
    "relying party identifier",
    "rem()",
    "remaining",
    "remaining fragmentainer extent",
    "remaining free space",
    "remote",
    "remote end",
    "remote end definition",
    "remote end steps",
    "remote ends",
    "remote event task source",
    "remote playback device",
    "remote playback device availability",
    "remote playback devices",
    "remote playback source",
    "remote playback state",
    "remote resource",
    "remote source",
    "remote-playback-availability-event",
    "remote-playback-availability-request",
    "remote-playback-availability-response",
    "remote-playback-modify-request",
    "remote-playback-modify-response",
    "remote-playback-start-request",
    "remote-playback-start-response",
    "remote-playback-state-event",
    "remote-playback-termination-event",
    "remote-playback-termination-request",
    "remote-playback-termination-response",
    "remove",
    "remove a bucket",
    "remove a connection",
    "remove a css rule",
    "remove a css style sheet",
    "remove a permission store entry",
    "remove a track",
    "remove all connections",
    "remove all credentials",
    "remove all event listeners",
    "remove an animation effect",
    "remove an animator instance",
    "remove an attribute",
    "remove an attribute by name",
    "remove an attribute by namespace and local name",
    "remove an element from the top layer immediately",
    "remove an event listener",
    "remove an input source",
    "remove associated event-level reports and rate-limit records",
    "remove client hints from redirect if needed",
    "remove credential",
    "remove device from storage",
    "remove empty arrays",
    "remove event",
    "remove from the top layer immediately",
    "remove or update sources with incompatible attribution scope fields",
    "remove replaced animations",
    "remove sources with unselected attribution scopes",
    "remove sources with unselected attribution scopes for destination",
    "remove the fragment directive",
    "remove the track",
    "remove virtual authenticator",
    "removed from a document",
    "removed replace state",
    "removesourcebuffer",
    "removetrack",
    "removing steps",
    "rename waiting period",
    "render",
    "render document to a canvas",
    "render in the top layer",
    "render quantum",
    "render quantum size",
    "render stages",
    "render target component alignment",
    "render target pixel byte cost",
    "render with a fallback font face",
    "render with an invisible fallback font face",
    "render-blocked",
    "render-blocking",
    "render-blocking element set",
    "render-blocking mechanism",
    "render-blocking status",
    "renderable",
    "renderable element",
    "renderable format",
    "renderable texture view",
    "rendered content",
    "rendered element",
    "rendered legend",
    "rendered text collection steps",
    "rendered text fragment",
    "rendering opportunity",
    "rendering task source",
    "rendering thread",
    "rendering tree",
    "renderstate",
    "renounce",
    "renunciation",
    "reorder",
    "repeat()",
    "repeatable list",
    "repeated duration",
    "repeating-conic-gradient()",
    "repeating-linear-gradient()",
    "repeating-radial-gradient()",
    "replace",
    "replace an attribute",
    "replace data",
    "replace state",
    "replaceable animation",
    "replaced",
    "replaced element",
    "replacement",
    "replacement decoder",
    "replacement error returned",
    "report",
    "report a Scripting Policy violation",
    "report a private aggregation event",
    "report a warning to the console",
    "report an event",
    "report an exception",
    "report content security policy violations for request",
    "report count tag",
    "report creation and scheduling steps",
    "report descriptor",
    "report element timing",
    "report frame timing",
    "report id tag",
    "report image element timing",
    "report largest contentful paint",
    "report latest reading updated",
    "report paint timing",
    "report result",
    "report size tag",
    "report text element timing",
    "report the exception",
    "report the layout shift",
    "report the layout shift sources",
    "report type",
    "report validity steps",
    "report win",
    "report window",
    "report window list",
    "report-only document policy",
    "report-only reporting endpoint",
    "report-only value",
    "report-to",
    "report-uri",
    "report_to",
    "reporting cache",
    "reporting endpoint",
    "reporting entropy allowance",
    "reporting frequency",
    "reporting group",
    "reporting observer",
    "reporting rate",
    "reporting result",
    "reporting-endpoints",
    "represent",
    "representation",
    "representation data",
    "represented",
    "represents a shadow root",
    "represents a standard gamepad axis",
    "represents a standard gamepad button",
    "represents a web element",
    "represents a web frame",
    "represents a web window",
    "req_permissions",
    "request",
    "request a lock",
    "request a position",
    "request an element to be removed from the top layer",
    "request bluetooth devices",
    "request body",
    "request error steps",
    "request file system permission",
    "request hit test",
    "request id",
    "request matches cached item",
    "request method",
    "request permission to sign-up",
    "request permission to use",
    "request picture-in-picture algorithm",
    "request queue",
    "request referrer",
    "request referrer policy",
    "request removal from the top layer",
    "request response list",
    "request routing",
    "request sensor access",
    "request storage access",
    "request the \"usb\" permission",
    "request the xr permission",
    "request to close",
    "request to present an install prompt",
    "request url",
    "request-body-header name",
    "request-required-document-policy",
    "request_headers",
    "requested features",
    "requested sampling interval",
    "requested sampling rate",
    "requested url",
    "requesting file system permission",
    "requesting permission to use",
    "require all flag",
    "require well-formed",
    "require-document-policy",
    "require-trusted-types-for-directive",
    "required",
    "required anchor reference",
    "required constraints",
    "required csp",
    "required document policy",
    "required features",
    "required partition key attributes",
    "required-ascii-whitespace",
    "requiredalignof",
    "requiredtobeuniform.error",
    "requiredtobeuniform.info",
    "requiredtobeuniform.s",
    "requiredtobeuniform.warning",
    "requires dropped entries",
    "requires storing the policy container in history",
    "requires-directive",
    "reregisteredwhilefiring",
    "rescinded candidate recommendation",
    "rescinded recommendation",
    "reserialized",
    "reserved environment",
    "reserved identifiers",
    "reserved word",
    "reset",
    "reset algorithm",
    "reset audiodecoder",
    "reset audioencoder",
    "reset button",
    "reset implicitly",
    "reset observation window",
    "reset parser state",
    "reset the form owner",
    "reset the input state",
    "reset the insertion mode appropriately",
    "reset the rendering context to its default state",
    "reset videodecoder",
    "reset videoencoder",
    "reset-only sub-property",
    "resettable elements",
    "resident",
    "resident credential",
    "resident key",
    "resize",
    "resize the title bar area",
    "resizemode",
    "resizes-content",
    "resizes-visual",
    "resolution",
    "resolvable private address resolution procedure",
    "resolve",
    "resolve @view-transition rule",
    "resolve a blob url",
    "resolve a geolocation promise",
    "resolve a module integrity metadata",
    "resolve a module specifier",
    "resolve a relative path",
    "resolve a typed value",
    "resolve a url-like module specifier",
    "resolve a var() function",
    "resolve an arbitrary substitution function",
    "resolve an argument",
    "resolve an imports match",
    "resolve an origin",
    "resolve get client promise",
    "resolve inbound cross-document view-transition",
    "resolve indices",
    "resolve job promise",
    "resolve pending play promises",
    "resolve percentage heights in table-cell content:",
    "resolve the finished promise",
    "resolve the requested features",
    "resolved",
    "resolved descendant node",
    "resolved local value",
    "resolved type",
    "resolved value",
    "resolved value special case property",
    "resolved value special case property like color",
    "resolved value special case property like height",
    "resolved value special case property like top",
    "resolved-table-width",
    "resolvedbinding record",
    "resolves",
    "resolveuuidname",
    "resolving GPUTextureAspect",
    "resolving GPUTextureViewDescriptor defaults",
    "resource",
    "resource document",
    "resource fetch algorithm",
    "resource header",
    "resource identifier",
    "resource info",
    "resource interface of a shader",
    "resource list",
    "resource metadata management",
    "resource name",
    "resource selection algorithm",
    "resource timing buffer current size",
    "resource timing buffer full event pending flag",
    "resource timing buffer size limit",
    "resource timing secondary buffer",
    "resource timing secondary buffer current size",
    "resources",
    "respond to paymentrequest algorithm",
    "respond to permission revocation",
    "response",
    "response body info",
    "response object",
    "response status",
    "response type",
    "response_headers",
    "rest",
    "rest-after",
    "rest-before",
    "restart the animation",
    "restorable scrollable regions",
    "restore persisted state",
    "restore scroll position data",
    "restore the history object state",
    "restore the window",
    "restrictable mediastreamtrack",
    "restricted",
    "restriction mechanism",
    "restriction-states",
    "restrictions for contents of script elements",
    "restrictiontarget production",
    "restrictownaudio",
    "result",
    "resume",
    "resume nfc",
    "resume steps",
    "retarget",
    "retargeting",
    "retrieve a key from an object store",
    "retrieve a miniapp zip container",
    "retrieve a preferred prefix string",
    "retrieve a redemption record",
    "retrieve a referenced value from an index",
    "retrieve a token",
    "retrieve a value from an index",
    "retrieve a value from an object store",
    "retrieve multiple keys from an object store",
    "retrieve multiple referenced values from an index",
    "retrieve multiple values from an index",
    "retrieve multiple values from an object store",
    "retrieving a miniapp zip container",
    "retrieving a preferred prefix string",
    "retrieving an extern value",
    "return state",
    "return the Sec-CH-UA value for a request",
    "return the Sec-CH-UA-Full-Version-List value for a request",
    "return type",
    "return value",
    "returns",
    "returnvaluemaybenonuniform",
    "rev",
    "reveal",
    "reverse an animation",
    "reverse property",
    "revoke bluetooth access",
    "rewind",
    "rewind and set state",
    "rewrite: apply bvar domainofapplication",
    "rewrite: attributes",
    "rewrite: ci presentation mathml",
    "rewrite: ci type annotation",
    "rewrite: cn based_integer",
    "rewrite: cn constant",
    "rewrite: cn presentation mathml",
    "rewrite: cn sep",
    "rewrite: condition",
    "rewrite: csymbol type annotation",
    "rewrite: defint",
    "rewrite: defint limits",
    "rewrite: diff",
    "rewrite: element",
    "rewrite: int",
    "rewrite: interval qualifier",
    "rewrite: lambda",
    "rewrite: lambda domainofapplication",
    "rewrite: limits condition",
    "rewrite: n-ary domainofapplication",
    "rewrite: n-ary relations",
    "rewrite: n-ary relations bvar",
    "rewrite: n-ary setlist domainofapplication",
    "rewrite: n-ary unary domainofapplication",
    "rewrite: n-ary unary set",
    "rewrite: n-ary unary single",
    "rewrite: nthdiff",
    "rewrite: partialdiffdegree",
    "rewrite: quantifier",
    "rewrite: restriction",
    "rewrite: tendsto",
    "rfcb",
    "rgb format",
    "rgb merging",
    "rgb()",
    "rgba()",
    "rhsvalue",
    "richness",
    "ridge",
    "right",
    "right page",
    "right-hand side",
    "right-to-left",
    "rmin",
    "roaming authenticators",
    "roaming credential",
    "role",
    "roles",
    "root",
    "root directories",
    "root directory",
    "root element",
    "root font-relative lengths",
    "root identifier",
    "root inline box",
    "root wai-aria node",
    "rootfile",
    "rootfiles",
    "rosybrown",
    "rotate",
    "rotate3d()",
    "rotatex()",
    "rotatey()",
    "rotatez()",
    "rotation",
    "rotation rate",
    "rough interoperability",
    "round a value",
    "round()",
    "round-tripping",
    "rounding",
    "roundup",
    "route",
    "routing requests",
    "row",
    "row group",
    "row group box",
    "row group header",
    "row groups",
    "row header",
    "row-gap",
    "row/column-grid width maximum (gridmax)",
    "row/column-grid width minimum (gridmin)",
    "rowmin",
    "rows",
    "rowspan",
    "royalblue",
    "rp",
    "rp id",
    "rrule",
    "rsa-oaep key export steps",
    "rsa-oaep key import steps",
    "rsa-pss key export steps",
    "rsa-pss key import steps",
    "rsahashedimportparams",
    "rsahashedkeyalgorithm",
    "rsahashedkeygenparams",
    "rsakeyalgorithm",
    "rsakeygenparams",
    "rsaoaepparams",
    "rsaotherprimesinfo",
    "rsapssparams",
    "rsassa-pkcs1-v1_5 key export steps",
    "rsassa-pkcs1-v1_5 key import steps",
    "rssi",
    "rt",
    "rtc",
    "rtcconfiguration",
    "rtcerror",
    "rtcerrorinit",
    "rtcicecandidate()",
    "rtcidentityassertion",
    "rtcidentityassertionresult",
    "rtcidentityprovider",
    "rtcidentityproviderdetails",
    "rtcidentityproviderglobalscope",
    "rtcidentityprovideroptions",
    "rtcidentityproviderregistrar",
    "rtcidentityvalidationresult",
    "rtcpeerconnection",
    "rtcprioritytype",
    "rtcsctptransport connected",
    "rtl",
    "rtp media api",
    "ruby",
    "ruby annotation",
    "ruby annotation box",
    "ruby annotation container",
    "ruby annotation container box",
    "ruby base",
    "ruby base box",
    "ruby base container",
    "ruby base container box",
    "ruby columns",
    "ruby container",
    "ruby container box",
    "ruby formatting context",
    "ruby segments",
    "ruby-align",
    "ruby-merge",
    "ruby-overhang",
    "ruby-position",
    "rule set",
    "rules for distinguishing if a resource is text or binary",
    "rules for identifying an unknown mime type",
    "rules for parsing a hash-name reference",
    "rules for parsing a legacy color value",
    "rules for parsing a legacy font size",
    "rules for parsing a list of dimensions",
    "rules for parsing a list of floating-point numbers",
    "rules for parsing dimension values",
    "rules for parsing floating-point number values",
    "rules for parsing integers",
    "rules for parsing non-negative integers",
    "rules for parsing nonzero dimension values",
    "rules for parsing simple color values",
    "rules for serializing simple color values",
    "rules for sniffing audio and video specifically",
    "rules for sniffing fonts specifically",
    "rules for sniffing images specifically",
    "rules for sniffing in a plugin context",
    "rules for sniffing in a script context",
    "rules for sniffing in a style context",
    "rules for updating the display of webvtt text tracks",
    "rules for updating the text track rendering",
    "rules on anonymous table objects",
    "run a classic script",
    "run a generator",
    "run a host function",
    "run a module script",
    "run a work queue",
    "run a worker",
    "run animators",
    "run csp initialization for a document",
    "run csp initialization for a global object",
    "run job",
    "run service worker",
    "run steps after a timeout",
    "run the abort steps",
    "run the animation frame callbacks",
    "run the fullscreen steps",
    "run the resize steps",
    "run the scroll steps",
    "run the update intersection observations steps",
    "run the video frame request callbacks",
    "run webdriver bidi preload scripts",
    "run-ad-auction",
    "run-in",
    "run-in box",
    "run-in sequence",
    "runnable",
    "running",
    "running a control message",
    "running elements",
    "running nested apply history step",
    "running position",
    "running script",
    "running transition",
    "running()",
    "runtime expression",
    "runtime-sized",
    "rx",
    "ry",
    "s",
    "saddlebrown",
    "safariplatform",
    "safariversion",
    "safe zone",
    "safelisted schemes",
    "safely upgradable requests",
    "salmon",
    "salt",
    "saltlength",
    "salvageable",
    "same attribute",
    "same bluetooth device",
    "same origin",
    "same origin-domain",
    "same site",
    "same-document url reference",
    "same-loop windows",
    "same-origin",
    "same-origin request",
    "same-origin with its ancestors",
    "same-origin-allow-popups",
    "same-origin-ancestor",
    "same-origin-descendant",
    "same-origin-plus-coep",
    "same-origin-referrer request",
    "same-party",
    "same-permission",
    "samp",
    "sample",
    "sample a debug report",
    "sample buffer size limit",
    "sample depth scaling",
    "sample interval",
    "sample real time contributions",
    "samplebufferfull",
    "sampled type",
    "sampler",
    "sampler resource",
    "sampler types",
    "samplerate",
    "samples",
    "samplesize",
    "sampling frequency",
    "sampling rate",
    "sampling rates",
    "sandbox",
    "sandbox map",
    "sandbox propagates to auxiliary browsing contexts flag",
    "sandbox storage access by user activation flag",
    "sandboxed automatic features browsing context flag",
    "sandboxed auxiliary navigation browsing context flag",
    "sandboxed custom protocols navigation browsing context flag",
    "sandboxed document.domain browsing context flag",
    "sandboxed downloads browsing context flag",
    "sandboxed forms browsing context flag",
    "sandboxed modals flag",
    "sandboxed navigation browsing context flag",
    "sandboxed orientation lock browsing context flag",
    "sandboxed origin browsing context flag",
    "sandboxed pointer lock browsing context flag",
    "sandboxed presentation browsing context flag",
    "sandboxed scripts browsing context flag",
    "sandboxed top-level navigation with user activation browsing context flag",
    "sandboxed top-level navigation without user activation browsing context flag",
    "sandboxing flag set",
    "sandboxing flags",
    "sandybrown",
    "sanitize",
    "sanitize a url to send in a report",
    "sans-serif",
    "satisfiable",
    "satisfiable recognizing d",
    "satisfies",
    "satisfies its constraints",
    "saturated",
    "saturation",
    "save persisted state",
    "save-data",
    "savedata",
    "scalar",
    "scalar floating point to integral conversion",
    "scalar value",
    "scalar value string",
    "scale",
    "scale factor",
    "scale()",
    "scale3d()",
    "scaled",
    "scaled flex shrink factor",
    "scaled viewport size",
    "scalex()",
    "scaley()",
    "scalez()",
    "scan for devices",
    "scancode",
    "scanline",
    "scf",
    "schedule a posttask task",
    "schedule a selectionchange event",
    "schedule a task to invoke an algorithm",
    "schedule a yield continuation",
    "schedule job",
    "schedule user topics calculation",
    "scheduled event time",
    "scheduler task",
    "scheduler task queue",
    "scheduler task sources",
    "scheduling state",
    "schema.org boolean property",
    "scheme",
    "scheme fetch",
    "scheme-and-host",
    "scheme-part",
    "scheme-part match",
    "scheme-relative-file-url string",
    "scheme-relative-special-url string",
    "scheme-relative-url string",
    "scheme-source",
    "schemelessly same site",
    "scope",
    "scope proximity",
    "scope to job queue map",
    "scope-match a selectors string",
    "scope_patterns",
    "scoped context",
    "scoped descendant combinator",
    "scoped selector",
    "scoped style rules",
    "scopes",
    "scoping details",
    "scoping limit",
    "scoping root",
    "score and rank a bid",
    "scoring script failure bucket",
    "screen",
    "screen coordinate system",
    "screen ordering",
    "screen orientation change steps",
    "screen orientation values lists",
    "screen orientations",
    "screen reader",
    "screen wake lock",
    "screen wake lock permission revocation algorithm",
    "screen wake lock task source",
    "screenshots object",
    "script",
    "script attribute",
    "script data double escape end state",
    "script data double escape start state",
    "script data double escaped dash dash state",
    "script data double escaped dash state",
    "script data double escaped less-than sign state",
    "script data double escaped state",
    "script data end tag name state",
    "script data end tag open state",
    "script data escape start dash state",
    "script data escape start state",
    "script data escaped dash dash state",
    "script data escaped dash state",
    "script data escaped end tag name state",
    "script data escaped end tag open state",
    "script data escaped less-than sign state",
    "script data escaped state",
    "script data less-than sign state",
    "script data state",
    "script domain",
    "script evaluation environment settings object set",
    "script fetch options",
    "script fetcher",
    "script nesting level",
    "script runner",
    "script speculationrules",
    "script timeout error",
    "script timing info",
    "script-blocking style sheet set",
    "script-closable",
    "script-created parser",
    "script-may-access-clipboard",
    "script-src",
    "script-src-attr",
    "script-src-elem",
    "script-supporting elements",
    "script-triggered",
    "script-visible",
    "script.channel",
    "script.localvalue",
    "script.primitiveprotocolvalue",
    "script.remotereference",
    "scriptable mime type",
    "scripted content document",
    "scripted elements",
    "scripting flag",
    "scripting is disabled",
    "scripting is enabled",
    "scripting policy",
    "scripting policy pair",
    "scripting policy reports",
    "scripting resources",
    "scripting-policy",
    "scripting-policy-dict",
    "scripting-policy-report-only",
    "scriptlevel",
    "scriptpercentscaledown",
    "scriptprocessornode",
    "scripts may run for the newly-created document",
    "scriptscriptpercentscaledown",
    "scroll",
    "scroll a target into view",
    "scroll an element",
    "scroll an element into view",
    "scroll anchoring bounding rect",
    "scroll behavior",
    "scroll boundary",
    "scroll chain",
    "scroll chaining",
    "scroll completed",
    "scroll container",
    "scroll into view",
    "scroll marker control",
    "scroll marker group",
    "scroll offset",
    "scroll origin",
    "scroll origin position",
    "scroll position",
    "scroll position data",
    "scroll progress timelines",
    "scroll restoration mode",
    "scroll snap",
    "scroll snap area",
    "scroll snap container",
    "scroll snap position",
    "scroll snapport",
    "scroll to the beginning of the document",
    "scroll to the fragment",
    "scroll()",
    "scroll-behavior",
    "scroll-driven animations",
    "scroll-driven timelines",
    "scroll-margin",
    "scroll-margin-block",
    "scroll-margin-block-end",
    "scroll-margin-block-start",
    "scroll-margin-bottom",
    "scroll-margin-inline",
    "scroll-margin-inline-end",
    "scroll-margin-inline-start",
    "scroll-margin-left",
    "scroll-margin-right",
    "scroll-margin-top",
    "scroll-marker-group",
    "scroll-padding",
    "scroll-padding-block",
    "scroll-padding-block-end",
    "scroll-padding-block-start",
    "scroll-padding-bottom",
    "scroll-padding-inline",
    "scroll-padding-inline-end",
    "scroll-padding-inline-start",
    "scroll-padding-left",
    "scroll-padding-right",
    "scroll-padding-top",
    "scroll-snap-align",
    "scroll-snap-stop",
    "scroll-snap-type",
    "scroll-start-target",
    "scroll-timeline",
    "scroll-timeline-axis",
    "scroll-timeline-name",
    "scrollable overflow",
    "scrollable overflow area",
    "scrollable overflow rectangle",
    "scrollable overflow region",
    "scrollbar",
    "scrollbar gutter",
    "scrollbar-color",
    "scrollbar-gutter",
    "scrollbar-width",
    "scrolled into view",
    "scrollend",
    "scrolling area",
    "scrolling area origin",
    "scrolling box",
    "scrollport",
    "scrolls into view",
    "scrollsnapchangetargetblock",
    "scrollsnapchangetargetinline",
    "scrollsnapchanging block-axis target",
    "scrollsnapchanging inline-axis target",
    "sctp transport is connected",
    "sdr",
    "seagreen",
    "seamlessly update the playback rate",
    "search",
    "search invisible",
    "search origin",
    "searching for services",
    "seashell",
    "sec-ad-auction-fetch",
    "sec-browsing-topics",
    "sec-ch-dpr",
    "sec-ch-ua",
    "sec-ch-ua-arch",
    "sec-ch-ua-bitness",
    "sec-ch-ua-form-factors",
    "sec-ch-ua-full-version",
    "sec-ch-ua-full-version-list",
    "sec-ch-ua-mobile",
    "sec-ch-ua-model",
    "sec-ch-ua-platform",
    "sec-ch-ua-platform-version",
    "sec-ch-ua-wow64",
    "sec-ch-viewport-height",
    "sec-ch-viewport-width",
    "sec-ch-width",
    "sec-fetch-dest",
    "sec-fetch-mode",
    "sec-fetch-site",
    "sec-fetch-user",
    "sec-gpc",
    "sec-private-state-token",
    "sec-private-state-token-crypto-version",
    "sec-private-state-token-lifetime",
    "sec-purpose",
    "sec-redemption-record",
    "sec-required-csp",
    "sec-required-document-policy",
    "sec-shared-storage-writable",
    "second-factor platform authenticator",
    "second-factor roaming authenticator",
    "secondary",
    "secondary view",
    "secret key",
    "section",
    "sectioning content",
    "sections",
    "secure connection establishment",
    "secure context",
    "secure payment confirmation payment handler",
    "secure-payment-confirmation",
    "secured data document",
    "securing mechanism",
    "securing mechanisms",
    "security-sensitive members",
    "seek",
    "seek and get the next code point",
    "seeking",
    "segment break",
    "segment parser loop",
    "segment-completing close path",
    "segmentation",
    "select",
    "select a css style sheet set",
    "select a mapping",
    "select a presentation display",
    "select an account",
    "select an alternate resource",
    "select an appropriate key attribute value",
    "select an image source",
    "select an image source from a source set",
    "select an immersive xr device",
    "select an unused gamepad index",
    "select the best candidate",
    "select the indicated part",
    "select the next scheduler task queue from all schedulers",
    "select the scheduler task queue",
    "selected coordinate",
    "selected files",
    "selectedness",
    "selectedness setting algorithm",
    "selecting a mapping",
    "selecting an unused gamepad index",
    "selecting the best candidate",
    "selection",
    "selection bounds",
    "selection direction",
    "selection end",
    "selection start",
    "selectionchange",
    "selective disclosure",
    "selective forwarding middlebox",
    "selector",
    "selector list",
    "selector matches",
    "selector::match",
    "selector::subject of",
    "selectstart",
    "self",
    "self attestation",
    "self-alignment",
    "self-alignment properties",
    "self-closing flag",
    "self-closing start tag state",
    "self-origin",
    "self-property-list",
    "seller capability",
    "semantic",
    "semantic extension",
    "semantic label",
    "semantically",
    "semantics",
    "semantics of an expression",
    "send a beacon",
    "send a disconnect request",
    "send a message",
    "send a real time report",
    "send a response",
    "send a termination request",
    "send alert text",
    "send an error",
    "send an error response",
    "send click event",
    "send real time reports",
    "send report",
    "send request key frame algorithm",
    "send select update notifications",
    "send() algorithm",
    "send() flag",
    "send-algorithm",
    "senddatagrams",
    "sendpendingreports",
    "sensing range",
    "sensitive information",
    "sensitive text input",
    "sensor feature names",
    "sensor fusion",
    "sensor permission names",
    "sensor reading",
    "sensor task source",
    "sensor type",
    "sentences",
    "separated borders model",
    "seq",
    "seq_level_idx_0",
    "seq_profile",
    "seq_tier_0",
    "sequence",
    "sequence effect",
    "sequence of simple selectors",
    "sequence type",
    "sequential focus navigation",
    "sequential focus navigation order",
    "sequential focus navigation starting point",
    "sequential navigation search algorithm",
    "sequentially focusable",
    "serial number",
    "serial port profile service class id",
    "serial port task source",
    "serializable object",
    "serializable objects",
    "serialization agreement",
    "serialization of a color",
    "serialization of a site",
    "serialization of an origin",
    "serialization steps",
    "serialize a calculation tree",
    "serialize a comma-separated list",
    "serialize a css component value",
    "serialize a css declaration",
    "serialize a css declaration block",
    "serialize a css rule",
    "serialize a css value",
    "serialize a csskeywordvalue",
    "serialize a cssmathvalue",
    "serialize a cssmatrixcomponent",
    "serialize a cssnumericvalue",
    "serialize a cssperspective",
    "serialize a csspropertyrule",
    "serialize a cssrotate",
    "serialize a cssscale",
    "serialize a cssskew",
    "serialize a cssskewx",
    "serialize a cssskewy",
    "serialize a csstransformvalue",
    "serialize a csstranslate",
    "serialize a cssunitvalue",
    "serialize a cssunparsedvalue",
    "serialize a cssvariablereferencevalue",
    "serialize a currency tag",
    "serialize a device",
    "serialize a group of selectors",
    "serialize a javascript value to a json string",
    "serialize a javascript value to json bytes",
    "serialize a list of css page selectors",
    "serialize a list of reports to json",
    "serialize a local",
    "serialize a math function",
    "serialize a media feature value",
    "serialize a media query",
    "serialize a media query list",
    "serialize a mime type",
    "serialize a mime type to bytes",
    "serialize a prompt handler configuration",
    "serialize a response url for reporting",
    "serialize a selector",
    "serialize a simple selector",
    "serialize a string",
    "serialize a url",
    "serialize a verbose debug report",
    "serialize a whitespace-separated list",
    "serialize an <an+b> value",
    "serialize an aggregatable attribution report",
    "serialize an aggregatable debug report",
    "serialize an aggregatable report",
    "serialize an array-like",
    "serialize an attribution debug info",
    "serialize an attribution report",
    "serialize an event-level report",
    "serialize an identifier",
    "serialize an infra value to a json string",
    "serialize an infra value to json bytes",
    "serialize an integer",
    "serialize as a list",
    "serialize as a mapping",
    "serialize as a remote value",
    "serialize attribution destinations",
    "serialize cookie",
    "serialize cookie header",
    "serialize header",
    "serialize i/o queue",
    "serialize json to bytes",
    "serialize primitive protocol value",
    "serialize prompt devices",
    "serialize protocol bytes",
    "serialize protocol messages",
    "serialize required policy",
    "serialize set-cookie header",
    "serialize the calculation tree",
    "serialize the timeouts configuration",
    "serialize the user prompt handler",
    "serialize-attributes-loop",
    "serialized canonical form",
    "serialized cookie",
    "serialized csp",
    "serialized csp list",
    "serialized directive",
    "serialized document policy",
    "serialized large-blob array",
    "serialized options",
    "serialized source list",
    "serialized state",
    "serialized-directive",
    "serialized-permissions-policy",
    "serialized-policy",
    "serialized-policy-directive",
    "serialized-policy-list",
    "serialized-source-list",
    "serialized-tt-configuration",
    "serializeddata",
    "serializes as void",
    "serializing",
    "serializing a calculation tree",
    "serializing a javascript value to a json string",
    "serializing a javascript value to json bytes",
    "serializing a request origin",
    "serializing an attribute value",
    "serializing an infra value to a json string",
    "serializing an infra value to json bytes",
    "serializing the calculation tree",
    "serif",
    "server auction browser signals",
    "server auction interest group",
    "server auction previous win",
    "server auction request context",
    "server-sent events",
    "server-side credential",
    "server-side credential storage modality",
    "server-side public key credential source",
    "server-timing header field",
    "service",
    "service changed",
    "service constructor",
    "service data",
    "service definition",
    "service interoperability requirements",
    "service provider",
    "service uuid",
    "service uuid data type",
    "service worker",
    "service worker agent",
    "service worker client",
    "service worker has no pending events",
    "service worker registration",
    "service worker timing info",
    "service-worker",
    "service-worker-allowed",
    "session",
    "session closed",
    "session configuration flags",
    "session history",
    "session history entries",
    "session history entry",
    "session history traversal parallel queue",
    "session history traversal queue",
    "session id",
    "session not created",
    "session storage",
    "session storage area",
    "session storage bucket",
    "session storage holder",
    "session timeouts",
    "session websocket connections",
    "sessions",
    "set",
    "set a configuration",
    "set a cookie",
    "set a css declaration",
    "set a document response",
    "set a local session description",
    "set a permission",
    "set a permission store entry",
    "set a property",
    "set a remote session description",
    "set a session description",
    "set a track's muted state",
    "set an attribute",
    "set an attribute value",
    "set an existing attribute value",
    "set an imagebitmaprenderingcontext's output bitmap",
    "set and filter html",
    "set animator instance of worklet animation",
    "set attribution reporting headers",
    "set bitmap dimensions",
    "set credential properties",
    "set credential properties parameters",
    "set descriptor",
    "set entries",
    "set event timing entry duration",
    "set explicitly",
    "set internal ids if needed",
    "set local session description",
    "set mouse event modifiers",
    "set mouseevent attributes from native",
    "set object",
    "set of all command names",
    "set of availability callbacks",
    "set of comma-separated tokens",
    "set of controlled presentations",
    "set of devices",
    "set of elements with rendered text",
    "set of mock capture devices",
    "set of owned text nodes",
    "set of presentation availability objects",
    "set of presentation controllers",
    "set of previously reported paints",
    "set of rtcrtptransceivers",
    "set of scripts that will execute as soon as possible",
    "set of sessions for which an event is enabled",
    "set of space-separated tokens",
    "set of subresources for texture copy",
    "set of transceivers",
    "set of user contexts",
    "set permission",
    "set pointer capture",
    "set pointerlock attributes for mousemove",
    "set private token properties for request from private token",
    "set redemption headers",
    "set registration",
    "set remote session description",
    "set request's referrer policy on redirect",
    "set rph registration mode",
    "set sensor settings",
    "set size getter",
    "set source url for script block",
    "set spc transaction mode",
    "set storage access",
    "set text content",
    "set the Sec-Required-CSP header",
    "set the aggregation coordinator for a batching scope",
    "set the application badge",
    "set the associated remote streams",
    "set the canceled flag",
    "set the configuration",
    "set the content attribute",
    "set the current base text",
    "set the current browsing context",
    "set the current time",
    "set the current top-level browsing context",
    "set the device information exposure",
    "set the frozen base url",
    "set the high word",
    "set the inner text steps",
    "set the login status",
    "set the muted state",
    "set the ongoing navigation",
    "set the playback rate",
    "set the pre-specified report parameters for a batching scope",
    "set the required CSP",
    "set the search origin",
    "set the selection direction",
    "set the selection range",
    "set the session description",
    "set the source url of a portal element",
    "set the start time",
    "set the url",
    "set the value of a new indexed property",
    "set the value of a new named property",
    "set the value of an existing indexed property",
    "set the value of an existing named property",
    "set the virtual keyboard bounding rect",
    "set timeouts",
    "set up a window environment settings object",
    "set up a worker environment settings object",
    "set up a worklet environment settings object",
    "set up browsing context features",
    "set up the classic script request",
    "set up the module script request",
    "set user verified",
    "set window rect",
    "set-cookie state",
    "set-dest",
    "set-login",
    "set-mode",
    "set-site",
    "set-user",
    "setdelayenabled",
    "setlike",
    "setlike declaration",
    "setremotedescription",
    "setter",
    "setter steps",
    "setting",
    "setting a property",
    "setting a session description",
    "setting pointer capture",
    "setting the local session description",
    "setting the remote session description",
    "setting the search origin",
    "setting the space on a layer",
    "settings",
    "settings dictionary",
    "settled",
    "setup cross-document view-transition",
    "setup packet",
    "setup serviceworkerglobalscope",
    "setup stage",
    "setup the resource timing entry",
    "setup transition pseudo-elements",
    "setup view transition",
    "sex",
    "sext",
    "sext,nonoverlapping",
    "sfm",
    "sha-2",
    "sha-256",
    "sha-384",
    "sha-512",
    "shader",
    "shader execution end",
    "shader execution start",
    "shader module creation",
    "shader stage attributes",
    "shader stage input",
    "shader stage output",
    "shader stages",
    "shader-creation error",
    "shader-output mask",
    "shaders",
    "shadow color",
    "shadow host",
    "shadow root",
    "shadow root identifier",
    "shadow root reference object",
    "shadow roots",
    "shadow tree",
    "shadow-including ancestor",
    "shadow-including descendant",
    "shadow-including inclusive ancestor",
    "shadow-including inclusive descendant",
    "shadow-including parent",
    "shadow-including preorder, depth-first traversal",
    "shadow-including root",
    "shadow-including tree order",
    "shadowrootclonable",
    "shadowrootdelegatesfocus",
    "shadowrootmode",
    "shadowrootserializable",
    "shadows",
    "shadows are only drawn if",
    "shall",
    "shall not",
    "shape a stretchy glyph",
    "shape elements",
    "shape()",
    "shape-image-threshold",
    "shape-inside",
    "shape-margin",
    "shape-outside",
    "shape-padding",
    "shape-rendering",
    "shape-subtract",
    "shaped border edge",
    "shaped content edge",
    "shaped edge",
    "shaped margin edge",
    "shaped padding edge",
    "shaping",
    "shaping of the glyph assembly",
    "sharable scheme",
    "share target",
    "shared alignment context",
    "shared attribute processing steps for iframe and frame elements",
    "shared declarative refresh steps",
    "shared history push/replace state steps",
    "shared secret",
    "shared storage",
    "shared storage bucket",
    "shared storage database",
    "shared storage navigation budget charged",
    "shared storage navigation budget table",
    "shared storage reporting budget",
    "shared storage reporting budget charged",
    "shared storage shed",
    "shared utf-16 decoder",
    "shared worker",
    "shared worker agent",
    "shared worker manager",
    "shared-storage-cross-origin-worklet-allowed",
    "shared-storage-write",
    "shares",
    "sharetarget",
    "sharetargetparams",
    "sharpness",
    "sheet",
    "sheets",
    "shift flag",
    "shift_jis",
    "shift_jis decoder",
    "shift_jis encoder",
    "shift_jis lead",
    "shifted character",
    "shifted state",
    "shipping address",
    "shipping address changed algorithm",
    "shipping option changed algorithm",
    "shippingaddresschange",
    "shippingoptionchange",
    "short",
    "short cooldown period",
    "short_name",
    "shortcut item",
    "shortcut item's",
    "shorten a url's path",
    "shortened local name",
    "shorter",
    "shorthand",
    "shorthand properties",
    "shorthand property",
    "should",
    "should add entry",
    "should add performanceeventtiming",
    "should be rendered",
    "should element's inline type behavior be blocked by content security policy?",
    "should fetching request be blocked as mixed content?",
    "should navigation request of type be blocked by content security policy?",
    "should navigation response to navigation request be blocked by permissions policy?",
    "should navigation response to navigation request of type in target be blocked by content security policy?",
    "should not",
    "should not initialize device tracking",
    "should processing be blocked by reporting-origin limit",
    "should report first contentful paint",
    "should request be blocked by content security policy?",
    "should response to request be blocked as mixed content?",
    "should response to request be blocked by content security policy?",
    "should response to request be blocked due to document policy",
    "should response to request be blocked due to mime type",
    "should response to request be blocked due to nosniff",
    "should restart loading the page for critical client hints",
    "should send a report unconditionally",
    "should skip event",
    "show",
    "show an idp login dialog",
    "show popover",
    "show poster flag",
    "show the picker, if applicable",
    "showing",
    "showing auto popover list",
    "shuffle a list",
    "shut down the session",
    "shutdown",
    "shutdown with an action",
    "sibling",
    "sibling-count()",
    "sibling-index()",
    "sideways typesetting",
    "sienna",
    "sign",
    "sign()",
    "signal a slot change",
    "signal a type change",
    "signal base value",
    "signal slots",
    "signal to abort the request",
    "signaling state",
    "signature",
    "signature counter",
    "signatures",
    "signed additional bid signature",
    "signed exchange report",
    "signed exchange version",
    "signed message",
    "significant change in orientation",
    "signing block",
    "signing block magic numbers",
    "signing blocks",
    "signing procedure",
    "silentcredentialdiscovery",
    "silently set the current time",
    "silver",
    "similar-origin window agent",
    "simple assignment",
    "simple color",
    "simple exception",
    "simple fullscreen document",
    "simple graph object",
    "simple interpretation",
    "simple iteration progress",
    "simple literal",
    "simple literals",
    "simple nominal range",
    "simple parameter",
    "simple selector",
    "simple term",
    "simple term definition",
    "simplify a calculation tree",
    "simplifying a calculation tree",
    "simply entail",
    "simulcast envelope",
    "sin()",
    "single byte content-range",
    "single-byte decoder",
    "single-byte encoder",
    "single-byte encoding",
    "single-device credential",
    "single-dot url path segment",
    "single-factor capable",
    "single-line flex container",
    "single-valued properties",
    "site",
    "site domain",
    "site-specific",
    "site-triggered install prompt",
    "site-wide tracking status resource",
    "six-bit decimal value",
    "size",
    "size containment",
    "size containment box",
    "size features",
    "size record",
    "sizeof",
    "sizeofmember",
    "sizes attribute",
    "sizing as if empty",
    "sizing property",
    "sizing type",
    "skeleton joint name",
    "skeleton joints",
    "skip ascii whitespace",
    "skip end tag",
    "skip its contents",
    "skip the view transition",
    "skip-when-determining-incumbent counter",
    "skipped contents",
    "skipping its contents",
    "skips its contents",
    "skolem iri",
    "skolemization",
    "skyblue",
    "slanted",
    "slateblue",
    "slategray",
    "slategrey",
    "slice",
    "slice blob",
    "slide",
    "slot",
    "slot-backed attribute",
    "slots",
    "slottable",
    "small",
    "small viewport size",
    "small viewport-percentage units",
    "smart card task source",
    "smart poster",
    "smart-poster",
    "smil",
    "smooth scroll",
    "smooth scroll aborted",
    "smooth scroll completed",
    "smoothing over time",
    "snap a length as a border width",
    "snap as a border width",
    "snap target",
    "snapshot containing block",
    "snapshot containing block origin",
    "snapshot containing block size",
    "snapshot source snapshot params",
    "snapshot target snapshot params",
    "snapshot the lock state",
    "snapshotstate",
    "snapshotted scroll offset",
    "sniff-scriptable flag",
    "snonext",
    "snow",
    "soft",
    "soft iron distortion",
    "soft update",
    "soft wrap break",
    "soft wrap opportunity",
    "solid",
    "solid fill",
    "some form of user verification",
    "sort a calculation's children",
    "sort and normalize a module specifier map",
    "sort and normalize scopes",
    "sound",
    "source",
    "source debug data type",
    "source document",
    "source expression",
    "source image",
    "source lists",
    "source mapping url",
    "source node",
    "source origin",
    "source pixel ratio",
    "source policy container",
    "source set",
    "source size",
    "source snapshot has transient activation",
    "source snapshot params",
    "source stopped state",
    "source type",
    "source-atop",
    "source-expression",
    "source-expression similar",
    "source-in",
    "source-out",
    "source-over",
    "source-registration json key",
    "sourcebuffer byte stream format specification",
    "sourcebuffer configuration",
    "sourcebuffer monitoring",
    "sourcebufferlist-getter",
    "sourceclose",
    "sourcedocument",
    "sourceended",
    "sourceopen",
    "sourceroot",
    "sources",
    "sourcescontent",
    "space to fill",
    "space warp",
    "space-like",
    "space-like element",
    "space-separated matching",
    "spaceafterscript",
    "spacer",
    "spaces",
    "spacing mark",
    "span",
    "span count",
    "spanning annotation",
    "sparql query",
    "sparql query string",
    "sparql request string",
    "sparql update string",
    "sparqlquery",
    "sparqlquerystring",
    "sparqlrequeststring",
    "sparqlupdatestring",
    "sparse bit set",
    "spatial navigation",
    "spatial navigation containers",
    "spatial navigation starting point",
    "spatial navigation steps",
    "spatial sensor",
    "spatial-navigation-action",
    "spatial-navigation-contain",
    "spatial-navigation-function",
    "spatialnavigation",
    "spc credential",
    "speak",
    "speak-as",
    "speak-header",
    "speak-numeral",
    "speak-punctuation",
    "special",
    "special keyword",
    "special operation",
    "special scheme",
    "special-query percent-encode set",
    "special-scheme-missing-following-solidus",
    "specific conditions",
    "specific type",
    "specification",
    "specifications",
    "specificity",
    "specified end delay",
    "specified flow",
    "specified iteration duration",
    "specified keyframe order",
    "specified length",
    "specified order",
    "specified size",
    "specified size suggestion",
    "specified start delay",
    "specified value",
    "specified values",
    "specifies a powerful feature",
    "speculation rule",
    "speculation rule set",
    "speculation-rules",
    "speculative fetch",
    "speculative html parser",
    "speculative mock element",
    "speech-rate",
    "spillover",
    "spillover effects",
    "spin the event loop",
    "spine",
    "spine plane",
    "split a string on ascii whitespace",
    "split a string on commas",
    "split a text node",
    "split external type",
    "split on ascii whitespace",
    "split on commas",
    "spoon-feed the parser",
    "spouse",
    "spread break",
    "springgreen",
    "sqrt()",
    "square",
    "sr field",
    "src",
    "src()",
    "src-origin",
    "srcset attribute",
    "srgb",
    "srgb color space",
    "srgb-linear",
    "srst",
    "sst",
    "stack",
    "stack frame",
    "stack level",
    "stack of open elements",
    "stack of template insertion modes",
    "stack trace for an exception",
    "stackbottomdisplaystyleshiftdown",
    "stackbottomshiftdown",
    "stackdisplaystylegapmin",
    "stackgapmin",
    "stacking context",
    "stacking contexts",
    "stacktopdisplaystyleshiftup",
    "stacktopshiftup",
    "stale",
    "stale element reference",
    "stale response",
    "stale timelines",
    "stale-while-revalidate response",
    "standalone axis",
    "standalone grid",
    "standalone vowel",
    "standard base64 alphabet",
    "standard dynamic range",
    "standard gamepad",
    "standard sample patterns",
    "standardize",
    "standardized payment method",
    "standardized payment method identifier",
    "standardized permission",
    "start a new parallel queue",
    "start a new session history traversal parallel queue",
    "start a presentation connection",
    "start a presentation from a default presentation request",
    "start an idle period",
    "start closing a presentation connection",
    "start closing the presentation connection",
    "start delay",
    "start intersection-observing a lazy loading element",
    "start listening for a websocket connection",
    "start page",
    "start page value",
    "start pages",
    "start referrer-initiated prerendering",
    "start register",
    "start tags",
    "start the nfc make read-only",
    "start the nfc write",
    "start the speculative html parser",
    "start the timer",
    "start the track processing model",
    "start url",
    "start user-agent initiated prerendering",
    "start with a number",
    "start with a windows drive letter",
    "start with an ident sequence",
    "startdrawing(hints)",
    "starting a new parallel queue",
    "starting a presentation from a default presentation request",
    "starting point",
    "starting style",
    "starting value",
    "startpoint-on-the-path",
    "starts with a number",
    "starts with a valid escape",
    "starts with a windows drive letter",
    "starts with an ident sequence",
    "startstreaming",
    "starttime",
    "state",
    "state function",
    "state initializing command",
    "stateful animator",
    "stateful animator definition",
    "stateful animator instance",
    "stateful bounce tracking map",
    "stateful commands",
    "stateful flag",
    "stateless animator",
    "statement",
    "statement at-rule",
    "states",
    "states set",
    "static address",
    "static attributes",
    "static command",
    "static context",
    "static device address",
    "static image",
    "static image document",
    "static operations",
    "static position",
    "static type",
    "static use",
    "static-position containing block",
    "static-position rectangle",
    "statically accessed",
    "statically typed language",
    "statically used",
    "statically validate the constraints",
    "stationary reference coordinate system",
    "stats object",
    "stats object reference",
    "stats selection algorithm",
    "stats value",
    "status",
    "status object",
    "status stage",
    "status-id",
    "steelblue",
    "step",
    "step base",
    "step easing function",
    "step position",
    "step scale factor",
    "step unit",
    "steps",
    "steps for determining the web app's chosen display mode",
    "steps for when a user changes payment method",
    "steps to check if a payment can be made",
    "steps to expose a media-resource-specific text track",
    "steps to fire beforeunload",
    "steps to install the web application",
    "steps to notify that an install prompt is available",
    "steps to respond to a payment request",
    "steps to run when the result is ready",
    "steps to silently determine if a credential is available for the current device",
    "steps to silently determine if a credential is spc-enabled",
    "steps to update the connection values",
    "steps to update the user preference",
    "steps to validate payment method data",
    "stereopannernode",
    "stereopanneroptions",
    "sticky activation",
    "sticky activation-gated api",
    "sticky position",
    "sticky view rectangle",
    "sticky-positioned",
    "sticky-positioned box",
    "stop",
    "stop all sources",
    "stop haptic effects",
    "stop intersection-observing a lazy loading element",
    "stop loading",
    "stop or comma",
    "stop sending and receiving",
    "stop the RTCRtpTransceiver",
    "stop the rtcrtptransceiver",
    "stop the sensor altogether",
    "stop the speculative html parser",
    "stopped",
    "stopped due to errors",
    "stopping",
    "stops parsing",
    "storable",
    "storage",
    "storage and persistence",
    "storage bottle",
    "storage bucket",
    "storage buffer",
    "storage endpoint",
    "storage identifier",
    "storage key",
    "storage partition",
    "storage partition key",
    "storage proxy map",
    "storage quota",
    "storage shed",
    "storage shelf",
    "storage shelves",
    "storage task source",
    "storage type",
    "storage usage",
    "storage-access",
    "storage-key-nonce",
    "storage-texel-formats",
    "storage:bucket-name",
    "store a record into an object store",
    "store type",
    "stored permission",
    "storedtoken",
    "strategy",
    "streaming-capabilities-request",
    "streaming-capabilities-response",
    "streaming-session-modify-request",
    "streaming-session-modify-response",
    "streaming-session-receiver-stats-event",
    "streaming-session-sender-stats-event",
    "streaming-session-start-request",
    "streaming-session-start-response",
    "streaming-session-terminate-event",
    "streaming-session-terminate-request",
    "streaming-session-terminate-response",
    "street-address",
    "stress",
    "stretch fit",
    "stretch-fit block size",
    "stretch-fit inline size",
    "stretch-fit size",
    "stretched",
    "stretchstackbottomshiftdown",
    "stretchstackgapabovemin",
    "stretchstackgapbelowmin",
    "stretchstacktopshiftup",
    "strict file interactability",
    "strict ordering",
    "strictly split",
    "strictly split a string",
    "strictness value",
    "strideof",
    "strike",
    "string",
    "string descriptor",
    "string direction",
    "string index tag",
    "string maximum tag",
    "string minimum tag",
    "string replace all",
    "string types",
    "string value of the extern type",
    "string()",
    "string-set",
    "stringification behavior",
    "stringifier",
    "strip and collapse ascii whitespace",
    "strip leading and trailing ascii whitespace",
    "strip newlines",
    "stripes()",
    "stroke",
    "stroke bounding box",
    "stroke painting area",
    "stroke positioning area",
    "stroke shape",
    "stroke steps",
    "stroke style",
    "stroke-align",
    "stroke-alignment",
    "stroke-break",
    "stroke-color",
    "stroke-dash-corner",
    "stroke-dash-justify",
    "stroke-dashadjust",
    "stroke-dasharray",
    "stroke-dashcorner",
    "stroke-dashoffset",
    "stroke-image",
    "stroke-linecap",
    "stroke-linejoin",
    "stroke-miterlimit",
    "stroke-opacity",
    "stroke-origin",
    "stroke-position",
    "stroke-repeat",
    "stroke-size",
    "stroke-width",
    "stroked",
    "strong",
    "strong scoping proximity",
    "strongly hidden",
    "struct",
    "structural element",
    "structural pseudo-classes",
    "structurally external element",
    "structure",
    "structured clone",
    "strut size",
    "stub elements",
    "style",
    "style & layout interleave",
    "style attribute",
    "style change event",
    "style containment",
    "style features",
    "style rule",
    "style sheet",
    "style-src",
    "style-src-attr",
    "style-src-elem",
    "stylemap",
    "sub",
    "sub-deserialization",
    "sub-document",
    "sub-property",
    "sub-pseudo-element",
    "sub-sampled",
    "sub-sampling",
    "sub-sampling factor",
    "sub-serialization",
    "subdivide into iterations",
    "subdomains",
    "subexpressions",
    "subframe weighting factor",
    "subgraph",
    "subgrid",
    "subgridded axis",
    "subject",
    "subject (of selector)",
    "subject's",
    "subjects",
    "subjects of the selector",
    "subkeys",
    "submission appeals",
    "submission value",
    "submit",
    "submit as entity body",
    "submit button",
    "submittable elements",
    "submitted from submit() method",
    "submitter",
    "subresource",
    "subresource request",
    "subscript/superscript pair",
    "subscriptbaselinedropmin",
    "subscription expiration time",
    "subscriptshiftdown",
    "subscripttopmax",
    "subsequent-sibling combinator",
    "subsidiary",
    "substantial",
    "substantive change",
    "substitute",
    "substitute a dashed function",
    "substitute a var()",
    "substitute an attr()",
    "substitute an env()",
    "substitute arbitrary substitution function",
    "substitute into a calc-size calculation",
    "substitution",
    "subsuperscriptgapmin",
    "subtag registry",
    "subtags",
    "subtitles",
    "subtle",
    "subtlecrypto",
    "succeed",
    "succeeded",
    "success",
    "success_fraction",
    "successful",
    "successful sampling rate",
    "suffering from a custom error",
    "suffering from a pattern mismatch",
    "suffering from a step mismatch",
    "suffering from a type mismatch",
    "suffering from an overflow",
    "suffering from an underflow",
    "suffering from bad input",
    "suffering from being missing",
    "suffering from being too long",
    "suffering from being too short",
    "suggestions source element",
    "suitable origin",
    "suitable sequentially focusable area",
    "summary",
    "summary bucket",
    "summary bucket list",
    "summary for its parent details",
    "summary operator",
    "summer time",
    "sunken initial",
    "sup",
    "superscriptbaselinedropmax",
    "superscriptbottommaxwithsubscript",
    "superscriptbottommin",
    "superscriptshiftup",
    "superscriptshiftupcramped",
    "superseded",
    "superseded recommendation",
    "superseded registry",
    "supplemental confidential council report",
    "supplemental content",
    "supplementary character",
    "supplementary code point",
    "supplied mime type",
    "supplied mime type detection algorithm",
    "support",
    "support depth sensing data format",
    "support depth sensing usage",
    "support depth sensing usage and data format combination",
    "support elementinternals",
    "support global identifiers for items",
    "support indexed properties",
    "support named properties",
    "supported",
    "supported by the user agent",
    "supported context formats",
    "supported css property",
    "supported features",
    "supported limits",
    "supported media session actions",
    "supported open() feature name",
    "supported operations",
    "supported physical transports",
    "supported property indices",
    "supported property names",
    "supported sensor options",
    "supported source types",
    "supported styling language",
    "supportedalgorithms",
    "supports bidi-only sessions",
    "supports hand tracking",
    "supports prefetch",
    "supports queries",
    "supports()",
    "supports-loading-mode",
    "suppress a pointer event stream",
    "suppress normal scroll restoration during ongoing navigation",
    "suppression trigger",
    "suppression window",
    "suppresslocalaudioplayback",
    "surface a candidate",
    "surface the candidate",
    "surrogate",
    "surrogate code point",
    "surrogate pair",
    "surrogate-character-reference",
    "surrogate-in-input-stream",
    "suspend nfc",
    "suspendable worker",
    "suspended",
    "suspended timer handles",
    "suspension time",
    "suspicious agent",
    "svg",
    "svg authoring tools",
    "svg content document",
    "svg context",
    "svg document fragment",
    "svg elements",
    "svg fragment identifier",
    "svg generators",
    "svg interpreters",
    "svg layout box",
    "svg namespace",
    "svg parameter fragment identifier",
    "svg servers",
    "svg user agent",
    "svg view specification",
    "svg viewers",
    "svg viewport origin box",
    "svg viewports",
    "swap",
    "swap due to a try-tactic",
    "sweetheart",
    "switch",
    "switch the fontfaceset to loaded",
    "switch the fontfaceset to loading",
    "switch to frame",
    "switch to parent frame",
    "switch to window",
    "swizzle",
    "syllabary",
    "syllable",
    "symbol",
    "symbols()",
    "symposia",
    "symposium",
    "sync",
    "sync animation timings to worklet",
    "sync local times to document",
    "sync registration",
    "sync requested flag",
    "syncbase",
    "synchronized",
    "synchronous flag",
    "synchronous navigation steps",
    "synchronous read method",
    "synchronous section",
    "synchronously replace the rules of a cssstylesheet",
    "syntactic content",
    "syntactic phrase",
    "syntactic token",
    "syntax component",
    "syntax component name",
    "syntax definition",
    "syntax of a standardized payment method identifier",
    "syntax string",
    "syntaxerror",
    "synthesize baseline",
    "synthesized baseline",
    "synthetic spread",
    "system clipboard",
    "system clipboard data",
    "system clipboard item",
    "system clipboard representation",
    "system color pairings",
    "system colors",
    "system exclusive",
    "system font",
    "system fonts",
    "system key press handler",
    "system real time",
    "system resources",
    "system visibility state",
    "system-level audio callback",
    "system-level audio callback buffer size",
    "t",
    "t1",
    "t2",
    "tab size",
    "tab stop",
    "tab-size",
    "tab_strip",
    "tabindex",
    "tabindex value",
    "tabindex-ordered focus navigation scope",
    "table",
    "table caption box",
    "table element",
    "table for cookie conversion",
    "table grid",
    "table grid box",
    "table intrinsic offsets",
    "table model",
    "table model error",
    "table object cache",
    "table of contents",
    "table of effective connection types",
    "table of endpoints",
    "table of location strategies",
    "table of maximum downlink speeds",
    "table of page load strategies",
    "table of provisional permissions",
    "table of standard capabilities",
    "table of standard storage partition key attributes",
    "table of standardized permissions",
    "table of standardized permissions of the web platform",
    "table wrapper box",
    "table-caption",
    "table-cell",
    "table-column",
    "table-column-group",
    "table-created",
    "table-footer-group",
    "table-grid box",
    "table-header-group",
    "table-internal",
    "table-layout",
    "table-non-root",
    "table-root",
    "table-row",
    "table-row-group",
    "table-track",
    "table-track-group",
    "table-wrapper box",
    "tablepatch",
    "tables",
    "tabs",
    "tabular container",
    "tag",
    "tag name",
    "tag name state",
    "tag note",
    "tag omission in text/html",
    "tag open state",
    "tag-terminating byte",
    "tagged image",
    "tagging",
    "taglength",
    "tags",
    "tail-time",
    "take a sample",
    "take element screenshot",
    "take pending play promises",
    "take screenshot",
    "tan",
    "tan()",
    "tao check",
    "target",
    "target anchor element",
    "target attribute named",
    "target contrast level",
    "target domain",
    "target element",
    "target entry",
    "target frame rate",
    "target main size",
    "target name",
    "target navigable",
    "target object",
    "target peer identity",
    "target property",
    "target snapshot params",
    "target snapshot sandboxing flags",
    "target-counter()",
    "target-counters()",
    "target-text()",
    "targetaddressspace",
    "targeted advertising",
    "targets",
    "tashkil",
    "task",
    "task handle",
    "task queues",
    "task scope",
    "task scope stack",
    "task source",
    "taxonomy",
    "tbody",
    "tcpserversocket task source",
    "tcpsocket task source",
    "td",
    "teal",
    "team",
    "team contact",
    "team correction",
    "team decision",
    "team representative in a working group",
    "team representative in an interest group",
    "team's decision",
    "team-only",
    "tear down a task scope",
    "technical agreement",
    "technical architecture group",
    "technical report",
    "tee a readable stream",
    "tel",
    "telephone type strings",
    "template",
    "template contents",
    "template list",
    "template list discovery",
    "template parameterization",
    "template parameters",
    "templatefriendlyname",
    "temporal layer",
    "temporarily unavailable",
    "temporary buffer",
    "term",
    "term definition",
    "term-equal",
    "terminate a presentation in a controlling browsing context",
    "terminate a presentation in a receiving browsing context",
    "terminate a worker",
    "terminate a worklet global scope",
    "terminate an algorithm",
    "terminate event callback handling",
    "terminate remaining locks and requests",
    "terminate service worker",
    "terminate the algorithm",
    "terminate this algorithm",
    "terminate-algorithm-controlling",
    "terminate-algorithm-receiving",
    "termination nesting level",
    "test case",
    "test of user presence",
    "testable assertion",
    "texel",
    "texel block",
    "texel block byte offset",
    "texel block copy footprint",
    "texel block height",
    "texel block memory cost",
    "texel block row",
    "texel block width",
    "texel format",
    "texel image",
    "text",
    "text chunk",
    "text composition system",
    "text content block element",
    "text content child element",
    "text content element",
    "text directive",
    "text directive allowing mime type",
    "text edit context",
    "text entry cursor position",
    "text format",
    "text format list",
    "text formats",
    "text input method",
    "text input service",
    "text node",
    "text node directionality",
    "text preparation algorithm",
    "text processing language",
    "text record",
    "text splice frame",
    "text state",
    "text style values",
    "text track cue",
    "text track cue order",
    "text track list of regions",
    "text tracks",
    "text-align",
    "text-align-all",
    "text-align-last",
    "text-anchor",
    "text-autospace",
    "text-box",
    "text-box-edge",
    "text-box-trim",
    "text-combine-upright",
    "text-decoration",
    "text-decoration-color",
    "text-decoration-fill",
    "text-decoration-line",
    "text-decoration-skip",
    "text-decoration-skip-box",
    "text-decoration-skip-ink",
    "text-decoration-skip-inset",
    "text-decoration-skip-self",
    "text-decoration-skip-spaces",
    "text-decoration-stroke",
    "text-decoration-style",
    "text-decoration-thickness",
    "text-decoration-trim",
    "text-direction list",
    "text-directions",
    "text-emphasis",
    "text-emphasis-color",
    "text-emphasis-position",
    "text-emphasis-skip",
    "text-emphasis-style",
    "text-group-align",
    "text-indent",
    "text-justify",
    "text-orientation",
    "text-over baseline",
    "text-overflow",
    "text-processing language",
    "text-rendering",
    "text-shadow",
    "text-size-adjust",
    "text-spacing",
    "text-spacing-trim",
    "text-track-cue",
    "text-transform",
    "text-under baseline",
    "text-underline-offset",
    "text-underline-position",
    "text-wrap",
    "text-wrap-mode",
    "text-wrap-style",
    "text/css",
    "text/event-stream",
    "text/html",
    "text/javascript",
    "text/json",
    "text/ping",
    "text/plain encoding algorithm",
    "text/uri-list",
    "text/vcard",
    "text/vtt",
    "text/xml",
    "textarea",
    "textarea effective height",
    "textarea effective width",
    "textarea wrapping transformation",
    "textdirective",
    "textdirectiveexplicitchar",
    "textdirectiveparameters",
    "textdirectiveprefix",
    "textdirectivestring",
    "textdirectivesuffix",
    "textinput",
    "textpath",
    "textphone",
    "texture",
    "texture coordinates",
    "texture copy sub-region",
    "texture gather",
    "texture gather compare",
    "texture resource",
    "texture subresources",
    "texture types",
    "texture unit",
    "texture view format compatible",
    "texture-view-aliasing",
    "tfoot",
    "th",
    "the 128-bit uuid represented",
    "the body element",
    "the curve name",
    "the document's referrer",
    "the drag data item kind",
    "the drag data item type string",
    "the embed element setup steps",
    "the empty string",
    "the event handler processing algorithm",
    "the exclusive range",
    "the given value",
    "the head element",
    "the html body element",
    "the html element",
    "the html syntax",
    "the inclusive range",
    "the javascript: url special case",
    "the kind of text track",
    "the legend element's accesskey delegatee",
    "the link is an alternative style sheet",
    "the location bar barprop object",
    "the menu bar barprop object",
    "the navigation must be a replace",
    "the personal bar barprop object",
    "the properties of an item",
    "the range",
    "the rules for choosing a navigable",
    "the scrollbar barprop object",
    "the special value *",
    "the status bar barprop object",
    "the template element",
    "the title element",
    "the toolbar barprop object",
    "the underlying resources of a layer are lost",
    "the worker's ports",
    "the xml syntax",
    "thead",
    "theme color",
    "third party",
    "third party context",
    "third party identifier name",
    "this",
    "thistle",
    "threeddarkshadow",
    "threedface",
    "threedhighlight",
    "threedlightshadow",
    "threedshadow",
    "threshold check algorithm",
    "throttling",
    "throw",
    "throw an exception",
    "throw-on-dynamic-markup-insertion counter",
    "thumb",
    "tick",
    "ticks",
    "tie track source to MediaDevices",
    "tilt",
    "time",
    "time marches on",
    "time scale",
    "time spaces",
    "time value",
    "time zone",
    "time zone identifiers",
    "time-based animation to a proportional animation",
    "time-zone offset",
    "timed out flag",
    "timeline",
    "timeline associated with a document",
    "timeline duration",
    "timeline offset",
    "timeline time to origin-relative time",
    "timeline-agnostic",
    "timeline-scope",
    "timelinebegin",
    "timeout",
    "timeouts configuration",
    "timer",
    "timer initialization steps",
    "timer nesting level",
    "timer table",
    "timer task source",
    "timestamp",
    "timing function",
    "timing info",
    "timing model",
    "timing nodes",
    "timing-allow-origin",
    "timing-eligible",
    "title",
    "title bar area",
    "title bar area env variables",
    "title bar area environmental variables",
    "title bar region resizes",
    "title record",
    "titlebar-area-height",
    "titlebar-area-width",
    "titlebar-area-x",
    "titlebar-area-y",
    "titlecase",
    "tk",
    "tnf field",
    "to",
    "to WGSL type",
    "to a texel value of texture format",
    "toc",
    "toggle",
    "toggle task tracker",
    "toggle()",
    "tojsvalue",
    "token",
    "token candidate",
    "token list",
    "tokenization",
    "tokenize",
    "tokenize policy",
    "tokenize the features argument",
    "tokenizer",
    "tokenstore",
    "tolocaltime record",
    "tomato",
    "tooltip attribute",
    "toomanyreads",
    "top",
    "top accent attachment",
    "top of the document",
    "top-level browsing context",
    "top-level calculation",
    "top-level collections",
    "top-level content document",
    "top-level document",
    "top-level element",
    "top-level expression",
    "top-level microdata item",
    "top-level traversable",
    "top-level traversable set",
    "top-level-storage-access",
    "topmost clicked popover",
    "topmost event target",
    "topmost popover ancestor",
    "topmost script-having execution context",
    "torch",
    "total horizontal border spacing",
    "total length",
    "total video frame count",
    "touch point",
    "touch surface",
    "touch surface enumeration order",
    "touch-action",
    "touch-action values",
    "touchcancel",
    "touchend",
    "touchmove",
    "touchstart",
    "tovaluetype",
    "towebassemblyvalue",
    "tr",
    "trace a path",
    "track",
    "track buffer",
    "track buffer ranges",
    "track description",
    "track ended by the user agent",
    "track id",
    "track label",
    "track language",
    "track list",
    "track section",
    "track set",
    "track sizing algorithm",
    "track update struct",
    "track url",
    "tracked",
    "tracker",
    "tracking",
    "tracking status resource space",
    "tracking status value",
    "tracking the effective position of the legacy mouse pointer",
    "tracking vector",
    "trailing surrogate",
    "transaction",
    "transaction state",
    "transceiver kind",
    "transcoder",
    "transcription",
    "transfer function",
    "transfer function element",
    "transfer function element attributes",
    "transfer steps",
    "transfer-receiving steps",
    "transferable object",
    "transferred size suggestion",
    "transform",
    "transform a point with a matrix",
    "transform stream",
    "transform-box",
    "transform-indifferent starting point",
    "transform-mix()",
    "transform-origin",
    "transform-style",
    "transformable element",
    "transformation",
    "transformation algorithm",
    "transformation matrix",
    "transformations",
    "transformed element",
    "transformed progress",
    "transformed time",
    "transformer",
    "transforms",
    "transformtodocument()",
    "transformtofragment()",
    "transient action",
    "transient activation",
    "transient activation duration",
    "transient activation-consuming api",
    "transient activation-gated api",
    "transient input sources",
    "transient registered observer",
    "transition",
    "transition generation",
    "transition origin",
    "transition phase",
    "transition requests",
    "transition-behavior",
    "transition-delay",
    "transition-duration",
    "transition-property",
    "transition-timing-function",
    "transitionable",
    "translatable attributes",
    "translate",
    "translate a layoutconstraintsoptions to internal constraints",
    "translate a preload destination",
    "translate-enabled",
    "translate3d()",
    "translatez()",
    "translation",
    "translation mode",
    "transliteration",
    "transmission of request and response",
    "transp",
    "transparent",
    "transparent background",
    "transparent black",
    "transpose",
    "trap",
    "traversable navigable",
    "traverse siblings",
    "traverse the history by a delta",
    "treat-as-public-address",
    "tree",
    "tree construction",
    "tree construction dispatcher",
    "tree context",
    "tree order",
    "tree-abiding",
    "tree-abiding pseudo-element",
    "triangle",
    "trig document",
    "trig parser",
    "trigger a prompt updated event",
    "trigger aggregatable attribution",
    "trigger attribution",
    "trigger data",
    "trigger debug data",
    "trigger debug data type",
    "trigger event-level attribution",
    "trigger spec",
    "trigger spec map",
    "trigger state",
    "trigger-data matching mode",
    "trigger-registration json key",
    "triggered",
    "triggering event",
    "triggering result",
    "triggering status",
    "trinary",
    "triple",
    "triple term",
    "true",
    "true-by-default",
    "truecolor",
    "truecolor with alpha",
    "truncate",
    "trusted bidding signals batcher",
    "trusted bidding signals failure bucket",
    "trusted immersive ui",
    "trusted scoring signals failure bucket",
    "trusted type",
    "trusted ui",
    "trusted-types-directive",
    "trusted-types-sink-group",
    "try",
    "try activate",
    "try clear registration",
    "try to consume a modifier token",
    "try to consume a regexp or wildcard token",
    "try to consume a token",
    "try to reach component ads target considering k-anonymity",
    "try to scroll to the fragment",
    "try to upgrade an element",
    "trying",
    "tspan",
    "tsv",
    "tsv-extension",
    "tt",
    "tt-expression",
    "tt-keyword",
    "tt-policy-name",
    "tt-wildcard",
    "ttl",
    "tuple",
    "tuple origin",
    "turned off",
    "turned on",
    "turquoise",
    "turtle document",
    "twelve_bit",
    "tx power level",
    "type",
    "type alias",
    "type assertion",
    "type being given a new name",
    "type checking",
    "type error",
    "type field",
    "type length field",
    "type list",
    "type map",
    "type mapping",
    "type of a cssmathvalue",
    "type of a cssunitvalue",
    "type of the content",
    "type parameters",
    "type record",
    "type rule",
    "type rule applies to a syntactic phrase",
    "type rule conclusion",
    "type rule preconditions",
    "type rule tables",
    "type selector",
    "type-generator",
    "type-phase",
    "type-scoped context",
    "type-specific credential processing",
    "typeable",
    "typed array types",
    "typed item",
    "typed value",
    "typedarray",
    "typedarrays",
    "typedef",
    "typeerror",
    "types",
    "types array",
    "typeset sideways",
    "typeset upright",
    "typesetting sideways",
    "typesetting upright",
    "typographic character",
    "typographic character unit",
    "typographic letter unit",
    "typographic mode",
    "tz",
    "u",
    "u32",
    "ua",
    "ua origin",
    "ua style sheet",
    "ua-origin",
    "uba",
    "udpsocket task source",
    "ui redressing",
    "uid",
    "uint32littleendian",
    "uint64littleendian",
    "uint8",
    "ul",
    "ulp",
    "ultimate originating element",
    "ultimate sink",
    "un-initialized value",
    "unable to capture screen",
    "unable to create an rtcdatachannel",
    "unable to report the battery status information",
    "unable to set cookie",
    "unadjustedtarget",
    "unambiguously links to a source map",
    "unanimity",
    "unauthenticated response",
    "unavailable",
    "unblock rendering",
    "unbounded key range",
    "unbounded text track cue",
    "uncalibrated magnetic field",
    "uncalibrated magnetometer",
    "uncalibrated magnetometer reading parsing algorithm",
    "uncalibrated-magnetometer virtual sensor type",
    "uncategorized error",
    "unchanged record",
    "unconsumed launch params",
    "uncropped",
    "undefined",
    "under",
    "underbarextradescender",
    "underbarverticalgap",
    "underline style",
    "underline thickness",
    "underline zero position",
    "underlying byte source",
    "underlying connection",
    "underlying connection technology",
    "underlying data transport",
    "underlying sink",
    "underlying source",
    "underlying value",
    "understandable",
    "undisplay",
    "undistributable space",
    "unescape url pattern",
    "unexpected alert open",
    "unexpected-character-after-doctype-system-identifier",
    "unexpected-character-in-attribute-name",
    "unexpected-character-in-unquoted-attribute-value",
    "unexpected-equals-sign-before-attribute-name",
    "unexpected-null-character",
    "unexpected-question-mark-instead-of-tag-name",
    "unexpected-solidus-in-tag",
    "unfocusing steps",
    "unforced break",
    "unforgeable",
    "unforgeable property name",
    "unfrozen",
    "unfullscreen a document",
    "unfullscreen an element",
    "ungrouped",
    "unicameral",
    "unicode",
    "unicode bidi algorithm",
    "unicode bidirectional algorithm",
    "unicode braille",
    "unicode braille patterns",
    "unicode character categories",
    "unicode code point",
    "unicode locale",
    "unicode locale extension sequence",
    "unicode locale identifier",
    "unicode normalization",
    "unicode normalization form c",
    "unicode normalization form d",
    "unicode normalization form kc",
    "unicode normalization form kd",
    "unicode scalar value",
    "unicode-bidi",
    "unidirectionally broadcastable",
    "unidirectionally broadcasting",
    "uniform buffer",
    "uniform control flow",
    "uniform value",
    "uniform variable",
    "uniformity analysis",
    "uniformity failure",
    "uninitialized",
    "union type",
    "unique identifier",
    "unique internal value",
    "unit exponent tag",
    "unit tag",
    "universal character set",
    "universal coordinated time (utc)",
    "universal selector",
    "universal syntax definition",
    "universally unique identifier (uuid)",
    "unix epoch",
    "unix timestamp",
    "unknown",
    "unknown -webkit- pseudo-elements",
    "unknown command",
    "unknown concept",
    "unknown error",
    "unknown mathml element",
    "unknown method",
    "unknown record",
    "unknown-named-character-reference",
    "unknowndirective",
    "unlinkability",
    "unlinkable disclosure",
    "unload",
    "unload a document",
    "unload a document and its descendants",
    "unload counter",
    "unloading document cleanup steps",
    "unlock the screen orientation",
    "unlocked",
    "unlocking the screen orientation",
    "unmask tokens",
    "unmute",
    "unobserve a target element",
    "unoccupied",
    "unordered set of unique space-separated tokens",
    "unpartitioned data",
    "unprefixed",
    "unreasonable number of requests",
    "unrecognized",
    "unregister",
    "unregister the system key press handler",
    "unresolved",
    "unresolved reference",
    "unrestricted",
    "unrestricted double",
    "unrestricted float",
    "unsafe current time",
    "unsafe moment",
    "unsafe response",
    "unsafe shared current time",
    "unsafe-none",
    "unsafefile",
    "unsafely set html",
    "unsanitized data types",
    "unsatisfiable",
    "unscaled",
    "unsecured data document",
    "unset",
    "unshaped border edge",
    "unshaped content edge",
    "unshaped edge",
    "unshaped margin edge",
    "unshaped padding edge",
    "unshipped port message queue",
    "unsigned extension outputs",
    "unsigned long",
    "unsigned long long",
    "unsigned short",
    "unsigned-integer",
    "unsigned-number",
    "unstable",
    "unstable node set",
    "unstable-candidate",
    "unstyled document",
    "unsupported operation",
    "untagged image",
    "untagged video",
    "unwrapkey",
    "unwrapped",
    "up",
    "up-mixing",
    "upc-a",
    "upcoming non-traverse api method tracker",
    "upcoming traverse api method trackers",
    "update",
    "update a layout child style",
    "update a paymentrequest's details algorithm",
    "update a style block",
    "update action handler algorithm",
    "update an animation's finished state",
    "update anchors",
    "update animations and send events",
    "update background fetch instances",
    "update bid count",
    "update capture state algorithm",
    "update captured headers",
    "update document for history step application",
    "update document frozenness steps",
    "update expiration",
    "update for navigable creation/destruction",
    "update gamepad state",
    "update highest scoring other bid",
    "update href",
    "update key statuses",
    "update latest reading",
    "update mesh object",
    "update meshes",
    "update metadata algorithm",
    "update only",
    "update plane object",
    "update planes",
    "update previous wins",
    "update pseudo-element styles",
    "update registration state",
    "update requests",
    "update service worker extended events set",
    "update style attribute for",
    "update the battery status and notify",
    "update the canvas size",
    "update the client hints set from cache",
    "update the current document readiness",
    "update the data max message size",
    "update the editcontext",
    "update the event map",
    "update the file selection",
    "update the ice gathering state",
    "update the image data",
    "update the navigation api entries for a same-document navigation",
    "update the navigation api entries for reactivation",
    "update the negotiation-needed flag",
    "update the opt-in state for outbound transitions",
    "update the overlay area information",
    "update the pending layers state",
    "update the rendering",
    "update the response",
    "update the search origin",
    "update the source set",
    "update the text edit context",
    "update the timing properties of an animation effect",
    "update the user prompt handler",
    "update the viewports",
    "update the visibility state",
    "update touchevents",
    "update worker state",
    "updateend",
    "updatestart",
    "updating the rendering of a WebGPU canvas",
    "updating the search origin",
    "updating touchevents",
    "upgrade a database",
    "upgrade a mixed content request to a potentially trustworthy url, if appropriate",
    "upgrade a request",
    "upgrade an element",
    "upgrade insecure navigations set",
    "upgrade reaction",
    "upgrade request to a potentially trustworthy url, if appropriate",
    "upgrade the pending request to the current request",
    "upgrade transaction",
    "upgrade-insecure-requests",
    "upgrade-insecure-requests http request header field",
    "upgradeable mixed content",
    "upgrades",
    "upheld",
    "uphold",
    "upholding",
    "upholds",
    "upload complete flag",
    "upload listener flag",
    "upload object",
    "upon fulfillment",
    "upon rejection",
    "upper bound on the downlink speed of the first network hop",
    "upper-alpha",
    "upper-alpha-legal",
    "upper-latin",
    "upper-roman",
    "uppercase letter",
    "upperlimitbaselinerisemin",
    "upperlimitgapmin",
    "upright typesetting",
    "upstream",
    "urdna2015",
    "urgna2012",
    "uri",
    "uri record",
    "uri template",
    "uri templates",
    "url",
    "url and history update steps",
    "url code point",
    "url descriptor",
    "url parameter",
    "url parser",
    "url path",
    "url path segment",
    "url path serializer",
    "url path serializing",
    "url pattern",
    "url prefix",
    "url property elements",
    "url record",
    "url reference",
    "url reference with fragment identifier",
    "url request modifier steps",
    "url search variance",
    "url serializer",
    "url units",
    "url()",
    "url-based payment method identifier",
    "url-fragment string",
    "url-path-segment string",
    "url-port string",
    "url-query string",
    "url-scheme string",
    "urlencoded parser",
    "urlencoded serializer",
    "urlencoded string parser",
    "urls",
    "usable for decryption",
    "usage id",
    "usage intersection",
    "usage maximum tag",
    "usage minimum tag",
    "usage page",
    "usage page tag",
    "usage scope",
    "usage scope attachment exception",
    "usage scope storage exception",
    "usage scope validation",
    "usage tag",
    "usages",
    "usages_cached",
    "usb blocklist",
    "usb device",
    "use",
    "use a negative sign",
    "use credentials",
    "use distinctive identifier(s)",
    "use distinctive identifier(s) or distinctive permanent identifier(s)",
    "use distinctive permanent identifier(s)",
    "use dual source blending",
    "use of distinctive identifier(s)",
    "use of distinctive identifier(s) or distinctive permanent identifier(s)",
    "use of distinctive identifiers and distinctive permanent identifiers",
    "use report ids",
    "use srcset or picture",
    "use-element shadow tree",
    "used",
    "used autocapitalization hint",
    "used color",
    "used color scheme",
    "used keyframe order",
    "used min-width of a table",
    "used offset distance",
    "used value",
    "used values",
    "used width of a table",
    "user",
    "user aborts the payment request",
    "user aborts the payment request algorithm",
    "user accepts the payment request",
    "user accepts the payment request algorithm",
    "user account",
    "user action",
    "user action pseudo-class",
    "user action timeout",
    "user activation",
    "user activation map",
    "user activity",
    "user agent",
    "user agent (ua)",
    "user agent automation",
    "user agent stylesheet",
    "user agents",
    "user agents that do not support a full html css engine",
    "user agents that do not support css",
    "user agents that support a full html css engine",
    "user consent",
    "user contact",
    "user context",
    "user coordinate system",
    "user credential",
    "user handle",
    "user intent",
    "user interaction",
    "user interaction task source",
    "user interaction value",
    "user language",
    "user mediated",
    "user mediation",
    "user navigation involvement",
    "user origin",
    "user presence",
    "user present",
    "user prompt handler",
    "user prompt message",
    "user public key",
    "user style sheet",
    "user units",
    "user validity",
    "user verification",
    "user verification method",
    "user verified",
    "user-agent origin",
    "user-agent style sheet",
    "user-defined function",
    "user-defined input datum",
    "user-defined output datum",
    "user-facing identifiers",
    "user-granted exception",
    "user-origin",
    "user-select",
    "user-supplied value",
    "user-verifying platform authenticator",
    "userinfo percent-encode set",
    "userinvolvement",
    "username",
    "userverificationoptional",
    "userverificationoptionalwithcredentialidlist",
    "userverificationrequired",
    "uses",
    "uses a negative sign",
    "uses distinctive identifier(s)",
    "uses distinctive identifier(s) or distinctive permanent identifier(s)",
    "uses distinctive permanent identifier(s)",
    "uses report ids",
    "using",
    "using distinctive identifier(s) or distinctive permanent identifier(s)",
    "using distinctive permanent identifier(s)",
    "using the a element to define a command",
    "using the accesskey attribute on a legend element to define a command",
    "using the accesskey attribute to define a command on other elements",
    "using the button element to define a command",
    "using the input element to define a command",
    "using the option element to define a command",
    "using the rules for",
    "usually support",
    "usv",
    "utc",
    "utf-16",
    "utf-16 lead byte",
    "utf-16 lead surrogate",
    "utf-16be",
    "utf-16be decoder",
    "utf-16be/le",
    "utf-16le",
    "utf-16le decoder",
    "utf-8",
    "utf-8 bytes needed",
    "utf-8 bytes seen",
    "utf-8 code point",
    "utf-8 decode",
    "utf-8 decode without bom",
    "utf-8 decode without bom or fail",
    "utf-8 decoder",
    "utf-8 encode",
    "utf-8 encoder",
    "utf-8 lower boundary",
    "utf-8 upper boundary",
    "uuid",
    "uuid alias",
    "uvretries",
    "valid",
    "valid anchor function",
    "valid anchor-size function",
    "valid audio configuration",
    "valid audio mime type",
    "valid audiodatainit",
    "valid audiodecoderconfig",
    "valid audioencoderconfig",
    "valid codec string",
    "valid color",
    "valid company identifier string",
    "valid croptarget",
    "valid css property",
    "valid custom element name",
    "valid date string",
    "valid date string with optional time",
    "valid decimal monetary value",
    "valid dimension",
    "valid domain",
    "valid domain string",
    "valid dual-rumble effect",
    "valid duration string",
    "valid eagerness strings",
    "valid effect",
    "valid email address",
    "valid email address list",
    "valid external application resource",
    "valid file name",
    "valid filtering id max bytes range",
    "valid floating-point number",
    "valid global date and time string",
    "valid gpublendcomponent",
    "valid hash-name reference",
    "valid host string",
    "valid idref",
    "valid image",
    "valid image mime type",
    "valid imagedecoderinit",
    "valid integer",
    "valid ipv4-address string",
    "valid ipv6-address string",
    "valid key path",
    "valid language tag",
    "valid list of floating-point numbers",
    "valid list of part mappings",
    "valid local date and time string",
    "valid lowercase simple color",
    "valid media mime type",
    "valid media query list",
    "valid mediaconfiguration",
    "valid mediadecodingconfiguration",
    "valid mime type string",
    "valid mime type string with no parameters",
    "valid module specifier map",
    "valid month string",
    "valid name",
    "valid navigable target name",
    "valid navigable target name or keyword",
    "valid non-empty url",
    "valid non-empty url potentially surrounded by spaces",
    "valid non-negative integer",
    "valid normalized local date and time string",
    "valid opaque-host string",
    "valid part mapping",
    "valid path",
    "valid path id",
    "valid payment method manifest",
    "valid pointer",
    "valid postscript name",
    "valid presentation identifier",
    "valid prompt types",
    "valid reference",
    "valid restriction target",
    "valid shadow host name",
    "valid simple color",
    "valid source expiry range",
    "valid source size list",
    "valid source types",
    "valid style sheet",
    "valid suffix code point",
    "valid time string",
    "valid time-zone offset string",
    "valid to draw",
    "valid to draw indexed",
    "valid to use with",
    "valid trigger-rumble effect",
    "valid url potentially surrounded by spaces",
    "valid url string",
    "valid uuid",
    "valid vevent duration string",
    "valid video configuration",
    "valid video mime type",
    "valid videodecoderconfig",
    "valid videoencoderconfig",
    "valid videoframebufferinit",
    "valid week string",
    "valid yearless date string",
    "valid-relative-ocf-url-with-fragment string",
    "validate",
    "validate GPUColor shape",
    "validate GPUExtent3D shape",
    "validate GPUOrigin2D shape",
    "validate GPUOrigin3D shape",
    "validate a background attributionsrc eligibility",
    "validate a bucket name",
    "validate a cssnumberish time",
    "validate a partial response",
    "validate a payment method identifier",
    "validate a standardized payment method identifier",
    "validate a suffix",
    "validate a url macro",
    "validate a url-based payment method identifier",
    "validate aggregatable key-values value",
    "validate and convert additional bids",
    "validate and convert auction ad config",
    "validate and extract",
    "validate and normalize",
    "validate and parse the payment method manifest",
    "validate buffer with descriptor",
    "validate capabilities",
    "validate external type",
    "validate fetching response",
    "validate fetching response headers",
    "validate fetching response mime and body",
    "validate local type",
    "validate reporting metadata",
    "validate share data",
    "validate the state of the xrwebglsubimage creation function",
    "validate videoframeinit",
    "validateassertioncallback",
    "validating GPUDepthStencilState",
    "validating GPUFragmentState",
    "validating GPUImageCopyBuffer",
    "validating GPUImageCopyTexture",
    "validating GPUMultisampleState",
    "validating GPUPrimitiveState",
    "validating GPUProgrammableStage",
    "validating GPURenderPipelineDescriptor",
    "validating GPUTextureDescriptor",
    "validating GPUVertexBufferLayout",
    "validating GPUVertexState",
    "validating inter-stage interfaces",
    "validating linear texture data",
    "validating shader binding",
    "validating texture buffer copy",
    "validating texture copy range",
    "validation",
    "validation anchor",
    "validation error",
    "validation errors",
    "validation message",
    "validation notice",
    "validity",
    "validity states",
    "validtextdirective",
    "value",
    "value accumulation",
    "value addition",
    "value asynchronously iterable declaration",
    "value constructor",
    "value declaration",
    "value format record",
    "value interpolation",
    "value iterator",
    "value object",
    "value of string literal tokens",
    "value pair",
    "value pairs to iterate over",
    "value pattern",
    "value sanitization algorithm",
    "value space",
    "value type",
    "value-with-size",
    "value_return",
    "value_return_i_contents",
    "values",
    "var",
    "var()",
    "var() substitution",
    "variable",
    "variable declaration",
    "variable unit reference",
    "variadic",
    "variation selector",
    "vchar",
    "vec2f",
    "vec2h",
    "vec2i",
    "vec2u",
    "vec3f",
    "vec3h",
    "vec3i",
    "vec3u",
    "vec4f",
    "vec4h",
    "vec4i",
    "vec4u",
    "vector",
    "vector-effect",
    "vendor id",
    "vendor prefix",
    "vendor-facilitated enterprise attestation",
    "vendor-prefixed",
    "verbose debug data",
    "verbose debug report",
    "verifiability",
    "verifiable",
    "verifiable credential",
    "verifiable credential graph",
    "verifiable data registries",
    "verifiable data registry",
    "verifiable presentation",
    "verifiable presentation graph",
    "verifiablecredentialgraph",
    "verification",
    "verification material",
    "verification method",
    "verification procedure",
    "verification procedure inputs",
    "verification result",
    "verified",
    "verified display name",
    "verifieddocument",
    "verifier",
    "verifier's",
    "verifiers",
    "verify",
    "verify a certificate hash",
    "verify a media response",
    "verify a miniapp zip container",
    "verify platform compatibility",
    "verify router condition",
    "verify value category",
    "verifying",
    "verifying a miniapp zip container",
    "verifyproof",
    "version",
    "version resource",
    "vertex",
    "vertex buffer",
    "vertex data type",
    "vertex markers",
    "vertex shader stage",
    "vertical axis",
    "vertical block flow",
    "vertical dimension",
    "vertical script",
    "vertical typographic mode",
    "vertical writing mode",
    "vertical-align",
    "vertical-only",
    "viable candidate",
    "vibration pattern",
    "video",
    "video frame request callback identifier",
    "video-encoding-offer",
    "video-frame",
    "video/mpeg",
    "view",
    "view offset",
    "view progress subject",
    "view progress timelines",
    "view progress visibility range",
    "view transition layer",
    "view transition name",
    "view transition page-visibility change steps",
    "view transition params",
    "view transition pseudo-elements",
    "view transition tree",
    "view transitions",
    "view()",
    "view-timeline",
    "view-timeline-axis",
    "view-timeline-inset",
    "view-timeline-name",
    "view-transition-class",
    "view-transition-group",
    "view-transition-name",
    "viewer",
    "viewport",
    "viewport base distance",
    "viewport coordinate system",
    "viewport coordinates",
    "viewport-based selection",
    "viewport-percentage lengths",
    "violate",
    "violated",
    "violation",
    "violet",
    "virama",
    "virtual authenticator database",
    "virtual authenticators",
    "virtual browsing context group id",
    "virtual expandable separator",
    "virtual pressure source",
    "virtual pressure source mapping",
    "virtual screen arrangement",
    "virtual sensor",
    "virtual sensor mapping",
    "virtual sensor metadata",
    "virtual sensor type",
    "visibility",
    "visibility state",
    "visible character",
    "visible display surface",
    "visible text node",
    "visible to reportingobservers",
    "visible track",
    "visit",
    "visited (pseudo-class)",
    "visual angle unit",
    "visual formatting model",
    "visual representation",
    "visual viewport",
    "vocabulary",
    "vocabulary mapping",
    "voice",
    "voice-balance",
    "voice-duration",
    "voice-family",
    "voice-pitch",
    "voice-range",
    "voice-rate",
    "voice-stress",
    "voice-volume",
    "void elements",
    "volume",
    "volume locked",
    "w3c board of directors",
    "w3c candidate recommendation",
    "w3c council",
    "w3c council chair",
    "w3c decision",
    "w3c fellows",
    "w3c group",
    "w3c member",
    "w3c note",
    "w3c proposed recommendation",
    "w3c recommendation",
    "w3c recommendation track",
    "w3c registry",
    "w3c rf licensing requirements",
    "w3c royalty-free license",
    "w3c royalty-free licensing requirements",
    "w3c statement",
    "w3c team",
    "w3c working draft",
    "wait and queue a report for",
    "wait for a matching prefetch record",
    "wait for a matching prerendering record",
    "wait for all",
    "wait for cross origin trusted scoring signals authorization from a fetcher",
    "wait for key",
    "wait for navigation to complete",
    "wait for script body from a fetcher",
    "wait queue",
    "wait until configuration input promises resolve",
    "waiting",
    "waiting asynchronously",
    "waiting for all",
    "waiting_for_segment",
    "waitingforkey",
    "wake lock type",
    "wall clock",
    "wall time",
    "warning user during nfc operations",
    "was created via cross-origin redirects",
    "watch advertisements manager",
    "waveshapernode",
    "waveshaperoptions",
    "wbr",
    "wd",
    "weak map",
    "weak scoping proximity",
    "weaker inset",
    "web analytics",
    "web animations animation model",
    "web animations api",
    "web animations model",
    "web animations timing model",
    "web application",
    "web audio api",
    "web authentication api",
    "web custom format",
    "web element",
    "web element identifier",
    "web element reference object",
    "web elements",
    "web frame",
    "web frame identifier",
    "web frames",
    "web idl arguments list",
    "web locks tasks source",
    "web push protocol",
    "web share target",
    "web window",
    "web window identifier",
    "web windows",
    "web worker",
    "web+ scheme prefix",
    "web-exposed available screen area",
    "web-exposed screen area",
    "web-wide",
    "webauthn",
    "webauthn authenticator",
    "webauthn client",
    "webauthn client device",
    "webauthn extensions",
    "webauthn relying party",
    "webauthn signature",
    "webauthn/fido2 protocol",
    "webdriver",
    "webdriver bidi auth required",
    "webdriver bidi before request sent",
    "webdriver bidi cache behavior",
    "webdriver bidi dom content loaded",
    "webdriver bidi download started",
    "webdriver bidi fetch error",
    "webdriver bidi fragment navigated",
    "webdriver bidi load complete",
    "webdriver bidi navigable created",
    "webdriver bidi navigable destroyed",
    "webdriver bidi navigation aborted",
    "webdriver bidi navigation failed",
    "webdriver bidi navigation started",
    "webdriver bidi page show",
    "webdriver bidi pop state",
    "webdriver bidi response completed",
    "webdriver bidi response started",
    "webdriver bidi user prompt closed",
    "webdriver bidi user prompt opened",
    "webdriver navigation status",
    "webdriver new session algorithms",
    "webdriver node id",
    "webdriver-active flag",
    "webgl",
    "webgl2",
    "webglrenderingcontextoverloads",
    "webgpu",
    "webgpu interface",
    "webgpu object",
    "webgpu platform",
    "webgpu task source",
    "webkitURL",
    "webkitversion",
    "webnn-feature",
    "webrtc",
    "websocket",
    "websocket connection",
    "websocket connections not associated with a session",
    "websocket listener",
    "websocket task source",
    "websocket url",
    "webusb platform capability descriptor",
    "webvtt",
    "webvtt alignment cue setting",
    "webvtt bold object",
    "webvtt caption or subtitle cue",
    "webvtt caption or subtitle cue components",
    "webvtt caption or subtitle cue text",
    "webvtt chapter cue",
    "webvtt chapter title text",
    "webvtt class object",
    "webvtt comment block",
    "webvtt cue",
    "webvtt cue automatic position",
    "webvtt cue background box",
    "webvtt cue block",
    "webvtt cue bold span",
    "webvtt cue box",
    "webvtt cue center alignment",
    "webvtt cue class span",
    "webvtt cue end alignment",
    "webvtt cue horizontal writing direction",
    "webvtt cue identifier",
    "webvtt cue internal text",
    "webvtt cue italics span",
    "webvtt cue language span",
    "webvtt cue left alignment",
    "webvtt cue line",
    "webvtt cue line alignment",
    "webvtt cue line automatic",
    "webvtt cue line center alignment",
    "webvtt cue line end alignment",
    "webvtt cue line start alignment",
    "webvtt cue position",
    "webvtt cue position alignment",
    "webvtt cue position automatic alignment",
    "webvtt cue position center alignment",
    "webvtt cue position line-left alignment",
    "webvtt cue position line-right alignment",
    "webvtt cue region",
    "webvtt cue right alignment",
    "webvtt cue ruby span",
    "webvtt cue ruby text span",
    "webvtt cue setting",
    "webvtt cue setting name",
    "webvtt cue setting value",
    "webvtt cue settings list",
    "webvtt cue size",
    "webvtt cue snap-to-lines flag",
    "webvtt cue span end tag",
    "webvtt cue span start tag",
    "webvtt cue span start tag annotation text",
    "webvtt cue start alignment",
    "webvtt cue text alignment",
    "webvtt cue text dom construction rules",
    "webvtt cue text parsing rules",
    "webvtt cue text span",
    "webvtt cue text tokenizer",
    "webvtt cue timestamp",
    "webvtt cue timings",
    "webvtt cue underline span",
    "webvtt cue vertical growing left writing direction",
    "webvtt cue vertical growing right writing direction",
    "webvtt cue voice span",
    "webvtt cue writing direction",
    "webvtt data state",
    "webvtt end tag state",
    "webvtt file",
    "webvtt file body",
    "webvtt file using caption or subtitle cue text",
    "webvtt file using chapter title text",
    "webvtt file using metadata content",
    "webvtt file using only nested cues",
    "webvtt internal node object",
    "webvtt italic object",
    "webvtt language object",
    "webvtt leaf node object",
    "webvtt line cue setting",
    "webvtt line terminator",
    "webvtt metadata cue",
    "webvtt metadata text",
    "webvtt node object",
    "webvtt node object's applicable classes",
    "webvtt node object's applicable language",
    "webvtt parser",
    "webvtt parser algorithm",
    "webvtt percentage",
    "webvtt position cue setting",
    "webvtt region",
    "webvtt region anchor",
    "webvtt region anchor setting",
    "webvtt region cue setting",
    "webvtt region definition block",
    "webvtt region identifier",
    "webvtt region identifier setting",
    "webvtt region lines",
    "webvtt region lines setting",
    "webvtt region object",
    "webvtt region scroll",
    "webvtt region scroll none",
    "webvtt region scroll setting",
    "webvtt region scroll up",
    "webvtt region settings list",
    "webvtt region viewport anchor",
    "webvtt region viewport anchor setting",
    "webvtt region width",
    "webvtt region width setting",
    "webvtt ruby object",
    "webvtt ruby text object",
    "webvtt rules for extracting the chapter title",
    "webvtt size cue setting",
    "webvtt start tag annotation state",
    "webvtt start tag class state",
    "webvtt start tag state",
    "webvtt style block",
    "webvtt tag state",
    "webvtt text object",
    "webvtt timestamp",
    "webvtt timestamp object",
    "webvtt timestamp tag state",
    "webvtt underline object",
    "webvtt vertical text cue setting",
    "webvtt voice object",
    "week",
    "week number of the last day",
    "well known type name",
    "well-formed",
    "well-formed language tag",
    "well-known file",
    "well-known mime type from os specific format",
    "well-known type record",
    "well-typed",
    "wheat",
    "wheel",
    "wheel event transaction",
    "wheel input source",
    "when-defined promise map",
    "white",
    "white balance mode",
    "white point",
    "white space",
    "white space characters",
    "white-space",
    "white-space-collapse",
    "white-space-trim",
    "whitesmoke",
    "whitespace",
    "whitespace byte",
    "wide review",
    "widget",
    "widget resources",
    "widgets",
    "widows",
    "width",
    "width descriptor",
    "width descriptor value",
    "width of the select's labels",
    "wildcard",
    "will lazy load element steps",
    "will read frequently",
    "will retry",
    "will-change",
    "willful violation",
    "window",
    "window controls",
    "window controls overlay",
    "window coordinates",
    "window dimensioning/positioning",
    "window event loop",
    "window handle",
    "window handles",
    "window open steps",
    "window placement task source",
    "window post message steps",
    "window resource",
    "window state",
    "window states",
    "window-management",
    "window-reflecting body element event handler set",
    "window.alert",
    "window.confirm",
    "window.prompt",
    "windowclient",
    "windowframe",
    "windowproxy reference object",
    "windowrect object",
    "windows",
    "windows drive letter",
    "windows-1250",
    "windows-1251",
    "windows-1252",
    "windows-1253",
    "windows-1254",
    "windows-1255",
    "windows-1256",
    "windows-1257",
    "windows-1258",
    "windows-874",
    "windowtext",
    "within home tab scope",
    "word",
    "word boundary",
    "word boundary detection",
    "word bounded",
    "word separator",
    "word spacing",
    "word-break",
    "word-separator character",
    "word-space-transform",
    "word-spacing",
    "word-wrap",
    "words",
    "wordspacing",
    "work",
    "worker",
    "worker event loop",
    "worker-src",
    "workerglobalscope object",
    "workgroup grid",
    "workgroup id",
    "working draft",
    "working group note",
    "working groups",
    "worklet agent",
    "worklet animation",
    "worklet destination type",
    "worklet event loop",
    "worklet function",
    "worklet global scope type",
    "worklet global scopes",
    "workshops",
    "would need a browsing context group switch due to report-only",
    "would start a number",
    "would start a unicode-range",
    "would start an ident sequence",
    "wrap",
    "wrap-after",
    "wrap-before",
    "wrap-flow",
    "wrap-inside",
    "wrap-through",
    "wrapkey",
    "wrapped function exotic object",
    "wrapping",
    "wrapping area",
    "wrapping context",
    "writable side",
    "writable stream",
    "writable stream writer",
    "write a chunk",
    "write a message",
    "write access",
    "write blobs and option to the clipboard",
    "write bytes",
    "write characteristic descriptors",
    "write characteristic value",
    "write content to the clipboard",
    "write long characteristic descriptors",
    "write web custom formats",
    "write without response",
    "writeEncodedData",
    "writecharacteristicvalue",
    "writedatagrams",
    "writeframe",
    "writer",
    "writing content",
    "writing mode",
    "writing system",
    "writing system keys",
    "writing-mode",
    "wsp",
    "x",
    "x-axis",
    "x-content-type-options",
    "x-fledge-bidding-signals-format-version",
    "x-frame-options",
    "x-height",
    "x-height baseline",
    "x-mac-cyrillic",
    "x-middle baseline",
    "x-ua-compatible state",
    "x-user-defined",
    "x-user-defined decoder",
    "x-user-defined encoder",
    "xhtml content document",
    "xlink namespace",
    "xml document",
    "xml fragment parsing algorithm",
    "xml fragment serialization algorithm",
    "xml mime type",
    "xml namespace",
    "xml parser",
    "xml scripting support disabled",
    "xml scripting support enabled",
    "xml serialization",
    "xml serialization algorithm",
    "xml serialization of the attributes",
    "xml serializing a comment node",
    "xml serializing a document node",
    "xml serializing a documentfragment node",
    "xml serializing a documenttype node",
    "xml serializing a processinginstruction node",
    "xml serializing a text node",
    "xml serializing an element node",
    "xml-compatible",
    "xml-ns",
    "xmlns namespace",
    "xmlns-ns",
    "xmp",
    "xor",
    "xpath selector",
    "xr animation frame",
    "xr compatible",
    "xr compositor",
    "xr device",
    "xr input source",
    "xr task source",
    "xsltprocessor",
    "y",
    "y-axis",
    "yearless date",
    "yellow",
    "yellowgreen",
    "yes",
    "z-index",
    "zero value",
    "zhuyin fuhao",
    "zip container",
    "zip containers",
    "zip-based mime type",
    "zlib",
    "zone offset",
    "zoom",
    "{a,b}",
    "{a}",
    "|",
    "||",
    "~",
    "~="
  ],
  "::first-letter": [
    "::postfix",
    "::prefix"
  ],
  "<<text-edge>>": [
    "alphabetic",
    "cap",
    "ex",
    "ideographic",
    "ideographic-ink",
    "leading",
    "text"
  ],
  "<angle>": [
    "deg",
    "grad",
    "rad",
    "turn"
  ],
  "<baseline-position>": [
    "baseline",
    "first",
    "first baseline",
    "last",
    "last baseline"
  ],
  "<basic-shape>": [
    "circle()",
    "ellipse()",
    "equivalent path",
    "inset()",
    "path()",
    "polygon()",
    "rect()",
    "reference box",
    "xywh()"
  ],
  "<bg-clip>": [
    "border-area",
    "text"
  ],
  "<blend-mode>": [
    "color",
    "color-burn",
    "color-dodge",
    "darken",
    "difference",
    "exclusion",
    "hard-light",
    "hue",
    "lighten",
    "luminosity",
    "multiply",
    "normal",
    "overlay",
    "saturation",
    "screen",
    "soft-light"
  ],
  "<border-style>": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "<border-width>": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "<bottom>": [
    "auto"
  ],
  "<box>": [
    "border-box",
    "content-box",
    "fill-box",
    "margin-box",
    "padding-box",
    "stroke-box",
    "view-box"
  ],
  "<by-to>": [
    "by",
    "to"
  ],
  "<color>": [
    "<alpha-value>",
    "accentcolor",
    "accentcolortext",
    "activeborder",
    "activecaption",
    "activetext",
    "aliceblue",
    "antiquewhite",
    "appworkspace",
    "aqua",
    "aquamarine",
    "azure",
    "background",
    "beige",
    "bisque",
    "black",
    "blanchedalmond",
    "blue",
    "blueviolet",
    "brown",
    "burlywood",
    "buttonborder",
    "buttonface",
    "buttonhighlight",
    "buttonshadow",
    "buttontext",
    "cadetblue",
    "canvas",
    "canvastext",
    "captiontext",
    "chartreuse",
    "chocolate",
    "coral",
    "cornflowerblue",
    "cornsilk",
    "crimson",
    "currentcolor",
    "cyan",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "deeppink",
    "deepskyblue",
    "dimgray",
    "dimgrey",
    "dodgerblue",
    "field",
    "fieldtext",
    "firebrick",
    "floralwhite",
    "forestgreen",
    "fuchsia",
    "gainsboro",
    "ghostwhite",
    "gold",
    "goldenrod",
    "gray",
    "graytext",
    "green",
    "greenyellow",
    "grey",
    "highlight",
    "highlighttext",
    "honeydew",
    "hotpink",
    "inactiveborder",
    "inactivecaption",
    "inactivecaptiontext",
    "indianred",
    "indigo",
    "infobackground",
    "infotext",
    "ivory",
    "khaki",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "lemonchiffon",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "linen",
    "linktext",
    "magenta",
    "mark",
    "marktext",
    "maroon",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "menu",
    "menutext",
    "midnightblue",
    "mintcream",
    "mistyrose",
    "moccasin",
    "navajowhite",
    "navy",
    "none",
    "oldlace",
    "olive",
    "olivedrab",
    "orange",
    "orangered",
    "orchid",
    "palegoldenrod",
    "palegreen",
    "paleturquoise",
    "palevioletred",
    "papayawhip",
    "peachpuff",
    "peru",
    "pink",
    "plum",
    "powderblue",
    "purple",
    "rebeccapurple",
    "red",
    "rosybrown",
    "royalblue",
    "saddlebrown",
    "salmon",
    "sandybrown",
    "scrollbar",
    "seagreen",
    "seashell",
    "selecteditem",
    "selecteditemtext",
    "sienna",
    "silver",
    "skyblue",
    "slateblue",
    "slategray",
    "slategrey",
    "snow",
    "springgreen",
    "steelblue",
    "tan",
    "teal",
    "thistle",
    "threeddarkshadow",
    "threedface",
    "threedhighlight",
    "threedlightshadow",
    "threedshadow",
    "tomato",
    "transparent",
    "turquoise",
    "violet",
    "visitedtext",
    "wheat",
    "white",
    "whitesmoke",
    "window",
    "windowframe",
    "windowtext",
    "yellow",
    "yellowgreen"
  ],
  "<content-distribution>": [
    "space-around",
    "space-between",
    "space-evenly",
    "stretch"
  ],
  "<content-list>": [
    "attr()",
    "close-quote",
    "contents",
    "leader()",
    "no-close-quote",
    "no-open-quote",
    "open-quote"
  ],
  "<content-position>": [
    "center",
    "end",
    "flex-end",
    "flex-start",
    "start"
  ],
  "<coord-box>": [
    "border-box",
    "content-box",
    "fill-box",
    "padding-box",
    "stroke-box",
    "view-box"
  ],
  "<counter-style-name>": [
    "arabic-indic",
    "armenian",
    "bengali",
    "cambodian",
    "circle",
    "cjk-decimal",
    "cjk-earthly-branch",
    "cjk-heavenly-stem",
    "decimal",
    "decimal-leading-zero",
    "devanagari",
    "disc",
    "disclosure-closed",
    "disclosure-open",
    "ethiopic-numeric",
    "georgian",
    "gujarati",
    "gurmukhi",
    "hebrew",
    "hiragana",
    "hiragana-iroha",
    "kannada",
    "katakana",
    "katakana-iroha",
    "khmer",
    "korean-hangul-formal",
    "korean-hanja-formal",
    "korean-hanja-informal",
    "lao",
    "lower-alpha",
    "lower-armenian",
    "lower-greek",
    "lower-latin",
    "lower-roman",
    "malayalam",
    "mongolian",
    "myanmar",
    "oriya",
    "persian",
    "square",
    "tamil",
    "telugu",
    "thai",
    "tibetan",
    "upper-alpha",
    "upper-armenian",
    "upper-latin",
    "upper-roman"
  ],
  "<counter-style>": [
    "cjk-ideographic",
    "japanese-formal",
    "japanese-informal",
    "simp-chinese-formal",
    "simp-chinese-informal",
    "trad-chinese-formal",
    "trad-chinese-informal"
  ],
  "<cubic-bezier-easing-function>": [
    "cubic-bezier()",
    "ease",
    "ease-in",
    "ease-in-out",
    "ease-out"
  ],
  "<deprecated-color>": [
    "activeborder",
    "activecaption",
    "appworkspace",
    "background",
    "buttonhighlight",
    "buttonshadow",
    "captiontext",
    "inactiveborder",
    "inactivecaption",
    "inactivecaptiontext",
    "infobackground",
    "infotext",
    "menu",
    "menutext",
    "scrollbar",
    "threeddarkshadow",
    "threedface",
    "threedhighlight",
    "threedlightshadow",
    "threedshadow",
    "window",
    "windowframe",
    "windowtext"
  ],
  "<display-box>": [
    "contents",
    "none"
  ],
  "<display-inside>": [
    "flex",
    "flow",
    "flow-root",
    "grid",
    "ruby",
    "table"
  ],
  "<display-internal>": [
    "ruby-base",
    "ruby-base-container",
    "ruby-text",
    "ruby-text-container",
    "table-caption",
    "table-cell",
    "table-column",
    "table-column-group",
    "table-footer-group",
    "table-header-group",
    "table-row",
    "table-row-group"
  ],
  "<display-legacy>": [
    "inline-block",
    "inline-flex",
    "inline-grid",
    "inline-table"
  ],
  "<display-list-item>": [
    "list-item"
  ],
  "<display-listitem>": [
    "list-item"
  ],
  "<display-outside>": [
    "block",
    "inline",
    "run-in"
  ],
  "<easing-function>": [
    "linear"
  ],
  "<flex>": [
    "fr",
    "fr unit"
  ],
  "<frequency>": [
    "hz",
    "khz"
  ],
  "<generic-family>": [
    "cursive",
    "fantasy",
    "generic(fangsong)",
    "generic(kai)",
    "generic(nastaliq)",
    "math",
    "monospace",
    "sans-serif",
    "serif",
    "system-ui",
    "ui-monospace",
    "ui-rounded",
    "ui-sans-serif",
    "ui-serif",
    "xxx"
  ],
  "<geometry-box>": [
    "border-box",
    "content-box",
    "fill-box",
    "margin-box",
    "padding-box",
    "stroke-box",
    "view-box"
  ],
  "<grid-line>": [
    "<integer> && <custom-ident>?",
    "[ <integer [-∞,-1]> | <integer [1,∞]> ] && <custom-ident>?",
    "auto",
    "span && [ <integer [1,∞]> || <custom-ident> ]",
    "span && [ <integer> || <custom-ident> ]"
  ],
  "<inset-area>": [
    "block-end",
    "block-self-end",
    "block-self-start",
    "block-start",
    "bottom",
    "center",
    "end",
    "inline-end",
    "inline-self-end",
    "inline-self-start",
    "inline-start",
    "left",
    "right",
    "self-end",
    "self-start",
    "span-all",
    "span-block-end",
    "span-block-start",
    "span-bottom",
    "span-end",
    "span-inline-end",
    "span-inline-start",
    "span-start",
    "span-top",
    "span-x-end",
    "span-x-start",
    "span-y-end",
    "span-y-start",
    "start",
    "top",
    "x-end",
    "x-self-end",
    "x-self-start",
    "x-start",
    "y-end",
    "y-self-end",
    "y-self-start",
    "y-start"
  ],
  "<layout-box>": [
    "border-box",
    "content-box",
    "margin-box",
    "padding-box"
  ],
  "<left>": [
    "auto"
  ],
  "<length>": [
    "advance measure",
    "cap",
    "cap unit",
    "ch",
    "ch unit",
    "cm",
    "dvb",
    "dvh",
    "dvi",
    "dvmax",
    "dvmin",
    "dvw",
    "em",
    "em unit",
    "ex",
    "ex unit",
    "ic",
    "ic unit",
    "in",
    "lh",
    "lh unit",
    "lvb",
    "lvh",
    "lvi",
    "lvmax",
    "lvmin",
    "lvw",
    "mm",
    "pc",
    "pt",
    "px",
    "q",
    "rcap",
    "rcap unit",
    "rch",
    "rch unit",
    "rem",
    "rem unit",
    "rex",
    "rex unit",
    "ric",
    "ric unit",
    "rlh",
    "rlh unit",
    "svb",
    "svh",
    "svi",
    "svmax",
    "svmin",
    "svw",
    "vb",
    "vh",
    "vi",
    "vmax",
    "vmin",
    "vw"
  ],
  "<line-style>": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "<line-width>": [
    "medium",
    "thick",
    "thin"
  ],
  "<named-color>": [
    "aliceblue",
    "antiquewhite",
    "aqua",
    "aquamarine",
    "azure",
    "beige",
    "bisque",
    "black",
    "blanchedalmond",
    "blue",
    "blueviolet",
    "brown",
    "burlywood",
    "cadetblue",
    "chartreuse",
    "chocolate",
    "coral",
    "cornflowerblue",
    "cornsilk",
    "crimson",
    "cyan",
    "darkblue",
    "darkcyan",
    "darkgoldenrod",
    "darkgray",
    "darkgreen",
    "darkgrey",
    "darkkhaki",
    "darkmagenta",
    "darkolivegreen",
    "darkorange",
    "darkorchid",
    "darkred",
    "darksalmon",
    "darkseagreen",
    "darkslateblue",
    "darkslategray",
    "darkslategrey",
    "darkturquoise",
    "darkviolet",
    "deeppink",
    "deepskyblue",
    "dimgray",
    "dimgrey",
    "dodgerblue",
    "firebrick",
    "floralwhite",
    "forestgreen",
    "fuchsia",
    "gainsboro",
    "ghostwhite",
    "gold",
    "goldenrod",
    "gray",
    "green",
    "greenyellow",
    "grey",
    "honeydew",
    "hotpink",
    "indianred",
    "indigo",
    "ivory",
    "khaki",
    "lavender",
    "lavenderblush",
    "lawngreen",
    "lemonchiffon",
    "lightblue",
    "lightcoral",
    "lightcyan",
    "lightgoldenrodyellow",
    "lightgray",
    "lightgreen",
    "lightgrey",
    "lightpink",
    "lightsalmon",
    "lightseagreen",
    "lightskyblue",
    "lightslategray",
    "lightslategrey",
    "lightsteelblue",
    "lightyellow",
    "lime",
    "limegreen",
    "linen",
    "magenta",
    "maroon",
    "mediumaquamarine",
    "mediumblue",
    "mediumorchid",
    "mediumpurple",
    "mediumseagreen",
    "mediumslateblue",
    "mediumspringgreen",
    "mediumturquoise",
    "mediumvioletred",
    "midnightblue",
    "mintcream",
    "mistyrose",
    "moccasin",
    "navajowhite",
    "navy",
    "oldlace",
    "olive",
    "olivedrab",
    "orange",
    "orangered",
    "orchid",
    "palegoldenrod",
    "palegreen",
    "paleturquoise",
    "palevioletred",
    "papayawhip",
    "peachpuff",
    "peru",
    "pink",
    "plum",
    "powderblue",
    "purple",
    "rebeccapurple",
    "red",
    "rosybrown",
    "royalblue",
    "saddlebrown",
    "salmon",
    "sandybrown",
    "seagreen",
    "seashell",
    "sienna",
    "silver",
    "skyblue",
    "slateblue",
    "slategray",
    "slategrey",
    "snow",
    "springgreen",
    "steelblue",
    "tan",
    "teal",
    "thistle",
    "tomato",
    "turquoise",
    "violet",
    "wheat",
    "white",
    "whitesmoke",
    "yellow",
    "yellowgreen"
  ],
  "<overflow-position>": [
    "safe",
    "unsafe"
  ],
  "<padding-width>": [
    "<length>",
    "<percentage>"
  ],
  "<page-size>": [
    "a3",
    "a4",
    "a5",
    "b4",
    "b5",
    "jis-b4",
    "jis-b5",
    "ledger",
    "legal",
    "letter"
  ],
  "<paint-box>": [
    "border-box",
    "content-box",
    "fill-box",
    "padding-box",
    "stroke-box"
  ],
  "<paint>": [
    "none"
  ],
  "<position-area>": [
    "block-end",
    "block-self-end",
    "block-self-start",
    "block-start",
    "bottom",
    "center",
    "end",
    "inline-end",
    "inline-self-end",
    "inline-self-start",
    "inline-start",
    "left",
    "right",
    "self-end",
    "self-start",
    "span-all",
    "span-block-end",
    "span-block-start",
    "span-bottom",
    "span-end",
    "span-inline-end",
    "span-inline-start",
    "span-start",
    "span-top",
    "span-x-end",
    "span-x-start",
    "span-y-end",
    "span-y-start",
    "start",
    "top",
    "x-end",
    "x-self-end",
    "x-self-start",
    "x-start",
    "y-end",
    "y-self-end",
    "y-self-start",
    "y-start"
  ],
  "<quote>": [
    "close-quote",
    "no-close-quote",
    "no-open-quote",
    "open-quote"
  ],
  "<radial-extent>": [
    "closest-corner",
    "closest-side",
    "farthest-corner",
    "farthest-side"
  ],
  "<radial-shape>": [
    "circle",
    "ellipse"
  ],
  "<radial-size>": [
    "<length [0,∞]>",
    "<length-percentage [0,∞]>{2}"
  ],
  "<ray-size>": [
    "closest-corner",
    "closest-side",
    "farthest-corner",
    "farthest-side",
    "sides"
  ],
  "<request-url-modifier>": [
    "<crossorigin-modifier>",
    "<integrity-modifier>",
    "<referrerpolicy-modifier>",
    "anonymous",
    "crossorigin()",
    "integrity()",
    "no-referrer",
    "no-referrer-when-downgrade",
    "origin",
    "origin-when-cross-origin",
    "referrerpolicy()",
    "same-origin",
    "strict-origin",
    "strict-origin-when-cross-origin",
    "unsafe-url",
    "use-credentials"
  ],
  "<resolution>": [
    "dpcm",
    "dpi",
    "dppx",
    "x"
  ],
  "<right>": [
    "auto"
  ],
  "<rounding-strategy>": [
    "down",
    "nearest",
    "to-zero",
    "up"
  ],
  "<self-position>": [
    "center",
    "end",
    "flex-end",
    "flex-start",
    "self-end",
    "self-start",
    "start"
  ],
  "<shape-box>": [
    "border-box",
    "content-box",
    "margin-box",
    "padding-box"
  ],
  "<single-animation-timeline>": [
    "auto",
    "none"
  ],
  "<size>": [
    "closest-corner",
    "closest-side",
    "farthest-corner",
    "farthest-side",
    "sides"
  ],
  "<step-easing-function>": [
    "step-end",
    "step-start",
    "steps()"
  ],
  "<svg-paint>": [
    "child",
    "child(<integer>)"
  ],
  "<system-color>": [
    "accentcolor",
    "accentcolortext",
    "activetext",
    "buttonborder",
    "buttonface",
    "buttontext",
    "canvas",
    "canvastext",
    "field",
    "fieldtext",
    "graytext",
    "highlight",
    "highlighttext",
    "linktext",
    "mark",
    "marktext",
    "selecteditem",
    "selecteditemtext",
    "visitedtext"
  ],
  "<time>": [
    "ms",
    "s"
  ],
  "<top>": [
    "auto"
  ],
  "<url>": [
    "local url flag"
  ],
  "<visual-box>": [
    "border-box",
    "content-box",
    "padding-box"
  ],
  "@color-profile": [
    "components",
    "rendering-intent",
    "src"
  ],
  "@color-profile/rendering-intent": [
    "absolute-colorimetric",
    "perceptual",
    "relative-colorimetric",
    "saturation"
  ],
  "@container": [
    "aspect-ratio",
    "block-size",
    "height",
    "inline-size",
    "orientation",
    "width"
  ],
  "@container/orientation": [
    "landscape",
    "portrait"
  ],
  "@counter-style": [
    "additive-symbols",
    "fallback",
    "negative",
    "pad",
    "prefix",
    "range",
    "speak-as",
    "suffix",
    "symbols",
    "system"
  ],
  "@counter-style/range": [
    "auto"
  ],
  "@counter-style/speak-as": [
    "<counter-style-name>",
    "auto",
    "bullets",
    "numbers",
    "spell-out",
    "words"
  ],
  "@counter-style/system": [
    "additive",
    "alphabetic",
    "cyclic",
    "extends",
    "fixed",
    "numeric"
  ],
  "@custom-media": [
    "false",
    "true"
  ],
  "@font-face": [
    "ascent-override",
    "descent-override",
    "font-display",
    "font-family",
    "font-feature-settings",
    "font-language-override",
    "font-named-instance",
    "font-size",
    "font-stretch",
    "font-style",
    "font-variation-settings",
    "font-weight",
    "font-width",
    "line-gap-override",
    "size-adjust",
    "src",
    "subscript-position-override",
    "subscript-size-override",
    "superscript-position-override",
    "superscript-size-override",
    "unicode-range"
  ],
  "@font-face/font-display": [
    "auto",
    "block",
    "fallback",
    "optional",
    "swap"
  ],
  "@font-face/font-size": [
    "auto"
  ],
  "@font-feature-values": [
    "@annotation",
    "@character-variant",
    "@historical-forms",
    "@ornaments",
    "@styleset",
    "@stylistic",
    "@swash",
    "font-display",
    "font-feature-value-type"
  ],
  "@font-palette-values": [
    "base-palette",
    "font-family",
    "override-colors"
  ],
  "@function": [
    "result"
  ],
  "@media": [
    "-webkit-device-pixel-ratio",
    "-webkit-max-device-pixel-ratio",
    "-webkit-min-device-pixel-ratio",
    "-webkit-transform-3d",
    "all",
    "any-hover",
    "any-pointer",
    "aspect-ratio",
    "aural",
    "braille",
    "color",
    "color-gamut",
    "color-index",
    "device-aspect-ratio",
    "device-height",
    "device-width",
    "display-mode",
    "dynamic-range",
    "embossed",
    "environment-blending",
    "forced-colors",
    "grid",
    "handheld",
    "height",
    "horizontal-viewport-segments",
    "hover",
    "inverted-colors",
    "monochrome",
    "nav-controls",
    "not",
    "only",
    "orientation",
    "overflow-block",
    "overflow-inline",
    "pointer",
    "prefers-color-scheme",
    "prefers-contrast",
    "prefers-reduced-data",
    "prefers-reduced-motion",
    "prefers-reduced-transparency",
    "print",
    "projection",
    "resolution",
    "scan",
    "screen",
    "scripting",
    "shape",
    "speech",
    "tty",
    "tv",
    "update",
    "vertical-viewport-segments",
    "video-color-gamut",
    "video-dynamic-range",
    "width"
  ],
  "@media/color-gamut": [
    "p3",
    "rec2020",
    "srgb"
  ],
  "@media/display-mode": [
    "browser",
    "fullscreen",
    "minimal-ui",
    "picture-in-picture",
    "standalone"
  ],
  "@media/dynamic-range": [
    "high",
    "standard"
  ],
  "@media/environment-blending": [
    "additive",
    "opaque",
    "subtractive"
  ],
  "@media/forced-colors": [
    "active",
    "none"
  ],
  "@media/hover": [
    "hover",
    "none"
  ],
  "@media/inverted-colors": [
    "inverted",
    "none"
  ],
  "@media/nav-controls": [
    "back",
    "none"
  ],
  "@media/orientation": [
    "landscape",
    "portrait"
  ],
  "@media/overflow-block": [
    "none",
    "paged",
    "scroll"
  ],
  "@media/overflow-inline": [
    "none",
    "scroll"
  ],
  "@media/pointer": [
    "coarse",
    "fine",
    "none"
  ],
  "@media/prefers-color-scheme": [
    "dark",
    "light"
  ],
  "@media/prefers-contrast": [
    "custom",
    "less",
    "more",
    "no-preference"
  ],
  "@media/prefers-reduced-data": [
    "no-preference",
    "reduce"
  ],
  "@media/prefers-reduced-motion": [
    "no-preference",
    "reduce"
  ],
  "@media/prefers-reduced-transparency": [
    "no-preference",
    "reduce"
  ],
  "@media/resolution": [
    "infinite"
  ],
  "@media/scan": [
    "interlace",
    "progressive"
  ],
  "@media/scripting": [
    "enabled",
    "initial-only",
    "none"
  ],
  "@media/shape": [
    "rect",
    "round"
  ],
  "@media/update": [
    "fast",
    "none",
    "slow"
  ],
  "@page": [
    ":blank",
    ":first",
    ":left",
    ":right",
    "bleed",
    "marks",
    "page-orientation",
    "size"
  ],
  "@page/bleed": [
    "auto"
  ],
  "@page/marks": [
    "crop",
    "cross",
    "none"
  ],
  "@page/size": [
    "<page-size>",
    "auto",
    "landscape",
    "portrait"
  ],
  "@property": [
    "inherits",
    "initial-value",
    "syntax"
  ],
  "@view-transition": [
    "navigation",
    "types"
  ],
  "@view-transition/navigation": [
    "auto",
    "none"
  ],
  "@viewport": [
    "viewport-fit"
  ],
  "ARIA": [
    "property"
  ],
  "ARIAMixin": [
    "ariaActiveDescendantElement",
    "ariaAtomic",
    "ariaAutoComplete",
    "ariaBrailleLabel",
    "ariaBrailleRoleDescription",
    "ariaBusy",
    "ariaChecked",
    "ariaColCount",
    "ariaColIndex",
    "ariaColIndexText",
    "ariaColSpan",
    "ariaControlsElements",
    "ariaCurrent",
    "ariaDescribedByElements",
    "ariaDescription",
    "ariaDetailsElements",
    "ariaDisabled",
    "ariaErrorMessageElements",
    "ariaExpanded",
    "ariaFlowToElements",
    "ariaHasPopup",
    "ariaHidden",
    "ariaInvalid",
    "ariaKeyShortcuts",
    "ariaLabel",
    "ariaLabelledByElements",
    "ariaLevel",
    "ariaLive",
    "ariaModal",
    "ariaMultiLine",
    "ariaMultiSelectable",
    "ariaOrientation",
    "ariaOwnsElements",
    "ariaPlaceholder",
    "ariaPosInSet",
    "ariaPressed",
    "ariaReadOnly",
    "ariaRequired",
    "ariaRoleDescription",
    "ariaRowCount",
    "ariaRowIndex",
    "ariaRowIndexText",
    "ariaRowSpan",
    "ariaSelected",
    "ariaSetSize",
    "ariaSort",
    "ariaValueMax",
    "ariaValueMin",
    "ariaValueNow",
    "ariaValueText",
    "role"
  ],
  "AV1 Image Item Type": [
    "av01",
    "ma1a",
    "ma1b"
  ],
  "AV1 Item Configuration Property": [
    "av1c"
  ],
  "AV1LayeredImageIndexingProperty": [
    "a1lx"
  ],
  "AV1MetadataSampleGroupEntry": [
    "av1m"
  ],
  "AV1MultiFrameSampleGroupEntry": [
    "av1m"
  ],
  "AV1SampleEntry": [
    "av01"
  ],
  "AVIF Image Sequence brand": [
    "avis"
  ],
  "AVIF Image brand": [
    "avif"
  ],
  "AVIF Intra-only brand": [
    "avio"
  ],
  "AacBitstreamFormat": [
    "\"aac\"",
    "\"adts\"",
    "aac",
    "adts"
  ],
  "AacEncoderConfig": [
    "format"
  ],
  "AbortController": [
    "AbortController()",
    "abort()",
    "abort(reason)",
    "constructor()",
    "signal",
    "signal abort"
  ],
  "AbortController/abort()": [
    "reason"
  ],
  "AbortController/abort(reason)": [
    "reason"
  ],
  "AbortSignal": [
    "abort",
    "abort algorithms",
    "abort reason",
    "abort()",
    "abort(reason)",
    "aborted",
    "add",
    "any(signals)",
    "dependent",
    "dependent signals",
    "onabort",
    "reason",
    "remove",
    "signal abort",
    "source signals",
    "throwIfAborted()",
    "timeout(milliseconds)"
  ],
  "AbortSignal/abort()": [
    "reason"
  ],
  "AbortSignal/abort(reason)": [
    "reason"
  ],
  "AbortSignal/any(signals)": [
    "signals"
  ],
  "AbortSignal/timeout(milliseconds)": [
    "milliseconds"
  ],
  "AbsoluteOrientationSensor": [
    "AbsoluteOrientationSensor()",
    "AbsoluteOrientationSensor(sensorOptions)",
    "constructor()",
    "constructor(sensorOptions)"
  ],
  "AbsoluteOrientationSensor/AbsoluteOrientationSensor()": [
    "sensorOptions"
  ],
  "AbsoluteOrientationSensor/AbsoluteOrientationSensor(sensorOptions)": [
    "sensorOptions"
  ],
  "AbsoluteOrientationSensor/constructor()": [
    "sensorOptions"
  ],
  "AbsoluteOrientationSensor/constructor(sensorOptions)": [
    "sensorOptions"
  ],
  "AbstractRange": [
    "collapsed",
    "endContainer",
    "endOffset",
    "startContainer",
    "startOffset"
  ],
  "AbstractWorker": [
    "error",
    "onerror"
  ],
  "Accelerometer": [
    "Accelerometer()",
    "Accelerometer(options)",
    "constructor()",
    "constructor(options)",
    "x",
    "y",
    "z"
  ],
  "Accelerometer/Accelerometer()": [
    "options"
  ],
  "Accelerometer/Accelerometer(options)": [
    "options"
  ],
  "Accelerometer/constructor()": [
    "options"
  ],
  "Accelerometer/constructor(options)": [
    "options"
  ],
  "AccelerometerLocalCoordinateSystem": [
    "\"device\"",
    "\"screen\""
  ],
  "AccelerometerSensorOptions": [
    "referenceFrame"
  ],
  "AdAuctionData": [
    "request",
    "requestId"
  ],
  "AdAuctionDataConfig": [
    "coordinatorOrigin",
    "seller"
  ],
  "AdRender": [
    "height",
    "url",
    "width"
  ],
  "AddEventListenerOptions": [
    "once",
    "passive",
    "signal"
  ],
  "AddressErrors": [
    "addressLine",
    "city",
    "country",
    "dependentLocality",
    "organization",
    "phone",
    "postalCode",
    "recipient",
    "region",
    "sortingCode"
  ],
  "AesCbcParams": [
    "iv"
  ],
  "AesCtrParams": [
    "counter",
    "length"
  ],
  "AesDerivedKeyParams": [
    "length"
  ],
  "AesGcmParams": [
    "additionalData",
    "iv",
    "tagLength"
  ],
  "AesKeyAlgorithm": [
    "length"
  ],
  "AesKeyGenParams": [
    "length"
  ],
  "AggregateError": [
    "AggregateError(errors, message, options)",
    "message",
    "name"
  ],
  "Algorithm": [
    "name"
  ],
  "AlignSetting": [
    "\"center\"",
    "\"end\"",
    "\"left\"",
    "\"right\"",
    "\"start\"",
    "center",
    "end",
    "left",
    "right",
    "start"
  ],
  "All Execution Contexts": [
    "code evaluation state",
    "function",
    "realm",
    "scriptormodule"
  ],
  "AllowedBluetoothDevice": [
    "[[device]]",
    "allowedManufacturerData",
    "allowedServices",
    "deviceId",
    "mayUseGATT"
  ],
  "AllowedUSBDevice": [
    "[[devices]]",
    "productId",
    "serialNumber",
    "vendorId"
  ],
  "AlphaOption": [
    "\"discard\"",
    "\"keep\"",
    "discard",
    "keep"
  ],
  "AmbientLightSensor": [
    "AmbientLightSensor()",
    "AmbientLightSensor(sensorOptions)",
    "constructor()",
    "constructor(sensorOptions)",
    "illuminance"
  ],
  "AmbientLightSensor/AmbientLightSensor()": [
    "sensorOptions"
  ],
  "AmbientLightSensor/AmbientLightSensor(sensorOptions)": [
    "sensorOptions"
  ],
  "AmbientLightSensor/constructor()": [
    "sensorOptions"
  ],
  "AmbientLightSensor/constructor(sensorOptions)": [
    "sensorOptions"
  ],
  "AnalyserNode": [
    "AnalyserNode(context)",
    "AnalyserNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "fftSize",
    "frequencyBinCount",
    "getByteFrequencyData(array)",
    "getByteTimeDomainData(array)",
    "getFloatFrequencyData(array)",
    "getFloatTimeDomainData(array)",
    "maxDecibels",
    "minDecibels",
    "smoothingTimeConstant"
  ],
  "AnalyserNode/AnalyserNode(context)": [
    "context",
    "options"
  ],
  "AnalyserNode/AnalyserNode(context, options)": [
    "context",
    "options"
  ],
  "AnalyserNode/constructor()": [
    "context",
    "options"
  ],
  "AnalyserNode/constructor(context)": [
    "context",
    "options"
  ],
  "AnalyserNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "AnalyserNode/getByteFrequencyData()": [
    "array"
  ],
  "AnalyserNode/getByteFrequencyData(array)": [
    "array"
  ],
  "AnalyserNode/getByteTimeDomainData()": [
    "array"
  ],
  "AnalyserNode/getByteTimeDomainData(array)": [
    "array"
  ],
  "AnalyserNode/getFloatFrequencyData()": [
    "array"
  ],
  "AnalyserNode/getFloatFrequencyData(array)": [
    "array"
  ],
  "AnalyserNode/getFloatTimeDomainData()": [
    "array"
  ],
  "AnalyserNode/getFloatTimeDomainData(array)": [
    "array"
  ],
  "AnalyserOptions": [
    "fftSize",
    "maxDecibels",
    "minDecibels",
    "smoothingTimeConstant"
  ],
  "Animatable": [
    "animate(keyframes)",
    "animate(keyframes, options)",
    "getAnimations()",
    "getAnimations(options)"
  ],
  "Animatable/animate(keyframes, options)": [
    "keyframes",
    "options"
  ],
  "Animatable/getAnimations(options)": [
    "options"
  ],
  "Animation": [
    "Animation()",
    "Animation(effect)",
    "Animation(effect, timeline)",
    "cancel()",
    "commitStyles()",
    "constructor()",
    "constructor(effect)",
    "constructor(effect, timeline)",
    "currentTime",
    "effect",
    "finish()",
    "finished",
    "id",
    "oncancel",
    "onfinish",
    "onremove",
    "pause()",
    "pending",
    "persist()",
    "play()",
    "playState",
    "playbackRate",
    "progress",
    "rangeEnd",
    "rangeStart",
    "ready",
    "replaceState",
    "reverse()",
    "startTime",
    "timeline",
    "updatePlaybackRate(playbackRate)"
  ],
  "Animation/Animation(effect, timeline)": [
    "effect",
    "timeline"
  ],
  "Animation/updatePlaybackRate(playbackRate)": [
    "playbackRate"
  ],
  "AnimationEffect": [
    "after()",
    "after(...effects)",
    "before()",
    "before(...effects)",
    "getComputedTiming()",
    "getTiming()",
    "localTime",
    "nextSibling",
    "parent",
    "previousSibling",
    "remove()",
    "replace()",
    "replace(...effects)",
    "updateTiming()",
    "updateTiming(timing)"
  ],
  "AnimationEffect/after()": [
    "effects"
  ],
  "AnimationEffect/after(...effects)": [
    "effects"
  ],
  "AnimationEffect/before()": [
    "effects"
  ],
  "AnimationEffect/before(...effects)": [
    "effects"
  ],
  "AnimationEffect/replace()": [
    "effects"
  ],
  "AnimationEffect/replace(...effects)": [
    "effects"
  ],
  "AnimationEffect/updateTiming(timing)": [
    "timing"
  ],
  "AnimationEvent": [
    "AnimationEvent(type)",
    "AnimationEvent(type, animationEventInitDict)",
    "animationName",
    "constructor(type)",
    "constructor(type, animationEventInitDict)",
    "elapsedTime",
    "pseudoElement"
  ],
  "AnimationEvent/AnimationEvent(type)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEvent/AnimationEvent(type, animationEventInitDict)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEvent/constructor(type)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEvent/constructor(type, animationEventInitDict)": [
    "animationEventInitDict",
    "type"
  ],
  "AnimationEventInit": [
    "animationName",
    "elapsedTime",
    "pseudoElement"
  ],
  "AnimationFrameProvider": [
    "cancelAnimationFrame(handle)",
    "requestAnimationFrame(callback)"
  ],
  "AnimationNodeList": [
    "item(index)",
    "length"
  ],
  "AnimationNodeList/item(index)": [
    "index"
  ],
  "AnimationPlayState": [
    "\"finished\"",
    "\"idle\"",
    "\"paused\"",
    "\"running\"",
    "finished",
    "idle",
    "paused",
    "running"
  ],
  "AnimationPlaybackEvent": [
    "AnimationPlaybackEvent(type)",
    "AnimationPlaybackEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "currentTime",
    "timelineTime"
  ],
  "AnimationPlaybackEvent/AnimationPlaybackEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEvent/AnimationPlaybackEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AnimationPlaybackEventInit": [
    "currentTime",
    "timelineTime"
  ],
  "AnimationReplaceState": [
    "\"active\"",
    "\"persisted\"",
    "\"removed\""
  ],
  "AnimationReplacedState": [
    "active",
    "persisted",
    "removed"
  ],
  "AnimationTimeOptions": [
    "range"
  ],
  "AnimationTimeline": [
    "currentTime",
    "duration",
    "getCurrentTime()",
    "getCurrentTime(options)",
    "play()",
    "play(effect)"
  ],
  "AnimationTimeline/getCurrentTime()": [
    "options"
  ],
  "AnimationTimeline/getCurrentTime(options)": [
    "options"
  ],
  "AnimationTimeline/play(effect)": [
    "effect"
  ],
  "AnimationWorkletGlobalScope": [
    "registerAnimator(name, animatorCtor)"
  ],
  "AnimationWorkletGlobalScope/registerAnimator(name, animatorCtor)": [
    "animatorCtor",
    "name"
  ],
  "AnimatorInstanceConstructor": [
    "options",
    "state"
  ],
  "AppBannerPromptOutcome": [
    "accepted",
    "dismissed"
  ],
  "AppendMode": [
    "segments",
    "sequence"
  ],
  "Array": [
    "Array(...values)",
    "at(index)",
    "concat(...items)",
    "copyWithin(target, start, end)",
    "entries()",
    "every(callback, thisArg)",
    "fill(value, start, end)",
    "filter(callback, thisArg)",
    "find(predicate, thisArg)",
    "findIndex(predicate, thisArg)",
    "findLast(predicate, thisArg)",
    "findLastIndex(predicate, thisArg)",
    "flat(depth)",
    "flatMap(mapperFunction, thisArg)",
    "forEach(callback, thisArg)",
    "from(items, mapper, thisArg)",
    "includes(searchElement, fromIndex)",
    "indexOf(searchElement, fromIndex)",
    "isArray(arg)",
    "join(separator)",
    "keys()",
    "lastIndexOf(searchElement, fromIndex)",
    "map(callback, thisArg)",
    "of(...items)",
    "pop()",
    "push(...items)",
    "reduce(callback, initialValue)",
    "reduceRight(callback, initialValue)",
    "reverse()",
    "shift()",
    "slice(start, end)",
    "some(callback, thisArg)",
    "sort(comparator)",
    "splice(start, deleteCount, ...items)",
    "toLocaleString(reserved1, reserved2)",
    "toReversed()",
    "toSorted(comparator)",
    "toSpliced(start, skipCount, ...items)",
    "toString()",
    "unshift(...items)",
    "values()",
    "with(index, value)"
  ],
  "Array.prototype [ %Symbol.iterator% ] ( )": [
    "Array.prototype %Symbol.iterator% ()"
  ],
  "ArrayBuffer": [
    "ArrayBuffer(length, options)",
    "byteLength",
    "create",
    "detach",
    "detached",
    "isView(arg)",
    "maxByteLength",
    "resizable",
    "resize(newLength)",
    "slice(start, end)",
    "transfer",
    "transfer(newLength)",
    "transferToFixedLength(newLength)",
    "write"
  ],
  "ArrayBuffer/write": [
    "startingoffset"
  ],
  "ArrayBufferView": [
    "create",
    "write"
  ],
  "ArrayBufferView/write": [
    "startingoffset"
  ],
  "AssignedNodeOptions": [
    "flatten"
  ],
  "AsyncFunction": [
    "AsyncFunction(...parameterArgs, bodyArg)"
  ],
  "AsyncGeneratorFunction": [
    "AsyncGeneratorFunction(...parameterArgs, bodyArg)",
    "prototype"
  ],
  "Atomics": [
    "add(typedArray, index, value)",
    "and(typedArray, index, value)",
    "compareExchange(typedArray, index, expectedValue, replacementValue)",
    "exchange(typedArray, index, value)",
    "isLockFree(size)",
    "load(typedArray, index)",
    "notify(typedArray, index, count)",
    "or(typedArray, index, value)",
    "store(typedArray, index, value)",
    "sub(typedArray, index, value)",
    "wait(typedArray, index, value, timeout)",
    "waitAsync(typedArray, index, value, timeout)",
    "xor(typedArray, index, value)"
  ],
  "AttestationConveyancePreference": [
    "\"direct\"",
    "\"enterprise\"",
    "\"indirect\"",
    "\"none\"",
    "direct",
    "enterprise",
    "indirect",
    "none"
  ],
  "Attr": [
    "element",
    "isId",
    "local name",
    "localName",
    "name",
    "namespace",
    "namespace prefix",
    "namespaceURI",
    "ownerElement",
    "prefix",
    "qualified name",
    "reflect",
    "schemaTypeInfo",
    "specified",
    "value"
  ],
  "AttributionReportingRequestOptions": [
    "eventSourceEligible",
    "triggerEligible"
  ],
  "AuctionAd": [
    "allowedReportingOrigins",
    "buyerAndSellerReportingId",
    "buyerReportingId",
    "metadata",
    "renderURL",
    "sizeGroup"
  ],
  "AuctionAdConfig": [
    "additionalBids",
    "allSlotsRequestedSizes",
    "auctionNonce",
    "auctionReportBuyerDebugModeConfig",
    "auctionReportBuyerKeys",
    "auctionReportBuyers",
    "auctionSignals",
    "componentAuctions",
    "decisionLogicURL",
    "deprecatedRenderURLReplacements",
    "directFromSellerSignalsHeaderAdSlot",
    "interestGroupBuyers",
    "maxTrustedScoringSignalsURLLength",
    "perBuyerCumulativeTimeouts",
    "perBuyerCurrencies",
    "perBuyerExperimentGroupIds",
    "perBuyerGroupLimits",
    "perBuyerMultiBidLimits",
    "perBuyerPrioritySignals",
    "perBuyerRealTimeReportingConfig",
    "perBuyerSignals",
    "perBuyerTimeouts",
    "privateAggregationConfig",
    "reportingTimeout",
    "requestId",
    "requestedSize",
    "requiredSellerCapabilities",
    "resolveToConfig",
    "seller",
    "sellerCurrency",
    "sellerExperimentGroupId",
    "sellerRealTimeReportingConfig",
    "sellerSignals",
    "sellerTimeout",
    "serverResponse",
    "signal",
    "trustedScoringSignalsURL"
  ],
  "AuctionAdInterestGroup": [
    "additionalBidKey",
    "lifetimeMs",
    "priority",
    "prioritySignalsOverrides",
    "privateAggregationConfig"
  ],
  "AuctionAdInterestGroupKey": [
    "name",
    "owner"
  ],
  "AuctionAdInterestGroupSize": [
    "height",
    "width"
  ],
  "AuctionRealTimeReportingConfig": [
    "type"
  ],
  "AuctionReportBuyerDebugModeConfig": [
    "debugKey",
    "enabled"
  ],
  "AuctionReportBuyersConfig": [
    "bucket",
    "scale"
  ],
  "AudioBuffer": [
    "AudioBuffer(options)",
    "[[internal data]]",
    "[[length]]",
    "[[number of channels]]",
    "[[sample rate]]",
    "constructor(options)",
    "copyFromChannel(destination, channelNumber)",
    "copyFromChannel(destination, channelNumber, bufferOffset)",
    "copyToChannel(source, channelNumber)",
    "copyToChannel(source, channelNumber, bufferOffset)",
    "duration",
    "getChannelData(channel)",
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "AudioBuffer/AudioBuffer(options)": [
    "options"
  ],
  "AudioBuffer/constructor()": [
    "options"
  ],
  "AudioBuffer/constructor(options)": [
    "options"
  ],
  "AudioBuffer/copyFromChannel()": [
    "bufferOffset",
    "channelNumber",
    "destination"
  ],
  "AudioBuffer/copyFromChannel(destination, channelNumber)": [
    "bufferOffset",
    "channelNumber",
    "destination"
  ],
  "AudioBuffer/copyFromChannel(destination, channelNumber, bufferOffset)": [
    "bufferOffset",
    "channelNumber",
    "destination"
  ],
  "AudioBuffer/copyToChannel()": [
    "bufferOffset",
    "channelNumber",
    "source"
  ],
  "AudioBuffer/copyToChannel(source, channelNumber)": [
    "bufferOffset",
    "channelNumber",
    "source"
  ],
  "AudioBuffer/copyToChannel(source, channelNumber, bufferOffset)": [
    "bufferOffset",
    "channelNumber",
    "source"
  ],
  "AudioBuffer/getChannelData()": [
    "channel"
  ],
  "AudioBuffer/getChannelData(channel)": [
    "channel"
  ],
  "AudioBufferOptions": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "AudioBufferSourceNode": [
    "AudioBufferSourceNode(context)",
    "AudioBufferSourceNode(context, options)",
    "[[buffer set]]",
    "buffer",
    "constructor(context)",
    "constructor(context, options)",
    "detune",
    "loop",
    "loopEnd",
    "loopStart",
    "playbackRate",
    "start()",
    "start(when)",
    "start(when, offset)",
    "start(when, offset, duration)"
  ],
  "AudioBufferSourceNode/AudioBufferSourceNode(context)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/AudioBufferSourceNode(context, options)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/constructor": [
    "AudioBufferSourceNode(context, options)"
  ],
  "AudioBufferSourceNode/constructor()": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/constructor(context)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "AudioBufferSourceNode/start(when, offset, duration)": [
    "duration",
    "offset",
    "when"
  ],
  "AudioBufferSourceOptions": [
    "buffer",
    "detune",
    "loop",
    "loopEnd",
    "loopStart",
    "playbackRate"
  ],
  "AudioConfiguration": [
    "bitrate",
    "channels",
    "contentType",
    "samplerate",
    "spatialRendering"
  ],
  "AudioContext": [
    "AudioContext()",
    "AudioContext(contextOptions)",
    "[[pending resume promises]]",
    "[[sink ID]]",
    "[[suspended by user]]",
    "baseLatency",
    "close()",
    "constructor()",
    "constructor(contextOptions)",
    "createMediaElementSource(mediaElement)",
    "createMediaStreamDestination()",
    "createMediaStreamSource(mediaStream)",
    "createMediaStreamTrackSource(mediaStreamTrack)",
    "error",
    "getOutputTimestamp()",
    "onerror",
    "onsinkchange",
    "outputLatency",
    "renderCapacity",
    "resume()",
    "setSinkId((DOMString or AudioSinkOptions) sinkId)",
    "setSinkId(sinkId)",
    "sinkId",
    "sinkchange",
    "suspend()"
  ],
  "AudioContext/constructor(contextOptions)": [
    "contextOptions"
  ],
  "AudioContext/createMediaElementSource()": [
    "mediaElement"
  ],
  "AudioContext/createMediaElementSource(mediaElement)": [
    "mediaElement"
  ],
  "AudioContext/createMediaStreamSource()": [
    "mediaStream"
  ],
  "AudioContext/createMediaStreamSource(mediaStream)": [
    "mediaStream"
  ],
  "AudioContext/createMediaStreamTrackSource()": [
    "mediaStreamTrack"
  ],
  "AudioContext/createMediaStreamTrackSource(mediaStreamTrack)": [
    "mediaStreamTrack"
  ],
  "AudioContext/setSinkId(sinkId)": [
    "sinkId"
  ],
  "AudioContextLatencyCategory": [
    "\"balanced\"",
    "\"interactive\"",
    "\"playback\"",
    "balanced",
    "interactive",
    "playback"
  ],
  "AudioContextOptions": [
    "latencyHint",
    "renderSizeHint",
    "sampleRate",
    "sinkId"
  ],
  "AudioContextRenderSizeCategory": [
    "\"default\"",
    "\"hardware\"",
    "default",
    "hardware"
  ],
  "AudioContextState": [
    "\"closed\"",
    "\"running\"",
    "\"suspended\"",
    "closed",
    "running",
    "suspended"
  ],
  "AudioData": [
    "AudioData(init)",
    "[[format]]",
    "[[number of channels]]",
    "[[number of frames]]",
    "[[resource reference]]",
    "[[sample rate]]",
    "[[timestamp]]",
    "allocationSize(options)",
    "clone()",
    "close()",
    "constructor(init)",
    "copyTo(destination, options)",
    "duration",
    "format",
    "numberOfChannels",
    "numberOfFrames",
    "sampleRate",
    "timestamp"
  ],
  "AudioData/AudioData(init)": [
    "init"
  ],
  "AudioData/allocationSize(options)": [
    "options"
  ],
  "AudioData/constructor(init)": [
    "init"
  ],
  "AudioData/copyTo(destination, options)": [
    "destination",
    "options"
  ],
  "AudioDataCopyToOptions": [
    "format",
    "frameCount",
    "frameOffset",
    "planeIndex"
  ],
  "AudioDataInit": [
    "data",
    "format",
    "numberOfChannels",
    "numberOfFrames",
    "sampleRate",
    "timestamp",
    "transfer"
  ],
  "AudioDataOutputCallback": [
    "output"
  ],
  "AudioDecoder": [
    "AudioDecoder(init)",
    "[[codec implementation]]",
    "[[codec saturated]]",
    "[[codec work queue]]",
    "[[control message queue]]",
    "[[decodeQueueSize]]",
    "[[dequeue event scheduled]]",
    "[[error callback]]",
    "[[key chunk required]]",
    "[[message queue blocked]]",
    "[[output callback]]",
    "[[pending flush promises]]",
    "[[state]]",
    "close()",
    "configure(config)",
    "constructor(init)",
    "decode(chunk)",
    "decodeQueueSize",
    "dequeue",
    "flush()",
    "isConfigSupported(config)",
    "ondequeue",
    "reset()",
    "schedule dequeue event",
    "state"
  ],
  "AudioDecoder/AudioDecoder(init)": [
    "init"
  ],
  "AudioDecoder/configure(config)": [
    "config"
  ],
  "AudioDecoder/constructor(init)": [
    "init"
  ],
  "AudioDecoder/decode(chunk)": [
    "chunk"
  ],
  "AudioDecoder/isConfigSupported(config)": [
    "config"
  ],
  "AudioDecoderConfig": [
    "codec",
    "description",
    "numberOfChannels",
    "sampleRate"
  ],
  "AudioDecoderInit": [
    "error",
    "output"
  ],
  "AudioDecoderSupport": [
    "config",
    "supported"
  ],
  "AudioDestinationNode": [
    "maxChannelCount"
  ],
  "AudioEncoder": [
    "AudioEncoder(init)",
    "[[active encoder config]]",
    "[[active output config]]",
    "[[codec implementation]]",
    "[[codec saturated]]",
    "[[codec work queue]]",
    "[[control message queue]]",
    "[[dequeue event scheduled]]",
    "[[encodeQueueSize]]",
    "[[error callback]]",
    "[[message queue blocked]]",
    "[[output callback]]",
    "[[pending flush promises]]",
    "[[state]]",
    "close()",
    "configure(config)",
    "constructor(init)",
    "dequeue",
    "encode(data)",
    "encodeQueueSize",
    "flush()",
    "isConfigSupported(config)",
    "ondequeue",
    "reset()",
    "schedule dequeue event",
    "state"
  ],
  "AudioEncoder/AudioEncoder(init)": [
    "init"
  ],
  "AudioEncoder/configure(config)": [
    "config"
  ],
  "AudioEncoder/constructor(init)": [
    "init"
  ],
  "AudioEncoder/encode(data)": [
    "data"
  ],
  "AudioEncoder/isConfigSupported(config)": [
    "config"
  ],
  "AudioEncoderConfig": [
    "aac",
    "bitrate",
    "bitrateMode",
    "codec",
    "flac",
    "numberOfChannels",
    "opus",
    "sampleRate"
  ],
  "AudioEncoderInit": [
    "error",
    "output"
  ],
  "AudioEncoderSupport": [
    "config",
    "supported"
  ],
  "AudioListener": [
    "forward",
    "forwardX",
    "forwardY",
    "forwardZ",
    "positionX",
    "positionY",
    "positionZ",
    "setOrientation(x, y, z, xUp, yUp, zUp)",
    "setPosition(x, y, z)",
    "up",
    "upX",
    "upY",
    "upZ"
  ],
  "AudioListener/setOrientation()": [
    "x",
    "xUp",
    "y",
    "yUp",
    "z",
    "zUp"
  ],
  "AudioListener/setOrientation(x, y, z, xUp, yUp, zUp)": [
    "x",
    "xUp",
    "y",
    "yUp",
    "z",
    "zUp"
  ],
  "AudioListener/setPosition()": [
    "x",
    "y",
    "z"
  ],
  "AudioListener/setPosition(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "AudioNode": [
    "channelCount",
    "channelCountMode",
    "channelInterpretation",
    "channelcount constraints",
    "channelcountmode constraints",
    "channelinterpretation constraints",
    "connect(destinationNode)",
    "connect(destinationNode, output)",
    "connect(destinationNode, output, input)",
    "connect(destinationParam)",
    "connect(destinationParam, output)",
    "context",
    "disconnect()",
    "disconnect(destinationNode)",
    "disconnect(destinationNode, output)",
    "disconnect(destinationNode, output, input)",
    "disconnect(destinationParam)",
    "disconnect(destinationParam, output)",
    "disconnect(output)",
    "numberOfInputs",
    "numberOfOutputs",
    "source nodes"
  ],
  "AudioNode/connect(destinationNode, output, input)": [
    "destinationNode",
    "input",
    "output"
  ],
  "AudioNode/connect(destinationParam, output)": [
    "destinationParam",
    "output"
  ],
  "AudioNode/disconnect(destinationNode)": [
    "destinationNode"
  ],
  "AudioNode/disconnect(destinationNode, output)": [
    "destinationNode",
    "output"
  ],
  "AudioNode/disconnect(destinationNode, output, input)": [
    "destinationNode",
    "input",
    "output"
  ],
  "AudioNode/disconnect(destinationParam)": [
    "destinationParam"
  ],
  "AudioNode/disconnect(destinationParam, output)": [
    "destinationParam",
    "output"
  ],
  "AudioNode/disconnect(output)": [
    "output"
  ],
  "AudioNodeOptions": [
    "channelCount",
    "channelCountMode",
    "channelInterpretation"
  ],
  "AudioOutputOptions": [
    "deviceId"
  ],
  "AudioParam": [
    "[[current value]]",
    "automation rate constraints",
    "automationRate",
    "cancelAndHoldAtTime(cancelTime)",
    "cancelScheduledValues(cancelTime)",
    "defaultValue",
    "exponentialRampToValueAtTime(value, endTime)",
    "linearRampToValueAtTime(value, endTime)",
    "maxValue",
    "minValue",
    "setTargetAtTime(target, startTime, timeConstant)",
    "setValueAtTime(value, startTime)",
    "setValueCurveAtTime(values, startTime, duration)",
    "value"
  ],
  "AudioParam/cancelAndHoldAtTime()": [
    "cancelTime"
  ],
  "AudioParam/cancelAndHoldAtTime(cancelTime)": [
    "cancelTime"
  ],
  "AudioParam/cancelScheduledValues()": [
    "cancelTime"
  ],
  "AudioParam/cancelScheduledValues(cancelTime)": [
    "cancelTime"
  ],
  "AudioParam/exponentialRampToValueAtTime()": [
    "endTime",
    "value"
  ],
  "AudioParam/exponentialRampToValueAtTime(value, endTime)": [
    "endTime",
    "value"
  ],
  "AudioParam/linearRampToValueAtTime()": [
    "endTime",
    "value"
  ],
  "AudioParam/linearRampToValueAtTime(value, endTime)": [
    "endTime",
    "value"
  ],
  "AudioParam/setTargetAtTime()": [
    "startTime",
    "target",
    "timeConstant"
  ],
  "AudioParam/setTargetAtTime(target, startTime, timeConstant)": [
    "startTime",
    "target",
    "timeConstant"
  ],
  "AudioParam/setValueAtTime()": [
    "startTime",
    "value"
  ],
  "AudioParam/setValueAtTime(value, startTime)": [
    "startTime",
    "value"
  ],
  "AudioParam/setValueCurveAtTime()": [
    "duration",
    "startTime",
    "values"
  ],
  "AudioParam/setValueCurveAtTime(values, startTime, duration)": [
    "duration",
    "startTime",
    "values"
  ],
  "AudioParamDescriptor": [
    "automationRate",
    "defaultValue",
    "maxValue",
    "minValue",
    "name"
  ],
  "AudioProcessingEvent": [
    "AudioProcessingEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "inputBuffer",
    "outputBuffer",
    "playbackTime"
  ],
  "AudioProcessingEvent/AudioProcessingEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioProcessingEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioProcessingEventInit": [
    "inputBuffer",
    "outputBuffer",
    "playbackTime"
  ],
  "AudioRenderCapacity": [
    "onupdate",
    "start()",
    "start(options)",
    "stop()",
    "update"
  ],
  "AudioRenderCapacity/start()": [
    "options"
  ],
  "AudioRenderCapacity/start(options)": [
    "options"
  ],
  "AudioRenderCapacityEvent": [
    "AudioRenderCapacityEvent(type)",
    "AudioRenderCapacityEvent(type, eventInitDict)",
    "averageLoad",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "peakLoad",
    "timestamp",
    "underrunRatio"
  ],
  "AudioRenderCapacityEvent/AudioRenderCapacityEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEvent/AudioRenderCapacityEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "AudioRenderCapacityEventInit": [
    "averageLoad",
    "peakLoad",
    "timestamp",
    "underrunRatio"
  ],
  "AudioRenderCapacityOptions": [
    "updateInterval"
  ],
  "AudioSampleFormat": [
    "\"f32\"",
    "\"f32-planar\"",
    "\"s16\"",
    "\"s16-planar\"",
    "\"s32\"",
    "\"s32-planar\"",
    "\"u8\"",
    "\"u8-planar\"",
    "f32",
    "f32-planar",
    "s16",
    "s16-planar",
    "s32",
    "s32-planar",
    "u8",
    "u8-planar"
  ],
  "AudioScheduledSourceNode": [
    "[[source started]]",
    "ended",
    "onended",
    "start()",
    "start(when)",
    "stop()",
    "stop(when)"
  ],
  "AudioScheduledSourceNode/start(when)": [
    "when"
  ],
  "AudioScheduledSourceNode/stop(when)": [
    "when"
  ],
  "AudioSession": [
    "onstatechange",
    "state",
    "type"
  ],
  "AudioSessionState": [
    "\"active\"",
    "\"inactive\"",
    "\"interrupted\""
  ],
  "AudioSessionType": [
    "\"ambient\"",
    "\"auto\"",
    "\"play-and-record\"",
    "\"playback\"",
    "\"transient\"",
    "\"transient-solo\""
  ],
  "AudioSinkInfo": [
    "type"
  ],
  "AudioSinkOptions": [
    "type"
  ],
  "AudioSinkType": [
    "\"none\"",
    "none"
  ],
  "AudioTimestamp": [
    "contextTime",
    "performanceTime"
  ],
  "AudioTrack": [
    "enabled",
    "id",
    "kind",
    "label",
    "language",
    "sourceBuffer"
  ],
  "AudioTrackList": [
    "addtrack",
    "change",
    "getTrackById(id)",
    "length",
    "onaddtrack",
    "onchange",
    "onremovetrack",
    "removetrack"
  ],
  "AudioWorklet": [
    "port"
  ],
  "AudioWorkletGlobalScope": [
    "currentFrame",
    "currentTime",
    "port",
    "registerProcessor(name, processorCtor)",
    "renderQuantumSize",
    "sampleRate"
  ],
  "AudioWorkletGlobalScope/registerProcessor(name, processorCtor)": [
    "name",
    "processorCtor"
  ],
  "AudioWorkletNode": [
    "AudioWorkletNode(context, name)",
    "AudioWorkletNode(context, name, options)",
    "constructor(context, name)",
    "constructor(context, name, options)",
    "onprocessorerror",
    "parameters",
    "port",
    "processorerror"
  ],
  "AudioWorkletNode/AudioWorkletNode(context, name)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/AudioWorkletNode(context, name, options)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/constructor()": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/constructor(context, name)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNode/constructor(context, name, options)": [
    "context",
    "name",
    "options"
  ],
  "AudioWorkletNodeOptions": [
    "numberOfInputs",
    "numberOfOutputs",
    "outputChannelCount",
    "parameterData",
    "processorOptions"
  ],
  "AudioWorkletProcessCallback": [
    "inputs",
    "outputs",
    "parameters"
  ],
  "AudioWorkletProcessor": [
    "AudioWorkletProcessor()",
    "[[callable process]]",
    "[[node reference]]",
    "constructor()",
    "port"
  ],
  "AudioWorkletProcessorConstructor": [
    "options"
  ],
  "AuthenticationExtensionsClientInputs": [
    "appid",
    "appidExclude",
    "credBlob",
    "credProps",
    "credentialProtectionPolicy",
    "devicePubKey",
    "enforceCredentialProtectionPolicy",
    "getCredBlob",
    "hmacCreateSecret",
    "hmacGetSecret",
    "largeBlob",
    "minPinLength",
    "payment",
    "prf",
    "uvm"
  ],
  "AuthenticationExtensionsClientOutputs": [
    "appid",
    "appidExclude",
    "credProps",
    "devicePubKey",
    "hmacCreateSecret",
    "hmacGetSecret",
    "largeBlob",
    "prf",
    "uvm"
  ],
  "AuthenticationExtensionsDevicePublicKeyInputs": [
    "attestation",
    "attestationFormats"
  ],
  "AuthenticationExtensionsDevicePublicKeyOutputs": [
    "signature"
  ],
  "AuthenticationExtensionsLargeBlobInputs": [
    "read",
    "support",
    "write"
  ],
  "AuthenticationExtensionsLargeBlobOutputs": [
    "blob",
    "supported",
    "written"
  ],
  "AuthenticationExtensionsPRFInputs": [
    "eval",
    "evalByCredential"
  ],
  "AuthenticationExtensionsPRFOutputs": [
    "enabled",
    "results"
  ],
  "AuthenticationExtensionsPRFValues": [
    "first",
    "second"
  ],
  "AuthenticationExtensionsPaymentInputs": [
    "instrument",
    "isPayment",
    "payeeName",
    "payeeOrigin",
    "rpId",
    "topOrigin",
    "total"
  ],
  "AuthenticationResponseJSON": [
    "authenticatorAttachment",
    "clientExtensionResults",
    "id",
    "rawId",
    "response",
    "type"
  ],
  "AuthenticatorAssertionResponse": [
    "attestationObject",
    "authenticatorData",
    "signature",
    "userHandle"
  ],
  "AuthenticatorAssertionResponseJSON": [
    "attestationObject",
    "authenticatorData",
    "clientDataJSON",
    "signature",
    "userHandle"
  ],
  "AuthenticatorAttachment": [
    "\"cross-platform\"",
    "\"platform\"",
    "cross-platform",
    "platform"
  ],
  "AuthenticatorAttestationResponse": [
    "[[transports]]",
    "attestationObject",
    "getAuthenticatorData()",
    "getPublicKey()",
    "getPublicKeyAlgorithm()",
    "getTransports()"
  ],
  "AuthenticatorAttestationResponseJSON": [
    "attestationObject",
    "authenticatorData",
    "clientDataJSON",
    "publicKey",
    "publicKeyAlgorithm",
    "transports"
  ],
  "AuthenticatorResponse": [
    "clientDataJSON"
  ],
  "AuthenticatorSelectionCriteria": [
    "authenticatorAttachment",
    "requireResidentKey",
    "residentKey",
    "userVerification"
  ],
  "AuthenticatorTransport": [
    "\"ble\"",
    "\"hybrid\"",
    "\"internal\"",
    "\"nfc\"",
    "\"smart-card\"",
    "\"usb\"",
    "ble",
    "hybrid",
    "internal",
    "nfc",
    "smart-card",
    "usb"
  ],
  "AutoKeyword": [
    "\"auto\"",
    "auto"
  ],
  "AutomationRate": [
    "\"a-rate\"",
    "\"k-rate\"",
    "a-rate",
    "k-rate"
  ],
  "AutoplayPolicy": [
    "\"allowed\"",
    "\"allowed-muted\"",
    "\"disallowed\"",
    "Inaudible media",
    "allowed",
    "allowed-muted",
    "disallowed",
    "inaudible media element"
  ],
  "AutoplayPolicyMediaType": [
    "\"audiocontext\"",
    "\"mediaelement\"",
    "audiocontext",
    "mediaelement"
  ],
  "AvcBitstreamFormat": [
    "\"annexb\"",
    "\"avc\"",
    "annexb",
    "avc"
  ],
  "AvcEncoderConfig": [
    "format"
  ],
  "BackgroundFetchEvent": [
    "BackgroundFetchEvent(type, init)",
    "background fetch",
    "constructor(type, init)",
    "registration"
  ],
  "BackgroundFetchEvent/BackgroundFetchEvent(type, init)": [
    "init",
    "type"
  ],
  "BackgroundFetchEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "BackgroundFetchEventInit": [
    "registration"
  ],
  "BackgroundFetchFailureReason": [
    "\"\"",
    "\"aborted\"",
    "\"bad-status\"",
    "\"download-total-exceeded\"",
    "\"fetch-error\"",
    "\"quota-exceeded\""
  ],
  "BackgroundFetchManager": [
    "backgroundfetchregistration instances",
    "fetch(id, requests)",
    "fetch(id, requests, options)",
    "get(id)",
    "getIds()",
    "service worker registration"
  ],
  "BackgroundFetchManager/fetch(id, requests)": [
    "id",
    "options",
    "requests"
  ],
  "BackgroundFetchManager/fetch(id, requests, options)": [
    "id",
    "options",
    "requests"
  ],
  "BackgroundFetchManager/get(id)": [
    "id"
  ],
  "BackgroundFetchOptions": [
    "downloadTotal"
  ],
  "BackgroundFetchRecord": [
    "request",
    "response promise",
    "responseReady"
  ],
  "BackgroundFetchRegistration": [
    "abort()",
    "background fetch",
    "download total",
    "downloadTotal",
    "downloaded",
    "failure reason",
    "failureReason",
    "id",
    "match(request)",
    "match(request, options)",
    "matchAll()",
    "matchAll(request)",
    "matchAll(request, options)",
    "onprogress",
    "progress",
    "records available flag",
    "recordsAvailable",
    "result",
    "upload total",
    "uploadTotal",
    "uploaded"
  ],
  "BackgroundFetchRegistration/match(request)": [
    "options",
    "request"
  ],
  "BackgroundFetchRegistration/match(request, options)": [
    "options",
    "request"
  ],
  "BackgroundFetchRegistration/matchAll()": [
    "options",
    "request"
  ],
  "BackgroundFetchRegistration/matchAll(request)": [
    "options",
    "request"
  ],
  "BackgroundFetchRegistration/matchAll(request, options)": [
    "options",
    "request"
  ],
  "BackgroundFetchResult": [
    "\"\"",
    "\"failure\"",
    "\"success\""
  ],
  "BackgroundFetchUIOptions": [
    "icons",
    "title"
  ],
  "BackgroundFetchUpdateUIEvent": [
    "BackgroundFetchUpdateUIEvent(type, init)",
    "constructor(type, init)",
    "ui updated flag",
    "updateUI()",
    "updateUI(options)"
  ],
  "BackgroundFetchUpdateUIEvent/BackgroundFetchUpdateUIEvent(type, init)": [
    "init",
    "type"
  ],
  "BackgroundFetchUpdateUIEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "BackgroundFetchUpdateUIEvent/updateUI()": [
    "options"
  ],
  "BackgroundFetchUpdateUIEvent/updateUI(options)": [
    "options"
  ],
  "BackgroundSyncOptions": [
    "minInterval"
  ],
  "BarProp": [
    "visible"
  ],
  "BarcodeDetector": [
    "BarcodeDetector()",
    "BarcodeDetector(barcodeDetectorOptions)",
    "constructor()",
    "constructor(barcodeDetectorOptions)",
    "detect(image)",
    "getSupportedFormats()"
  ],
  "BarcodeDetector/BarcodeDetector()": [
    "barcodeDetectorOptions"
  ],
  "BarcodeDetector/BarcodeDetector(barcodeDetectorOptions)": [
    "barcodeDetectorOptions"
  ],
  "BarcodeDetector/constructor()": [
    "barcodeDetectorOptions"
  ],
  "BarcodeDetector/constructor(barcodeDetectorOptions)": [
    "barcodeDetectorOptions"
  ],
  "BarcodeDetector/detect(image)": [
    "image"
  ],
  "BarcodeDetectorOptions": [
    "formats"
  ],
  "BarcodeFormat": [
    "\"aztec\"",
    "\"codabar\"",
    "\"code_128\"",
    "\"code_39\"",
    "\"code_93\"",
    "\"data_matrix\"",
    "\"ean_13\"",
    "\"ean_8\"",
    "\"itf\"",
    "\"pdf417\"",
    "\"qr_code\"",
    "\"unknown\"",
    "\"upc_a\"",
    "\"upc_e\"",
    "aztec",
    "codabar",
    "code_128",
    "code_39",
    "code_93",
    "data_matrix",
    "ean_13",
    "ean_8",
    "itf",
    "pdf417",
    "qr_code",
    "unknown",
    "upc_a",
    "upc_e"
  ],
  "BaseAudioContext": [
    "[[control thread state]]",
    "[[current frame]]",
    "[[pending promises]]",
    "[[render quantum size]]",
    "[[rendering thread state]]",
    "associated task queue",
    "audioWorklet",
    "createAnalyser()",
    "createBiquadFilter()",
    "createBuffer(numberOfChannels, length, sampleRate)",
    "createBufferSource()",
    "createChannelMerger()",
    "createChannelMerger(numberOfInputs)",
    "createChannelSplitter()",
    "createChannelSplitter(numberOfOutputs)",
    "createConstantSource()",
    "createConvolver()",
    "createDelay()",
    "createDelay(maxDelayTime)",
    "createDynamicsCompressor()",
    "createGain()",
    "createIIRFilter(feedforward, feedback)",
    "createOscillator()",
    "createPanner()",
    "createPeriodicWave(real, imag)",
    "createPeriodicWave(real, imag, constraints)",
    "createScriptProcessor()",
    "createScriptProcessor(bufferSize)",
    "createScriptProcessor(bufferSize, numberOfInputChannels)",
    "createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels)",
    "createStereoPanner()",
    "createWaveShaper()",
    "currentTime",
    "decodeAudioData(audioData)",
    "decodeAudioData(audioData, successCallback)",
    "decodeAudioData(audioData, successCallback, errorCallback)",
    "decoding thread",
    "destination",
    "listener",
    "onstatechange",
    "renderQuantumSize",
    "sampleRate",
    "state",
    "statechange"
  ],
  "BaseAudioContext/createBuffer()": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "BaseAudioContext/createBuffer(numberOfChannels, length, sampleRate)": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "BaseAudioContext/createChannelMerger(numberOfInputs)": [
    "numberOfInputs"
  ],
  "BaseAudioContext/createChannelSplitter(numberOfOutputs)": [
    "numberOfOutputs"
  ],
  "BaseAudioContext/createDelay(maxDelayTime)": [
    "maxDelayTime"
  ],
  "BaseAudioContext/createIIRFilter()": [
    "feedback",
    "feedforward"
  ],
  "BaseAudioContext/createIIRFilter(feedforward, feedback)": [
    "feedback",
    "feedforward"
  ],
  "BaseAudioContext/createPeriodicWave()": [
    "constraints",
    "imag",
    "real"
  ],
  "BaseAudioContext/createPeriodicWave(real, imag)": [
    "constraints",
    "imag",
    "real"
  ],
  "BaseAudioContext/createPeriodicWave(real, imag, constraints)": [
    "constraints",
    "imag",
    "real"
  ],
  "BaseAudioContext/createScriptProcessor(bufferSize, numberOfInputChannels, numberOfOutputChannels)": [
    "bufferSize",
    "numberOfInputChannels",
    "numberOfOutputChannels"
  ],
  "BaseAudioContext/decodeAudioData()": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseAudioContext/decodeAudioData(audioData)": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseAudioContext/decodeAudioData(audioData, successCallback)": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseAudioContext/decodeAudioData(audioData, successCallback, errorCallback)": [
    "audioData",
    "errorCallback",
    "successCallback"
  ],
  "BaseComputedKeyframe": [
    "composite",
    "computedOffset",
    "easing",
    "offset"
  ],
  "BaseKeyframe": [
    "composite",
    "easing",
    "offset"
  ],
  "BasePropertyIndexedKeyframe": [
    "composite",
    "easing",
    "offset"
  ],
  "Baseline": [
    "name",
    "value"
  ],
  "BatteryManager": [
    "[[ChargingTime]]",
    "[[Charging]]",
    "[[DischargingTime]]",
    "[[Level]]",
    "charging",
    "chargingTime",
    "dischargingTime",
    "level",
    "onchargingchange",
    "onchargingtimechange",
    "ondischargingtimechange",
    "onlevelchange"
  ],
  "BeforeInstallPromptEvent": [
    "[[didPrompt]]",
    "[[userResponsePromise]]",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "prompt()"
  ],
  "BeforeUnloadEvent": [
    "returnValue"
  ],
  "BiddingBrowserSignals": [
    "adComponentsLimit",
    "bidCount",
    "crossOriginDataVersion",
    "dataVersion",
    "forDebuggingOnlyInCooldownOrLockout",
    "joinCount",
    "multiBidLimit",
    "prevWinsMs",
    "recency",
    "requestedSize",
    "seller",
    "topLevelSeller",
    "topWindowHostname",
    "wasmHelper"
  ],
  "BidirectionalStream": [
    "create"
  ],
  "BigInt": [
    "BigInt(value)",
    "asIntN(bits, bigint)",
    "asUintN(bits, bigint)",
    "toLocaleString(reserved1, reserved2)",
    "toString(radix)",
    "valueOf()"
  ],
  "BinaryType": [
    "\"arraybuffer\"",
    "\"blob\""
  ],
  "BiquadFilterNode": [
    "BiquadFilterNode(context)",
    "BiquadFilterNode(context, options)",
    "Q",
    "constructor(context)",
    "constructor(context, options)",
    "detune",
    "frequency",
    "gain",
    "getFrequencyResponse(frequencyHz, magResponse, phaseResponse)",
    "type"
  ],
  "BiquadFilterNode/BiquadFilterNode(context)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/BiquadFilterNode(context, options)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/constructor()": [
    "context",
    "options"
  ],
  "BiquadFilterNode/constructor(context)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "BiquadFilterNode/getFrequencyResponse()": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "BiquadFilterNode/getFrequencyResponse(frequencyHz, magResponse, phaseResponse)": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "BiquadFilterOptions": [
    "Q",
    "detune",
    "frequency",
    "gain",
    "type"
  ],
  "BiquadFilterType": [
    "\"allpass\"",
    "\"bandpass\"",
    "\"highpass\"",
    "\"highshelf\"",
    "\"lowpass\"",
    "\"lowshelf\"",
    "\"notch\"",
    "\"peaking\"",
    "allpass",
    "bandpass",
    "highpass",
    "highshelf",
    "lowpass",
    "lowshelf",
    "notch",
    "peaking"
  ],
  "BitrateMode": [
    "\"constant\"",
    "\"variable\"",
    "constant",
    "variable"
  ],
  "Blob": [
    "Blob()",
    "Blob(blobParts)",
    "Blob(blobParts, options)",
    "arrayBuffer()",
    "bytes()",
    "constructor()",
    "constructor(blobParts)",
    "constructor(blobParts, options)",
    "get stream",
    "package data",
    "size",
    "slice()",
    "slice(start)",
    "slice(start, end)",
    "slice(start, end, contentType)",
    "slice(start, end, contentType), slice(start, end), slice(start), slice()",
    "snapshot state",
    "stream()",
    "text()",
    "type"
  ],
  "Blob/Blob()": [
    "options"
  ],
  "Blob/Blob(blobParts)": [
    "options"
  ],
  "Blob/Blob(blobParts, options)": [
    "blobParts",
    "options"
  ],
  "Blob/constructor()": [
    "options"
  ],
  "Blob/constructor(blobParts)": [
    "options"
  ],
  "Blob/constructor(blobParts, options)": [
    "options"
  ],
  "Blob/slice()": [
    "contentType",
    "end",
    "start"
  ],
  "Blob/slice(start)": [
    "contentType",
    "end",
    "start"
  ],
  "Blob/slice(start, end)": [
    "contentType",
    "end",
    "start"
  ],
  "Blob/slice(start, end, contentType)": [
    "contentType",
    "end",
    "start"
  ],
  "BlobEvent": [
    "BlobEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "data",
    "timecode"
  ],
  "BlobEvent/BlobEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "BlobEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "BlobEventInit": [
    "data",
    "timecode"
  ],
  "BlobPropertyBag": [
    "endings",
    "type"
  ],
  "BlockFragmentationType": [
    "\"column\"",
    "\"none\"",
    "\"page\"",
    "\"region\"",
    "column",
    "none",
    "page",
    "region"
  ],
  "Bluetooth": [
    "[[activeScans]]",
    "[[attributeInstanceMap]]",
    "[[deviceInstanceMap]]",
    "[[referringDevice]]",
    "availabilitychanged",
    "getAvailability()",
    "getDevices()",
    "onavailabilitychanged",
    "referringDevice",
    "requestDevice()",
    "requestDevice(options)",
    "requestLEScan()",
    "requestLEScan(options)"
  ],
  "Bluetooth cache": [
    "bluetooth cache"
  ],
  "Bluetooth tree": [
    "bluetooth tree"
  ],
  "Bluetooth/requestDevice()": [
    "options"
  ],
  "Bluetooth/requestDevice(options)": [
    "options"
  ],
  "Bluetooth/requestLEScan()": [
    "options"
  ],
  "Bluetooth/requestLEScan(options)": [
    "options"
  ],
  "BluetoothAdvertisingEvent": [
    "BluetoothAdvertisingEvent(type, init)",
    "appearance",
    "constructor(type, init)",
    "device",
    "manufacturerData",
    "name",
    "rssi",
    "serviceData",
    "txPower",
    "uuids"
  ],
  "BluetoothAdvertisingEvent/BluetoothAdvertisingEvent(type, init)": [
    "init",
    "type"
  ],
  "BluetoothAdvertisingEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "BluetoothAdvertisingEventInit": [
    "appearance",
    "device",
    "manufacturerData",
    "name",
    "rssi",
    "serviceData",
    "txPower",
    "uuids"
  ],
  "BluetoothCharacteristicProperties": [
    "authenticatedSignedWrites",
    "broadcast",
    "indicate",
    "notify",
    "read",
    "reliableWrite",
    "writableAuxiliaries",
    "write",
    "writeWithoutResponse"
  ],
  "BluetoothDataFilter": [
    "BluetoothDataFilter()",
    "BluetoothDataFilter(init)",
    "constructor()",
    "constructor(init)",
    "dataPrefix",
    "mask"
  ],
  "BluetoothDataFilter/BluetoothDataFilter()": [
    "init"
  ],
  "BluetoothDataFilter/BluetoothDataFilter(init)": [
    "init"
  ],
  "BluetoothDataFilter/constructor()": [
    "init"
  ],
  "BluetoothDataFilter/constructor(init)": [
    "init"
  ],
  "BluetoothDataFilterInit": [
    "canonicalizing",
    "dataPrefix",
    "mask",
    "matches",
    "strict subset"
  ],
  "BluetoothDevice": [
    "[[allowedManufacturerData]]",
    "[[allowedServices]]",
    "[[context]]",
    "[[gatt]]",
    "[[representedDevice]]",
    "[[returnedFromScans]]",
    "[[watchAdvertisementsState]]",
    "forget()",
    "gatt",
    "id",
    "name",
    "watchAdvertisements()",
    "watchAdvertisements(options)",
    "watchingAdvertisements"
  ],
  "BluetoothDevice/watchAdvertisements()": [
    "options"
  ],
  "BluetoothDevice/watchAdvertisements(options)": [
    "options"
  ],
  "BluetoothDeviceEventHandlers": [
    "advertisementreceived",
    "gattserverdisconnected",
    "onadvertisementreceived",
    "ongattserverdisconnected"
  ],
  "BluetoothLEScan": [
    "acceptAllAdvertisements",
    "active",
    "filters",
    "keepRepeatedDevices",
    "match",
    "stop()"
  ],
  "BluetoothLEScanFilter": [
    "BluetoothLEScanFilter()",
    "BluetoothLEScanFilter(init)",
    "constructor()",
    "constructor(init)",
    "manufacturerData",
    "match",
    "name",
    "namePrefix",
    "serviceData",
    "services"
  ],
  "BluetoothLEScanFilter/BluetoothLEScanFilter()": [
    "init"
  ],
  "BluetoothLEScanFilter/BluetoothLEScanFilter(init)": [
    "init"
  ],
  "BluetoothLEScanFilter/constructor()": [
    "init"
  ],
  "BluetoothLEScanFilter/constructor(init)": [
    "init"
  ],
  "BluetoothLEScanFilterInit": [
    "canonicalizing",
    "manufacturerData",
    "name",
    "namePrefix",
    "serviceData",
    "services"
  ],
  "BluetoothLEScanOptions": [
    "acceptAllAdvertisements",
    "filters",
    "keepRepeatedDevices"
  ],
  "BluetoothLEScanPermissionDescriptor": [
    "acceptAllAdvertisements",
    "filters",
    "keepRepeatedDevices"
  ],
  "BluetoothLEScanPermissionResult": [
    "scans"
  ],
  "BluetoothManufacturerDataFilter": [
    "BluetoothManufacturerDataFilter()",
    "BluetoothManufacturerDataFilter(init)",
    "constructor()",
    "constructor(init)"
  ],
  "BluetoothManufacturerDataFilter/BluetoothManufacturerDataFilter()": [
    "init"
  ],
  "BluetoothManufacturerDataFilter/BluetoothManufacturerDataFilter(init)": [
    "init"
  ],
  "BluetoothManufacturerDataFilter/constructor()": [
    "init"
  ],
  "BluetoothManufacturerDataFilter/constructor(init)": [
    "init"
  ],
  "BluetoothManufacturerDataFilterInit": [
    "companyIdentifier"
  ],
  "BluetoothManufacturerDataMap": [
    "[[BackingMap]]"
  ],
  "BluetoothPermissionDescriptor": [
    "acceptAllDevices",
    "deviceId",
    "filters",
    "optionalManufacturerData",
    "optionalServices"
  ],
  "BluetoothPermissionResult": [
    "devices"
  ],
  "BluetoothPermissionStorage": [
    "allowedDevices"
  ],
  "BluetoothRemoteGATTCharacteristic": [
    "[[representedCharacteristic]]",
    "characteristicvaluechanged",
    "getDescriptor(descriptor)",
    "getDescriptors()",
    "getDescriptors(descriptor)",
    "properties",
    "readValue()",
    "service",
    "startNotifications()",
    "stopNotifications()",
    "uuid",
    "value",
    "writeValue(value)",
    "writeValueWithResponse(value)",
    "writeValueWithoutResponse(value)"
  ],
  "BluetoothRemoteGATTCharacteristic/getDescriptor(descriptor)": [
    "descriptor"
  ],
  "BluetoothRemoteGATTCharacteristic/getDescriptors()": [
    "descriptor"
  ],
  "BluetoothRemoteGATTCharacteristic/getDescriptors(descriptor)": [
    "descriptor"
  ],
  "BluetoothRemoteGATTCharacteristic/writeValue(value)": [
    "value"
  ],
  "BluetoothRemoteGATTCharacteristic/writeValueWithResponse(value)": [
    "value"
  ],
  "BluetoothRemoteGATTCharacteristic/writeValueWithoutResponse(value)": [
    "value"
  ],
  "BluetoothRemoteGATTDescriptor": [
    "[[representedDescriptor]]",
    "characteristic",
    "readValue()",
    "uuid",
    "value",
    "writeValue(value)"
  ],
  "BluetoothRemoteGATTDescriptor/writeValue(value)": [
    "value"
  ],
  "BluetoothRemoteGATTServer": [
    "[[activeAlgorithms]]",
    "connect()",
    "connected",
    "device",
    "disconnect()",
    "getPrimaryService(service)",
    "getPrimaryServices()",
    "getPrimaryServices(service)"
  ],
  "BluetoothRemoteGATTServer/getPrimaryService(service)": [
    "service"
  ],
  "BluetoothRemoteGATTServer/getPrimaryServices()": [
    "service"
  ],
  "BluetoothRemoteGATTServer/getPrimaryServices(service)": [
    "service"
  ],
  "BluetoothRemoteGATTService": [
    "[[representedService]]",
    "device",
    "getCharacteristic(characteristic)",
    "getCharacteristics()",
    "getCharacteristics(characteristic)",
    "getIncludedService(service)",
    "getIncludedServices()",
    "getIncludedServices(service)",
    "isPrimary",
    "serviceadded",
    "servicechanged",
    "serviceremoved",
    "uuid"
  ],
  "BluetoothRemoteGATTService/getCharacteristic(characteristic)": [
    "characteristic"
  ],
  "BluetoothRemoteGATTService/getCharacteristics()": [
    "characteristic"
  ],
  "BluetoothRemoteGATTService/getCharacteristics(characteristic)": [
    "characteristic"
  ],
  "BluetoothRemoteGATTService/getIncludedService(service)": [
    "service"
  ],
  "BluetoothRemoteGATTService/getIncludedServices()": [
    "service"
  ],
  "BluetoothRemoteGATTService/getIncludedServices(service)": [
    "service"
  ],
  "BluetoothServiceDataFilter": [
    "BluetoothServiceDataFilter()",
    "BluetoothServiceDataFilter(init)",
    "constructor()",
    "constructor(init)"
  ],
  "BluetoothServiceDataFilter/BluetoothServiceDataFilter()": [
    "init"
  ],
  "BluetoothServiceDataFilter/BluetoothServiceDataFilter(init)": [
    "init"
  ],
  "BluetoothServiceDataFilter/constructor()": [
    "init"
  ],
  "BluetoothServiceDataFilter/constructor(init)": [
    "init"
  ],
  "BluetoothServiceDataFilterInit": [
    "service"
  ],
  "BluetoothServiceDataMap": [
    "[[BackingMap]]"
  ],
  "BluetoothUUID": [
    "canonicalUUID(alias)",
    "getCharacteristic(name)",
    "getDescriptor(name)",
    "getService(name)"
  ],
  "BluetoothUUID/canonicalUUID(alias)": [
    "alias"
  ],
  "BluetoothUUID/getCharacteristic(name)": [
    "name"
  ],
  "BluetoothUUID/getDescriptor(name)": [
    "name"
  ],
  "BluetoothUUID/getService(name)": [
    "name"
  ],
  "Body": [
    "arrayBuffer()",
    "blob()",
    "body",
    "bodyUsed",
    "bytes()",
    "consume body",
    "formData()",
    "get the mime type",
    "json()",
    "text()",
    "unusable"
  ],
  "BodyInit": [
    "extract",
    "safely extract"
  ],
  "BodyInit/extract": [
    "keepalive"
  ],
  "Boolean": [
    "Boolean(value)",
    "toString()",
    "valueOf()"
  ],
  "BoxQuadOptions": [
    "box",
    "relativeTo"
  ],
  "BreakToken": [
    "childBreakTokens",
    "data"
  ],
  "BreakTokenOptions": [
    "childBreakTokens",
    "data"
  ],
  "BreakType": [
    "\"column\"",
    "\"line\"",
    "\"none\"",
    "\"page\"",
    "\"region\"",
    "column",
    "line",
    "none",
    "page",
    "region"
  ],
  "BroadcastChannel": [
    "close()",
    "message",
    "messageerror",
    "name",
    "onmessage",
    "onmessageerror",
    "postMessage(message)"
  ],
  "Brotli patch": [
    "brotlistream",
    "compatibilityid",
    "format"
  ],
  "BrowserCaptureMediaStreamTrack": [
    "clone()",
    "cropTo()",
    "cropTo(cropTarget)",
    "restrictTo()",
    "restrictTo(RestrictionTarget)"
  ],
  "BrowsingTopic": [
    "configVersion",
    "modelVersion",
    "taxonomyVersion",
    "topic",
    "version"
  ],
  "BrowsingTopicsOptions": [
    "skipObservation"
  ],
  "BufferSource": [
    "byte length",
    "detached",
    "transferable",
    "underlying buffer"
  ],
  "BufferedChangeEvent": [
    "addedRanges",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "removedRanges"
  ],
  "BufferedChangeEventInit": [
    "addedRanges",
    "removedRanges"
  ],
  "ByteLengthQueuingStrategy": [
    "ByteLengthQueuingStrategy(init)",
    "[[highwatermark]]",
    "constructor(init)",
    "highWaterMark",
    "size"
  ],
  "ByteLengthQueuingStrategy/ByteLengthQueuingStrategy(init)": [
    "init"
  ],
  "ByteLengthQueuingStrategy/constructor(init)": [
    "init"
  ],
  "CSP list": [
    "intersection"
  ],
  "CSPViolationReportBody": [
    "blockedURL",
    "columnNumber",
    "disposition",
    "documentURL",
    "effectiveDirective",
    "lineNumber",
    "originalPolicy",
    "referrer",
    "sample",
    "sourceFile",
    "statusCode",
    "toJSON()"
  ],
  "CSS": [
    "()-block",
    "Hz(value)",
    "Q(value)",
    "[]-block",
    "ambiguous image url",
    "animationWorklet",
    "anonymous",
    "anonymous box",
    "apply to",
    "box",
    "box tree",
    "cap(value)",
    "ch(value)",
    "cm(value)",
    "component value",
    "consistent type",
    "contain a percentage",
    "cqb(value)",
    "cqh(value)",
    "cqi(value)",
    "cqmax(value)",
    "cqmin(value)",
    "cqw(value)",
    "css ident",
    "css identifier",
    "css value definition syntax",
    "declaration",
    "decode bytes",
    "deg(value)",
    "descriptor",
    "descriptor declarations",
    "dpcm(value)",
    "dpi(value)",
    "dppx(value)",
    "dvb(value)",
    "dvh(value)",
    "dvi(value)",
    "dvmax(value)",
    "dvmin(value)",
    "dvw(value)",
    "element",
    "element tree",
    "elementSources",
    "em(value)",
    "end",
    "endmost",
    "environment variable",
    "escape(ident)",
    "ex(value)",
    "filter code points",
    "filtered code points",
    "fr(value)",
    "function",
    "grad(value)",
    "highlights",
    "ic(value)",
    "ident",
    "identifier",
    "in(value)",
    "infinite",
    "infinity",
    "inherit",
    "inheritance",
    "internal representation",
    "kHz(value)",
    "keyword",
    "layoutWorklet",
    "legacy value alias",
    "lh(value)",
    "lvb(value)",
    "lvh(value)",
    "lvi(value)",
    "lvmax(value)",
    "lvmin(value)",
    "lvw(value)",
    "made consistent",
    "make a type consistent",
    "make consistent",
    "mm(value)",
    "ms(value)",
    "nan",
    "negative infinity",
    "negative zero",
    "number(value)",
    "paintWorklet",
    "parent box",
    "parse",
    "parse a comma-separated list according to a css grammar",
    "parse a list",
    "parse something according to a css grammar",
    "parseCommaValueList(css)",
    "parseDeclaration(css)",
    "parseDeclaration(css, options)",
    "parseDeclarationList(css)",
    "parseDeclarationList(css, options)",
    "parseRule(css)",
    "parseRule(css, options)",
    "parseRuleList(css)",
    "parseRuleList(css, options)",
    "parseStylesheet(css)",
    "parseStylesheet(css, options)",
    "parseValue(css)",
    "parseValueList(css)",
    "parsing a list",
    "pc(value)",
    "percent(value)",
    "percentage-containing",
    "positive infinity",
    "positive zero",
    "preserved tokens",
    "property",
    "property declarations",
    "pt(value)",
    "px(value)",
    "qualified rule",
    "rad(value)",
    "random functions",
    "rcap(value)",
    "rch(value)",
    "registerProperty(definition)",
    "reification",
    "reify",
    "rem(value)",
    "rex(value)",
    "ric(value)",
    "rlh(value)",
    "round to the nearest integer",
    "rule",
    "s(value)",
    "signed zero",
    "simple block",
    "start",
    "startmost",
    "stylesheet",
    "support",
    "support a css selector",
    "support a font format",
    "support a font tech",
    "supported syntax component name",
    "supports(conditionText)",
    "supports(property, value)",
    "svb(value)",
    "svh(value)",
    "svi(value)",
    "svmax(value)",
    "svmin(value)",
    "svw(value)",
    "text node",
    "text sequence",
    "textual data types",
    "token stream",
    "tokenization",
    "tokenize",
    "tree-scoped name",
    "tree-scoped reference",
    "turn(value)",
    "value definition syntax",
    "vb(value)",
    "vh(value)",
    "vi(value)",
    "vmax(value)",
    "vmin(value)",
    "vw(value)",
    "{}-block"
  ],
  "CSS counter": [
    "creator",
    "name",
    "reversed",
    "value"
  ],
  "CSS declaration": [
    "case-sensitive flag",
    "important flag",
    "property name",
    "value"
  ],
  "CSS/Hz(value)": [
    "value"
  ],
  "CSS/Q(value)": [
    "value"
  ],
  "CSS/cap(value)": [
    "value"
  ],
  "CSS/ch(value)": [
    "value"
  ],
  "CSS/cm(value)": [
    "value"
  ],
  "CSS/cqb(value)": [
    "value"
  ],
  "CSS/cqh(value)": [
    "value"
  ],
  "CSS/cqi(value)": [
    "value"
  ],
  "CSS/cqmax(value)": [
    "value"
  ],
  "CSS/cqmin(value)": [
    "value"
  ],
  "CSS/cqw(value)": [
    "value"
  ],
  "CSS/deg(value)": [
    "value"
  ],
  "CSS/dpcm(value)": [
    "value"
  ],
  "CSS/dpi(value)": [
    "value"
  ],
  "CSS/dppx(value)": [
    "value"
  ],
  "CSS/dvb(value)": [
    "value"
  ],
  "CSS/dvh(value)": [
    "value"
  ],
  "CSS/dvi(value)": [
    "value"
  ],
  "CSS/dvmax(value)": [
    "value"
  ],
  "CSS/dvmin(value)": [
    "value"
  ],
  "CSS/dvw(value)": [
    "value"
  ],
  "CSS/em(value)": [
    "value"
  ],
  "CSS/escape(ident)": [
    "ident"
  ],
  "CSS/ex(value)": [
    "value"
  ],
  "CSS/fr(value)": [
    "value"
  ],
  "CSS/grad(value)": [
    "value"
  ],
  "CSS/ic(value)": [
    "value"
  ],
  "CSS/in(value)": [
    "value"
  ],
  "CSS/kHz(value)": [
    "value"
  ],
  "CSS/lh(value)": [
    "value"
  ],
  "CSS/lvb(value)": [
    "value"
  ],
  "CSS/lvh(value)": [
    "value"
  ],
  "CSS/lvi(value)": [
    "value"
  ],
  "CSS/lvmax(value)": [
    "value"
  ],
  "CSS/lvmin(value)": [
    "value"
  ],
  "CSS/lvw(value)": [
    "value"
  ],
  "CSS/mm(value)": [
    "value"
  ],
  "CSS/ms(value)": [
    "value"
  ],
  "CSS/number(value)": [
    "value"
  ],
  "CSS/parseCommaValueList(css)": [
    "css"
  ],
  "CSS/parseDeclaration(css)": [
    "css",
    "options"
  ],
  "CSS/parseDeclaration(css, options)": [
    "css",
    "options"
  ],
  "CSS/parseDeclarationList(css)": [
    "css",
    "options"
  ],
  "CSS/parseDeclarationList(css, options)": [
    "css",
    "options"
  ],
  "CSS/parseRule(css)": [
    "css",
    "options"
  ],
  "CSS/parseRule(css, options)": [
    "css",
    "options"
  ],
  "CSS/parseRuleList(css)": [
    "css",
    "options"
  ],
  "CSS/parseRuleList(css, options)": [
    "css",
    "options"
  ],
  "CSS/parseStylesheet(css)": [
    "css",
    "options"
  ],
  "CSS/parseStylesheet(css, options)": [
    "css",
    "options"
  ],
  "CSS/parseValue(css)": [
    "css"
  ],
  "CSS/parseValueList(css)": [
    "css"
  ],
  "CSS/pc(value)": [
    "value"
  ],
  "CSS/percent(value)": [
    "value"
  ],
  "CSS/pt(value)": [
    "value"
  ],
  "CSS/px(value)": [
    "value"
  ],
  "CSS/rad(value)": [
    "value"
  ],
  "CSS/rcap(value)": [
    "value"
  ],
  "CSS/rch(value)": [
    "value"
  ],
  "CSS/registerProperty(definition)": [
    "definition"
  ],
  "CSS/rem(value)": [
    "value"
  ],
  "CSS/rex(value)": [
    "value"
  ],
  "CSS/ric(value)": [
    "value"
  ],
  "CSS/rlh(value)": [
    "value"
  ],
  "CSS/s(value)": [
    "value"
  ],
  "CSS/supports(conditionText)": [
    "conditionText"
  ],
  "CSS/supports(property, value)": [
    "property",
    "value"
  ],
  "CSS/svb(value)": [
    "value"
  ],
  "CSS/svh(value)": [
    "value"
  ],
  "CSS/svi(value)": [
    "value"
  ],
  "CSS/svmax(value)": [
    "value"
  ],
  "CSS/svmin(value)": [
    "value"
  ],
  "CSS/svw(value)": [
    "value"
  ],
  "CSS/turn(value)": [
    "value"
  ],
  "CSS/vb(value)": [
    "value"
  ],
  "CSS/vh(value)": [
    "value"
  ],
  "CSS/vi(value)": [
    "value"
  ],
  "CSS/vmax(value)": [
    "value"
  ],
  "CSS/vmin(value)": [
    "value"
  ],
  "CSS/vw(value)": [
    "value"
  ],
  "CSSAnimation": [
    "animationName"
  ],
  "CSSBoxType": [
    "\"border\"",
    "\"content\"",
    "\"margin\"",
    "\"padding\""
  ],
  "CSSColor": [
    "CSSColor(colorSpace, channels)",
    "CSSColor(colorSpace, channels, alpha)",
    "CSSColor(colorSpace, channels, optional alpha)",
    "alpha",
    "channels",
    "colorSpace",
    "constructor(colorSpace, channels)",
    "constructor(colorSpace, channels, alpha)"
  ],
  "CSSColor/CSSColor(colorSpace, channels)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColor/CSSColor(colorSpace, channels, alpha)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColor/constructor(colorSpace, channels)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColor/constructor(colorSpace, channels, alpha)": [
    "alpha",
    "channels",
    "colorSpace"
  ],
  "CSSColorProfileRule": [
    "components",
    "name",
    "renderingIntent",
    "src"
  ],
  "CSSColorValue": [
    "parse(cssText)"
  ],
  "CSSColorValue/parse(cssText)": [
    "cssText"
  ],
  "CSSConditionRule": [
    "conditionText"
  ],
  "CSSContainerRule": [
    "containerName",
    "containerQuery"
  ],
  "CSSCounterStyleRule": [
    "additiveSymbols",
    "fallback",
    "name",
    "negative",
    "pad",
    "prefix",
    "range",
    "speakAs",
    "suffix",
    "symbols",
    "system"
  ],
  "CSSFontFaceDescriptors": [
    "ascent-override",
    "ascentOverride",
    "descent-override",
    "descentOverride",
    "font-display",
    "font-family",
    "font-feature-settings",
    "font-language-override",
    "font-named-instance",
    "font-stretch",
    "font-style",
    "font-variation-settings",
    "font-weight",
    "font-width",
    "fontDisplay",
    "fontFamily",
    "fontFeatureSettings",
    "fontLanguageOverride",
    "fontNamedInstance",
    "fontStretch",
    "fontStyle",
    "fontVariationSettings",
    "fontWeight",
    "fontWidth",
    "line-gap-override",
    "lineGapOverride",
    "src",
    "unicode-range",
    "unicodeRange"
  ],
  "CSSFontFaceRule": [
    "style"
  ],
  "CSSFontFeatureValuesMap": [
    "set(featureValueName, values)"
  ],
  "CSSFontFeatureValuesMap/set(featureValueName, values)": [
    "featureValueName",
    "values"
  ],
  "CSSFontFeatureValuesRule": [
    "annotation",
    "characterVariant",
    "fontFamily",
    "historicalForms",
    "ornaments",
    "styleset",
    "stylistic",
    "swash"
  ],
  "CSSFontPaletteValuesRule": [
    "basePalette",
    "fontFamily",
    "name",
    "overrideColors"
  ],
  "CSSGroupingRule": [
    "cssRules",
    "deleteRule(index)",
    "insertRule(rule)",
    "insertRule(rule, index)",
    "selectorText",
    "style"
  ],
  "CSSGroupingRule/deleteRule(index)": [
    "index"
  ],
  "CSSGroupingRule/insertRule(rule)": [
    "index",
    "rule"
  ],
  "CSSGroupingRule/insertRule(rule, index)": [
    "index",
    "rule"
  ],
  "CSSHSL": [
    "CSSHSL(h, s, l)",
    "CSSHSL(h, s, l, alpha)",
    "CSSHSL(h, s, l, optional alpha)",
    "alpha",
    "constructor(h, s, l)",
    "constructor(h, s, l, alpha)",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/CSSHSL(h, s, l)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/CSSHSL(h, s, l, alpha)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/constructor(h, s, l)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHSL/constructor(h, s, l, alpha)": [
    "alpha",
    "h",
    "l",
    "s"
  ],
  "CSSHWB": [
    "CSSHWB(h, w, b)",
    "CSSHWB(h, w, b, alpha)",
    "CSSHWB(h, w, b, optional alpha)",
    "alpha",
    "b",
    "constructor(h, w, b)",
    "constructor(h, w, b, alpha)",
    "h",
    "w"
  ],
  "CSSHWB/CSSHWB(h, w, b)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSHWB/CSSHWB(h, w, b, alpha)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSHWB/constructor(h, w, b)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSHWB/constructor(h, w, b, alpha)": [
    "alpha",
    "b",
    "h",
    "w"
  ],
  "CSSImportRule": [
    "href",
    "layerName",
    "media",
    "styleSheet",
    "supportsText"
  ],
  "CSSKeyframeRule": [
    "keyText",
    "style"
  ],
  "CSSKeyframesRule": [
    "__getter__(index)",
    "appendRule(rule)",
    "cssRules",
    "deleteRule(select)",
    "findRule(select)",
    "length",
    "name"
  ],
  "CSSKeyframesRule/__getter__(index)": [
    "index"
  ],
  "CSSKeyframesRule/appendRule(rule)": [
    "rule"
  ],
  "CSSKeyframesRule/deleteRule(select)": [
    "select"
  ],
  "CSSKeyframesRule/findRule(select)": [
    "select"
  ],
  "CSSKeywordValue": [
    "CSSKeywordValue(value)",
    "constructor(value)",
    "value"
  ],
  "CSSKeywordValue/CSSKeywordValue(value)": [
    "value"
  ],
  "CSSKeywordValue/constructor(value)": [
    "value"
  ],
  "CSSLCH": [
    "CSSLCH(l, c, h)",
    "CSSLCH(l, c, h, alpha)",
    "CSSLCH(l, c, h, optional alpha)",
    "alpha",
    "c",
    "constructor(l, c, h)",
    "constructor(l, c, h, alpha)",
    "h",
    "l"
  ],
  "CSSLCH/CSSLCH(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLCH/CSSLCH(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLCH/constructor(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLCH/constructor(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSLab": [
    "CSSLab(l, a, b)",
    "CSSLab(l, a, b, alpha)",
    "CSSLab(l, a, b, optional alpha)",
    "a",
    "alpha",
    "b",
    "constructor(l, a, b)",
    "constructor(l, a, b, alpha)",
    "l"
  ],
  "CSSLab/CSSLab(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLab/CSSLab(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLab/constructor(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLab/constructor(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSLayerBlockRule": [
    "name"
  ],
  "CSSLayerStatementRule": [
    "nameList"
  ],
  "CSSMarginRule": [
    "name",
    "style"
  ],
  "CSSMath": [
    "invert a cssnumericvalue",
    "negate a cssnumericvalue"
  ],
  "CSSMathClamp": [
    "CSSMathClamp(lower, value, upper)",
    "constructor(lower, value, upper)",
    "lower",
    "operator",
    "upper",
    "value"
  ],
  "CSSMathClamp/CSSMathClamp(lower, value, upper)": [
    "lower",
    "upper",
    "value"
  ],
  "CSSMathClamp/constructor(lower, value, upper)": [
    "lower",
    "upper",
    "value"
  ],
  "CSSMathInvert": [
    "CSSMathInvert(arg)",
    "constructor(arg)",
    "operator",
    "value"
  ],
  "CSSMathInvert/CSSMathInvert(arg)": [
    "arg"
  ],
  "CSSMathInvert/constructor(arg)": [
    "arg"
  ],
  "CSSMathMax": [
    "CSSMathMax()",
    "CSSMathMax(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathMax/CSSMathMax()": [
    "args"
  ],
  "CSSMathMax/CSSMathMax(...args)": [
    "args"
  ],
  "CSSMathMax/constructor()": [
    "args"
  ],
  "CSSMathMax/constructor(...args)": [
    "args"
  ],
  "CSSMathMin": [
    "CSSMathMin()",
    "CSSMathMin(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathMin/CSSMathMin()": [
    "args"
  ],
  "CSSMathMin/CSSMathMin(...args)": [
    "args"
  ],
  "CSSMathMin/constructor()": [
    "args"
  ],
  "CSSMathMin/constructor(...args)": [
    "args"
  ],
  "CSSMathNegate": [
    "CSSMathNegate(arg)",
    "constructor(arg)",
    "operator",
    "value"
  ],
  "CSSMathNegate/CSSMathNegate(arg)": [
    "arg"
  ],
  "CSSMathNegate/constructor(arg)": [
    "arg"
  ],
  "CSSMathOperator": [
    "\"clamp\"",
    "\"invert\"",
    "\"max\"",
    "\"min\"",
    "\"negate\"",
    "\"product\"",
    "\"sum\""
  ],
  "CSSMathProduct": [
    "CSSMathProduct()",
    "CSSMathProduct(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathProduct/CSSMathProduct()": [
    "args"
  ],
  "CSSMathProduct/CSSMathProduct(...args)": [
    "args"
  ],
  "CSSMathProduct/constructor()": [
    "args"
  ],
  "CSSMathProduct/constructor(...args)": [
    "args"
  ],
  "CSSMathSum": [
    "CSSMathSum()",
    "CSSMathSum(...args)",
    "constructor()",
    "constructor(...args)",
    "operator",
    "values"
  ],
  "CSSMathSum/CSSMathSum()": [
    "args"
  ],
  "CSSMathSum/CSSMathSum(...args)": [
    "args"
  ],
  "CSSMathSum/constructor()": [
    "args"
  ],
  "CSSMathSum/constructor(...args)": [
    "args"
  ],
  "CSSMathValue": [
    "operator"
  ],
  "CSSMatrixComponent": [
    "CSSMatrixComponent(matrix)",
    "CSSMatrixComponent(matrix, options)",
    "constructor(matrix)",
    "constructor(matrix, options)",
    "matrix"
  ],
  "CSSMatrixComponent/CSSMatrixComponent(matrix)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponent/CSSMatrixComponent(matrix, options)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponent/constructor(matrix)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponent/constructor(matrix, options)": [
    "matrix",
    "options"
  ],
  "CSSMatrixComponentOptions": [
    "is2D"
  ],
  "CSSMediaRule": [
    "matches",
    "media"
  ],
  "CSSNamespaceRule": [
    "namespaceURI",
    "prefix"
  ],
  "CSSNestedDeclarations": [
    "style"
  ],
  "CSSNumericArray": [
    "length"
  ],
  "CSSNumericArray/__getter__(index)": [
    "index"
  ],
  "CSSNumericBaseType": [
    "\"angle\"",
    "\"flex\"",
    "\"frequency\"",
    "\"length\"",
    "\"percent\"",
    "\"resolution\"",
    "\"time\""
  ],
  "CSSNumericType": [
    "angle",
    "flex",
    "frequency",
    "length",
    "percent",
    "percentHint",
    "resolution",
    "time"
  ],
  "CSSNumericValue": [
    "add two types",
    "add()",
    "add(...values)",
    "base type",
    "create a type",
    "creating a type",
    "div()",
    "div(...values)",
    "equals()",
    "equals(...value)",
    "equals(...values)",
    "invert a type",
    "match",
    "max()",
    "max(...values)",
    "min()",
    "min(...values)",
    "mul()",
    "mul(...values)",
    "multiply two types",
    "parse(cssText)",
    "percent hint",
    "sub()",
    "sub(...values)",
    "sum value",
    "to(unit)",
    "toSum()",
    "toSum(...units)",
    "type",
    "type()"
  ],
  "CSSNumericValue/add()": [
    "values"
  ],
  "CSSNumericValue/add(...values)": [
    "values"
  ],
  "CSSNumericValue/div()": [
    "values"
  ],
  "CSSNumericValue/div(...values)": [
    "values"
  ],
  "CSSNumericValue/equals()": [
    "value"
  ],
  "CSSNumericValue/equals(...value)": [
    "value"
  ],
  "CSSNumericValue/max()": [
    "values"
  ],
  "CSSNumericValue/max(...values)": [
    "values"
  ],
  "CSSNumericValue/min()": [
    "values"
  ],
  "CSSNumericValue/min(...values)": [
    "values"
  ],
  "CSSNumericValue/mul()": [
    "values"
  ],
  "CSSNumericValue/mul(...values)": [
    "values"
  ],
  "CSSNumericValue/parse(cssText)": [
    "cssText"
  ],
  "CSSNumericValue/sub()": [
    "values"
  ],
  "CSSNumericValue/sub(...values)": [
    "values"
  ],
  "CSSNumericValue/to(unit)": [
    "unit"
  ],
  "CSSNumericValue/toSum()": [
    "units"
  ],
  "CSSNumericValue/toSum(...units)": [
    "units"
  ],
  "CSSOKLCH": [
    "CSSOKLCH(l, c, h)",
    "CSSOKLCH(l, c, h, alpha)",
    "CSSOKLCH(l, c, h, optional alpha)",
    "alpha",
    "c",
    "constructor(l, c, h)",
    "constructor(l, c, h, alpha)",
    "h",
    "l"
  ],
  "CSSOKLCH/CSSOKLCH(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLCH/CSSOKLCH(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLCH/constructor(l, c, h)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLCH/constructor(l, c, h, alpha)": [
    "alpha",
    "c",
    "h",
    "l"
  ],
  "CSSOKLab": [
    "CSSOKLab(l, a, b)",
    "CSSOKLab(l, a, b, alpha)",
    "CSSOKLab(l, a, b, optional alpha)",
    "a",
    "alpha",
    "b",
    "constructor(l, a, b)",
    "constructor(l, a, b, alpha)",
    "l"
  ],
  "CSSOKLab/CSSOKLab(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSOKLab/CSSOKLab(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSOKLab/constructor(l, a, b)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSOKLab/constructor(l, a, b, alpha)": [
    "a",
    "alpha",
    "b",
    "l"
  ],
  "CSSPageDescriptors": [
    "bleed",
    "margin",
    "margin-bottom",
    "margin-left",
    "margin-right",
    "margin-top",
    "marginBottom",
    "marginLeft",
    "marginRight",
    "marginTop",
    "marks",
    "page-orientation",
    "pageOrientation",
    "size"
  ],
  "CSSPageRule": [
    "selectorText",
    "style"
  ],
  "CSSParserAtRule": [
    "CSSParserAtRule(name, prelude)",
    "CSSParserAtRule(name, prelude, body)",
    "body",
    "constructor(name, prelude)",
    "constructor(name, prelude, body)",
    "name",
    "prelude",
    "stringification behavior"
  ],
  "CSSParserAtRule/CSSParserAtRule(name, prelude)": [
    "body",
    "name",
    "prelude"
  ],
  "CSSParserAtRule/CSSParserAtRule(name, prelude, body)": [
    "body",
    "name",
    "prelude"
  ],
  "CSSParserAtRule/constructor(name, prelude)": [
    "body",
    "name",
    "prelude"
  ],
  "CSSParserAtRule/constructor(name, prelude, body)": [
    "body",
    "name",
    "prelude"
  ],
  "CSSParserBlock": [
    "CSSParserBlock(name, body)",
    "body",
    "constructor(name, body)",
    "name",
    "stringification behavior"
  ],
  "CSSParserBlock/CSSParserBlock(name, body)": [
    "body",
    "name"
  ],
  "CSSParserBlock/constructor(name, body)": [
    "body",
    "name"
  ],
  "CSSParserDeclaration": [
    "CSSParserDeclaration(name)",
    "CSSParserDeclaration(name, body)",
    "body",
    "constructor(name)",
    "constructor(name, body)",
    "name",
    "stringification behavior"
  ],
  "CSSParserDeclaration/CSSParserDeclaration(name)": [
    "body",
    "name"
  ],
  "CSSParserDeclaration/CSSParserDeclaration(name, body)": [
    "body",
    "name"
  ],
  "CSSParserDeclaration/constructor(name)": [
    "body",
    "name"
  ],
  "CSSParserDeclaration/constructor(name, body)": [
    "body",
    "name"
  ],
  "CSSParserFunction": [
    "CSSParserFunction(name, args)",
    "args",
    "constructor(name, args)",
    "name",
    "stringification behavior"
  ],
  "CSSParserFunction/CSSParserFunction(name, args)": [
    "args",
    "name"
  ],
  "CSSParserFunction/constructor(name, args)": [
    "args",
    "name"
  ],
  "CSSParserOptions": [
    "atRules"
  ],
  "CSSParserQualifiedRule": [
    "CSSParserQualifiedRule(prelude)",
    "CSSParserQualifiedRule(prelude, body)",
    "body",
    "constructor(prelude)",
    "constructor(prelude, body)",
    "prelude",
    "stringification behavior"
  ],
  "CSSParserQualifiedRule/CSSParserQualifiedRule(prelude)": [
    "body",
    "prelude"
  ],
  "CSSParserQualifiedRule/CSSParserQualifiedRule(prelude, body)": [
    "body",
    "prelude"
  ],
  "CSSParserQualifiedRule/constructor(prelude)": [
    "body",
    "prelude"
  ],
  "CSSParserQualifiedRule/constructor(prelude, body)": [
    "body",
    "prelude"
  ],
  "CSSPerspective": [
    "CSSPerspective(length)",
    "constructor(length)",
    "is2D",
    "length"
  ],
  "CSSPerspective/CSSPerspective(length)": [
    "length"
  ],
  "CSSPerspective/constructor(length)": [
    "length"
  ],
  "CSSPositionTryDescriptors": [
    "align-self",
    "alignSelf",
    "block-size",
    "blockSize",
    "bottom",
    "height",
    "inline-size",
    "inlineSize",
    "inset",
    "inset-block",
    "inset-block-end",
    "inset-block-start",
    "inset-inline",
    "inset-inline-end",
    "inset-inline-start",
    "insetBlock",
    "insetBlockEnd",
    "insetBlockStart",
    "insetInline",
    "insetInlineEnd",
    "insetInlineStart",
    "justify-self",
    "justifySelf",
    "left",
    "margin",
    "margin-block",
    "margin-block-end",
    "margin-block-start",
    "margin-bottom",
    "margin-inline",
    "margin-inline-end",
    "margin-inline-start",
    "margin-left",
    "margin-right",
    "margin-top",
    "marginBlock",
    "marginBlockEnd",
    "marginBlockStart",
    "marginBottom",
    "marginInline",
    "marginInlineEnd",
    "marginInlineStart",
    "marginLeft",
    "marginRight",
    "marginTop",
    "max-block-size",
    "max-height",
    "max-inline-size",
    "max-width",
    "maxBlockSize",
    "maxHeight",
    "maxInlineSize",
    "maxWidth",
    "min-block-size",
    "min-height",
    "min-inline-size",
    "min-width",
    "minBlockSize",
    "minHeight",
    "minInlineSize",
    "minWidth",
    "place-self",
    "placeSelf",
    "position-anchor",
    "position-area",
    "positionAnchor",
    "positionArea",
    "right",
    "top",
    "width"
  ],
  "CSSPositionTryRule": [
    "name",
    "style"
  ],
  "CSSPropertyRule": [
    "inherits",
    "initialValue",
    "name",
    "syntax"
  ],
  "CSSPseudoElement": [
    "element",
    "parent",
    "pseudo()",
    "pseudo(type)",
    "type"
  ],
  "CSSPseudoElement/pseudo(type)": [
    "type"
  ],
  "CSSRGB": [
    "CSSRGB(r, g, b)",
    "CSSRGB(r, g, b, alpha)",
    "CSSRGB(r, g, b, optional alpha)",
    "alpha",
    "b",
    "constructor(r, g, b)",
    "constructor(r, g, b, alpha)",
    "g",
    "r"
  ],
  "CSSRGB/CSSRGB(r, g, b)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRGB/CSSRGB(r, g, b, alpha)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRGB/constructor(r, g, b)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRGB/constructor(r, g, b, alpha)": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "CSSRotate": [
    "CSSRotate(angle)",
    "CSSRotate(x, y, z, angle)",
    "angle",
    "constructor(angle)",
    "constructor(x, y, z, angle)",
    "x",
    "y",
    "z"
  ],
  "CSSRotate/CSSRotate(angle)": [
    "angle"
  ],
  "CSSRotate/CSSRotate(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "CSSRotate/constructor(angle)": [
    "angle"
  ],
  "CSSRotate/constructor(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "CSSRule": [
    "CHARSET_RULE",
    "COUNTER_STYLE_RULE",
    "FONT_FACE_RULE",
    "FONT_FEATURE_VALUES_RULE",
    "IMPORT_RULE",
    "KEYFRAMES_RULE",
    "KEYFRAME_RULE",
    "MARGIN_RULE",
    "MEDIA_RULE",
    "NAMESPACE_RULE",
    "PAGE_RULE",
    "STYLE_RULE",
    "SUPPORTS_RULE",
    "VIEW_TRANSITION_RULE",
    "child css rules",
    "cssText",
    "parent css rule",
    "parent css style sheet",
    "parentRule",
    "parentStyleSheet",
    "text",
    "type"
  ],
  "CSSRuleList": [
    "item(index)",
    "length"
  ],
  "CSSRuleList/item(index)": [
    "index"
  ],
  "CSSScale": [
    "CSSScale(x, y)",
    "CSSScale(x, y, z)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "x",
    "y",
    "z"
  ],
  "CSSScale/CSSScale(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSScale/CSSScale(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSScale/constructor(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSScale/constructor(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSScopeRule": [
    "end",
    "start"
  ],
  "CSSSkew": [
    "CSSSkew(ax, ay)",
    "ax",
    "ay",
    "constructor(ax, ay)",
    "is2D"
  ],
  "CSSSkew/CSSSkew(ax, ay)": [
    "ax",
    "ay"
  ],
  "CSSSkew/constructor(ax, ay)": [
    "ax",
    "ay"
  ],
  "CSSSkewX": [
    "CSSSkewX(ax)",
    "ax",
    "constructor(ax)",
    "is2D"
  ],
  "CSSSkewX/CSSSkewX(ax)": [
    "ax"
  ],
  "CSSSkewX/constructor(ax)": [
    "ax"
  ],
  "CSSSkewY": [
    "CSSSkewY(ay)",
    "ay",
    "constructor(ay)",
    "is2D"
  ],
  "CSSSkewY/CSSSkewY(ay)": [
    "ay"
  ],
  "CSSSkewY/constructor(ay)": [
    "ay"
  ],
  "CSSStyleDeclaration": [
    "camel-cased attribute",
    "camel_cased_attribute",
    "computed flag",
    "cssFloat",
    "cssText",
    "dashed attribute",
    "dashed_attribute",
    "declarations",
    "getPropertyPriority(property)",
    "getPropertyValue(property)",
    "item(index)",
    "length",
    "owner node",
    "parent css rule",
    "parentRule",
    "readonly flag",
    "removeProperty(property)",
    "setProperty(property, value)",
    "setProperty(property, value, priority)",
    "updating flag",
    "webkit-cased attribute",
    "webkit_cased_attribute"
  ],
  "CSSStyleDeclaration/getPropertyPriority(property)": [
    "property"
  ],
  "CSSStyleDeclaration/getPropertyValue(property)": [
    "property"
  ],
  "CSSStyleDeclaration/item(index)": [
    "index"
  ],
  "CSSStyleDeclaration/removeProperty(property)": [
    "property"
  ],
  "CSSStyleDeclaration/setProperty(property, value)": [
    "priority",
    "property",
    "value"
  ],
  "CSSStyleDeclaration/setProperty(property, value, priority)": [
    "priority",
    "property",
    "value"
  ],
  "CSSStyleProperties": [
    "camel_cased_attribute",
    "cssFloat",
    "dashed attribute",
    "dashed_attribute",
    "webkit-cased attribute",
    "webkit_cased_attribute"
  ],
  "CSSStyleRule": [
    "cssRules",
    "deleteRule(index)",
    "insertRule(rule)",
    "insertRule(rule, index)",
    "selectorText",
    "style",
    "styleMap"
  ],
  "CSSStyleRule/deleteRule(index)": [
    "index"
  ],
  "CSSStyleRule/insertRule(rule)": [
    "index",
    "rule"
  ],
  "CSSStyleRule/insertRule(rule, index)": [
    "index",
    "rule"
  ],
  "CSSStyleSheet": [
    "CSSStyleSheet()",
    "CSSStyleSheet(options)",
    "addRule()",
    "addRule(selector)",
    "addRule(selector, block, optionalIndex)",
    "addRule(selector, style)",
    "addRule(selector, style, index)",
    "alternate flag",
    "constructed flag",
    "constructor document",
    "constructor()",
    "constructor(options)",
    "css rules",
    "cssRules",
    "deleteRule(index)",
    "disabled flag",
    "disallow modification flag",
    "insertRule(rule)",
    "insertRule(rule, index)",
    "location",
    "media",
    "origin-clean flag",
    "owner css rule",
    "owner node",
    "ownerRule",
    "parent css style sheet",
    "referrer policy",
    "removeRule()",
    "removeRule(index)",
    "replace(text)",
    "replaceSync(text)",
    "rules",
    "stylesheet base url",
    "title",
    "type"
  ],
  "CSSStyleSheet/CSSStyleSheet()": [
    "options"
  ],
  "CSSStyleSheet/CSSStyleSheet(options)": [
    "options"
  ],
  "CSSStyleSheet/addRule()": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/addRule(selector)": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/addRule(selector, style)": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/addRule(selector, style, index)": [
    "index",
    "selector",
    "style"
  ],
  "CSSStyleSheet/constructor()": [
    "options"
  ],
  "CSSStyleSheet/constructor(options)": [
    "options"
  ],
  "CSSStyleSheet/deleteRule(index)": [
    "index"
  ],
  "CSSStyleSheet/insertRule(rule)": [
    "index",
    "rule"
  ],
  "CSSStyleSheet/insertRule(rule, index)": [
    "index",
    "rule"
  ],
  "CSSStyleSheet/removeRule()": [
    "index"
  ],
  "CSSStyleSheet/removeRule(index)": [
    "index"
  ],
  "CSSStyleSheet/replace(text)": [
    "text"
  ],
  "CSSStyleSheet/replaceSync(text)": [
    "text"
  ],
  "CSSStyleSheetInit": [
    "baseURL",
    "disabled",
    "media"
  ],
  "CSSStyleValue": [
    "[[associatedProperty]]",
    "match a grammar",
    "match the grammar",
    "parse(property, cssText)",
    "parseAll(property, cssText)",
    "stringification behavior"
  ],
  "CSSStyleValue/parse(property, cssText)": [
    "cssText",
    "property"
  ],
  "CSSStyleValue/parseAll(property, cssText)": [
    "cssText",
    "property"
  ],
  "CSSSupportsRule": [
    "matches"
  ],
  "CSSTransformComponent": [
    "is2D",
    "stringification behavior",
    "toMatrix()"
  ],
  "CSSTransformValue": [
    "CSSTransformValue(transforms)",
    "[[values]]",
    "constructor(transforms)",
    "is2D",
    "length",
    "toMatrix()"
  ],
  "CSSTransformValue/CSSTransformValue(transforms)": [
    "transforms"
  ],
  "CSSTransformValue/__getter__(index)": [
    "index"
  ],
  "CSSTransformValue/__setter__(index, val)": [
    "index",
    "val"
  ],
  "CSSTransformValue/constructor(transforms)": [
    "transforms"
  ],
  "CSSTransition": [
    "transitionProperty"
  ],
  "CSSTranslate": [
    "CSSTranslate(x, y)",
    "CSSTranslate(x, y, z)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/CSSTranslate(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/CSSTranslate(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/constructor(x, y)": [
    "x",
    "y",
    "z"
  ],
  "CSSTranslate/constructor(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "CSSUnitValue": [
    "CSSUnitValue(value, unit)",
    "constructor(value, unit)",
    "unit",
    "value"
  ],
  "CSSUnitValue/CSSUnitValue(value, unit)": [
    "unit",
    "value"
  ],
  "CSSUnitValue/constructor(value, unit)": [
    "unit",
    "value"
  ],
  "CSSUnparsedValue": [
    "CSSUnparsedValue(members)",
    "[[tokens]]",
    "constructor(members)",
    "length"
  ],
  "CSSUnparsedValue/CSSUnparsedValue(members)": [
    "members"
  ],
  "CSSUnparsedValue/__getter__(index)": [
    "index"
  ],
  "CSSUnparsedValue/__setter__(index, val)": [
    "index",
    "val"
  ],
  "CSSUnparsedValue/constructor(members)": [
    "members"
  ],
  "CSSVariableReferenceValue": [
    "CSSVariableReferenceValue(variable)",
    "CSSVariableReferenceValue(variable, fallback)",
    "constructor(variable)",
    "constructor(variable, fallback)",
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/CSSVariableReferenceValue(variable)": [
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/CSSVariableReferenceValue(variable, fallback)": [
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/constructor(variable)": [
    "fallback",
    "variable"
  ],
  "CSSVariableReferenceValue/constructor(variable, fallback)": [
    "fallback",
    "variable"
  ],
  "CSSViewTransitionRule": [
    "navigation",
    "types"
  ],
  "Cache": [
    "add(request)",
    "addAll(requests)",
    "delete(request)",
    "delete(request, options)",
    "keys()",
    "keys(request)",
    "keys(request, options)",
    "match(request)",
    "match(request, options)",
    "matchAll()",
    "matchAll(request)",
    "matchAll(request, options)",
    "put(request, response)"
  ],
  "Cache/add(request)": [
    "request"
  ],
  "Cache/addAll(requests)": [
    "requests"
  ],
  "Cache/delete(request)": [
    "options",
    "request"
  ],
  "Cache/delete(request, options)": [
    "options",
    "request"
  ],
  "Cache/keys()": [
    "options",
    "request"
  ],
  "Cache/keys(request)": [
    "options",
    "request"
  ],
  "Cache/keys(request, options)": [
    "options",
    "request"
  ],
  "Cache/match(request)": [
    "options",
    "request"
  ],
  "Cache/match(request, options)": [
    "options",
    "request"
  ],
  "Cache/matchAll()": [
    "options",
    "request"
  ],
  "Cache/matchAll(request)": [
    "options",
    "request"
  ],
  "Cache/matchAll(request, options)": [
    "options",
    "request"
  ],
  "Cache/put(request, response)": [
    "request",
    "response"
  ],
  "CacheQueryOptions": [
    "ignoreMethod",
    "ignoreSearch",
    "ignoreVary"
  ],
  "CacheStorage": [
    "delete(cacheName)",
    "global object",
    "has(cacheName)",
    "keys()",
    "match(request)",
    "match(request, options)",
    "open(cacheName)"
  ],
  "CacheStorage/delete(cacheName)": [
    "cacheName"
  ],
  "CacheStorage/has(cacheName)": [
    "cacheName"
  ],
  "CacheStorage/match(request)": [
    "options",
    "request"
  ],
  "CacheStorage/match(request, options)": [
    "options",
    "request"
  ],
  "CacheStorage/open(cacheName)": [
    "cacheName"
  ],
  "CameraDevicePermissionDescriptor": [
    "panTiltZoom"
  ],
  "CanMakePaymentEvent": [
    "constructor()",
    "constructor(type)",
    "respondWith()",
    "respondWith(canMakePaymentResponse)"
  ],
  "CanPlayTypeResult": [
    "maybe",
    "probably"
  ],
  "CanvasCaptureMediaStreamTrack": [
    "canvas",
    "requestFrame()"
  ],
  "CanvasCompositing": [
    "globalAlpha",
    "globalCompositeOperation"
  ],
  "CanvasDirection": [
    "inherit",
    "ltr",
    "rtl"
  ],
  "CanvasDrawImage": [
    "drawImage()"
  ],
  "CanvasDrawPath": [
    "beginPath()",
    "clip(fillRule)",
    "clip(path, fillRule)",
    "fill(fillRule)",
    "fill(path, fillRule)",
    "isPointInPath(path, x, y, fillRule)",
    "isPointInPath(x, y, fillRule)",
    "isPointInStroke(path, x, y)",
    "isPointInStroke(x, y)",
    "stroke()",
    "stroke(path)"
  ],
  "CanvasFillRule": [
    "evenodd",
    "nonzero"
  ],
  "CanvasFillStrokeStyles": [
    "createConicGradient(startAngle, x, y)",
    "createLinearGradient(x0, y0, x1, y1)",
    "createPattern(image, repetition)",
    "createRadialGradient(x0, y0, r0, x1, y1, r1)",
    "fillStyle",
    "strokeStyle"
  ],
  "CanvasFilters": [
    "filter"
  ],
  "CanvasFontKerning": [
    "auto",
    "none",
    "normal"
  ],
  "CanvasFontStretch": [
    "condensed",
    "expanded",
    "extra-condensed",
    "extra-expanded",
    "normal",
    "semi-condensed",
    "semi-expanded",
    "ultra-condensed",
    "ultra-expanded"
  ],
  "CanvasFontVariantCaps": [
    "all-petite-caps",
    "all-small-caps",
    "normal",
    "petite-caps",
    "small-caps",
    "titling-caps",
    "unicase"
  ],
  "CanvasGradient": [
    "addColorStop(offset, color)"
  ],
  "CanvasImageData": [
    "createImageData(imagedata)",
    "createImageData(sw, sh, settings)",
    "getImageData(sx, sy, sw, sh, settings)",
    "putImageData()"
  ],
  "CanvasImageSmoothing": [
    "imageSmoothingEnabled",
    "imageSmoothingQuality"
  ],
  "CanvasPath": [
    "arc(x, y, radius, startAngle, endAngle, counterclockwise)",
    "arcTo(x1, y1, x2, y2, radius)",
    "bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y)",
    "closePath()",
    "ellipse(x, y, radiusX, radiusY, rotation, startAngle, endAngle, counterclockwise)",
    "lineTo(x, y)",
    "moveTo(x, y)",
    "quadraticCurveTo(cpx, cpy, x, y)",
    "rect(x, y, w, h)",
    "roundRect(x, y, w, h, radii)"
  ],
  "CanvasPathDrawingStyles": [
    "getLineDash()",
    "lineCap",
    "lineDashOffset",
    "lineJoin",
    "lineWidth",
    "miterLimit",
    "setLineDash(segments)"
  ],
  "CanvasPattern": [
    "setTransform(transform)"
  ],
  "CanvasRect": [
    "clearRect(x, y, w, h)",
    "fillRect(x, y, w, h)",
    "strokeRect(x, y, w, h)"
  ],
  "CanvasRenderingContext2D": [
    "canvas",
    "getContextAttributes()"
  ],
  "CanvasRenderingContext2DSettings": [
    "alpha",
    "colorSpace",
    "desynchronized",
    "willReadFrequently"
  ],
  "CanvasShadowStyles": [
    "shadowBlur",
    "shadowColor",
    "shadowOffsetX",
    "shadowOffsetY"
  ],
  "CanvasState": [
    "isContextLost()",
    "reset()",
    "restore()",
    "save()"
  ],
  "CanvasText": [
    "fillText(text, x, y, maxWidth)",
    "measureText(text)",
    "strokeText(text, x, y, maxWidth)"
  ],
  "CanvasTextAlign": [
    "center",
    "end",
    "left",
    "right",
    "start"
  ],
  "CanvasTextBaseline": [
    "alphabetic",
    "bottom",
    "hanging",
    "ideographic",
    "middle",
    "top"
  ],
  "CanvasTextDrawingStyles": [
    "direction",
    "font",
    "fontKerning",
    "fontStretch",
    "fontVariantCaps",
    "textAlign",
    "textBaseline",
    "textRendering"
  ],
  "CanvasTextRendering": [
    "auto",
    "geometricPrecision",
    "optimizeLegibility",
    "optimizeSpeed"
  ],
  "CanvasTransform": [
    "getTransform()",
    "resetTransform()",
    "rotate(angle)",
    "scale(x, y)",
    "setTransform(a, b, c, d, e, f)",
    "setTransform(transform)",
    "transform(a, b, c, d, e, f)",
    "translate(x, y)"
  ],
  "CanvasUserInterface": [
    "drawFocusIfNeeded(element)",
    "drawFocusIfNeeded(path, element)"
  ],
  "CaptureAction": [
    "first",
    "last",
    "next",
    "previous"
  ],
  "CaptureActionEvent": [
    "action",
    "constructor()",
    "constructor(init)"
  ],
  "CaptureActionEventInit": [
    "action"
  ],
  "CaptureController": [
    "[[DisplaySurfaceType]]",
    "[[FocusBehavior]]",
    "[[FocusChangeDisabled]]",
    "[[FocusDecisionFinalized]]",
    "[[IsBound]]",
    "[[Source]]",
    "constructor()",
    "oncapturedmousechange",
    "setFocusBehavior()",
    "setFocusBehavior(focusBehavior)"
  ],
  "CaptureHandle": [
    "handle",
    "origin"
  ],
  "CaptureHandleConfig": [
    "exposeOrigin",
    "handle",
    "permittedOrigins"
  ],
  "CaptureStartFocusBehavior": [
    "focus-captured-surface",
    "focus-capturing-application",
    "no-focus-change"
  ],
  "CapturedMouseEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "surfaceX",
    "surfaceY"
  ],
  "CapturedMouseEventInit": [
    "surfaceX",
    "surfaceY"
  ],
  "CaretPosition": [
    "getClientRect()",
    "offset",
    "offsetNode"
  ],
  "CaretPositionFromPointOptions": [
    "shadowRoots"
  ],
  "ChannelCountMode": [
    "\"clamped-max\"",
    "\"explicit\"",
    "\"max\"",
    "clamped-max",
    "explicit",
    "max"
  ],
  "ChannelInterpretation": [
    "\"discrete\"",
    "\"speakers\"",
    "discrete",
    "speakers"
  ],
  "ChannelMergerNode": [
    "ChannelMergerNode(context)",
    "ChannelMergerNode(context, options)",
    "constructor(context)",
    "constructor(context, options)"
  ],
  "ChannelMergerNode/ChannelMergerNode(context)": [
    "context",
    "options"
  ],
  "ChannelMergerNode/ChannelMergerNode(context, options)": [
    "context",
    "options"
  ],
  "ChannelMergerNode/constructor": [
    "ChannelMergerNode(context, options)"
  ],
  "ChannelMergerNode/constructor()": [
    "context",
    "options"
  ],
  "ChannelMergerNode/constructor(context)": [
    "context",
    "options"
  ],
  "ChannelMergerNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ChannelMergerOptions": [
    "numberOfInputs"
  ],
  "ChannelSplitterNode": [
    "ChannelSplitterNode(context)",
    "ChannelSplitterNode(context, options)",
    "constructor(context)",
    "constructor(context, options)"
  ],
  "ChannelSplitterNode/ChannelSplitterNode(context)": [
    "context",
    "options"
  ],
  "ChannelSplitterNode/ChannelSplitterNode(context, options)": [
    "context",
    "options"
  ],
  "ChannelSplitterNode/constructor()": [
    "ChannelSplitterNode(context, options)",
    "context",
    "options"
  ],
  "ChannelSplitterNode/constructor(context)": [
    "context",
    "options"
  ],
  "ChannelSplitterNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ChannelSplitterOptions": [
    "numberOfOutputs"
  ],
  "ChapterInformation": [
    "artwork",
    "artwork images",
    "media metadata",
    "startTime",
    "starttime",
    "title"
  ],
  "ChapterInformationInit": [
    "artwork",
    "startTime",
    "title"
  ],
  "CharacterBoundsUpdateEvent": [
    "constructor()",
    "constructor(options)",
    "constructor(type)",
    "constructor(type, options)",
    "rangeEnd",
    "rangeStart"
  ],
  "CharacterBoundsUpdateEventInit": [
    "rangeEnd",
    "rangeStart"
  ],
  "CharacterData": [
    "appendData(data)",
    "data",
    "deleteData(offset, count)",
    "insertData(offset, data)",
    "length",
    "replaceData(offset, count, data)",
    "substring data",
    "substringData(offset, count)"
  ],
  "CharacterData/appendData(data)": [
    "data"
  ],
  "CharacterData/deleteData(offset, count)": [
    "count",
    "offset"
  ],
  "CharacterData/insertData(offset, data)": [
    "data",
    "offset"
  ],
  "CharacterData/replaceData(offset, count, data)": [
    "count",
    "data",
    "offset"
  ],
  "CharacterData/substringData(offset, count)": [
    "count",
    "offset"
  ],
  "CharacteristicEventHandlers": [
    "oncharacteristicvaluechanged"
  ],
  "CheckVisibilityOptions": [
    "checkOpacity",
    "checkVisibilityCSS",
    "contentVisibilityAuto",
    "opacityProperty",
    "visibilityProperty"
  ],
  "ChildBreakToken": [
    "[[unique id]]",
    "breakType",
    "child"
  ],
  "ChildDisplayType": [
    "\"block\"",
    "\"normal\"",
    "block",
    "normal"
  ],
  "ChildNode": [
    "after()",
    "after(...nodes)",
    "before()",
    "before(...nodes)",
    "remove()",
    "replaceWith()",
    "replaceWith(...nodes)"
  ],
  "ChildNode/after()": [
    "nodes"
  ],
  "ChildNode/after(...nodes)": [
    "nodes"
  ],
  "ChildNode/before()": [
    "nodes"
  ],
  "ChildNode/before(...nodes)": [
    "nodes"
  ],
  "ChildNode/replaceWith()": [
    "nodes"
  ],
  "ChildNode/replaceWith(...nodes)": [
    "nodes"
  ],
  "Client": [
    "frame type",
    "frameType",
    "id",
    "lifecycle state",
    "lifecycleState",
    "postMessage(message)",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "service worker client",
    "type",
    "url"
  ],
  "Client/postMessage(message)": [
    "message",
    "options"
  ],
  "Client/postMessage(message, options)": [
    "message",
    "options"
  ],
  "Client/postMessage(message, transfer)": [
    "message",
    "transfer"
  ],
  "ClientCapability": [
    "\"conditionalCreate\"",
    "\"conditionalGet\"",
    "\"hybridTransport\"",
    "\"passkeyPlatformAuthenticator\"",
    "\"relatedOrigins\"",
    "\"userVerifyingPlatformAuthenticator\"",
    "conditionalCreate",
    "conditionalGet",
    "hybridTransport",
    "passkeyPlatformAuthenticator",
    "relatedOrigins",
    "userVerifyingPlatformAuthenticator"
  ],
  "ClientLifecycleState": [
    "\"active\"",
    "\"frozen\""
  ],
  "ClientQueryOptions": [
    "includeUncontrolled",
    "type"
  ],
  "ClientType": [
    "\"all\"",
    "\"sharedworker\"",
    "\"window\"",
    "\"worker\""
  ],
  "Clients": [
    "claim()",
    "get(id)",
    "matchAll()",
    "matchAll(options)",
    "openWindow(url)"
  ],
  "Clients/get(id)": [
    "id"
  ],
  "Clients/matchAll()": [
    "options"
  ],
  "Clients/matchAll(options)": [
    "options"
  ],
  "Clients/openWindow(url)": [
    "url"
  ],
  "Clipboard": [
    "read()",
    "read(formats)",
    "readText()",
    "write(data)",
    "writeText(data)"
  ],
  "Clipboard/read()": [
    "formats"
  ],
  "Clipboard/read(formats)": [
    "formats"
  ],
  "Clipboard/write(data)": [
    "data"
  ],
  "Clipboard/writeText(data)": [
    "data"
  ],
  "ClipboardEvent": [
    "ClipboardEvent(type)",
    "ClipboardEvent(type, eventInitDict)",
    "clipboardData",
    "clipboarddata",
    "constructor(type)",
    "constructor(type, eventInitDict)"
  ],
  "ClipboardEvent/ClipboardEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ClipboardEvent/ClipboardEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ClipboardEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ClipboardEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ClipboardEventInit": [
    "clipboardData",
    "clipboarddata"
  ],
  "ClipboardItem": [
    "ClipboardItem(items)",
    "ClipboardItem(items, options)",
    "clipboard item",
    "constructor(items)",
    "constructor(items, options)",
    "getType(type)",
    "presentationStyle",
    "supports(type)",
    "types",
    "types array"
  ],
  "ClipboardItem/ClipboardItem(items)": [
    "items",
    "options"
  ],
  "ClipboardItem/ClipboardItem(items, options)": [
    "items",
    "options"
  ],
  "ClipboardItem/constructor(items)": [
    "items",
    "options"
  ],
  "ClipboardItem/constructor(items, options)": [
    "items",
    "options"
  ],
  "ClipboardItem/getType(type)": [
    "type"
  ],
  "ClipboardItem/supports(type)": [
    "type"
  ],
  "ClipboardItemOptions": [
    "presentationStyle"
  ],
  "ClipboardPermissionDescriptor": [
    "allowWithoutGesture"
  ],
  "ClipboardUnsanitizedFormats": [
    "unsanitized"
  ],
  "CloseEvent": [
    "CloseEvent(type)",
    "CloseEvent(type, eventInitDict)",
    "code",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "reason",
    "wasClean"
  ],
  "CloseEvent/CloseEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "CloseEvent/CloseEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CloseEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "CloseEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CloseEventInit": [
    "code",
    "reason",
    "wasClean"
  ],
  "CloseWatcher": [
    "cancel",
    "close",
    "close()",
    "destroy()",
    "oncancel",
    "onclose",
    "requestClose()"
  ],
  "CloseWatcherOptions": [
    "signal"
  ],
  "CodecState": [
    "\"closed\"",
    "\"configured\"",
    "\"unconfigured\"",
    "closed",
    "configured",
    "unconfigured"
  ],
  "CollectedClientAdditionalPaymentData": [
    "instrument",
    "payeeName",
    "payeeOrigin",
    "rpId",
    "topOrigin",
    "total"
  ],
  "CollectedClientData": [
    "challenge",
    "crossOrigin",
    "hash of the serialized client data",
    "json-compatible serialization of client data",
    "origin",
    "tokenbinding",
    "topOrigin",
    "type"
  ],
  "CollectedClientPaymentData": [
    "payment"
  ],
  "ColorGamut": [
    "\"p3\"",
    "\"rec2020\"",
    "\"srgb\"",
    "p3",
    "rec2020",
    "srgb"
  ],
  "ColorSelectionOptions": [
    "signal"
  ],
  "ColorSelectionResult": [
    "sRGBHex"
  ],
  "ColorSpaceConversion": [
    "default",
    "none"
  ],
  "Comment": [
    "Comment()",
    "Comment(data)",
    "constructor()",
    "constructor(data)",
    "substring data"
  ],
  "Comment/Comment()": [
    "data"
  ],
  "Comment/Comment(data)": [
    "data"
  ],
  "Comment/constructor()": [
    "data"
  ],
  "Comment/constructor(data)": [
    "data"
  ],
  "CompositeOperation": [
    "\"accumulate\"",
    "\"add\"",
    "\"replace\"",
    "accumulate",
    "add",
    "replace"
  ],
  "CompositeOperationOrAuto": [
    "\"accumulate\"",
    "\"add\"",
    "\"auto\"",
    "\"replace\"",
    "accumulate",
    "add",
    "auto",
    "replace"
  ],
  "CompositionEvent": [
    "CompositionEvent(type)",
    "CompositionEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data",
    "initCompositionEvent(typeArg)",
    "initCompositionEvent(typeArg, bubblesArg)",
    "initCompositionEvent(typeArg, bubblesArg, cancelableArg)",
    "initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg)",
    "initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg, dataArg)"
  ],
  "CompositionEvent/CompositionEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/CompositionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CompositionEvent/initCompositionEvent(typeArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg, cancelableArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEvent/initCompositionEvent(typeArg, bubblesArg, cancelableArg, viewArg, dataArg)": [
    "bubblesArg",
    "cancelableArg",
    "dataArg",
    "typeArg",
    "viewArg"
  ],
  "CompositionEventInit": [
    "data"
  ],
  "CompressionFormat": [
    "\"deflate\"",
    "\"deflate-raw\"",
    "\"gzip\""
  ],
  "CompressionStream": [
    "CompressionStream(format)",
    "constructor(format)",
    "context",
    "format"
  ],
  "CompressionStream/CompressionStream(format)": [
    "format"
  ],
  "CompressionStream/constructor(format)": [
    "format"
  ],
  "ComputedEffectTiming": [
    "activeDuration",
    "currentIteration",
    "endTime",
    "localTime",
    "progress",
    "startTime"
  ],
  "ConnectionType": [
    "bluetooth",
    "cellular",
    "ethernet",
    "mixed",
    "none",
    "other",
    "unknown",
    "wifi",
    "wimax"
  ],
  "ConstantSourceNode": [
    "ConstantSourceNode(context)",
    "ConstantSourceNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "offset"
  ],
  "ConstantSourceNode/ConstantSourceNode(context)": [
    "context",
    "options"
  ],
  "ConstantSourceNode/ConstantSourceNode(context, options)": [
    "context",
    "options"
  ],
  "ConstantSourceNode/constructor()": [
    "ConstantSourceNode(context, options)",
    "context",
    "options"
  ],
  "ConstantSourceNode/constructor(context)": [
    "context",
    "options"
  ],
  "ConstantSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ConstantSourceOptions": [
    "offset"
  ],
  "ConstrainBooleanParameters": [
    "exact",
    "ideal"
  ],
  "ConstrainDOMStringParameters": [
    "exact",
    "ideal"
  ],
  "ConstrainDoubleRange": [
    "exact",
    "ideal"
  ],
  "ConstrainPoint2DParameters": [
    "exact",
    "ideal"
  ],
  "ConstrainULongRange": [
    "exact",
    "ideal"
  ],
  "ConstrainablePattern": [
    "applyConstraints()",
    "applyConstraints(constraints)",
    "getCapabilities()",
    "getConstraints()",
    "getSettings()"
  ],
  "Constraints": [
    "advanced"
  ],
  "ContactAddress": [
    "address",
    "addressLine",
    "city",
    "country",
    "dependentLocality",
    "organization",
    "phone",
    "postalCode",
    "recipient",
    "region",
    "sortingCode",
    "toJSON()"
  ],
  "ContactInfo": [
    "address",
    "email",
    "icon",
    "name",
    "tel"
  ],
  "ContactProperty": [
    "\"address\"",
    "\"email\"",
    "\"icon\"",
    "\"name\"",
    "\"tel\""
  ],
  "ContactsManager": [
    "create a contactaddress from user-provided input",
    "getProperties()",
    "launching a contact picker",
    "select(properties)",
    "select(properties, options)"
  ],
  "ContactsManager/select(properties)": [
    "options",
    "properties"
  ],
  "ContactsManager/select(properties, options)": [
    "options",
    "properties"
  ],
  "ContactsSelectOptions": [
    "multiple"
  ],
  "ContentCategory": [
    "\"\"",
    "\"article\"",
    "\"audio\"",
    "\"homepage\"",
    "\"video\""
  ],
  "ContentDescription": [
    "category",
    "description",
    "icons",
    "id",
    "title",
    "url"
  ],
  "ContentIndex": [
    "add(description)",
    "delete(id)",
    "getAll()",
    "service worker registration"
  ],
  "ContentIndex/add(description)": [
    "description"
  ],
  "ContentIndex/delete(id)": [
    "id"
  ],
  "ContentIndexEvent": [
    "ContentIndexEvent(type, init)",
    "constructor(type, init)",
    "id"
  ],
  "ContentIndexEvent/ContentIndexEvent(type, init)": [
    "init",
    "type"
  ],
  "ContentIndexEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "ContentIndexEventInit": [
    "id"
  ],
  "ContentVisibilityAutoStateChangeEvent": [
    "ContentVisibilityAutoStateChangeEvent(type)",
    "ContentVisibilityAutoStateChangeEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "skipped"
  ],
  "ContentVisibilityAutoStateChangeEvent/ContentVisibilityAutoStateChangeEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangeEvent/ContentVisibilityAutoStateChangeEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangeEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangeEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangeEventInit": [
    "skipped"
  ],
  "ContentVisibilityAutoStateChangedEvent": [
    "ContentVisibilityAutoStateChangedEvent(type)",
    "ContentVisibilityAutoStateChangedEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "skipped"
  ],
  "ContentVisibilityAutoStateChangedEvent/ContentVisibilityAutoStateChangedEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangedEvent/ContentVisibilityAutoStateChangedEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangedEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangedEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ContentVisibilityAutoStateChangedEventInit": [
    "skipped"
  ],
  "ConvertCoordinateOptions": [
    "fromBox",
    "toBox"
  ],
  "ConvolverNode": [
    "ConvolverNode(context)",
    "ConvolverNode(context, options)",
    "buffer",
    "buffer attribute",
    "constructor(context)",
    "constructor(context, options)",
    "normalize"
  ],
  "ConvolverNode/ConvolverNode(context)": [
    "context",
    "options"
  ],
  "ConvolverNode/ConvolverNode(context, options)": [
    "context",
    "options"
  ],
  "ConvolverNode/constructor()": [
    "ConvolverNode(context, options)",
    "context",
    "options"
  ],
  "ConvolverNode/constructor(context)": [
    "context",
    "options"
  ],
  "ConvolverNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "ConvolverOptions": [
    "buffer",
    "disableNormalization"
  ],
  "CookieChangeEvent": [
    "CookieChangeEvent(type)",
    "CookieChangeEvent(type, eventInitDict)",
    "changed",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "deleted"
  ],
  "CookieChangeEvent/CookieChangeEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "CookieChangeEvent/CookieChangeEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CookieChangeEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "CookieChangeEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CookieChangeEventInit": [
    "changed",
    "deleted"
  ],
  "CookieInit": [
    "domain",
    "expires",
    "name",
    "partitioned",
    "path",
    "sameSite",
    "value"
  ],
  "CookieListItem": [
    "domain",
    "expires",
    "name",
    "partitioned",
    "path",
    "sameSite",
    "secure",
    "value"
  ],
  "CookieSameSite": [
    "\"lax\"",
    "\"none\"",
    "\"strict\""
  ],
  "CookieStore": [
    "delete(name)",
    "delete(options)",
    "get()",
    "get(name)",
    "get(options)",
    "getAll()",
    "getAll(name)",
    "getAll(options)",
    "onchange",
    "set(name, value)",
    "set(options)"
  ],
  "CookieStore/delete(name)": [
    "name"
  ],
  "CookieStore/delete(options)": [
    "options"
  ],
  "CookieStore/get()": [
    "options"
  ],
  "CookieStore/get(name)": [
    "name"
  ],
  "CookieStore/get(options)": [
    "options"
  ],
  "CookieStore/getAll()": [
    "options"
  ],
  "CookieStore/getAll(name)": [
    "name"
  ],
  "CookieStore/getAll(options)": [
    "options"
  ],
  "CookieStore/set(name, value)": [
    "name",
    "value"
  ],
  "CookieStore/set(options)": [
    "options"
  ],
  "CookieStoreDeleteOptions": [
    "domain",
    "name",
    "partitioned",
    "path"
  ],
  "CookieStoreGetOptions": [
    "name",
    "url"
  ],
  "CookieStoreManager": [
    "getSubscriptions()",
    "registration",
    "subscribe(subscriptions)",
    "unsubscribe(subscriptions)"
  ],
  "CookieStoreManager/subscribe(subscriptions)": [
    "subscriptions"
  ],
  "CookieStoreManager/unsubscribe(subscriptions)": [
    "subscriptions"
  ],
  "CountQueuingStrategy": [
    "CountQueuingStrategy(init)",
    "[[highwatermark]]",
    "constructor(init)",
    "highWaterMark",
    "size"
  ],
  "CountQueuingStrategy/CountQueuingStrategy(init)": [
    "init"
  ],
  "CountQueuingStrategy/constructor(init)": [
    "init"
  ],
  "CrashReportBody": [
    "reason",
    "stack"
  ],
  "CreateHTMLCallback": [
    "arguments",
    "input"
  ],
  "CreateScriptCallback": [
    "arguments",
    "input"
  ],
  "CreateScriptURLCallback": [
    "arguments",
    "input"
  ],
  "Credential": [
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "[[discovery]]",
    "[[origin]]",
    "[[type]]",
    "id",
    "isConditionalMediationAvailable()",
    "origin bound",
    "type",
    "willRequestConditionalCreation()"
  ],
  "Credential/[[discovery]]": [
    "credential store",
    "remote"
  ],
  "Credential/[[type]]": [
    "password"
  ],
  "CredentialCreationOptions": [
    "federated",
    "mediation",
    "password",
    "publicKey",
    "relevant credential interface objects",
    "signal"
  ],
  "CredentialData": [
    "id"
  ],
  "CredentialMediationRequirement": [
    "\"conditional\"",
    "\"optional\"",
    "\"required\"",
    "\"silent\"",
    "conditional",
    "optional",
    "required",
    "silent"
  ],
  "CredentialPropertiesOutput": [
    "authenticatorDisplayName",
    "client-side discoverable credential property",
    "resident key credential property",
    "rk"
  ],
  "CredentialRequestOptions": [
    "digital",
    "federated",
    "identity",
    "matchable a priori",
    "mediation",
    "otp",
    "password",
    "publicKey",
    "relevant credential interface objects",
    "signal"
  ],
  "CredentialUserData": [
    "iconURL",
    "name"
  ],
  "CredentialsContainer": [
    "create()",
    "create(options)",
    "get()",
    "get(options)",
    "preventSilentAccess()",
    "store()",
    "store(credential)"
  ],
  "CredentialsContainer/create(options)": [
    "options"
  ],
  "CredentialsContainer/get(options)": [
    "options"
  ],
  "CredentialsContainer/store(credential)": [
    "credential"
  ],
  "CropTarget": [
    "[[Element]]",
    "fromElement()",
    "fromElement(element)"
  ],
  "Crypto": [
    "getRandomValues()",
    "getRandomValues(array)",
    "randomUUID()",
    "subtle"
  ],
  "CryptoKey": [
    "[[algorithm]]",
    "[[algorithm_cached]]",
    "[[extractable]]",
    "[[handle]]",
    "[[type]]",
    "[[usages]]",
    "[[usages_cached]]",
    "algorithm",
    "extractable",
    "type",
    "usages"
  ],
  "CryptoKeyPair": [
    "privateKey",
    "publicKey"
  ],
  "CursorCaptureConstraint": [
    "always",
    "motion",
    "never"
  ],
  "CustomElementRegistry": [
    "define(name, constructor, options)",
    "get(name)",
    "getName(constructor)",
    "upgrade(root)",
    "whenDefined(name)"
  ],
  "CustomEvent": [
    "CustomEvent(type)",
    "CustomEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "detail",
    "initCustomEvent(type)",
    "initCustomEvent(type, bubbles)",
    "initCustomEvent(type, bubbles, cancelable)",
    "initCustomEvent(type, bubbles, cancelable, detail)"
  ],
  "CustomEvent/CustomEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/CustomEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "CustomEvent/initCustomEvent(type)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEvent/initCustomEvent(type, bubbles)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEvent/initCustomEvent(type, bubbles, cancelable)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEvent/initCustomEvent(type, bubbles, cancelable, detail)": [
    "bubbles",
    "cancelable",
    "detail",
    "type"
  ],
  "CustomEventInit": [
    "detail"
  ],
  "Cyclic Module Records": [
    "Evaluate()",
    "ExecuteModule(capability)",
    "InitializeEnvironment()",
    "Link()",
    "LoadRequestedModules(hostDefined)"
  ],
  "DOM/Document": [
    "parsehtml",
    "parsehtmlunsafe"
  ],
  "DOM/Element": [
    "sethtml",
    "sethtmlunsafe"
  ],
  "DOM/ShadowRoot": [
    "sethtml",
    "sethtmlunsafe"
  ],
  "DOMException": [
    "ABORT_ERR",
    "DATA_CLONE_ERR",
    "DOMException()",
    "DOMException(message)",
    "DOMException(message, name)",
    "DOMSTRING_SIZE_ERR",
    "HIERARCHY_REQUEST_ERR",
    "INDEX_SIZE_ERR",
    "INUSE_ATTRIBUTE_ERR",
    "INVALID_ACCESS_ERR",
    "INVALID_CHARACTER_ERR",
    "INVALID_MODIFICATION_ERR",
    "INVALID_NODE_TYPE_ERR",
    "INVALID_STATE_ERR",
    "NAMESPACE_ERR",
    "NETWORK_ERR",
    "NOT_FOUND_ERR",
    "NOT_SUPPORTED_ERR",
    "NO_DATA_ALLOWED_ERR",
    "NO_MODIFICATION_ALLOWED_ERR",
    "QUOTA_EXCEEDED_ERR",
    "SECURITY_ERR",
    "SYNTAX_ERR",
    "TIMEOUT_ERR",
    "TYPE_MISMATCH_ERR",
    "URL_MISMATCH_ERR",
    "VALIDATION_ERR",
    "WRONG_DOCUMENT_ERR",
    "code",
    "constructor()",
    "constructor(message)",
    "constructor(message, name)",
    "message",
    "name"
  ],
  "DOMException/DOMException()": [
    "message",
    "name"
  ],
  "DOMException/DOMException(message)": [
    "message",
    "name"
  ],
  "DOMException/DOMException(message, name)": [
    "message",
    "name"
  ],
  "DOMException/constructor()": [
    "message",
    "name"
  ],
  "DOMException/constructor(message)": [
    "message",
    "name"
  ],
  "DOMException/constructor(message, name)": [
    "message",
    "name"
  ],
  "DOMImplementation": [
    "createDocument(namespace, qualifiedName)",
    "createDocument(namespace, qualifiedName, doctype)",
    "createDocumentType(qualifiedName, publicId, systemId)",
    "createHTMLDocument()",
    "createHTMLDocument(title)",
    "getFeature()",
    "hasFeature()"
  ],
  "DOMImplementation/createDocument(namespace, qualifiedName)": [
    "doctype",
    "namespace",
    "qualifiedName"
  ],
  "DOMImplementation/createDocument(namespace, qualifiedName, doctype)": [
    "doctype",
    "namespace",
    "qualifiedName"
  ],
  "DOMImplementation/createDocumentType(qualifiedName, publicId, systemId)": [
    "publicId",
    "qualifiedName",
    "systemId"
  ],
  "DOMImplementation/createHTMLDocument()": [
    "title"
  ],
  "DOMImplementation/createHTMLDocument(title)": [
    "title"
  ],
  "DOMMatrix": [
    "DOMMatrix()",
    "DOMMatrix(init)",
    "a",
    "b",
    "c",
    "constructor()",
    "constructor(init)",
    "d",
    "e",
    "f",
    "fromFloat32Array(array32)",
    "fromFloat64Array(array64)",
    "fromMatrix()",
    "fromMatrix(other)",
    "invertSelf()",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "multiplySelf()",
    "multiplySelf(other)",
    "preMultiplySelf()",
    "preMultiplySelf(other)",
    "rotateAxisAngleSelf()",
    "rotateAxisAngleSelf(x)",
    "rotateAxisAngleSelf(x, y)",
    "rotateAxisAngleSelf(x, y, z)",
    "rotateAxisAngleSelf(x, y, z, angle)",
    "rotateFromVectorSelf()",
    "rotateFromVectorSelf(x)",
    "rotateFromVectorSelf(x, y)",
    "rotateSelf()",
    "rotateSelf(rotX)",
    "rotateSelf(rotX, rotY)",
    "rotateSelf(rotX, rotY, rotZ)",
    "scale3dSelf()",
    "scale3dSelf(scale)",
    "scale3dSelf(scale, originX)",
    "scale3dSelf(scale, originX, originY)",
    "scale3dSelf(scale, originX, originY, originZ)",
    "scaleSelf()",
    "scaleSelf(scaleX)",
    "scaleSelf(scaleX, scaleY)",
    "scaleSelf(scaleX, scaleY, scaleZ)",
    "scaleSelf(scaleX, scaleY, scaleZ, originX)",
    "scaleSelf(scaleX, scaleY, scaleZ, originX, originY)",
    "scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)",
    "setMatrixValue(transformList)",
    "skewXSelf()",
    "skewXSelf(sx)",
    "skewYSelf()",
    "skewYSelf(sy)",
    "translateSelf()",
    "translateSelf(tx)",
    "translateSelf(tx, ty)",
    "translateSelf(tx, ty, tz)"
  ],
  "DOMMatrix/DOMMatrix()": [
    "init"
  ],
  "DOMMatrix/DOMMatrix(init)": [
    "init"
  ],
  "DOMMatrix/constructor()": [
    "init"
  ],
  "DOMMatrix/constructor(init)": [
    "init"
  ],
  "DOMMatrix/fromFloat32Array(array32)": [
    "array32"
  ],
  "DOMMatrix/fromFloat64Array(array64)": [
    "array64"
  ],
  "DOMMatrix/fromMatrix()": [
    "other"
  ],
  "DOMMatrix/fromMatrix(other)": [
    "other"
  ],
  "DOMMatrix/multiplySelf()": [
    "other"
  ],
  "DOMMatrix/multiplySelf(other)": [
    "other"
  ],
  "DOMMatrix/preMultiplySelf()": [
    "other"
  ],
  "DOMMatrix/preMultiplySelf(other)": [
    "other"
  ],
  "DOMMatrix/rotateAxisAngleSelf()": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x, y)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x, y, z)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateAxisAngleSelf(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrix/rotateFromVectorSelf()": [
    "x",
    "y"
  ],
  "DOMMatrix/rotateFromVectorSelf(x)": [
    "x",
    "y"
  ],
  "DOMMatrix/rotateFromVectorSelf(x, y)": [
    "x",
    "y"
  ],
  "DOMMatrix/rotateSelf()": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/rotateSelf(rotX)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/rotateSelf(rotX, rotY)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/rotateSelf(rotX, rotY, rotZ)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrix/scale3dSelf()": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale, originX)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scale3dSelf(scale, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrix/scaleSelf()": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/scaleSelf(scaleX, scaleY, scaleZ, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrix/setMatrixValue(transformList)": [
    "transformList"
  ],
  "DOMMatrix/skewXSelf()": [
    "sx"
  ],
  "DOMMatrix/skewXSelf(sx)": [
    "sx"
  ],
  "DOMMatrix/skewYSelf()": [
    "sy"
  ],
  "DOMMatrix/skewYSelf(sy)": [
    "sy"
  ],
  "DOMMatrix/translateSelf()": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix/translateSelf(tx)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix/translateSelf(tx, ty)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix/translateSelf(tx, ty, tz)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrix2DInit": [
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
    "m11",
    "m12",
    "m21",
    "m22",
    "m41",
    "m42"
  ],
  "DOMMatrixInit": [
    "is2D",
    "m13",
    "m14",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m43",
    "m44"
  ],
  "DOMMatrixReadOnly": [
    "DOMMatrixReadOnly()",
    "DOMMatrixReadOnly(init)",
    "a",
    "b",
    "c",
    "constructor()",
    "constructor(init)",
    "d",
    "e",
    "f",
    "flipX()",
    "flipY()",
    "fromFloat32Array(array32)",
    "fromFloat64Array(array64)",
    "fromMatrix()",
    "fromMatrix(other)",
    "inverse()",
    "is2D",
    "isIdentity",
    "m11",
    "m12",
    "m13",
    "m14",
    "m21",
    "m22",
    "m23",
    "m24",
    "m31",
    "m32",
    "m33",
    "m34",
    "m41",
    "m42",
    "m43",
    "m44",
    "multiply()",
    "multiply(other)",
    "rotate()",
    "rotate(rotX)",
    "rotate(rotX, rotY)",
    "rotate(rotX, rotY, rotZ)",
    "rotateAxisAngle()",
    "rotateAxisAngle(x)",
    "rotateAxisAngle(x, y)",
    "rotateAxisAngle(x, y, z)",
    "rotateAxisAngle(x, y, z, angle)",
    "rotateFromVector()",
    "rotateFromVector(x)",
    "rotateFromVector(x, y)",
    "scale()",
    "scale(scaleX)",
    "scale(scaleX, scaleY)",
    "scale(scaleX, scaleY, scaleZ)",
    "scale(scaleX, scaleY, scaleZ, originX)",
    "scale(scaleX, scaleY, scaleZ, originX, originY)",
    "scale(scaleX, scaleY, scaleZ, originX, originY, originZ)",
    "scale3d()",
    "scale3d(scale)",
    "scale3d(scale, originX)",
    "scale3d(scale, originX, originY)",
    "scale3d(scale, originX, originY, originZ)",
    "scaleNonUniform()",
    "scaleNonUniform(scaleX)",
    "scaleNonUniform(scaleX, scaleY)",
    "skewX()",
    "skewX(sx)",
    "skewY()",
    "skewY(sy)",
    "stringification behavior",
    "stringificationbehavior",
    "toFloat32Array()",
    "toFloat64Array()",
    "toJSON()",
    "transformPoint()",
    "transformPoint(point)",
    "translate()",
    "translate(tx)",
    "translate(tx, ty)",
    "translate(tx, ty, tz)"
  ],
  "DOMMatrixReadOnly/DOMMatrixReadOnly()": [
    "init"
  ],
  "DOMMatrixReadOnly/DOMMatrixReadOnly(init)": [
    "init"
  ],
  "DOMMatrixReadOnly/constructor()": [
    "init"
  ],
  "DOMMatrixReadOnly/constructor(init)": [
    "init"
  ],
  "DOMMatrixReadOnly/fromFloat32Array(array32)": [
    "array32"
  ],
  "DOMMatrixReadOnly/fromFloat64Array(array64)": [
    "array64"
  ],
  "DOMMatrixReadOnly/fromMatrix()": [
    "other"
  ],
  "DOMMatrixReadOnly/fromMatrix(other)": [
    "other"
  ],
  "DOMMatrixReadOnly/multiply()": [
    "other"
  ],
  "DOMMatrixReadOnly/multiply(other)": [
    "other"
  ],
  "DOMMatrixReadOnly/rotate()": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotate(rotX)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotate(rotX, rotY)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotate(rotX, rotY, rotZ)": [
    "rotX",
    "rotY",
    "rotZ"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle()": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x, y)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x, y, z)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateAxisAngle(x, y, z, angle)": [
    "angle",
    "x",
    "y",
    "z"
  ],
  "DOMMatrixReadOnly/rotateFromVector()": [
    "x",
    "y"
  ],
  "DOMMatrixReadOnly/rotateFromVector(x)": [
    "x",
    "y"
  ],
  "DOMMatrixReadOnly/rotateFromVector(x, y)": [
    "x",
    "y"
  ],
  "DOMMatrixReadOnly/scale()": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale(scaleX, scaleY, scaleZ, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scaleX",
    "scaleY",
    "scaleZ"
  ],
  "DOMMatrixReadOnly/scale3d()": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale, originX)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale, originX, originY)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scale3d(scale, originX, originY, originZ)": [
    "originX",
    "originY",
    "originZ",
    "scale"
  ],
  "DOMMatrixReadOnly/scaleNonUniform()": [
    "scaleX",
    "scaleY"
  ],
  "DOMMatrixReadOnly/scaleNonUniform(scaleX)": [
    "scaleX",
    "scaleY"
  ],
  "DOMMatrixReadOnly/scaleNonUniform(scaleX, scaleY)": [
    "scaleX",
    "scaleY"
  ],
  "DOMMatrixReadOnly/skewX()": [
    "sx"
  ],
  "DOMMatrixReadOnly/skewX(sx)": [
    "sx"
  ],
  "DOMMatrixReadOnly/skewY()": [
    "sy"
  ],
  "DOMMatrixReadOnly/skewY(sy)": [
    "sy"
  ],
  "DOMMatrixReadOnly/transformPoint()": [
    "point"
  ],
  "DOMMatrixReadOnly/transformPoint(point)": [
    "point"
  ],
  "DOMMatrixReadOnly/translate()": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrixReadOnly/translate(tx)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrixReadOnly/translate(tx, ty)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMMatrixReadOnly/translate(tx, ty, tz)": [
    "tx",
    "ty",
    "tz"
  ],
  "DOMParser": [
    "parseFromString(string, type)"
  ],
  "DOMParserSupportedType": [
    "text/html"
  ],
  "DOMPoint": [
    "DOMPoint()",
    "DOMPoint(x)",
    "DOMPoint(x, y)",
    "DOMPoint(x, y, z)",
    "DOMPoint(x, y, z, w)",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "constructor(x, y, z, w)",
    "fromPoint()",
    "fromPoint(other)",
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/DOMPoint(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/constructor(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPoint/fromPoint()": [
    "other"
  ],
  "DOMPoint/fromPoint(other)": [
    "other"
  ],
  "DOMPointInit": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly": [
    "DOMPointReadOnly()",
    "DOMPointReadOnly(x)",
    "DOMPointReadOnly(x, y)",
    "DOMPointReadOnly(x, y, z)",
    "DOMPointReadOnly(x, y, z, w)",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, z)",
    "constructor(x, y, z, w)",
    "fromPoint()",
    "fromPoint(other)",
    "matrixTransform()",
    "matrixTransform(matrix)",
    "toJSON()",
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/DOMPointReadOnly(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor()": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x, y)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x, y, z)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/constructor(x, y, z, w)": [
    "w",
    "x",
    "y",
    "z"
  ],
  "DOMPointReadOnly/fromPoint()": [
    "other"
  ],
  "DOMPointReadOnly/fromPoint(other)": [
    "other"
  ],
  "DOMPointReadOnly/matrixTransform()": [
    "matrix"
  ],
  "DOMPointReadOnly/matrixTransform(matrix)": [
    "matrix"
  ],
  "DOMQuad": [
    "DOMQuad()",
    "DOMQuad(p1)",
    "DOMQuad(p1, p2)",
    "DOMQuad(p1, p2, p3)",
    "DOMQuad(p1, p2, p3, p4)",
    "constructor()",
    "constructor(p1)",
    "constructor(p1, p2)",
    "constructor(p1, p2, p3)",
    "constructor(p1, p2, p3, p4)",
    "fromQuad()",
    "fromQuad(other)",
    "fromRect()",
    "fromRect(other)",
    "getBounds()",
    "p1",
    "p2",
    "p3",
    "p4",
    "toJSON()"
  ],
  "DOMQuad/DOMQuad()": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1, p2)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1, p2, p3)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/DOMQuad(p1, p2, p3, p4)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor()": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1, p2)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1, p2, p3)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/constructor(p1, p2, p3, p4)": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMQuad/fromQuad()": [
    "other"
  ],
  "DOMQuad/fromQuad(other)": [
    "other"
  ],
  "DOMQuad/fromRect()": [
    "other"
  ],
  "DOMQuad/fromRect(other)": [
    "other"
  ],
  "DOMQuadInit": [
    "p1",
    "p2",
    "p3",
    "p4"
  ],
  "DOMRect": [
    "DOMRect()",
    "DOMRect(x)",
    "DOMRect(x, y)",
    "DOMRect(x, y, width)",
    "DOMRect(x, y, width, height)",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, width)",
    "constructor(x, y, width, height)",
    "fromRect()",
    "fromRect(other)",
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/DOMRect(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/constructor(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRect/fromRect()": [
    "other"
  ],
  "DOMRect/fromRect(other)": [
    "other"
  ],
  "DOMRectInit": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectList": [
    "item(index)",
    "length"
  ],
  "DOMRectList/item(index)": [
    "index"
  ],
  "DOMRectReadOnly": [
    "DOMRectReadOnly()",
    "DOMRectReadOnly(x)",
    "DOMRectReadOnly(x, y)",
    "DOMRectReadOnly(x, y, width)",
    "DOMRectReadOnly(x, y, width, height)",
    "bottom",
    "constructor()",
    "constructor(x)",
    "constructor(x, y)",
    "constructor(x, y, width)",
    "constructor(x, y, width, height)",
    "fromRect()",
    "fromRect(other)",
    "height",
    "left",
    "right",
    "toJSON()",
    "top",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly DOMRect": [
    "bottom",
    "height",
    "left",
    "right",
    "top",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/DOMRectReadOnly(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor()": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x, y)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x, y, width)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/constructor(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "DOMRectReadOnly/fromRect()": [
    "other"
  ],
  "DOMRectReadOnly/fromRect(other)": [
    "other"
  ],
  "DOMStringList": [
    "contains(string)",
    "item(index)",
    "length"
  ],
  "DOMTokenList": [
    "add()",
    "add(...tokens)",
    "add(tokens)",
    "contains(token)",
    "item(index)",
    "length",
    "remove()",
    "remove(...tokens)",
    "remove(tokens)",
    "replace(token, newToken)",
    "serialize steps",
    "stringification behavior",
    "supports(token)",
    "toggle(token)",
    "toggle(token, force)",
    "token set",
    "update steps",
    "validation steps",
    "value"
  ],
  "DOMTokenList/add()": [
    "tokens"
  ],
  "DOMTokenList/add(...tokens)": [
    "tokens"
  ],
  "DOMTokenList/contains(token)": [
    "token"
  ],
  "DOMTokenList/item(index)": [
    "index"
  ],
  "DOMTokenList/remove()": [
    "tokens"
  ],
  "DOMTokenList/remove(...tokens)": [
    "tokens"
  ],
  "DOMTokenList/replace(token, newToken)": [
    "newToken",
    "token"
  ],
  "DOMTokenList/supports(token)": [
    "token"
  ],
  "DOMTokenList/toggle(token)": [
    "force",
    "token"
  ],
  "DOMTokenList/toggle(token, force)": [
    "force",
    "token"
  ],
  "DataCue": [
    "DataCue(startTime, endTime, value)",
    "DataCue(startTime, endTime, value, type)",
    "constructor(startTime, endTime, value)",
    "constructor(startTime, endTime, value, type)",
    "type",
    "value"
  ],
  "DataCue/DataCue(startTime, endTime, value)": [
    "endTime",
    "startTime",
    "type",
    "value"
  ],
  "DataCue/DataCue(startTime, endTime, value, type)": [
    "endTime",
    "startTime",
    "type",
    "value"
  ],
  "DataCue/constructor(startTime, endTime, value)": [
    "endTime",
    "startTime",
    "type",
    "value"
  ],
  "DataCue/constructor(startTime, endTime, value, type)": [
    "endTime",
    "startTime",
    "type",
    "value"
  ],
  "DataTransfer": [
    "DataTransfer()",
    "clearData(format)",
    "dropEffect",
    "effectAllowed",
    "files",
    "getData(format)",
    "items",
    "setData(format, data)",
    "setDragImage(image, x, y)",
    "types"
  ],
  "DataTransferItem": [
    "getAsFile()",
    "getAsFileSystemHandle()",
    "getAsString(callback)",
    "kind",
    "type",
    "webkitGetAsEntry()"
  ],
  "DataTransferItemList": [
    "add()",
    "clear()",
    "length",
    "remove(index)"
  ],
  "DataView": [
    "DataView(buffer, byteOffset, byteLength)",
    "buffer",
    "byteLength",
    "byteOffset",
    "getBigInt64(byteOffset, littleEndian)",
    "getBigUint64(byteOffset, littleEndian)",
    "getFloat32(byteOffset, littleEndian)",
    "getFloat64(byteOffset, littleEndian)",
    "getInt16(byteOffset, littleEndian)",
    "getInt32(byteOffset, littleEndian)",
    "getInt8(byteOffset)",
    "getUint16(byteOffset, littleEndian)",
    "getUint32(byteOffset, littleEndian)",
    "getUint8(byteOffset)",
    "setBigInt64(byteOffset, value, littleEndian)",
    "setBigUint64(byteOffset, value, littleEndian)",
    "setFloat32(byteOffset, value, littleEndian)",
    "setFloat64(byteOffset, value, littleEndian)",
    "setInt16(byteOffset, value, littleEndian)",
    "setInt32(byteOffset, value, littleEndian)",
    "setInt8(byteOffset, value)",
    "setUint16(byteOffset, value, littleEndian)",
    "setUint32(byteOffset, value, littleEndian)",
    "setUint8(byteOffset, value)"
  ],
  "Date": [
    "Date(...values)",
    "UTC(year, month, date, hours, minutes, seconds, ms)",
    "getDate()",
    "getDay()",
    "getFullYear()",
    "getHours()",
    "getMilliseconds()",
    "getMinutes()",
    "getMonth()",
    "getSeconds()",
    "getTime()",
    "getTimezoneOffset()",
    "getUTCDate()",
    "getUTCDay()",
    "getUTCFullYear()",
    "getUTCHours()",
    "getUTCMilliseconds()",
    "getUTCMinutes()",
    "getUTCMonth()",
    "getUTCSeconds()",
    "getYear()",
    "now()",
    "parse(string)",
    "setDate(date)",
    "setFullYear(year, month, date)",
    "setHours(hour, min, sec, ms)",
    "setMilliseconds(ms)",
    "setMinutes(min, sec, ms)",
    "setMonth(month, date)",
    "setSeconds(sec, ms)",
    "setTime(time)",
    "setUTCDate(date)",
    "setUTCFullYear(year, month, date)",
    "setUTCHours(hour, min, sec, ms)",
    "setUTCMilliseconds(ms)",
    "setUTCMinutes(min, sec, ms)",
    "setUTCMonth(month, date)",
    "setUTCSeconds(sec, ms)",
    "setYear(year)",
    "toDateString()",
    "toGMTString()",
    "toISOString()",
    "toJSON(key)",
    "toLocaleDateString(reserved1, reserved2)",
    "toLocaleString(reserved1, reserved2)",
    "toLocaleTimeString(reserved1, reserved2)",
    "toString()",
    "toTimeString()",
    "toUTCString()",
    "valueOf()"
  ],
  "Date.prototype [ %Symbol.toPrimitive% ] ( hint )": [
    "Date.prototype %Symbol.toPrimitive% (hint)"
  ],
  "Declarative Environment Records": [
    "CreateImmutableBinding(N, S)",
    "CreateMutableBinding(N, D)",
    "DeleteBinding(N)",
    "GetBindingValue(N, S)",
    "HasBinding(N)",
    "HasSuperBinding()",
    "HasThisBinding()",
    "InitializeBinding(N, V)",
    "SetMutableBinding(N, V, S)",
    "WithBaseObject()"
  ],
  "DecodeErrorCallback": [
    "error"
  ],
  "DecodeSuccessCallback": [
    "decodedData"
  ],
  "DecompressionStream": [
    "DecompressionStream(format)",
    "constructor(format)",
    "context",
    "format"
  ],
  "DecompressionStream/DecompressionStream(format)": [
    "format"
  ],
  "DecompressionStream/constructor(format)": [
    "format"
  ],
  "DedicatedWorkerGlobalScope": [
    "close()",
    "message",
    "messageerror",
    "name",
    "onmessage",
    "onmessageerror",
    "onrtctransform",
    "owning document",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "rtctransform"
  ],
  "DelayNode": [
    "DelayNode(context)",
    "DelayNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "delayTime"
  ],
  "DelayNode/DelayNode(context)": [
    "context",
    "options"
  ],
  "DelayNode/DelayNode(context, options)": [
    "context",
    "options"
  ],
  "DelayNode/constructor()": [
    "DelayNode(context, options)",
    "context",
    "options"
  ],
  "DelayNode/constructor(context)": [
    "context",
    "options"
  ],
  "DelayNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "DelayOptions": [
    "delayTime",
    "maxDelayTime"
  ],
  "DeprecationReportBody": [
    "anticipatedRemoval",
    "anticipatedremoval",
    "columnNumber",
    "columnnumber",
    "id",
    "lineNumber",
    "linenumber",
    "message",
    "sourceFile",
    "sourcefile",
    "toJSON()"
  ],
  "Design Space Segment": [
    "end",
    "start",
    "tag"
  ],
  "DetectedBarcode": [
    "boundingBox",
    "cornerPoints",
    "format",
    "rawValue"
  ],
  "DetectedFace": [
    "boundingBox",
    "landmarks"
  ],
  "DetectedText": [
    "boundingBox",
    "cornerPoints",
    "rawValue"
  ],
  "Device Orientation": [
    "x",
    "y",
    "z"
  ],
  "DeviceChangeEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "devices",
    "userInsertedDevices"
  ],
  "DeviceChangeEventInit": [
    "devices"
  ],
  "DeviceMotionEvent": [
    "DeviceMotionEvent(type)",
    "DeviceMotionEvent(type, eventInitDict)",
    "acceleration",
    "accelerationIncludingGravity",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "interval",
    "requestPermission()",
    "rotationRate"
  ],
  "DeviceMotionEvent/DeviceMotionEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "DeviceMotionEvent/DeviceMotionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "DeviceMotionEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "DeviceMotionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "DeviceMotionEventAcceleration": [
    "x",
    "x axis acceleration",
    "y",
    "y axis acceleration",
    "z",
    "z axis acceleration"
  ],
  "DeviceMotionEventAccelerationInit": [
    "x",
    "y",
    "z"
  ],
  "DeviceMotionEventInit": [
    "acceleration",
    "accelerationIncludingGravity",
    "interval",
    "rotationRate"
  ],
  "DeviceMotionEventRotationRate": [
    "alpha",
    "beta",
    "gamma",
    "x axis rotation rate",
    "y axis rotation rate",
    "z axis rotation rate"
  ],
  "DeviceMotionEventRotationRateInit": [
    "alpha",
    "beta",
    "gamma"
  ],
  "DeviceOrientationEvent": [
    "DeviceOrientationEvent(type)",
    "DeviceOrientationEvent(type, eventInitDict)",
    "absolute",
    "alpha",
    "beta",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "gamma",
    "requestPermission()",
    "requestPermission(absolute)"
  ],
  "DeviceOrientationEvent/DeviceOrientationEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "DeviceOrientationEvent/DeviceOrientationEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "DeviceOrientationEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "DeviceOrientationEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "DeviceOrientationEvent/requestPermission()": [
    "absolute"
  ],
  "DeviceOrientationEvent/requestPermission(absolute)": [
    "absolute"
  ],
  "DeviceOrientationEventInit": [
    "absolute",
    "alpha",
    "beta",
    "gamma"
  ],
  "DevicePosture": [
    "change",
    "onchange",
    "type"
  ],
  "DevicePostureType": [
    "continuous",
    "folded"
  ],
  "DigitalCredential": [
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "[[discovery]]",
    "[[type]]",
    "data",
    "protocol"
  ],
  "DigitalCredentialRequestOptions": [
    "providers"
  ],
  "DigitalCredentialsProvider": [
    "protocol",
    "request"
  ],
  "DigitalGoodsService": [
    "consume(purchaseToken)",
    "getDetails(itemIds)",
    "listPurchaseHistory()",
    "listPurchases()"
  ],
  "DigitalGoodsService/consume(purchaseToken)": [
    "purchaseToken"
  ],
  "DigitalGoodsService/getDetails(itemIds)": [
    "itemIds"
  ],
  "DirectFromSellerSignalsForBuyer": [
    "auctionSignals",
    "perBuyerSignals"
  ],
  "DirectFromSellerSignalsForSeller": [
    "auctionSignals",
    "sellerSignals"
  ],
  "DirectionSetting": [
    "",
    "\"\"",
    "\"lr\"",
    "\"rl\"",
    "lr",
    "rl"
  ],
  "DirectoryPickerOptions": [
    "id",
    "mode",
    "startIn"
  ],
  "DisconnectedAccount": [
    "account_id"
  ],
  "DiscoverableCredentialMetadata": [
    "id",
    "otherui",
    "type"
  ],
  "DisplayCaptureSurfaceType": [
    "browser",
    "monitor",
    "window"
  ],
  "DisplayMediaStreamOptions": [
    "audio",
    "controller",
    "monitorTypeSurfaces",
    "selfBrowserSurface",
    "surfaceSwitching",
    "systemAudio",
    "video"
  ],
  "DistanceModelType": [
    "\"exponential\"",
    "\"inverse\"",
    "\"linear\"",
    "exponential",
    "inverse",
    "linear"
  ],
  "Document": [
    "DOMContentLoaded",
    "Document()",
    "URL",
    "[[ActiveLocks]]",
    "[[CurrentPosture]]",
    "[[orientationPendingPromise]]",
    "[[resizeObservers]]",
    "activation start time",
    "active sandboxing flag set",
    "adoptNode(node)",
    "alinkColor",
    "all",
    "allow declarative shadow roots",
    "ancestor navigables",
    "anchors",
    "applets",
    "automatic beacon data map",
    "automatic beacons allowed",
    "bgColor",
    "body",
    "browsing context",
    "browsingTopics()",
    "browsingTopics(options)",
    "captureEvents()",
    "caretPositionFromPoint(x, y)",
    "caretPositionFromPoint(x, y, options)",
    "characterSet",
    "charset",
    "clear()",
    "close()",
    "compatMode",
    "constructor()",
    "content type",
    "contentType",
    "cookie",
    "createAttribute(localName)",
    "createAttributeNS(namespace, qualifiedName)",
    "createCDATASection(data)",
    "createComment(data)",
    "createDocumentFragment()",
    "createElement(localName)",
    "createElement(localName, options)",
    "createElementNS(namespace, qualifiedName)",
    "createElementNS(namespace, qualifiedName, options)",
    "createEntityReference()",
    "createEvent(interface)",
    "createNodeIterator(root)",
    "createNodeIterator(root, whatToShow)",
    "createNodeIterator(root, whatToShow, filter)",
    "createProcessingInstruction(target, data)",
    "createRange()",
    "createTextNode(data)",
    "createTreeWalker(root)",
    "createTreeWalker(root, whatToShow)",
    "createTreeWalker(root, whatToShow, filter)",
    "currentScript",
    "defaultView",
    "descendant navigables",
    "designMode",
    "dir",
    "discarded",
    "dispatch pending scrollsnapchange events",
    "dispatch pending scrollsnapchanging events",
    "doctype",
    "document policy",
    "document.write(...text)",
    "document.writeln(...text)",
    "documentElement",
    "documentURI",
    "domConfig",
    "domain",
    "elementFromPoint(x, y)",
    "elementsFromPoint(x, y)",
    "embeds",
    "encoding",
    "error",
    "exitFullscreen()",
    "exitPictureInPicture()",
    "exitPointerLock()",
    "fgColor",
    "first render",
    "forms",
    "fragmentDirective",
    "frozenness",
    "fullscreen",
    "fullscreenEnabled",
    "fullscreenchange",
    "fullscreenerror",
    "fully active",
    "fully active descendant of a top-level traversable with user attention",
    "getElementsByClassName(classNames)",
    "getElementsByName(elementName)",
    "getElementsByTagName(qualifiedName)",
    "getElementsByTagNameNS(namespace, localName)",
    "getSelection()",
    "global application lifecycle events",
    "global application lifecycle states",
    "hasFocus()",
    "hasPrivateToken(issuer)",
    "hasRedemptionRecord(issuer)",
    "hasStorageAccess()",
    "hasUnpartitionedCookieAccess()",
    "head",
    "hidden",
    "images",
    "implementation",
    "importNode(node)",
    "importNode(node, deep)",
    "in error",
    "inclusive ancestor navigables",
    "inclusive descendant navigables",
    "initialization",
    "inputEncoding",
    "intersectionobservertaskqueued",
    "is in view",
    "lastModified",
    "launched",
    "linkColor",
    "links",
    "load timing info",
    "location",
    "logic layer",
    "measureElement(element)",
    "measureText(text, styleMap)",
    "mode",
    "namedFlows",
    "normalizeDocument()",
    "not restored reasons",
    "onabort",
    "onanimationcancel",
    "onanimationend",
    "onanimationiteration",
    "onanimationstart",
    "onauxclick",
    "onbeforeinput",
    "onbeforematch",
    "onbeforetoggle",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncopy",
    "oncuechange",
    "oncut",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onformdata",
    "onfreeze",
    "onfullscreenchange",
    "onfullscreenerror",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onpaste",
    "onpause",
    "onplay",
    "onplaying",
    "onpointerlockchange",
    "onpointerlockerror",
    "onprerenderingchange",
    "onprogress",
    "onratechange",
    "onreadystatechange",
    "onreset",
    "onresume",
    "onscrollend",
    "onscrollsnapchange",
    "onscrollsnapchanging",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "onvisibilitychange",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "open(unused1, unused2)",
    "open(url, name, features)",
    "origin",
    "page first render ready",
    "page hidden",
    "page lifecycle events",
    "page lifecycle states",
    "page loaded",
    "page loading",
    "page ready",
    "page running in background",
    "page running in foreground",
    "page shown",
    "page unloaded",
    "page unloading",
    "parseHTML(html)",
    "parseHTML(html, options)",
    "parseHTMLUnsafe(html)",
    "parseHTMLUnsafe(html, options)",
    "pending scroll event targets",
    "pending scrollend event targets",
    "pending scrollsnapchange event targets",
    "pending scrollsnapchanging event targets",
    "pending text directives",
    "permissions policy",
    "permissionsPolicy",
    "pictureInPictureEnabled",
    "plugins",
    "policy container",
    "policy object",
    "post-prerendering activation steps list",
    "prefetch records",
    "prefetched signed exchanges for navigation",
    "prefetched subresource signed exchanges",
    "prerender records",
    "prerendering",
    "prerenderingchange",
    "previous document unload timing",
    "processed manifest",
    "reactivate",
    "readyState",
    "readystatechange",
    "referrer",
    "releaseEvents()",
    "renameNode()",
    "report-only permissions policy",
    "requestStorageAccess()",
    "requestStorageAccess(types)",
    "requestStorageAccessFor(requestedOrigin)",
    "resizeObservers",
    "run the resize steps",
    "run the scroll steps",
    "running in background",
    "running in foreground",
    "scripts",
    "scroll",
    "scrollend",
    "scrollingElement",
    "shown",
    "startViewTransition()",
    "startViewTransition(callbackOptions)",
    "startViewTransition(updateCallback)",
    "strictErrorChecking",
    "timeline",
    "title",
    "top layer",
    "type",
    "unloaded",
    "unloading",
    "update scrollsnapchange targets",
    "update scrollsnapchanging targets",
    "url",
    "view layer",
    "visibility state",
    "visibilityState",
    "visibilitychange",
    "vlinkColor",
    "wasDiscarded",
    "will declaratively refresh",
    "xmlEncoding",
    "xmlStandalone",
    "xmlVersion"
  ],
  "Document/adoptNode(node)": [
    "node"
  ],
  "Document/browsingTopics()": [
    "options"
  ],
  "Document/browsingTopics(options)": [
    "options"
  ],
  "Document/caretPositionFromPoint(x, y)": [
    "options",
    "x",
    "y"
  ],
  "Document/caretPositionFromPoint(x, y, options)": [
    "options",
    "x",
    "y"
  ],
  "Document/createAttribute(localName)": [
    "localName"
  ],
  "Document/createAttributeNS(namespace, qualifiedName)": [
    "namespace",
    "qualifiedName"
  ],
  "Document/createCDATASection(data)": [
    "data"
  ],
  "Document/createComment(data)": [
    "data"
  ],
  "Document/createElement(localName)": [
    "localName",
    "options"
  ],
  "Document/createElement(localName, options)": [
    "localName",
    "options"
  ],
  "Document/createElementNS(namespace, qualifiedName)": [
    "namespace",
    "options",
    "qualifiedName"
  ],
  "Document/createElementNS(namespace, qualifiedName, options)": [
    "namespace",
    "options",
    "qualifiedName"
  ],
  "Document/createEvent(interface)": [
    "interface"
  ],
  "Document/createNodeIterator(root)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createNodeIterator(root, whatToShow)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createNodeIterator(root, whatToShow, filter)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createProcessingInstruction(target, data)": [
    "data",
    "target"
  ],
  "Document/createTextNode(data)": [
    "data"
  ],
  "Document/createTreeWalker(root)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createTreeWalker(root, whatToShow)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/createTreeWalker(root, whatToShow, filter)": [
    "filter",
    "root",
    "whatToShow"
  ],
  "Document/elementFromPoint(x, y)": [
    "x",
    "y"
  ],
  "Document/elementsFromPoint(x, y)": [
    "x",
    "y"
  ],
  "Document/getElementsByClassName(classNames)": [
    "classNames"
  ],
  "Document/getElementsByTagName(qualifiedName)": [
    "qualifiedName"
  ],
  "Document/getElementsByTagNameNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Document/hasPrivateToken(issuer)": [
    "issuer"
  ],
  "Document/hasRedemptionRecord(issuer)": [
    "issuer"
  ],
  "Document/importNode(node)": [
    "deep",
    "node"
  ],
  "Document/importNode(node, deep)": [
    "deep",
    "node"
  ],
  "Document/measureElement(element)": [
    "element"
  ],
  "Document/measureText(text, styleMap)": [
    "styleMap",
    "text"
  ],
  "Document/parseHTML(html)": [
    "html",
    "options"
  ],
  "Document/parseHTML(html, options)": [
    "html",
    "options"
  ],
  "Document/parseHTMLUnsafe(html)": [
    "html",
    "options"
  ],
  "Document/parseHTMLUnsafe(html, options)": [
    "html",
    "options"
  ],
  "Document/requestStorageAccess(types)": [
    "types"
  ],
  "Document/requestStorageAccessFor(requestedOrigin)": [
    "requestedOrigin"
  ],
  "Document/startViewTransition()": [
    "callbackOptions",
    "updateCallback"
  ],
  "Document/startViewTransition(callbackOptions)": [
    "callbackOptions"
  ],
  "Document/startViewTransition(updateCallback)": [
    "updateCallback"
  ],
  "DocumentAndElementEventHandlers": [
    "clipboardchange",
    "copy",
    "cut",
    "paste"
  ],
  "DocumentFragment": [
    "DocumentFragment()",
    "constructor()",
    "host"
  ],
  "DocumentOrShadowRoot": [
    "activeElement",
    "adoptedStyleSheets",
    "document or shadow root css style sheets",
    "final css style sheets",
    "fullscreenElement",
    "getAnimations()",
    "pictureInPictureElement",
    "pointerLockElement",
    "styleSheets"
  ],
  "DocumentPictureInPicture": [
    "enter",
    "last-opened window",
    "onenter",
    "requestWindow()",
    "requestWindow(options)",
    "window"
  ],
  "DocumentPictureInPicture/requestWindow()": [
    "options"
  ],
  "DocumentPictureInPicture/requestWindow(options)": [
    "options"
  ],
  "DocumentPictureInPictureEvent": [
    "DocumentPictureInPictureEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "window"
  ],
  "DocumentPictureInPictureEvent/DocumentPictureInPictureEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "DocumentPictureInPictureEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "DocumentPictureInPictureEventInit": [
    "window"
  ],
  "DocumentPictureInPictureOptions": [
    "disallowReturnToOpener",
    "height",
    "preferInitialWindowPlacement",
    "width"
  ],
  "DocumentTimeline": [
    "DocumentTimeline()",
    "DocumentTimeline(options)",
    "constructor()",
    "constructor(options)"
  ],
  "DocumentTimeline/DocumentTimeline(options)": [
    "options"
  ],
  "DocumentTimelineOptions": [
    "originTime"
  ],
  "DocumentType": [
    "entities",
    "internalSubset",
    "name",
    "notations",
    "public id",
    "publicId",
    "system id",
    "systemId"
  ],
  "DoubleRange": [
    "max",
    "min"
  ],
  "DragEvent": [
    "dataTransfer"
  ],
  "DynamicsCompressorNode": [
    "DynamicsCompressorNode(context)",
    "DynamicsCompressorNode(context, options)",
    "[[compressor gain]]",
    "[[detector average]]",
    "[[internal reduction]]",
    "attack",
    "constructor(context)",
    "constructor(context, options)",
    "knee",
    "ratio",
    "reduction",
    "release",
    "threshold"
  ],
  "DynamicsCompressorNode/DynamicsCompressorNode(context)": [
    "context",
    "options"
  ],
  "DynamicsCompressorNode/DynamicsCompressorNode(context, options)": [
    "context",
    "options"
  ],
  "DynamicsCompressorNode/constructor()": [
    "DynamicsCompressorNode(context, options)",
    "context",
    "options"
  ],
  "DynamicsCompressorNode/constructor(context)": [
    "context",
    "options"
  ],
  "DynamicsCompressorNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "DynamicsCompressorOptions": [
    "attack",
    "knee",
    "ratio",
    "release",
    "threshold"
  ],
  "ECMAScript": [
    "%typedarray% prototype object",
    "abrupt completion",
    "abrupt completions",
    "abstract closure",
    "abstract closures",
    "accessor properties",
    "accessor property",
    "active function object",
    "active script or module",
    "agent",
    "agent cluster",
    "agent clusters",
    "agent events record",
    "agent events records",
    "agent record",
    "agent records",
    "agent signifier",
    "agent signifiers",
    "agent-order slice",
    "agent-order slices",
    "agents",
    "arguments exotic object",
    "arguments exotic objects",
    "array exotic object",
    "array exotic objects",
    "array index",
    "array indices",
    "array-like object",
    "array-like objects",
    "asyncgeneratorrequest",
    "asyncgeneratorrequests",
    "available named time zone",
    "available named time zone identifier",
    "available named time zone identifiers",
    "available named time zones",
    "bigint type",
    "boolean type",
    "bound function exotic object",
    "bound function exotic objects",
    "break completion",
    "break completions",
    "byte value",
    "byte values",
    "candidate execution",
    "candidate executions",
    "canonical numeric string",
    "canonical numeric strings",
    "capturerange",
    "captureranges",
    "charset",
    "charsetelement",
    "charsets",
    "chosen value record",
    "chosen value records",
    "classfielddefinition record",
    "classfielddefinition records",
    "classstaticblockdefinition record",
    "classstaticblockdefinition records",
    "completion record",
    "completion records",
    "conditional keyword",
    "conditional keywords",
    "consistent comparator",
    "constructor",
    "constructors",
    "contention",
    "contextual keyword",
    "contextual keywords",
    "continue completion",
    "continue completions",
    "critical section",
    "critical sections",
    "cyclic module record",
    "cyclic module records",
    "data block",
    "data blocks",
    "data properties",
    "data property",
    "data race",
    "data race free",
    "dataview with buffer witness record",
    "dataview with buffer witness records",
    "declarative environment record",
    "declarative environment records",
    "direct eval",
    "direct evals",
    "directive prologue",
    "directive prologues",
    "early error",
    "early errors",
    "ecmascript code execution context",
    "ecmascript code execution contexts",
    "ecmascript language type",
    "ecmascript language types",
    "ecmascript language value",
    "ecmascript language values",
    "ecmascript source text",
    "empty candidate execution",
    "empty candidate executions",
    "enum,enums",
    "enums",
    "environment record",
    "environment records",
    "epoch",
    "eval code",
    "executing thread",
    "executing threads",
    "execution context",
    "execution context stack",
    "execution context stacks",
    "execution contexts",
    "exotic object",
    "exotic objects",
    "exportentry record",
    "exportentry records",
    "finite",
    "fixed-length arraybuffer",
    "fixed-length sharedarraybuffer",
    "fully populated property descriptor",
    "function code",
    "function environment record",
    "function environment records",
    "function object",
    "function objects",
    "global code",
    "global environment record",
    "global environment records",
    "global object",
    "global objects",
    "graphloadingstate record",
    "graphloadingstate records",
    "growable sharedarraybuffer",
    "happens-before",
    "high-surrogate code unit",
    "high-surrogate code units",
    "host",
    "host environment",
    "host environments",
    "host hook",
    "host hooks",
    "host-defined",
    "host-synchronizes-with",
    "hosts",
    "hypothetical weakref-oblivious",
    "immutable prototype exotic object",
    "immutable prototype exotic objects",
    "implementation-approximated",
    "implementation-defined",
    "importentry record",
    "importentry records",
    "integer index",
    "integer indices,integer-indexed",
    "is a bigint,is not a bigint",
    "is a boolean,is not a boolean",
    "is a number,is not a number",
    "is a string,is not a string",
    "is a symbol,is not a symbol",
    "is an object,is not an object",
    "is-agent-order-before",
    "is-memory-order-before",
    "iterator record",
    "iterator records",
    "job",
    "jobcallback record",
    "jobcallback records",
    "jobs",
    "json serialization record",
    "json serialization records",
    "keyword",
    "keywords",
    "leading surrogate",
    "leading surrogates",
    "least relation",
    "left-capturing parentheses",
    "left-capturing parenthesis",
    "lexicographic code unit order",
    "list",
    "list-concatenation",
    "lists",
    "live",
    "low-surrogate code unit",
    "low-surrogate code units",
    "match record",
    "match records",
    "matcher",
    "matchercontinuation",
    "matchercontinuations",
    "matchers",
    "matchresult",
    "matchresults",
    "matchstate",
    "matchstates",
    "memory model",
    "module code",
    "module environment record",
    "module environment records",
    "module namespace exotic object",
    "module namespace exotic objects",
    "module record",
    "module records",
    "nativeerror prototype object",
    "non-primary time zone identifier",
    "non-primary time zone identifiers",
    "non-strict code",
    "non-strict function",
    "non-strict functions",
    "normal completion",
    "normal completion containing",
    "normal completions",
    "normal completions containing",
    "number type",
    "number value for",
    "object environment record",
    "object environment records",
    "object type",
    "offset time zone",
    "offset time zones",
    "ordinary object",
    "ordinary objects",
    "possible read values",
    "prepared to evaluate ecmascript code",
    "primary time zone identifier",
    "primary time zone identifiers",
    "private name",
    "private names",
    "privateelement",
    "privateelements",
    "privateenvironment record",
    "privateenvironment records",
    "promisecapability record",
    "promisecapability records",
    "promisereaction record",
    "promisereaction records",
    "property descriptor",
    "property descriptors",
    "property key",
    "property keys",
    "property name",
    "proxy exotic object",
    "proxy exotic objects",
    "read-modify-write modification function",
    "read-modify-write modification functions",
    "readmodifywritesharedmemory",
    "reads-from",
    "readsharedmemory",
    "realm",
    "realm record",
    "realm records",
    "realms",
    "record",
    "records",
    "reference record",
    "reference records",
    "regexp record",
    "regexp records",
    "relation",
    "relations",
    "reserved word",
    "reserved words",
    "resizable arraybuffer",
    "resolvedbinding record",
    "resolvedbinding records",
    "return completion",
    "return completions",
    "running execution context",
    "running execution contexts",
    "safe integer",
    "script record",
    "script records",
    "set record",
    "set records",
    "shared data block",
    "shared data block event",
    "shared data block events",
    "shared data blocks",
    "sort order",
    "source text module record",
    "source text module records",
    "strict function",
    "strict functions",
    "strict mode code",
    "strict partial order",
    "strict partial orders",
    "strict total order",
    "strict total orders",
    "string exotic object",
    "string exotic objects",
    "string type",
    "string-concatenation",
    "substring",
    "super reference record",
    "super reference records",
    "surrogate pair",
    "surrogate pairs",
    "surrounding agent",
    "surrounding agents",
    "symbol type",
    "synchronize",
    "synchronize event",
    "synchronize events",
    "synchronizes-with",
    "the ascii word characters",
    "the current realm record",
    "throw completion",
    "throw completions",
    "time value",
    "time values",
    "time zone aware",
    "time zone identifier",
    "time zone identifier record",
    "time zone identifier records",
    "time zone identifiers",
    "trailing surrogate",
    "trailing surrogates",
    "typedarray element type",
    "typedarray element types",
    "typedarray with buffer witness record",
    "typedarray with buffer witness records",
    "use strict directive",
    "use strict directives",
    "waiter record",
    "waiter records",
    "waiterlist record",
    "waiterlist records",
    "writesharedmemory"
  ],
  "ECMAScript Code Execution Contexts": [
    "lexicalenvironment",
    "privateenvironment",
    "variableenvironment"
  ],
  "EcKeyAlgorithm": [
    "namedCurve"
  ],
  "EcKeyGenParams": [
    "namedCurve"
  ],
  "EcKeyImportParams": [
    "namedCurve"
  ],
  "EcdhKeyDeriveParams": [
    "public"
  ],
  "EcdsaParams": [
    "hash"
  ],
  "Ed448Params": [
    "context"
  ],
  "EditContext": [
    "attachedElements()",
    "characterBounds()",
    "characterBoundsRangeStart",
    "compositionRangeEnd",
    "compositionRangeStart",
    "constructor()",
    "constructor(options)",
    "controlBound",
    "isInComposition",
    "oncharacterboundsupdate",
    "oncompositionend",
    "oncompositionstart",
    "ontextformatupdate",
    "ontextupdate",
    "selectionBound",
    "selectionEnd",
    "selectionStart",
    "text",
    "updateCharacterBounds()",
    "updateCharacterBounds(rangeStart, characterBounds)",
    "updateControlBound()",
    "updateControlBound(controlBound)",
    "updateControlBounds()",
    "updateControlBounds(controlBounds)",
    "updateSelection()",
    "updateSelection(start, end)",
    "updateSelectionBound()",
    "updateSelectionBound(selectionBound)",
    "updateSelectionBounds()",
    "updateSelectionBounds(selectionBounds)",
    "updateText()",
    "updateText(rangeStart, rangeEnd, text)"
  ],
  "EditContextInit": [
    "selectionEnd",
    "selectionStart",
    "text"
  ],
  "EffectCallback": [
    "animation",
    "currentTarget",
    "progress"
  ],
  "EffectTiming": [
    "delay",
    "direction",
    "duration",
    "easing",
    "endDelay",
    "fill",
    "iterationStart",
    "iterations",
    "playbackRate"
  ],
  "EffectiveConnectionType": [
    "2g",
    "3g",
    "4g",
    "slow-2g"
  ],
  "Element": [
    "[[RegisteredIntersectionObservers]]",
    "[[computedStyleMapCache]]",
    "attachShadow(init)",
    "attribute list",
    "attributes",
    "checkVisibility()",
    "checkVisibility(options)",
    "class",
    "classList",
    "className",
    "clientHeight",
    "clientLeft",
    "clientTop",
    "clientWidth",
    "closest(selectors)",
    "computedStyleMap()",
    "contentvisibilityautostatechange",
    "contentvisibilityautostatechanged",
    "currentCSSZoom",
    "custom",
    "custom element definition",
    "custom element state",
    "defined",
    "editContext",
    "elementTiming",
    "focusableAreas()",
    "focusableAreas(option)",
    "fullscreenchange",
    "fullscreenerror",
    "get the attr-associated element",
    "get the attr-associated elements",
    "get the bounding box",
    "getAttribute(qualifiedName)",
    "getAttributeNS(namespace, localName)",
    "getAttributeNames()",
    "getAttributeNode(qualifiedName)",
    "getAttributeNodeNS(namespace, localName)",
    "getBoundingClientRect()",
    "getClientRects()",
    "getElementsByClassName(classNames)",
    "getElementsByTagName(qualifiedName)",
    "getElementsByTagNameNS(namespace, localName)",
    "getHTML(options)",
    "getSpatialNavigationContainer()",
    "hasAttribute(qualifiedName)",
    "hasAttributeNS(namespace, localName)",
    "hasAttributes()",
    "hasPointerCapture()",
    "hasPointerCapture(pointerId)",
    "html-uppercased qualified name",
    "id",
    "innerHTML",
    "insertAdjacentElement(where, element)",
    "insertAdjacentHTML(position, string)",
    "insertAdjacentText(where, data)",
    "is value",
    "local name",
    "localName",
    "matches(selectors)",
    "namespace",
    "namespace prefix",
    "namespaceURI",
    "onfullscreenchange",
    "onfullscreenerror",
    "onscrollsnapchange",
    "onscrollsnapchanging",
    "outerHTML",
    "part",
    "prefix",
    "pseudo(type)",
    "qualified name",
    "releasePointerCapture()",
    "releasePointerCapture(pointerId)",
    "removeAttribute(qualifiedName)",
    "removeAttributeNS(namespace, localName)",
    "removeAttributeNode(attr)",
    "requestFullscreen()",
    "requestFullscreen(options)",
    "requestPointerLock()",
    "requestPointerLock(options)",
    "schemaTypeInfo",
    "scroll",
    "scroll()",
    "scroll(options)",
    "scroll(x, y)",
    "scrollBy()",
    "scrollBy(options)",
    "scrollBy(x, y)",
    "scrollHeight",
    "scrollIntoView()",
    "scrollIntoView(arg)",
    "scrollLeft",
    "scrollTo()",
    "scrollTo(options)",
    "scrollTo(x, y)",
    "scrollTop",
    "scrollWidth",
    "scrollend",
    "setAttribute(qualifiedName, value)",
    "setAttributeNS(namespace, qualifiedName, value)",
    "setAttributeNode(attr)",
    "setAttributeNodeNS(attr)",
    "setHTML(html)",
    "setHTML(html, options)",
    "setHTMLUnsafe(html)",
    "setHTMLUnsafe(html, options)",
    "setIdAttribute()",
    "setIdAttributeNS()",
    "setIdAttributeNode()",
    "setPointerCapture()",
    "setPointerCapture(pointerId)",
    "shadow host",
    "shadow root",
    "shadowRoot",
    "slot",
    "spatialNavigationSearch(dir)",
    "spatialNavigationSearch(dir, options)",
    "spatialNavigationSearch(options)",
    "tagName",
    "toggleAttribute(qualifiedName)",
    "toggleAttribute(qualifiedName, force)",
    "webkitMatchesSelector(selectors)"
  ],
  "Element/attachShadow(init)": [
    "init"
  ],
  "Element/checkVisibility()": [
    "options"
  ],
  "Element/checkVisibility(options)": [
    "options"
  ],
  "Element/closest(selectors)": [
    "selectors"
  ],
  "Element/focusableAreas()": [
    "option"
  ],
  "Element/focusableAreas(option)": [
    "option"
  ],
  "Element/getAttribute(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/getAttributeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/getAttributeNode(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/getAttributeNodeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/getElementsByClassName(classNames)": [
    "classNames"
  ],
  "Element/getElementsByTagName(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/getElementsByTagNameNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/hasAttribute(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/hasAttributeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/insertAdjacentElement(where, element)": [
    "element",
    "where"
  ],
  "Element/insertAdjacentText(where, data)": [
    "data",
    "where"
  ],
  "Element/matches(selectors)": [
    "selectors"
  ],
  "Element/pseudo(type)": [
    "type"
  ],
  "Element/removeAttribute(qualifiedName)": [
    "qualifiedName"
  ],
  "Element/removeAttributeNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "Element/removeAttributeNode(attr)": [
    "attr"
  ],
  "Element/requestFullscreen()": [
    "options"
  ],
  "Element/requestFullscreen(options)": [
    "options"
  ],
  "Element/scroll()": [
    "options"
  ],
  "Element/scroll(options)": [
    "options"
  ],
  "Element/scroll(x, y)": [
    "x",
    "y"
  ],
  "Element/scrollBy()": [
    "options"
  ],
  "Element/scrollBy(options)": [
    "options"
  ],
  "Element/scrollBy(x, y)": [
    "x",
    "y"
  ],
  "Element/scrollIntoView()": [
    "arg"
  ],
  "Element/scrollIntoView(arg)": [
    "arg"
  ],
  "Element/scrollTo()": [
    "options"
  ],
  "Element/scrollTo(options)": [
    "options"
  ],
  "Element/scrollTo(x, y)": [
    "x",
    "y"
  ],
  "Element/setAttribute(qualifiedName, value)": [
    "qualifiedName",
    "value"
  ],
  "Element/setAttributeNS(namespace, qualifiedName, value)": [
    "namespace",
    "qualifiedName",
    "value"
  ],
  "Element/setAttributeNode(attr)": [
    "attr"
  ],
  "Element/setAttributeNodeNS(attr)": [
    "attr"
  ],
  "Element/setHTML(html)": [
    "html",
    "options"
  ],
  "Element/setHTML(html, options)": [
    "html",
    "options"
  ],
  "Element/setHTMLUnsafe(html)": [
    "html",
    "options"
  ],
  "Element/setHTMLUnsafe(html, options)": [
    "html",
    "options"
  ],
  "Element/spatialNavigationSearch(dir)": [
    "dir",
    "options"
  ],
  "Element/spatialNavigationSearch(dir, options)": [
    "dir",
    "options"
  ],
  "Element/toggleAttribute(qualifiedName)": [
    "force",
    "qualifiedName"
  ],
  "Element/toggleAttribute(qualifiedName, force)": [
    "force",
    "qualifiedName"
  ],
  "Element/webkitMatchesSelector(selectors)": [
    "selectors"
  ],
  "ElementCSSInlineStyle": [
    "attributeStyleMap",
    "style"
  ],
  "ElementContentEditable": [
    "contentEditable",
    "enterKeyHint",
    "inputMode",
    "isContentEditable",
    "virtualKeyboardPolicy"
  ],
  "ElementCreationOptions": [
    "is"
  ],
  "ElementInternals": [
    "checkValidity()",
    "form",
    "get the attr-associated element",
    "get the attr-associated elements",
    "labels",
    "reportValidity()",
    "setFormValue(value, state)",
    "setValidity(flags, message, anchor)",
    "shadowRoot",
    "validationMessage",
    "validity",
    "willValidate"
  ],
  "EncodedAudioChunk": [
    "EncodedAudioChunk(init)",
    "[[byte length]]",
    "[[duration]]",
    "[[internal data]]",
    "[[timestamp]]",
    "[[type]]",
    "byteLength",
    "constructor(init)",
    "copyTo(destination)",
    "duration",
    "timestamp",
    "type"
  ],
  "EncodedAudioChunk/EncodedAudioChunk(init)": [
    "init"
  ],
  "EncodedAudioChunk/constructor(init)": [
    "init"
  ],
  "EncodedAudioChunk/copyTo(destination)": [
    "destination"
  ],
  "EncodedAudioChunkInit": [
    "data",
    "duration",
    "timestamp",
    "transfer",
    "type"
  ],
  "EncodedAudioChunkMetadata": [
    "decoderConfig"
  ],
  "EncodedAudioChunkOutputCallback": [
    "metadata",
    "output"
  ],
  "EncodedAudioChunkType": [
    "\"delta\"",
    "\"key\""
  ],
  "EncodedVideoChunk": [
    "EncodedVideoChunk(init)",
    "[[byte length]]",
    "[[duration]]",
    "[[internal data]]",
    "[[timestamp]]",
    "[[type]]",
    "byteLength",
    "constructor(init)",
    "copyTo(destination)",
    "duration",
    "timestamp",
    "type"
  ],
  "EncodedVideoChunk/EncodedVideoChunk(init)": [
    "init"
  ],
  "EncodedVideoChunk/constructor(init)": [
    "init"
  ],
  "EncodedVideoChunk/copyTo(destination)": [
    "destination"
  ],
  "EncodedVideoChunkInit": [
    "data",
    "duration",
    "timestamp",
    "transfer",
    "type"
  ],
  "EncodedVideoChunkMetadata": [
    "alphaSideData",
    "decoderConfig",
    "svc"
  ],
  "EncodedVideoChunkOutputCallback": [
    "chunk",
    "metadata"
  ],
  "EncodedVideoChunkType": [
    "\"delta\"",
    "\"key\""
  ],
  "EndOfStreamError": [
    "decode",
    "network"
  ],
  "EndingType": [
    "\"native\"",
    "\"transparent\""
  ],
  "EntryMapRecord": [
    "firstentryindex",
    "lastentryindex"
  ],
  "Environment": [
    "ready promise"
  ],
  "EpubReadingSystem": [
    "hasFeature()",
    "hasFeature(feature)",
    "hasFeature(feature, version)"
  ],
  "Error": [
    "Error(message, options)",
    "message",
    "name",
    "toString()"
  ],
  "ErrorCallback": [
    "err"
  ],
  "ErrorEvent": [
    "colno",
    "error",
    "filename",
    "lineno",
    "message"
  ],
  "Event": [
    "AT_TARGET",
    "BUBBLING_PHASE",
    "CAPTURING_PHASE",
    "Event(type)",
    "Event(type, eventInitDict)",
    "NONE",
    "bubbles",
    "cancelBubble",
    "cancelable",
    "canceled flag",
    "composed",
    "composed flag",
    "composedPath()",
    "constructor",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "currentTarget",
    "defaultPrevented",
    "dispatch flag",
    "eventPhase",
    "flatten",
    "flatten more",
    "in passive listener flag",
    "initEvent(type)",
    "initEvent(type, bubbles)",
    "initEvent(type, bubbles, cancelable)",
    "initialize",
    "initialized flag",
    "isTrusted",
    "path",
    "preventDefault()",
    "relatedtarget",
    "returnValue",
    "srcElement",
    "stop immediate propagation flag",
    "stop propagation flag",
    "stopImmediatePropagation()",
    "stopPropagation()",
    "target",
    "timeStamp",
    "touch target list",
    "type",
    "user navigation involvement"
  ],
  "Event/Event(type)": [
    "eventInitDict",
    "type"
  ],
  "Event/Event(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "Event/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "Event/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "Event/initEvent(type)": [
    "bubbles",
    "cancelable",
    "type"
  ],
  "Event/initEvent(type, bubbles)": [
    "bubbles",
    "cancelable",
    "type"
  ],
  "Event/initEvent(type, bubbles, cancelable)": [
    "bubbles",
    "cancelable",
    "type"
  ],
  "Event/path": [
    "invocation target",
    "invocation-target-in-shadow-tree",
    "relatedtarget",
    "root-of-closed-tree",
    "shadow-adjusted target",
    "slot-in-closed-tree",
    "touch target list"
  ],
  "EventInit": [
    "bubbles",
    "cancelable",
    "composed"
  ],
  "EventListener": [
    "handleEvent(event)"
  ],
  "EventListener/handleEvent(event)": [
    "event"
  ],
  "EventListenerOptions": [
    "capture"
  ],
  "EventModifierInit": [
    "altKey",
    "ctrlKey",
    "metaKey",
    "modifierAltGraph",
    "modifierCapsLock",
    "modifierFn",
    "modifierFnLock",
    "modifierHyper",
    "modifierNumLock",
    "modifierScrollLock",
    "modifierSuper",
    "modifierSymbol",
    "modifierSymbolLock",
    "shiftKey"
  ],
  "EventSource": [
    "CLOSED",
    "CONNECTING",
    "EventSource(url, eventSourceInitDict)",
    "OPEN",
    "close()",
    "error",
    "message",
    "onerror",
    "onmessage",
    "onopen",
    "open",
    "readyState",
    "url",
    "withCredentials"
  ],
  "EventSourceInit": [
    "withCredentials"
  ],
  "EventTarget": [
    "EventTarget()",
    "activation behavior",
    "addEventListener(type, callback)",
    "addEventListener(type, callback, options)",
    "constructor()",
    "dispatchEvent(event)",
    "event handler map",
    "event listener list",
    "legacy-canceled-activation behavior",
    "legacy-pre-activation behavior",
    "removeEventListener(type, callback)",
    "removeEventListener(type, callback, options)"
  ],
  "EventTarget/addEventListener(type, callback)": [
    "callback",
    "options",
    "type"
  ],
  "EventTarget/addEventListener(type, callback, options)": [
    "callback",
    "options",
    "type"
  ],
  "EventTarget/dispatchEvent(event)": [
    "event"
  ],
  "EventTarget/removeEventListener(type, callback)": [
    "callback",
    "options",
    "type"
  ],
  "EventTarget/removeEventListener(type, callback, options)": [
    "callback",
    "options",
    "type"
  ],
  "ExtendableCookieChangeEvent": [
    "ExtendableCookieChangeEvent(type)",
    "ExtendableCookieChangeEvent(type, eventInitDict)",
    "changed",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "deleted"
  ],
  "ExtendableCookieChangeEvent/ExtendableCookieChangeEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableCookieChangeEvent/ExtendableCookieChangeEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableCookieChangeEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableCookieChangeEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableCookieChangeEventInit": [
    "changed",
    "deleted"
  ],
  "ExtendableEvent": [
    "ExtendableEvent(type)",
    "ExtendableEvent(type, eventInitDict)",
    "active",
    "add lifetime promise",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "extend lifetime promises",
    "pending promises count",
    "timed out flag",
    "waitUntil(f)"
  ],
  "ExtendableEvent/ExtendableEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/ExtendableEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableEvent/waitUntil(f)": [
    "f"
  ],
  "ExtendableMessageEvent": [
    "ExtendableMessageEvent(type)",
    "ExtendableMessageEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "ExtendableMessageEvent/ExtendableMessageEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEvent/ExtendableMessageEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ExtendableMessageEventInit": [
    "data",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "External": [
    "AddSearchProvider()",
    "IsSearchProviderInstalled()"
  ],
  "EyeDropper": [
    "constructor()",
    "open()",
    "open(options)"
  ],
  "FaceDetector": [
    "FaceDetector()",
    "FaceDetector(faceDetectorOptions)",
    "constructor()",
    "constructor(faceDetectorOptions)",
    "detect(image)"
  ],
  "FaceDetector/FaceDetector()": [
    "faceDetectorOptions"
  ],
  "FaceDetector/FaceDetector(faceDetectorOptions)": [
    "faceDetectorOptions"
  ],
  "FaceDetector/constructor()": [
    "faceDetectorOptions"
  ],
  "FaceDetector/constructor(faceDetectorOptions)": [
    "faceDetectorOptions"
  ],
  "FaceDetector/detect(image)": [
    "image"
  ],
  "FaceDetectorOptions": [
    "fastMode",
    "maxDetectedFaces"
  ],
  "Feature Map": [
    "entrymaprecords",
    "featurerecords"
  ],
  "FeatureRecord": [
    "entrymapcount",
    "featuretag",
    "firstentryindex",
    "firstnewentryindex"
  ],
  "FederatedCredential": [
    "FederatedCredential(data)",
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "constructor(data)",
    "federated",
    "protocol",
    "provider"
  ],
  "FederatedCredential/FederatedCredential(data)": [
    "data"
  ],
  "FederatedCredential/constructor(data)": [
    "data"
  ],
  "FederatedCredentialInit": [
    "iconURL",
    "name",
    "origin",
    "protocol",
    "provider"
  ],
  "FederatedCredentialRequestOptions": [
    "protocols",
    "providers"
  ],
  "Fence": [
    "getNestedConfigs()",
    "reportEvent()",
    "reportEvent(event)",
    "setReportEventDataForAutomaticBeacons()",
    "setReportEventDataForAutomaticBeacons(event)"
  ],
  "Fence/reportEvent()": [
    "event"
  ],
  "Fence/reportEvent(event)": [
    "event"
  ],
  "Fence/setReportEventDataForAutomaticBeacons()": [
    "event"
  ],
  "Fence/setReportEventDataForAutomaticBeacons(event)": [
    "event"
  ],
  "FenceEvent": [
    "crossOriginExposed",
    "destination",
    "destinationURL",
    "eventData",
    "eventType",
    "once"
  ],
  "FenceReportingDestination": [
    "\"buyer\"",
    "\"component-seller\"",
    "\"direct-seller\"",
    "\"seller\"",
    "\"shared-storage-select-url\""
  ],
  "FencedFrameConfig": [
    "FencedFrameConfig(url)",
    "constructor(url)",
    "containerHeight",
    "containerWidth",
    "contentHeight",
    "contentWidth",
    "setSharedStorageContext(contextString)"
  ],
  "FencedFrameConfig/FencedFrameConfig(url)": [
    "url"
  ],
  "FencedFrameConfig/constructor(url)": [
    "url"
  ],
  "FencedFrameConfig/setSharedStorageContext(contextString)": [
    "contextString"
  ],
  "FetchEvent": [
    "FetchEvent(type, eventInitDict)",
    "clientId",
    "constructor(type, eventInitDict)",
    "handled",
    "potential response",
    "preloadResponse",
    "replacesClientId",
    "request",
    "respond-with entered flag",
    "respond-with error flag",
    "respondWith(r)",
    "resultingClientId",
    "wait to respond flag"
  ],
  "FetchEvent/FetchEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FetchEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FetchEvent/respondWith(r)": [
    "r"
  ],
  "FetchEventInit": [
    "clientId",
    "handled",
    "preloadResponse",
    "replacesClientId",
    "request",
    "resultingClientId"
  ],
  "File": [
    "File(fileBits, fileName)",
    "File(fileBits, fileName, options)",
    "constructor(fileBits, fileName)",
    "constructor(fileBits, fileName, options)",
    "lastModified",
    "name",
    "webkitRelativePath"
  ],
  "File/File(fileBits, fileName)": [
    "options"
  ],
  "File/File(fileBits, fileName, options)": [
    "fileBits",
    "fileName",
    "options"
  ],
  "File/constructor(fileBits, fileName)": [
    "options"
  ],
  "File/constructor(fileBits, fileName, options)": [
    "options"
  ],
  "FileCallback": [
    "file"
  ],
  "FileList": [
    "item(index)",
    "length"
  ],
  "FileList/item(index)": [
    "index"
  ],
  "FilePickerAcceptType": [
    "accept",
    "description"
  ],
  "FilePickerOptions": [
    "excludeAcceptAllOption",
    "id",
    "startIn",
    "types"
  ],
  "FilePropertyBag": [
    "lastModified"
  ],
  "FileReader": [
    "DONE",
    "EMPTY",
    "FileReader()",
    "LOADING",
    "abort",
    "abort()",
    "constructor()",
    "error",
    "load",
    "loadend",
    "loadstart",
    "onabort",
    "onerror",
    "onload",
    "onloadend",
    "onloadstart",
    "onprogress",
    "progress",
    "readAsArrayBuffer(blob)",
    "readAsBinaryString(blob)",
    "readAsDataURL(blob)",
    "readAsText(blob)",
    "readAsText(blob, encoding)",
    "readyState",
    "result",
    "state"
  ],
  "FileReader/readAsArrayBuffer(blob)": [
    "blob"
  ],
  "FileReader/readAsBinaryString(blob)": [
    "blob"
  ],
  "FileReader/readAsDataURL(blob)": [
    "blob"
  ],
  "FileReader/readAsText(blob)": [
    "blob",
    "encoding"
  ],
  "FileReader/readAsText(blob, encoding)": [
    "blob",
    "encoding"
  ],
  "FileReaderSync": [
    "FileReaderSync()",
    "constructor()",
    "readAsArrayBuffer(blob)",
    "readAsBinaryString(blob)",
    "readAsDataURL(blob)",
    "readAsText(blob)",
    "readAsText(blob, encoding)"
  ],
  "FileReaderSync/readAsArrayBuffer(blob)": [
    "blob"
  ],
  "FileReaderSync/readAsBinaryString(blob)": [
    "blob"
  ],
  "FileReaderSync/readAsDataURL(blob)": [
    "blob"
  ],
  "FileReaderSync/readAsText(blob)": [
    "blob",
    "encoding"
  ],
  "FileReaderSync/readAsText(blob, encoding)": [
    "blob",
    "encoding"
  ],
  "FileSystem": [
    "name",
    "root"
  ],
  "FileSystemCreateWritableOptions": [
    "keepExistingData"
  ],
  "FileSystemDirectoryEntry": [
    "createReader()",
    "getDirectory()",
    "getDirectory(path)",
    "getDirectory(path, options)",
    "getDirectory(path, options, successCallback)",
    "getDirectory(path, options, successCallback, errorCallback)",
    "getFile()",
    "getFile(path)",
    "getFile(path, options)",
    "getFile(path, options, successCallback)",
    "getFile(path, options, successCallback, errorCallback)",
    "readEntries(successCallback, errorCallback)"
  ],
  "FileSystemDirectoryEntry/getDirectory()": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getDirectory(path)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getDirectory(path, options)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getDirectory(path, options, successCallback)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getDirectory(path, options, successCallback, errorCallback)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getFile()": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getFile(path)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getFile(path, options)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getFile(path, options, successCallback)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryEntry/getFile(path, options, successCallback, errorCallback)": [
    "errorCallback",
    "options",
    "path",
    "successCallback"
  ],
  "FileSystemDirectoryHandle": [
    "getDirectoryHandle(name)",
    "getDirectoryHandle(name, options)",
    "getFileHandle(name)",
    "getFileHandle(name, options)",
    "removeEntry(name)",
    "removeEntry(name, options)",
    "resolve(possibleDescendant)"
  ],
  "FileSystemDirectoryHandle-iterator": [
    "past results"
  ],
  "FileSystemDirectoryHandle/getDirectoryHandle(name)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/getDirectoryHandle(name, options)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/getFileHandle(name)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/getFileHandle(name, options)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/removeEntry(name)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/removeEntry(name, options)": [
    "name",
    "options"
  ],
  "FileSystemDirectoryHandle/resolve(possibleDescendant)": [
    "possibleDescendant"
  ],
  "FileSystemDirectoryReader": [
    "directory",
    "done flag",
    "entry",
    "readEntries(successCallback)",
    "readEntries(successCallback, errorCallback)",
    "reader error",
    "reading flag"
  ],
  "FileSystemDirectoryReader/readEntries(successCallback)": [
    "errorCallback",
    "successCallback"
  ],
  "FileSystemDirectoryReader/readEntries(successCallback, errorCallback)": [
    "errorCallback",
    "successCallback"
  ],
  "FileSystemEntriesCallback": [
    "entries"
  ],
  "FileSystemEntry": [
    "filesystem",
    "fullPath",
    "getParent()",
    "getParent(successCallback)",
    "getParent(successCallback, errorCallback)",
    "isDirectory",
    "isFile",
    "name"
  ],
  "FileSystemEntry/getParent()": [
    "errorCallback",
    "successCallback"
  ],
  "FileSystemEntry/getParent(successCallback)": [
    "errorCallback",
    "successCallback"
  ],
  "FileSystemEntry/getParent(successCallback, errorCallback)": [
    "errorCallback",
    "successCallback"
  ],
  "FileSystemEntryCallback": [
    "entry"
  ],
  "FileSystemFileEntry": [
    "file(successCallback)",
    "file(successCallback, errorCallback)"
  ],
  "FileSystemFileEntry/file(successCallback)": [
    "errorCallback",
    "successCallback"
  ],
  "FileSystemFileEntry/file(successCallback, errorCallback)": [
    "errorCallback",
    "successCallback"
  ],
  "FileSystemFileHandle": [
    "createSyncAccessHandle()",
    "createWritable()",
    "createWritable(options)",
    "getFile()"
  ],
  "FileSystemFileHandle/createWritable()": [
    "options"
  ],
  "FileSystemFileHandle/createWritable(options)": [
    "options"
  ],
  "FileSystemFlags": [
    "create",
    "exclusive"
  ],
  "FileSystemGetDirectoryOptions": [
    "create"
  ],
  "FileSystemGetFileOptions": [
    "create"
  ],
  "FileSystemHandle": [
    "is in a bucket file system",
    "isSameEntry(other)",
    "kind",
    "locator",
    "name",
    "queryPermission()",
    "queryPermission(descriptor)",
    "requestPermission()",
    "requestPermission(descriptor)"
  ],
  "FileSystemHandle/isSameEntry(other)": [
    "other"
  ],
  "FileSystemHandle/queryPermission()": [
    "descriptor"
  ],
  "FileSystemHandle/queryPermission(descriptor)": [
    "descriptor"
  ],
  "FileSystemHandle/requestPermission()": [
    "descriptor"
  ],
  "FileSystemHandle/requestPermission(descriptor)": [
    "descriptor"
  ],
  "FileSystemHandleKind": [
    "\"directory\"",
    "\"file\""
  ],
  "FileSystemHandlePermissionDescriptor": [
    "mode"
  ],
  "FileSystemPermissionDescriptor": [
    "handle",
    "mode"
  ],
  "FileSystemPermissionMode": [
    "\"read\"",
    "\"readwrite\""
  ],
  "FileSystemReadWriteOptions": [
    "at"
  ],
  "FileSystemRemoveOptions": [
    "recursive"
  ],
  "FileSystemSyncAccessHandle": [
    "[[file]]",
    "[[state]]",
    "close()",
    "file position cursor",
    "flush()",
    "getSize()",
    "read(buffer)",
    "read(buffer, FileSystemReadWriteOptions: options)",
    "read(buffer, options)",
    "truncate(newSize)",
    "write(buffer)",
    "write(buffer, FileSystemReadWriteOptions: options)",
    "write(buffer, options)"
  ],
  "FileSystemSyncAccessHandle/read(buffer)": [
    "buffer",
    "options"
  ],
  "FileSystemSyncAccessHandle/read(buffer, options)": [
    "buffer",
    "options"
  ],
  "FileSystemSyncAccessHandle/truncate(newSize)": [
    "newSize"
  ],
  "FileSystemSyncAccessHandle/write(buffer)": [
    "buffer",
    "options"
  ],
  "FileSystemSyncAccessHandle/write(buffer, options)": [
    "buffer",
    "options"
  ],
  "FileSystemWritableFileStream": [
    "[[buffer]]",
    "[[file]]",
    "[[seekoffset]]",
    "seek(position)",
    "truncate(size)",
    "write(data)"
  ],
  "FileSystemWritableFileStream/seek(position)": [
    "position"
  ],
  "FileSystemWritableFileStream/truncate(size)": [
    "size"
  ],
  "FileSystemWritableFileStream/write(data)": [
    "data"
  ],
  "FillLightMode": [
    "\"auto\"",
    "\"flash\"",
    "\"off\"",
    "auto",
    "flash",
    "off"
  ],
  "FillMode": [
    "\"auto\"",
    "\"backwards\"",
    "\"both\"",
    "\"forwards\"",
    "\"none\"",
    "auto",
    "backwards",
    "both",
    "forwards",
    "none"
  ],
  "FinalizationRegistry": [
    "FinalizationRegistry(cleanupCallback)",
    "register(target, heldValue, unregisterToken)",
    "unregister(unregisterToken)"
  ],
  "FlacEncoderConfig": [
    "blockSize",
    "compressLevel"
  ],
  "FlowControlType": [
    "hardware",
    "none"
  ],
  "FocusEvent": [
    "FocusEvent(type)",
    "FocusEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "relatedTarget"
  ],
  "FocusEvent/FocusEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "FocusEvent/FocusEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FocusEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "FocusEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FocusEventInit": [
    "relatedTarget"
  ],
  "FocusOptions": [
    "focusVisible",
    "preventScroll"
  ],
  "FocusableAreaSearchMode": [
    "\"all\"",
    "\"visible\""
  ],
  "FocusableAreasOption": [
    "mode"
  ],
  "Font": [
    "glyphsRendered",
    "name"
  ],
  "FontData": [
    "blob()",
    "family",
    "fullName",
    "postscriptName",
    "style"
  ],
  "FontFace": [
    "FontFace(family, source)",
    "FontFace(family, source, descriptors)",
    "[[Data]]",
    "[[FontStatusPromise]]",
    "[[Urls]]",
    "ascentOverride",
    "constructor(family, source)",
    "constructor(family, source, descriptors)",
    "descentOverride",
    "display",
    "family",
    "featureSettings",
    "features",
    "lineGapOverride",
    "load()",
    "loaded",
    "palettes",
    "status",
    "stretch",
    "style",
    "unicodeRange",
    "variant",
    "variationSettings",
    "variations",
    "weight"
  ],
  "FontFace/FontFace(family, source)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFace/FontFace(family, source, descriptors)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFace/constructor(family, source)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFace/constructor(family, source, descriptors)": [
    "descriptors",
    "family",
    "source"
  ],
  "FontFaceDescriptors": [
    "ascentOverride",
    "descentOverride",
    "display",
    "featureSettings",
    "lineGapOverride",
    "stretch",
    "style",
    "unicodeRange",
    "variant",
    "variationSettings",
    "weight"
  ],
  "FontFaceLoadStatus": [
    "\"error\"",
    "\"loaded\"",
    "\"loading\"",
    "\"unloaded\""
  ],
  "FontFacePalette": [
    "length",
    "usableWithDarkBackground",
    "usableWithLightBackground"
  ],
  "FontFacePalette/__getter__(index)": [
    "index"
  ],
  "FontFacePalettes": [
    "length"
  ],
  "FontFacePalettes/__getter__(index)": [
    "index"
  ],
  "FontFaceSet": [
    "FontFaceSet(initialFaces)",
    "[[FailedFonts]]",
    "[[LoadedFonts]]",
    "[[LoadingFonts]]",
    "[[ReadyPromise]]",
    "add(font)",
    "check(font)",
    "check(font, text)",
    "clear()",
    "constructor(initialFaces)",
    "delete(font)",
    "iteration order",
    "load(font)",
    "load(font, text)",
    "loading",
    "loadingdone",
    "loadingerror",
    "onloading",
    "onloadingdone",
    "onloadingerror",
    "pending on the environment",
    "ready",
    "set entries",
    "status",
    "stuck on the environment"
  ],
  "FontFaceSet/FontFaceSet(initialFaces)": [
    "initialFaces"
  ],
  "FontFaceSet/add(font)": [
    "font"
  ],
  "FontFaceSet/check(font, text)": [
    "font",
    "text"
  ],
  "FontFaceSet/constructor(initialFaces)": [
    "initialFaces"
  ],
  "FontFaceSet/delete(font)": [
    "font"
  ],
  "FontFaceSet/load(font, text)": [
    "font",
    "text"
  ],
  "FontFaceSetLoadEvent": [
    "FontFaceSetLoadEvent(type)",
    "FontFaceSetLoadEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "fontfaces"
  ],
  "FontFaceSetLoadEvent/FontFaceSetLoadEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEvent/FontFaceSetLoadEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "FontFaceSetLoadEventInit": [
    "fontfaces"
  ],
  "FontFaceSetLoadStatus": [
    "\"loaded\"",
    "\"loading\""
  ],
  "FontFaceSource": [
    "fonts"
  ],
  "FontFaceVariationAxis": [
    "axisTag",
    "defaultValue",
    "maximumValue",
    "minimumValue",
    "name"
  ],
  "FontMetrics": [
    "advances",
    "baselines",
    "boundingBoxAscent",
    "boundingBoxDescent",
    "boundingBoxLeft",
    "boundingBoxRight",
    "dominantBaseline",
    "emHeightAscent",
    "emHeightDescent",
    "fontBoundingBoxAscent",
    "fontBoundingBoxDescent",
    "fonts",
    "height",
    "width"
  ],
  "ForDebuggingOnly": [
    "reportAdAuctionLoss(url)",
    "reportAdAuctionWin(url)"
  ],
  "ForDebuggingOnly/reportAdAuctionLoss(url)": [
    "url"
  ],
  "ForDebuggingOnly/reportAdAuctionWin(url)": [
    "url"
  ],
  "FormData": [
    "FormData()",
    "FormData(form)",
    "FormData(form, submitter)",
    "append(name, blobValue)",
    "append(name, blobValue, filename)",
    "append(name, value)",
    "constructor()",
    "constructor(form)",
    "constructor(form, submitter)",
    "delete(name)",
    "entry list",
    "get(name)",
    "getAll(name)",
    "has(name)",
    "set(name, blobValue)",
    "set(name, blobValue, filename)",
    "set(name, value)"
  ],
  "FormData/FormData()": [
    "form",
    "submitter"
  ],
  "FormData/FormData(form)": [
    "form",
    "submitter"
  ],
  "FormData/FormData(form, submitter)": [
    "form",
    "submitter"
  ],
  "FormData/append(name, blobValue)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/append(name, blobValue, filename)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/append(name, value)": [
    "name",
    "value"
  ],
  "FormData/constructor()": [
    "form",
    "submitter"
  ],
  "FormData/constructor(form)": [
    "form",
    "submitter"
  ],
  "FormData/constructor(form, submitter)": [
    "form",
    "submitter"
  ],
  "FormData/delete(name)": [
    "name"
  ],
  "FormData/get(name)": [
    "name"
  ],
  "FormData/getAll(name)": [
    "name"
  ],
  "FormData/has(name)": [
    "name"
  ],
  "FormData/set(name, blobValue)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/set(name, blobValue, filename)": [
    "blobValue",
    "filename",
    "name"
  ],
  "FormData/set(name, value)": [
    "name",
    "value"
  ],
  "FormDataEvent": [
    "formData"
  ],
  "Format 1 Patch Map": [
    "appliedentriesbitmap",
    "compatibilityid",
    "entrycount",
    "featuremapoffset",
    "format",
    "glyphcount",
    "maxentryindex",
    "patchencoding",
    "uritemplate"
  ],
  "Format 2 Patch Map": [
    "compatibilityid",
    "defaultpatchencoding",
    "entries",
    "entrycount",
    "entryidstringdata",
    "format",
    "uritemplate"
  ],
  "Fragment": [
    "colors",
    "coveragemask",
    "depth",
    "destination"
  ],
  "FragmentDestination": [
    "position",
    "sampleindex"
  ],
  "FragmentResult": [
    "FragmentResult()",
    "FragmentResult(options)",
    "[[block size]]",
    "[[box]]",
    "[[child fragments]]",
    "[[data]]",
    "[[inline size]]",
    "[[internal break token]]",
    "[[unique id]]",
    "blockSize",
    "constructor()",
    "constructor(options)",
    "inlineSize"
  ],
  "FragmentResult/FragmentResult()": [
    "options"
  ],
  "FragmentResult/FragmentResult(options)": [
    "options"
  ],
  "FragmentResult/constructor()": [
    "options"
  ],
  "FragmentResult/constructor(options)": [
    "options"
  ],
  "FragmentResultOptions": [
    "autoBlockSize",
    "blockSize",
    "breakToken",
    "childFragments",
    "data",
    "inlineSize"
  ],
  "FrameType": [
    "\"auxiliary\"",
    "\"nested\"",
    "\"none\"",
    "\"top-level\""
  ],
  "FullscreenNavigationUI": [
    "\"auto\"",
    "\"hide\"",
    "\"show\"",
    "auto",
    "hide",
    "show"
  ],
  "FullscreenOptions": [
    "navigationUI",
    "screen"
  ],
  "Function": [
    "Function(...parameterArgs, bodyArg)",
    "apply(thisArg, argArray)",
    "arguments",
    "bind(thisArg, ...args)",
    "call(thisArg, ...args)",
    "toString()"
  ],
  "Function Environment Records": [
    "BindThisValue(V)",
    "GetSuperBase()",
    "GetThisBinding()",
    "HasSuperBinding()",
    "HasThisBinding()"
  ],
  "Function.prototype [ %Symbol.hasInstance% ] ( V )": [
    "Function.prototype %Symbol.hasInstance% (V)"
  ],
  "GPU": [
    "getPreferredCanvasFormat()",
    "requestAdapter()",
    "requestAdapter(options)",
    "wgslLanguageFeatures"
  ],
  "GPU error scope": [
    "[[errors]]",
    "[[filter]]"
  ],
  "GPU/requestAdapter(options)": [
    "options"
  ],
  "GPUAdapter": [
    "[[adapter]]",
    "features",
    "info",
    "isFallbackAdapter",
    "limits",
    "requestDevice()",
    "requestDevice(descriptor)"
  ],
  "GPUAdapter/requestDevice(descriptor)": [
    "descriptor"
  ],
  "GPUAdapterInfo": [
    "architecture",
    "description",
    "device",
    "vendor"
  ],
  "GPUAddressMode": [
    "\"clamp-to-edge\"",
    "\"mirror-repeat\"",
    "\"repeat\""
  ],
  "GPUAutoLayoutMode": [
    "\"auto\""
  ],
  "GPUBindGroup": [
    "[[entries]]",
    "[[layout]]",
    "[[usedResources]]",
    "bound buffer ranges"
  ],
  "GPUBindGroupDescriptor": [
    "entries",
    "layout"
  ],
  "GPUBindGroupEntry": [
    "[[prevalidatedSize]]",
    "binding",
    "resource"
  ],
  "GPUBindGroupLayout": [
    "[[descriptor]]",
    "[[dynamicOffsetCount]]",
    "[[entryMap]]",
    "[[exclusivePipeline]]"
  ],
  "GPUBindGroupLayoutDescriptor": [
    "entries"
  ],
  "GPUBindGroupLayoutEntry": [
    "binding",
    "buffer",
    "externalTexture",
    "sampler",
    "storageTexture",
    "texture",
    "visibility"
  ],
  "GPUBindingCommandsMixin": [
    "[[bind_groups]]",
    "[[dynamic_offsets]]",
    "setBindGroup(index, bindGroup)",
    "setBindGroup(index, bindGroup, dynamicOffsets)",
    "setBindGroup(index, bindGroup, dynamicOffsetsData, dynamicOffsetsDataStart, dynamicOffsetsDataLength)",
    "setbindgroup()"
  ],
  "GPUBindingCommandsMixin/setBindGroup(index, bindGroup, dynamicOffsets)": [
    "bindGroup",
    "dynamicOffsets",
    "index"
  ],
  "GPUBindingCommandsMixin/setBindGroup(index, bindGroup, dynamicOffsetsData, dynamicOffsetsDataStart, dynamicOffsetsDataLength)": [
    "bindGroup",
    "dynamicOffsetsData",
    "dynamicOffsetsDataLength",
    "dynamicOffsetsDataStart",
    "index"
  ],
  "GPUBlendComponent": [
    "dstFactor",
    "operation",
    "srcFactor"
  ],
  "GPUBlendFactor": [
    "\"constant\"",
    "\"dst\"",
    "\"dst-alpha\"",
    "\"one\"",
    "\"one-minus-constant\"",
    "\"one-minus-dst\"",
    "\"one-minus-dst-alpha\"",
    "\"one-minus-src\"",
    "\"one-minus-src-alpha\"",
    "\"one-minus-src1\"",
    "\"one-minus-src1-alpha\"",
    "\"src\"",
    "\"src-alpha\"",
    "\"src-alpha-saturated\"",
    "\"src1\"",
    "\"src1-alpha\"",
    "\"zero\""
  ],
  "GPUBlendOperation": [
    "\"add\"",
    "\"max\"",
    "\"min\"",
    "\"reverse-subtract\"",
    "\"subtract\""
  ],
  "GPUBlendState": [
    "alpha",
    "color"
  ],
  "GPUBuffer": [
    "[[internal state]]",
    "[[mapping]]",
    "[[pending_map]]",
    "destroy()",
    "getMappedRange()",
    "getMappedRange(offset)",
    "getMappedRange(offset, size)",
    "mapAsync(mode)",
    "mapAsync(mode, offset)",
    "mapAsync(mode, offset, size)",
    "mapState",
    "size",
    "unmap()",
    "usage"
  ],
  "GPUBuffer/[[internal state]]": [
    "available",
    "destroyed",
    "unavailable"
  ],
  "GPUBuffer/getMappedRange(offset, size)": [
    "offset",
    "size"
  ],
  "GPUBuffer/mapAsync(mode, offset, size)": [
    "mode",
    "offset",
    "size"
  ],
  "GPUBufferBinding": [
    "buffer",
    "offset",
    "size"
  ],
  "GPUBufferBindingLayout": [
    "hasDynamicOffset",
    "minBindingSize",
    "type"
  ],
  "GPUBufferBindingType": [
    "\"read-only-storage\"",
    "\"storage\"",
    "\"uniform\""
  ],
  "GPUBufferDescriptor": [
    "mappedAtCreation",
    "size",
    "usage"
  ],
  "GPUBufferMapState": [
    "\"mapped\"",
    "\"pending\"",
    "\"unmapped\""
  ],
  "GPUBufferUsage": [
    "COPY_DST",
    "COPY_SRC",
    "INDEX",
    "INDIRECT",
    "MAP_READ",
    "MAP_WRITE",
    "QUERY_RESOLVE",
    "STORAGE",
    "UNIFORM",
    "VERTEX"
  ],
  "GPUCanvasAlphaMode": [
    "\"opaque\"",
    "\"premultiplied\""
  ],
  "GPUCanvasConfiguration": [
    "alphaMode",
    "colorSpace",
    "device",
    "format",
    "toneMapping",
    "usage",
    "viewFormats"
  ],
  "GPUCanvasContext": [
    "[[configuration]]",
    "[[currentTexture]]",
    "[[drawingBuffer]]",
    "[[textureDescriptor]]",
    "canvas",
    "configure(configuration)",
    "getCurrentTexture()",
    "unconfigure()"
  ],
  "GPUCanvasContext/configure(configuration)": [
    "configuration"
  ],
  "GPUCanvasToneMapping": [
    "mode"
  ],
  "GPUCanvasToneMappingMode": [
    "\"extended\"",
    "\"standard\""
  ],
  "GPUColor": [
    "a",
    "b",
    "g",
    "r"
  ],
  "GPUColorDict": [
    "a",
    "b",
    "g",
    "r"
  ],
  "GPUColorTargetState": [
    "blend",
    "format",
    "writeMask"
  ],
  "GPUColorWrite": [
    "ALL",
    "ALPHA",
    "BLUE",
    "GREEN",
    "RED"
  ],
  "GPUCommandBuffer": [
    "[[command_list]]",
    "[[renderState]]"
  ],
  "GPUCommandEncoder": [
    "beginComputePass()",
    "beginComputePass(descriptor)",
    "beginRenderPass(descriptor)",
    "clearBuffer(buffer)",
    "clearBuffer(buffer, offset)",
    "clearBuffer(buffer, offset, size)",
    "copyBufferToBuffer(source, sourceOffset, destination, destinationOffset, size)",
    "copyBufferToTexture(source, destination, copySize)",
    "copyTextureToBuffer(source, destination, copySize)",
    "copyTextureToTexture(source, destination, copySize)",
    "finish()",
    "finish(descriptor)",
    "resolveQuerySet(querySet, firstQuery, queryCount, destination, destinationOffset)"
  ],
  "GPUCommandEncoder/beginComputePass(descriptor)": [
    "descriptor"
  ],
  "GPUCommandEncoder/beginRenderPass(descriptor)": [
    "descriptor"
  ],
  "GPUCommandEncoder/clearBuffer(buffer, offset, size)": [
    "buffer",
    "offset",
    "size"
  ],
  "GPUCommandEncoder/copyBufferToBuffer(source, sourceOffset, destination, destinationOffset, size)": [
    "destination",
    "destinationOffset",
    "size",
    "source",
    "sourceOffset"
  ],
  "GPUCommandEncoder/copyBufferToTexture(source, destination, copySize)": [
    "copySize",
    "destination",
    "source"
  ],
  "GPUCommandEncoder/copyTextureToBuffer(source, destination, copySize)": [
    "copySize",
    "destination",
    "source"
  ],
  "GPUCommandEncoder/copyTextureToTexture(source, destination, copySize)": [
    "copySize",
    "destination",
    "source"
  ],
  "GPUCommandEncoder/finish(descriptor)": [
    "descriptor"
  ],
  "GPUCommandEncoder/resolveQuerySet(querySet, firstQuery, queryCount, destination, destinationOffset)": [
    "destination",
    "destinationOffset",
    "firstQuery",
    "queryCount",
    "querySet"
  ],
  "GPUCommandsMixin": [
    "[[commands]]",
    "[[state]]"
  ],
  "GPUCompareFunction": [
    "\"always\"",
    "\"equal\"",
    "\"greater\"",
    "\"greater-equal\"",
    "\"less\"",
    "\"less-equal\"",
    "\"never\"",
    "\"not-equal\""
  ],
  "GPUCompilationInfo": [
    "messages"
  ],
  "GPUCompilationMessage": [
    "length",
    "lineNum",
    "linePos",
    "message",
    "offset",
    "type"
  ],
  "GPUCompilationMessageType": [
    "\"error\"",
    "\"info\"",
    "\"warning\""
  ],
  "GPUComputePassDescriptor": [
    "timestampWrites"
  ],
  "GPUComputePassEncoder": [
    "[[command_encoder]]",
    "[[endTimestampWrite]]",
    "[[pipeline]]",
    "dispatchWorkgroups(workgroupCountX)",
    "dispatchWorkgroups(workgroupCountX, workgroupCountY)",
    "dispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ)",
    "dispatchWorkgroupsIndirect(indirectBuffer, indirectOffset)",
    "end()",
    "setPipeline(pipeline)"
  ],
  "GPUComputePassEncoder/dispatchWorkgroups(workgroupCountX, workgroupCountY, workgroupCountZ)": [
    "workgroupCountX",
    "workgroupCountY",
    "workgroupCountZ"
  ],
  "GPUComputePassEncoder/dispatchWorkgroupsIndirect(indirectBuffer, indirectOffset)": [
    "indirectBuffer",
    "indirectOffset"
  ],
  "GPUComputePassEncoder/setPipeline(pipeline)": [
    "pipeline"
  ],
  "GPUComputePassTimestampWrites": [
    "beginningOfPassWriteIndex",
    "endOfPassWriteIndex",
    "querySet"
  ],
  "GPUComputePipelineDescriptor": [
    "compute"
  ],
  "GPUCullMode": [
    "\"back\"",
    "\"front\"",
    "\"none\""
  ],
  "GPUDebugCommandsMixin": [
    "[[debug_group_stack]]",
    "insertDebugMarker(markerLabel)",
    "popDebugGroup()",
    "pushDebugGroup(groupLabel)"
  ],
  "GPUDebugCommandsMixin/insertDebugMarker(markerLabel)": [
    "markerLabel"
  ],
  "GPUDebugCommandsMixin/pushDebugGroup(groupLabel)": [
    "groupLabel"
  ],
  "GPUDepthStencilState": [
    "depthBias",
    "depthBiasClamp",
    "depthBiasSlopeScale",
    "depthCompare",
    "depthWriteEnabled",
    "format",
    "stencilBack",
    "stencilFront",
    "stencilReadMask",
    "stencilWriteMask"
  ],
  "GPUDevice": [
    "[[errorScopeStack]]",
    "createBindGroup(descriptor)",
    "createBindGroupLayout(descriptor)",
    "createBuffer(descriptor)",
    "createCommandEncoder()",
    "createCommandEncoder(descriptor)",
    "createComputePipeline(descriptor)",
    "createComputePipelineAsync(descriptor)",
    "createPipelineLayout(descriptor)",
    "createQuerySet(descriptor)",
    "createRenderBundleEncoder(descriptor)",
    "createRenderPipeline(descriptor)",
    "createRenderPipelineAsync(descriptor)",
    "createSampler()",
    "createSampler(descriptor)",
    "createShaderModule(descriptor)",
    "createTexture(descriptor)",
    "destroy()",
    "features",
    "importExternalTexture(descriptor)",
    "limits",
    "lost",
    "onuncapturederror",
    "popErrorScope()",
    "pushErrorScope(filter)",
    "queue",
    "uncapturederror"
  ],
  "GPUDevice/createBindGroup(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createBindGroupLayout(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createBuffer(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createCommandEncoder(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createComputePipeline(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createComputePipelineAsync(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createPipelineLayout(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createQuerySet(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createRenderBundleEncoder(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createRenderPipeline(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createRenderPipelineAsync(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createSampler(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createShaderModule(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/createTexture(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/importExternalTexture(descriptor)": [
    "descriptor"
  ],
  "GPUDevice/pushErrorScope(filter)": [
    "filter"
  ],
  "GPUDeviceDescriptor": [
    "defaultQueue",
    "requiredFeatures",
    "requiredLimits"
  ],
  "GPUDeviceLostInfo": [
    "message",
    "reason"
  ],
  "GPUDeviceLostReason": [
    "\"destroyed\"",
    "\"unknown\""
  ],
  "GPUError": [
    "message"
  ],
  "GPUErrorFilter": [
    "\"internal\"",
    "\"out-of-memory\"",
    "\"validation\""
  ],
  "GPUExtent3D": [
    "depthorarraylayers",
    "height",
    "width"
  ],
  "GPUExtent3DDict": [
    "depthOrArrayLayers",
    "height",
    "width"
  ],
  "GPUExternalTexture": [
    "[[descriptor]]",
    "[[expired]]"
  ],
  "GPUExternalTextureDescriptor": [
    "colorSpace",
    "source"
  ],
  "GPUFeatureName": [
    "\"bgra8unorm-storage\"",
    "\"clip-distances\"",
    "\"depth-clip-control\"",
    "\"depth32float-stencil8\"",
    "\"dual-source-blending\"",
    "\"float32-filterable\"",
    "\"indirect-first-instance\"",
    "\"rg11b10ufloat-renderable\"",
    "\"shader-f16\"",
    "\"texture-compression-astc\"",
    "\"texture-compression-bc\"",
    "\"texture-compression-bc-sliced-3d\"",
    "\"texture-compression-etc2\"",
    "\"timestamp-query\""
  ],
  "GPUFilterMode": [
    "\"linear\"",
    "\"nearest\""
  ],
  "GPUFragmentState": [
    "targets"
  ],
  "GPUFrontFace": [
    "\"ccw\"",
    "\"cw\""
  ],
  "GPUImageCopyBuffer": [
    "buffer"
  ],
  "GPUImageCopyExternalImage": [
    "flipY",
    "origin",
    "source"
  ],
  "GPUImageCopyTexture": [
    "aspect",
    "mipLevel",
    "origin",
    "texture"
  ],
  "GPUImageCopyTextureTagged": [
    "colorSpace",
    "premultipliedAlpha"
  ],
  "GPUImageDataLayout": [
    "bytesPerRow",
    "offset",
    "rowsPerImage"
  ],
  "GPUIndexFormat": [
    "\"uint16\"",
    "\"uint32\""
  ],
  "GPUInternalError": [
    "GPUInternalError(message)",
    "constructor(message)"
  ],
  "GPUInternalError/GPUInternalError(message)": [
    "message"
  ],
  "GPUInternalError/constructor(message)": [
    "message"
  ],
  "GPULoadOp": [
    "\"clear\"",
    "\"load\""
  ],
  "GPUMapMode": [
    "READ",
    "WRITE"
  ],
  "GPUMipmapFilterMode": [
    "\"linear\"",
    "\"nearest\""
  ],
  "GPUMultisampleState": [
    "alphaToCoverageEnabled",
    "count",
    "mask"
  ],
  "GPUObjectBase": [
    "[[device]]",
    "[[valid]]",
    "label"
  ],
  "GPUObjectDescriptorBase": [
    "label"
  ],
  "GPUOrigin2D": [
    "x",
    "y"
  ],
  "GPUOrigin2DDict": [
    "x",
    "y"
  ],
  "GPUOrigin3D": [
    "x",
    "y",
    "z"
  ],
  "GPUOrigin3DDict": [
    "x",
    "y",
    "z"
  ],
  "GPUOutOfMemoryError": [
    "GPUOutOfMemoryError(message)",
    "constructor(message)"
  ],
  "GPUOutOfMemoryError/GPUOutOfMemoryError(message)": [
    "message"
  ],
  "GPUOutOfMemoryError/constructor(message)": [
    "message"
  ],
  "GPUPipelineBase": [
    "[[layout]]",
    "getBindGroupLayout(index)"
  ],
  "GPUPipelineBase/getBindGroupLayout(index)": [
    "index"
  ],
  "GPUPipelineDescriptorBase": [
    "layout"
  ],
  "GPUPipelineError": [
    "GPUPipelineError()",
    "GPUPipelineError(message)",
    "GPUPipelineError(message, options)",
    "constructor()",
    "constructor(message)",
    "constructor(message, options)",
    "reason"
  ],
  "GPUPipelineError/constructor()": [
    "message",
    "options"
  ],
  "GPUPipelineErrorInit": [
    "reason"
  ],
  "GPUPipelineErrorReason": [
    "\"internal\"",
    "\"validation\""
  ],
  "GPUPipelineLayout": [
    "[[bindGroupLayouts]]"
  ],
  "GPUPipelineLayoutDescriptor": [
    "bindGroupLayouts"
  ],
  "GPUPowerPreference": [
    "\"high-performance\"",
    "\"low-power\""
  ],
  "GPUPrimitiveState": [
    "cullMode",
    "frontFace",
    "stripIndexFormat",
    "topology",
    "unclippedDepth"
  ],
  "GPUPrimitiveTopology": [
    "\"line-list\"",
    "\"line-strip\"",
    "\"point-list\"",
    "\"triangle-list\"",
    "\"triangle-strip\""
  ],
  "GPUProgrammableStage": [
    "constants",
    "entryPoint",
    "module"
  ],
  "GPUQuerySet": [
    "[[destroyed]]",
    "count",
    "destroy()",
    "type"
  ],
  "GPUQuerySetDescriptor": [
    "count",
    "type"
  ],
  "GPUQueryType": [
    "\"occlusion\"",
    "\"timestamp\""
  ],
  "GPUQueue": [
    "copyExternalImageToTexture(source, destination, copySize)",
    "onSubmittedWorkDone()",
    "submit(commandBuffers)",
    "writeBuffer(buffer, bufferOffset, data)",
    "writeBuffer(buffer, bufferOffset, data, dataOffset)",
    "writeBuffer(buffer, bufferOffset, data, dataOffset, size)",
    "writeTexture(destination, data, dataLayout, size)"
  ],
  "GPUQueue/copyExternalImageToTexture(source, destination, copySize)": [
    "copySize",
    "destination",
    "source"
  ],
  "GPUQueue/submit(commandBuffers)": [
    "commandBuffers"
  ],
  "GPUQueue/writeBuffer(buffer, bufferOffset, data, dataOffset, size)": [
    "buffer",
    "bufferOffset",
    "data",
    "dataOffset",
    "size"
  ],
  "GPUQueue/writeTexture(destination, data, dataLayout, size)": [
    "data",
    "dataLayout",
    "destination",
    "size"
  ],
  "GPURenderBundle": [
    "[[command_list]]",
    "[[depthReadOnly]]",
    "[[drawCount]]",
    "[[layout]]",
    "[[stencilReadOnly]]",
    "[[usage scope]]"
  ],
  "GPURenderBundleEncoder": [
    "finish()",
    "finish(descriptor)"
  ],
  "GPURenderBundleEncoder/finish(descriptor)": [
    "descriptor"
  ],
  "GPURenderBundleEncoderDescriptor": [
    "depthReadOnly",
    "stencilReadOnly"
  ],
  "GPURenderCommandsMixin": [
    "[[depthReadOnly]]",
    "[[drawCount]]",
    "[[index_buffer]]",
    "[[index_buffer_offset]]",
    "[[index_buffer_size]]",
    "[[index_format]]",
    "[[layout]]",
    "[[pipeline]]",
    "[[stencilReadOnly]]",
    "[[usage scope]]",
    "[[vertex_buffer_sizes]]",
    "[[vertex_buffers]]",
    "draw(vertexCount)",
    "draw(vertexCount, instanceCount)",
    "draw(vertexCount, instanceCount, firstVertex)",
    "draw(vertexCount, instanceCount, firstVertex, firstInstance)",
    "drawIndexed(indexCount)",
    "drawIndexed(indexCount, instanceCount)",
    "drawIndexed(indexCount, instanceCount, firstIndex)",
    "drawIndexed(indexCount, instanceCount, firstIndex, baseVertex)",
    "drawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance)",
    "drawIndexedIndirect(indirectBuffer, indirectOffset)",
    "drawIndirect(indirectBuffer, indirectOffset)",
    "setIndexBuffer(buffer, indexFormat)",
    "setIndexBuffer(buffer, indexFormat, offset)",
    "setIndexBuffer(buffer, indexFormat, offset, size)",
    "setPipeline(pipeline)",
    "setVertexBuffer(slot, buffer)",
    "setVertexBuffer(slot, buffer, offset)",
    "setVertexBuffer(slot, buffer, offset, size)"
  ],
  "GPURenderCommandsMixin/draw(vertexCount, instanceCount, firstVertex, firstInstance)": [
    "firstInstance",
    "firstVertex",
    "instanceCount",
    "vertexCount"
  ],
  "GPURenderCommandsMixin/drawIndexed(indexCount, instanceCount, firstIndex, baseVertex, firstInstance)": [
    "baseVertex",
    "firstIndex",
    "firstInstance",
    "indexCount",
    "instanceCount"
  ],
  "GPURenderCommandsMixin/drawIndexedIndirect(indirectBuffer, indirectOffset)": [
    "indirectBuffer",
    "indirectOffset"
  ],
  "GPURenderCommandsMixin/drawIndirect(indirectBuffer, indirectOffset)": [
    "indirectBuffer",
    "indirectOffset"
  ],
  "GPURenderCommandsMixin/setIndexBuffer(buffer, indexFormat, offset, size)": [
    "buffer",
    "indexFormat",
    "offset",
    "size"
  ],
  "GPURenderCommandsMixin/setPipeline(pipeline)": [
    "pipeline"
  ],
  "GPURenderCommandsMixin/setVertexBuffer(slot, buffer, offset, size)": [
    "buffer",
    "offset",
    "size",
    "slot"
  ],
  "GPURenderPassColorAttachment": [
    "GPURenderPassColorAttachment Valid Usage",
    "clearValue",
    "depthSlice",
    "loadOp",
    "resolveTarget",
    "storeOp",
    "view"
  ],
  "GPURenderPassDepthStencilAttachment": [
    "GPURenderPassDepthStencilAttachment Valid Usage",
    "depthClearValue",
    "depthLoadOp",
    "depthReadOnly",
    "depthStoreOp",
    "stencilClearValue",
    "stencilLoadOp",
    "stencilReadOnly",
    "stencilStoreOp",
    "view"
  ],
  "GPURenderPassDescriptor": [
    "Valid Usage",
    "colorAttachments",
    "depthStencilAttachment",
    "maxDrawCount",
    "occlusionQuerySet",
    "timestampWrites"
  ],
  "GPURenderPassEncoder": [
    "[[attachment_size]]",
    "[[command_encoder]]",
    "[[endTimestampWrite]]",
    "[[maxDrawCount]]",
    "[[occlusion_query_active]]",
    "[[occlusion_query_set]]",
    "beginOcclusionQuery(queryIndex)",
    "end()",
    "endOcclusionQuery()",
    "executeBundles(bundles)",
    "setBlendConstant(color)",
    "setScissorRect(x, y, width, height)",
    "setStencilReference(reference)",
    "setViewport(x, y, width, height, minDepth, maxDepth)"
  ],
  "GPURenderPassEncoder/beginOcclusionQuery(queryIndex)": [
    "queryIndex"
  ],
  "GPURenderPassEncoder/executeBundles(bundles)": [
    "bundles"
  ],
  "GPURenderPassEncoder/setBlendConstant(color)": [
    "color"
  ],
  "GPURenderPassEncoder/setScissorRect(x, y, width, height)": [
    "height",
    "width",
    "x",
    "y"
  ],
  "GPURenderPassEncoder/setStencilReference(reference)": [
    "reference"
  ],
  "GPURenderPassEncoder/setViewport(x, y, width, height, minDepth, maxDepth)": [
    "height",
    "maxDepth",
    "minDepth",
    "width",
    "x",
    "y"
  ],
  "GPURenderPassLayout": [
    "colorFormats",
    "depthStencilFormat",
    "sampleCount"
  ],
  "GPURenderPassTimestampWrites": [
    "beginningOfPassWriteIndex",
    "endOfPassWriteIndex",
    "querySet"
  ],
  "GPURenderPipeline": [
    "[[descriptor]]",
    "[[writesDepth]]",
    "[[writesStencil]]"
  ],
  "GPURenderPipelineDescriptor": [
    "depthStencil",
    "fragment",
    "multisample",
    "primitive",
    "vertex"
  ],
  "GPURequestAdapterOptions": [
    "forceFallbackAdapter",
    "powerPreference"
  ],
  "GPUSampler": [
    "[[descriptor]]",
    "[[isComparison]]",
    "[[isFiltering]]"
  ],
  "GPUSamplerBindingLayout": [
    "type"
  ],
  "GPUSamplerBindingType": [
    "\"comparison\"",
    "\"filtering\"",
    "\"non-filtering\""
  ],
  "GPUSamplerDescriptor": [
    "addressModeU",
    "addressModeV",
    "addressModeW",
    "compare",
    "lodMaxClamp",
    "lodMinClamp",
    "magFilter",
    "maxAnisotropy",
    "minFilter",
    "mipmapFilter"
  ],
  "GPUShaderModule": [
    "getCompilationInfo()"
  ],
  "GPUShaderModuleCompilationHint": [
    "entryPoint",
    "layout"
  ],
  "GPUShaderModuleDescriptor": [
    "code",
    "compilationHints",
    "sourceMap"
  ],
  "GPUShaderStage": [
    "COMPUTE",
    "FRAGMENT",
    "VERTEX"
  ],
  "GPUStencilFaceState": [
    "compare",
    "depthFailOp",
    "failOp",
    "passOp"
  ],
  "GPUStencilOperation": [
    "\"decrement-clamp\"",
    "\"decrement-wrap\"",
    "\"increment-clamp\"",
    "\"increment-wrap\"",
    "\"invert\"",
    "\"keep\"",
    "\"replace\"",
    "\"zero\""
  ],
  "GPUStorageTextureAccess": [
    "\"read-only\"",
    "\"read-write\"",
    "\"write-only\""
  ],
  "GPUStorageTextureBindingLayout": [
    "access",
    "format",
    "viewDimension"
  ],
  "GPUStoreOp": [
    "\"discard\"",
    "\"store\""
  ],
  "GPUSupportedLimits": [
    "maxBindGroups",
    "maxBindGroupsPlusVertexBuffers",
    "maxBindingsPerBindGroup",
    "maxBufferSize",
    "maxColorAttachmentBytesPerSample",
    "maxColorAttachments",
    "maxComputeInvocationsPerWorkgroup",
    "maxComputeWorkgroupSizeX",
    "maxComputeWorkgroupSizeY",
    "maxComputeWorkgroupSizeZ",
    "maxComputeWorkgroupStorageSize",
    "maxComputeWorkgroupsPerDimension",
    "maxDynamicStorageBuffersPerPipelineLayout",
    "maxDynamicUniformBuffersPerPipelineLayout",
    "maxInterStageShaderComponents",
    "maxInterStageShaderVariables",
    "maxSampledTexturesPerShaderStage",
    "maxSamplersPerShaderStage",
    "maxStorageBufferBindingSize",
    "maxStorageBuffersPerShaderStage",
    "maxStorageTexturesPerShaderStage",
    "maxTextureArrayLayers",
    "maxTextureDimension1D",
    "maxTextureDimension2D",
    "maxTextureDimension3D",
    "maxUniformBufferBindingSize",
    "maxUniformBuffersPerShaderStage",
    "maxVertexAttributes",
    "maxVertexBufferArrayStride",
    "maxVertexBuffers",
    "minStorageBufferOffsetAlignment",
    "minUniformBufferOffsetAlignment"
  ],
  "GPUTexture": [
    "[[destroyed]]",
    "[[viewFormats]]",
    "createView()",
    "createView(descriptor)",
    "depthOrArrayLayers",
    "destroy()",
    "dimension",
    "format",
    "height",
    "mipLevelCount",
    "sampleCount",
    "usage",
    "width"
  ],
  "GPUTexture/createView(descriptor)": [
    "descriptor"
  ],
  "GPUTextureAspect": [
    "\"all\"",
    "\"depth-only\"",
    "\"stencil-only\"",
    "set of aspects"
  ],
  "GPUTextureBindingLayout": [
    "multisampled",
    "sampleType",
    "viewDimension"
  ],
  "GPUTextureDescriptor": [
    "dimension",
    "format",
    "mipLevelCount",
    "sampleCount",
    "size",
    "usage",
    "viewFormats"
  ],
  "GPUTextureDimension": [
    "\"1d\"",
    "\"2d\"",
    "\"3d\""
  ],
  "GPUTextureFormat": [
    "\"astc-10x10-unorm\"",
    "\"astc-10x10-unorm-srgb\"",
    "\"astc-10x5-unorm\"",
    "\"astc-10x5-unorm-srgb\"",
    "\"astc-10x6-unorm\"",
    "\"astc-10x6-unorm-srgb\"",
    "\"astc-10x8-unorm\"",
    "\"astc-10x8-unorm-srgb\"",
    "\"astc-12x10-unorm\"",
    "\"astc-12x10-unorm-srgb\"",
    "\"astc-12x12-unorm\"",
    "\"astc-12x12-unorm-srgb\"",
    "\"astc-4x4-unorm\"",
    "\"astc-4x4-unorm-srgb\"",
    "\"astc-5x4-unorm\"",
    "\"astc-5x4-unorm-srgb\"",
    "\"astc-5x5-unorm\"",
    "\"astc-5x5-unorm-srgb\"",
    "\"astc-6x5-unorm\"",
    "\"astc-6x5-unorm-srgb\"",
    "\"astc-6x6-unorm\"",
    "\"astc-6x6-unorm-srgb\"",
    "\"astc-8x5-unorm\"",
    "\"astc-8x5-unorm-srgb\"",
    "\"astc-8x6-unorm\"",
    "\"astc-8x6-unorm-srgb\"",
    "\"astc-8x8-unorm\"",
    "\"astc-8x8-unorm-srgb\"",
    "\"bc1-rgba-unorm\"",
    "\"bc1-rgba-unorm-srgb\"",
    "\"bc2-rgba-unorm\"",
    "\"bc2-rgba-unorm-srgb\"",
    "\"bc3-rgba-unorm\"",
    "\"bc3-rgba-unorm-srgb\"",
    "\"bc4-r-snorm\"",
    "\"bc4-r-unorm\"",
    "\"bc5-rg-snorm\"",
    "\"bc5-rg-unorm\"",
    "\"bc6h-rgb-float\"",
    "\"bc6h-rgb-ufloat\"",
    "\"bc7-rgba-unorm\"",
    "\"bc7-rgba-unorm-srgb\"",
    "\"bgra8unorm\"",
    "\"bgra8unorm-srgb\"",
    "\"depth16unorm\"",
    "\"depth24plus\"",
    "\"depth24plus-stencil8\"",
    "\"depth32float\"",
    "\"depth32float-stencil8\"",
    "\"eac-r11snorm\"",
    "\"eac-r11unorm\"",
    "\"eac-rg11snorm\"",
    "\"eac-rg11unorm\"",
    "\"etc2-rgb8a1unorm\"",
    "\"etc2-rgb8a1unorm-srgb\"",
    "\"etc2-rgb8unorm\"",
    "\"etc2-rgb8unorm-srgb\"",
    "\"etc2-rgba8unorm\"",
    "\"etc2-rgba8unorm-srgb\"",
    "\"r16float\"",
    "\"r16sint\"",
    "\"r16uint\"",
    "\"r32float\"",
    "\"r32sint\"",
    "\"r32uint\"",
    "\"r8sint\"",
    "\"r8snorm\"",
    "\"r8uint\"",
    "\"r8unorm\"",
    "\"rg11b10ufloat\"",
    "\"rg16float\"",
    "\"rg16sint\"",
    "\"rg16uint\"",
    "\"rg32float\"",
    "\"rg32sint\"",
    "\"rg32uint\"",
    "\"rg8sint\"",
    "\"rg8snorm\"",
    "\"rg8uint\"",
    "\"rg8unorm\"",
    "\"rgb10a2uint\"",
    "\"rgb10a2unorm\"",
    "\"rgb9e5ufloat\"",
    "\"rgba16float\"",
    "\"rgba16sint\"",
    "\"rgba16uint\"",
    "\"rgba32float\"",
    "\"rgba32sint\"",
    "\"rgba32uint\"",
    "\"rgba8sint\"",
    "\"rgba8snorm\"",
    "\"rgba8uint\"",
    "\"rgba8unorm\"",
    "\"rgba8unorm-srgb\"",
    "\"stencil8\""
  ],
  "GPUTextureSampleType": [
    "\"depth\"",
    "\"float\"",
    "\"sint\"",
    "\"uint\"",
    "\"unfilterable-float\""
  ],
  "GPUTextureUsage": [
    "COPY_DST",
    "COPY_SRC",
    "RENDER_ATTACHMENT",
    "STORAGE_BINDING",
    "TEXTURE_BINDING"
  ],
  "GPUTextureView": [
    "[[descriptor]]",
    "[[renderExtent]]",
    "[[texture]]",
    "subresources"
  ],
  "GPUTextureViewDescriptor": [
    "arrayLayerCount",
    "aspect",
    "baseArrayLayer",
    "baseMipLevel",
    "dimension",
    "format",
    "mipLevelCount"
  ],
  "GPUTextureViewDimension": [
    "\"1d\"",
    "\"2d\"",
    "\"2d-array\"",
    "\"3d\"",
    "\"cube\"",
    "\"cube-array\""
  ],
  "GPUUncapturedErrorEvent": [
    "GPUUncapturedErrorEvent(type, gpuUncapturedErrorEventInitDict)",
    "constructor(type, gpuUncapturedErrorEventInitDict)",
    "error"
  ],
  "GPUUncapturedErrorEvent/GPUUncapturedErrorEvent(type, gpuUncapturedErrorEventInitDict)": [
    "gpuUncapturedErrorEventInitDict",
    "type"
  ],
  "GPUUncapturedErrorEvent/constructor(type, gpuUncapturedErrorEventInitDict)": [
    "gpuUncapturedErrorEventInitDict",
    "type"
  ],
  "GPUUncapturedErrorEventInit": [
    "error"
  ],
  "GPUValidationError": [
    "GPUValidationError(message)",
    "constructor(message)"
  ],
  "GPUValidationError/GPUValidationError(message)": [
    "message"
  ],
  "GPUValidationError/constructor(message)": [
    "message"
  ],
  "GPUVertexAttribute": [
    "format",
    "offset",
    "shaderLocation"
  ],
  "GPUVertexBufferLayout": [
    "arrayStride",
    "attributes",
    "stepMode"
  ],
  "GPUVertexFormat": [
    "\"float16x2\"",
    "\"float16x4\"",
    "\"float32\"",
    "\"float32x2\"",
    "\"float32x3\"",
    "\"float32x4\"",
    "\"sint16x2\"",
    "\"sint16x4\"",
    "\"sint32\"",
    "\"sint32x2\"",
    "\"sint32x3\"",
    "\"sint32x4\"",
    "\"sint8x2\"",
    "\"sint8x4\"",
    "\"snorm16x2\"",
    "\"snorm16x4\"",
    "\"snorm8x2\"",
    "\"snorm8x4\"",
    "\"uint16x2\"",
    "\"uint16x4\"",
    "\"uint32\"",
    "\"uint32x2\"",
    "\"uint32x3\"",
    "\"uint32x4\"",
    "\"uint8x2\"",
    "\"uint8x4\"",
    "\"unorm10-10-10-2\"",
    "\"unorm16x2\"",
    "\"unorm16x4\"",
    "\"unorm8x2\"",
    "\"unorm8x4\""
  ],
  "GPUVertexState": [
    "buffers"
  ],
  "GPUVertexStepMode": [
    "\"instance\"",
    "\"vertex\""
  ],
  "GainNode": [
    "GainNode(context)",
    "GainNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "gain"
  ],
  "GainNode/GainNode(context)": [
    "context",
    "options"
  ],
  "GainNode/GainNode(context, options)": [
    "context",
    "options"
  ],
  "GainNode/constructor()": [
    "GainNode(context, options)",
    "context",
    "options"
  ],
  "GainNode/constructor(context)": [
    "context",
    "options"
  ],
  "GainNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "GainOptions": [
    "gain"
  ],
  "Gamepad": [
    "[[axes]]",
    "[[axisMapping]]",
    "[[axisMaximums]]",
    "[[axisMinimums]]",
    "[[buttonMapping]]",
    "[[buttonMaximums]]",
    "[[buttonMinimums]]",
    "[[buttons]]",
    "[[connected]]",
    "[[exposed]]",
    "[[hand]]",
    "[[hapticactuators]]",
    "[[pose]]",
    "[[timestamp]]",
    "[[touchevents]]",
    "[[vibrationActuator]]",
    "axes",
    "buttons",
    "connected",
    "hand",
    "hapticActuators",
    "id",
    "index",
    "mapping",
    "pose",
    "timestamp",
    "touchEvents",
    "vibrationActuator"
  ],
  "GamepadButton": [
    "[[pressed]]",
    "[[touched]]",
    "[[value]]",
    "pressed",
    "touched",
    "value"
  ],
  "GamepadEffectParameters": [
    "duration",
    "leftTrigger",
    "rightTrigger",
    "startDelay",
    "strongMagnitude",
    "weakMagnitude"
  ],
  "GamepadEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "gamepad"
  ],
  "GamepadEventInit": [
    "gamepad"
  ],
  "GamepadHand": [
    "\"\"",
    "left",
    "right",
    "the-empty-string"
  ],
  "GamepadHapticActuator": [
    "[[effects]]",
    "[[playingEffectPromise]]",
    "effects",
    "playEffect()",
    "playEffect(type)",
    "playEffect(type, params)",
    "pulse()",
    "pulse(value, duration)",
    "reset()"
  ],
  "GamepadHapticEffectType": [
    "dual-rumble",
    "trigger-rumble"
  ],
  "GamepadHapticsResult": [
    "complete",
    "preempted"
  ],
  "GamepadMappingType": [
    "\"\"",
    "standard",
    "the-empty-string",
    "xr-standard"
  ],
  "GamepadPose": [
    "angularAcceleration",
    "angularVelocity",
    "hasOrientation",
    "hasPosition",
    "linearAcceleration",
    "linearVelocity",
    "orientation",
    "position"
  ],
  "GamepadTouch": [
    "position",
    "surfaceDimensions",
    "surfaceId",
    "touchId"
  ],
  "GenerateBidInterestGroup": [
    "adComponents",
    "adSizes",
    "ads",
    "biddingLogicURL",
    "biddingWasmHelperURL",
    "enableBiddingSignalsPrioritization",
    "executionMode",
    "maxTrustedBiddingSignalsURLLength",
    "name",
    "owner",
    "priorityVector",
    "sellerCapabilities",
    "sizeGroups",
    "trustedBiddingSignalsKeys",
    "trustedBiddingSignalsSlotSizeMode",
    "trustedBiddingSignalsURL",
    "updateURL",
    "userBiddingSignals"
  ],
  "GenerateBidOutput": [
    "ad",
    "adComponents",
    "adCost",
    "allowComponentAuction",
    "bid",
    "bidCurrency",
    "modelingSignals",
    "numMandatoryAdComponents",
    "render",
    "targetNumAdComponents"
  ],
  "GenerateTestReportParameters": [
    "group",
    "message"
  ],
  "Generator Execution Contexts": [
    "generator"
  ],
  "GeneratorFunction": [
    "GeneratorFunction(...parameterArgs, bodyArg)",
    "prototype"
  ],
  "GenericTransformStream": [
    "readable",
    "transform",
    "writable"
  ],
  "Geolocation": [
    "[[cachedPosition]]",
    "[[watchIDs]]",
    "clearWatch()",
    "clearWatch(watchId)",
    "getCurrentPosition()",
    "getCurrentPosition(successCallback)",
    "getCurrentPosition(successCallback, errorCallback)",
    "getCurrentPosition(successCallback, errorCallback, options)",
    "watchPosition()",
    "watchPosition(successCallback)",
    "watchPosition(successCallback, errorCallback)",
    "watchPosition(successCallback, errorCallback, options)"
  ],
  "GeolocationCoordinates": [
    "accuracy",
    "altitude",
    "altitudeAccuracy",
    "heading",
    "latitude",
    "longitude",
    "speed",
    "toJSON()"
  ],
  "GeolocationPosition": [
    "[[isHighAccuracy]]",
    "coords",
    "timestamp",
    "toJSON()"
  ],
  "GeolocationPositionError": [
    "PERMISSION_DENIED",
    "POSITION_UNAVAILABLE",
    "TIMEOUT",
    "code",
    "message"
  ],
  "GeolocationSensor": [
    "GeolocationSensor()",
    "GeolocationSensor(options)",
    "accuracy",
    "altitude",
    "altitudeAccuracy",
    "constructor()",
    "constructor(options)",
    "heading",
    "latitude",
    "longitude",
    "read()",
    "read(readOptions)",
    "speed"
  ],
  "GeolocationSensor/GeolocationSensor()": [
    "options"
  ],
  "GeolocationSensor/GeolocationSensor(options)": [
    "options"
  ],
  "GeolocationSensor/constructor()": [
    "options"
  ],
  "GeolocationSensor/constructor(options)": [
    "options"
  ],
  "GeolocationSensor/read()": [
    "readOptions"
  ],
  "GeolocationSensor/read(readOptions)": [
    "readOptions"
  ],
  "GeolocationSensorReading": [
    "accuracy",
    "altitude",
    "altitudeAccuracy",
    "heading",
    "latitude",
    "longitude",
    "speed",
    "timestamp"
  ],
  "GeometryUtils": [
    "convertPointFromNode(point, from)",
    "convertPointFromNode(point, from, options)",
    "convertQuadFromNode(quad, from)",
    "convertQuadFromNode(quad, from, options)",
    "convertRectFromNode(rect, from)",
    "convertRectFromNode(rect, from, options)",
    "getBoxQuads()",
    "getBoxQuads(options)"
  ],
  "GeometryUtils/convertPointFromNode(point, from)": [
    "from",
    "options",
    "point"
  ],
  "GeometryUtils/convertPointFromNode(point, from, options)": [
    "from",
    "options",
    "point"
  ],
  "GeometryUtils/convertQuadFromNode(quad, from)": [
    "from",
    "options",
    "quad"
  ],
  "GeometryUtils/convertQuadFromNode(quad, from, options)": [
    "from",
    "options",
    "quad"
  ],
  "GeometryUtils/convertRectFromNode(rect, from)": [
    "from",
    "options",
    "rect"
  ],
  "GeometryUtils/convertRectFromNode(rect, from, options)": [
    "from",
    "options",
    "rect"
  ],
  "GeometryUtils/getBoxQuads()": [
    "options"
  ],
  "GeometryUtils/getBoxQuads(options)": [
    "options"
  ],
  "GetAnimationsOptions": [
    "subtree"
  ],
  "GetHTMLOptions": [
    "serializableShadowRoots",
    "shadowRoots"
  ],
  "GetNotificationOptions": [
    "tag"
  ],
  "GetRootNodeOptions": [
    "composed"
  ],
  "GetSVGDocument": [
    "getSVGDocument"
  ],
  "Global": [
    "Global(descriptor)",
    "Global(descriptor, v)",
    "constructor(descriptor)",
    "constructor(descriptor, v)",
    "globalState",
    "inputObject",
    "lifecycleError",
    "onglobalerror",
    "onglobalhidden",
    "ongloballaunched",
    "onglobalshown",
    "onglobalunloaded",
    "value",
    "valueOf()"
  ],
  "Global Environment Records": [
    "CanDeclareGlobalFunction(N)",
    "CanDeclareGlobalVar(N)",
    "CreateGlobalFunctionBinding(N, V, D)",
    "CreateGlobalVarBinding(N, D)",
    "CreateImmutableBinding(N, S)",
    "CreateMutableBinding(N, D)",
    "DeleteBinding(N)",
    "GetBindingValue(N, S)",
    "GetThisBinding()",
    "HasBinding(N)",
    "HasLexicalDeclaration(N)",
    "HasRestrictedGlobalProperty(N)",
    "HasSuperBinding()",
    "HasThisBinding()",
    "HasVarDeclaration(N)",
    "InitializeBinding(N, V)",
    "SetMutableBinding(N, V, S)",
    "WithBaseObject()"
  ],
  "Global/Global(descriptor)": [
    "descriptor",
    "v"
  ],
  "Global/Global(descriptor, v)": [
    "descriptor",
    "v"
  ],
  "Global/constructor(descriptor)": [
    "descriptor",
    "v"
  ],
  "Global/constructor(descriptor, v)": [
    "descriptor",
    "v"
  ],
  "GlobalDescriptor": [
    "mutable",
    "value"
  ],
  "GlobalEventHandlers": [
    "animationcancel",
    "animationend",
    "animationiteration",
    "animationstart",
    "clipboardchange",
    "copy",
    "cut",
    "drag",
    "dragend",
    "dragenter",
    "dragleave",
    "dragover",
    "dragstart",
    "drop",
    "gotpointercapture",
    "lostpointercapture",
    "onabort",
    "onanimationcancel",
    "onanimationend",
    "onanimationiteration",
    "onanimationstart",
    "onauxclick",
    "onbeforeinput",
    "onbeforematch",
    "onbeforetoggle",
    "onbeforexrselect",
    "onblur",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncopy",
    "oncuechange",
    "oncut",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onerror",
    "onfocus",
    "onformdata",
    "ongotpointercapture",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "onload",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onlostpointercapture",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onoverscroll",
    "onpaste",
    "onpause",
    "onplay",
    "onplaying",
    "onpointercancel",
    "onpointerdown",
    "onpointerenter",
    "onpointerleave",
    "onpointermove",
    "onpointerout",
    "onpointerover",
    "onpointerrawupdate",
    "onpointerup",
    "onprogress",
    "onratechange",
    "onreset",
    "onresize",
    "onscroll",
    "onscrollend",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onselectionchange",
    "onselectstart",
    "onslotchange",
    "onsnapchanged",
    "onsnapchanging",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "ontouchcancel",
    "ontouchend",
    "ontouchmove",
    "ontouchstart",
    "ontransitioncancel",
    "ontransitionend",
    "ontransitionrun",
    "ontransitionstart",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "paste",
    "pointercancel",
    "pointerdown",
    "pointerenter",
    "pointerleave",
    "pointermove",
    "pointerout",
    "pointerover",
    "pointerrawupdate",
    "pointerup",
    "securitypolicyviolation",
    "transitioncancel",
    "transitionend",
    "transitionrun",
    "transitionstart"
  ],
  "GlobalPrivacyControl": [
    "globalPrivacyControl"
  ],
  "GlobalState": [
    "error",
    "hidden",
    "launched",
    "shown",
    "unloaded"
  ],
  "Glyph Map": [
    "entryindex",
    "firstmappedglyph"
  ],
  "Glyph keyed patch": [
    "brotlistream",
    "compatibilityid",
    "flags",
    "format"
  ],
  "GlyphPatches": [
    "glyphcount",
    "glyphdata",
    "glyphdataoffsets",
    "glyphids",
    "tables"
  ],
  "GravitySensor": [
    "GravitySensor()",
    "GravitySensor(options)",
    "constructor()",
    "constructor(options)"
  ],
  "GravitySensor/GravitySensor()": [
    "options"
  ],
  "GravitySensor/GravitySensor(options)": [
    "options"
  ],
  "GravitySensor/constructor()": [
    "options"
  ],
  "GravitySensor/constructor(options)": [
    "options"
  ],
  "GroupEffect": [
    "GroupEffect(children)",
    "GroupEffect(children, timing)",
    "append()",
    "append(...effects)",
    "children",
    "clone()",
    "constructor(children)",
    "constructor(children, timing)",
    "firstChild",
    "lastChild",
    "prepend()",
    "prepend(...effects)"
  ],
  "GroupEffect/GroupEffect(children, timing)": [
    "children",
    "timing"
  ],
  "GroupEffect/append()": [
    "effects"
  ],
  "GroupEffect/append(...effects)": [
    "effects"
  ],
  "GroupEffect/prepend()": [
    "effects"
  ],
  "GroupEffect/prepend(...effects)": [
    "effects"
  ],
  "Gyroscope": [
    "Gyroscope()",
    "Gyroscope(sensorOptions)",
    "constructor()",
    "constructor(sensorOptions)",
    "x",
    "y",
    "z"
  ],
  "Gyroscope/Gyroscope()": [
    "sensorOptions"
  ],
  "Gyroscope/Gyroscope(sensorOptions)": [
    "sensorOptions"
  ],
  "Gyroscope/constructor()": [
    "sensorOptions"
  ],
  "Gyroscope/constructor(sensorOptions)": [
    "sensorOptions"
  ],
  "GyroscopeLocalCoordinateSystem": [
    "\"device\"",
    "\"screen\""
  ],
  "GyroscopeSensorOptions": [
    "referenceFrame"
  ],
  "HID": [
    "[[devices]]",
    "getDevices()",
    "onconnect",
    "ondisconnect",
    "requestDevice()",
    "requestDevice(options)"
  ],
  "HIDCollectionInfo": [
    "children",
    "featureReports",
    "inputReports",
    "outputReports",
    "type",
    "usage",
    "usagePage"
  ],
  "HIDConnectionEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "device"
  ],
  "HIDConnectionEventInit": [
    "device"
  ],
  "HIDDevice": [
    "[[collections]]",
    "[[pendingReceiveFeatureReportPromises]]",
    "[[pendingSendFeatureReportPromises]]",
    "[[pendingSendReportPromises]]",
    "[[productId]]",
    "[[productName]]",
    "[[state]]",
    "[[vendorId]]",
    "close()",
    "collections",
    "forget()",
    "oninputreport",
    "open()",
    "opened",
    "productId",
    "productName",
    "receiveFeatureReport()",
    "receiveFeatureReport(reportId)",
    "sendFeatureReport()",
    "sendFeatureReport(reportId, data)",
    "sendReport()",
    "sendReport(reportId, data)",
    "vendorId"
  ],
  "HIDDeviceFilter": [
    "productId",
    "usage",
    "usagePage",
    "vendorId"
  ],
  "HIDDeviceRequestOptions": [
    "exclusionFilters",
    "filters"
  ],
  "HIDInputReportEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "data",
    "device",
    "reportId"
  ],
  "HIDInputReportEventInit": [
    "data",
    "device",
    "reportId"
  ],
  "HIDReportInfo": [
    "items",
    "reportId"
  ],
  "HIDReportItem": [
    "hasNull",
    "hasPreferredState",
    "isAbsolute",
    "isArray",
    "isBufferedBytes",
    "isConstant",
    "isLinear",
    "isRange",
    "isVolatile",
    "logicalMaximum",
    "logicalMinimum",
    "physicalMaximum",
    "physicalMinimum",
    "reportCount",
    "reportSize",
    "strings",
    "unitExponent",
    "unitFactorCurrentExponent",
    "unitFactorLengthExponent",
    "unitFactorLuminousIntensityExponent",
    "unitFactorMassExponent",
    "unitFactorTemperatureExponent",
    "unitFactorTimeExponent",
    "unitSystem",
    "usageMaximum",
    "usageMinimum",
    "usages",
    "wrap"
  ],
  "HIDUnitSystem": [
    "english-linear",
    "english-rotation",
    "none",
    "reserved",
    "si-linear",
    "si-rotation",
    "vendor-defined"
  ],
  "HMACGetSecretInput": [
    "salt1",
    "salt2"
  ],
  "HMACGetSecretOutput": [
    "output1",
    "output2"
  ],
  "HTMLAllCollection": [
    "item(nameOrIndex)",
    "length",
    "namedItem(name)"
  ],
  "HTMLAnchorElement": [
    "attributionDestination",
    "attributionSourceId",
    "charset",
    "coords",
    "download",
    "hreflang",
    "name",
    "ping",
    "referrerPolicy",
    "rel",
    "relList",
    "rev",
    "shape",
    "target",
    "text",
    "type"
  ],
  "HTMLAreaElement": [
    "alt",
    "coords",
    "download",
    "noHref",
    "ping",
    "referrerPolicy",
    "rel",
    "relList",
    "shape",
    "target"
  ],
  "HTMLAttributionSrcElementUtils": [
    "attributionSrc"
  ],
  "HTMLBRElement": [
    "clear"
  ],
  "HTMLBaseElement": [
    "href",
    "target"
  ],
  "HTMLBodyElement": [
    "aLink",
    "background",
    "bgColor",
    "link",
    "onorientationchange",
    "text",
    "vLink"
  ],
  "HTMLButtonElement": [
    "checkValidity()",
    "disabled",
    "form",
    "formAction",
    "formEnctype",
    "formMethod",
    "formNoValidate",
    "formTarget",
    "labels",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate"
  ],
  "HTMLCanvasElement": [
    "captureStream()",
    "captureStream(frameRequestRate)",
    "getContext(contextId, options)",
    "height",
    "toBlob(callback, type, quality)",
    "toDataURL(type, quality)",
    "transferControlToOffscreen()",
    "width"
  ],
  "HTMLCollection": [
    "item(index)",
    "length",
    "namedItem(key)",
    "namedItem(name)"
  ],
  "HTMLCollection/item(index)": [
    "index"
  ],
  "HTMLCollection/namedItem(name)": [
    "name"
  ],
  "HTMLDListElement": [
    "compact"
  ],
  "HTMLDataElement": [
    "value"
  ],
  "HTMLDataListElement": [
    "options"
  ],
  "HTMLDetailsElement": [
    "name",
    "open"
  ],
  "HTMLDialogElement": [
    "close(returnValue)",
    "open",
    "returnValue",
    "show()",
    "showModal()"
  ],
  "HTMLDirectoryElement": [
    "compact"
  ],
  "HTMLDivElement": [
    "align"
  ],
  "HTMLElement": [
    "accessKey",
    "accessKeyLabel",
    "attachInternals()",
    "autocapitalize",
    "beforematch",
    "beforetoggle",
    "blur",
    "cancel",
    "change",
    "click()",
    "close",
    "contextlost",
    "contextrestored",
    "dir",
    "draggable",
    "editContext",
    "error",
    "focus",
    "formdata",
    "hidden",
    "hidePopover()",
    "innerText",
    "invalid",
    "lang",
    "load",
    "offsetHeight",
    "offsetLeft",
    "offsetParent",
    "offsetTop",
    "offsetWidth",
    "onabort",
    "onauxclick",
    "onbeforeinput",
    "onbeforematch",
    "onbeforetoggle",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncopy",
    "oncuechange",
    "oncut",
    "ondblclick",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onformdata",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onpaste",
    "onpause",
    "onplay",
    "onplaying",
    "onprogress",
    "onratechange",
    "onreset",
    "onscrollend",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "outerText",
    "popover",
    "popoverTargetAction",
    "popoverTargetElement",
    "reset",
    "select",
    "showPopover()",
    "spellcheck",
    "states",
    "submit",
    "title",
    "toggle",
    "togglePopover(force)",
    "translate",
    "writingSuggestions"
  ],
  "HTMLEmbedElement": [
    "align",
    "getSVGDocument()",
    "height",
    "name",
    "src",
    "type",
    "width"
  ],
  "HTMLFencedFrameElement": [
    "HTMLFencedFrameElement()",
    "allow",
    "config",
    "constructor()",
    "height",
    "width"
  ],
  "HTMLFieldSetElement": [
    "checkValidity()",
    "disabled",
    "elements",
    "form",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "type",
    "validationMessage",
    "validity",
    "willValidate"
  ],
  "HTMLFontElement": [
    "color",
    "face",
    "size"
  ],
  "HTMLFormControlsCollection": [
    "namedItem(name)"
  ],
  "HTMLFormElement": [
    "acceptCharset",
    "action",
    "autocomplete",
    "checkValidity()",
    "elements",
    "encoding",
    "enctype",
    "length",
    "method",
    "name",
    "noValidate",
    "rel",
    "relList",
    "reportValidity()",
    "requestSubmit(submitter)",
    "reset()",
    "submit()",
    "target"
  ],
  "HTMLFrameElement": [
    "contentDocument",
    "contentWindow",
    "frameBorder",
    "longDesc",
    "marginHeight",
    "marginWidth",
    "name",
    "noResize",
    "scrolling",
    "src"
  ],
  "HTMLFrameSetElement": [
    "cols",
    "rows"
  ],
  "HTMLHRElement": [
    "align",
    "color",
    "noShade",
    "size",
    "width"
  ],
  "HTMLHeadElement": [
    "profile"
  ],
  "HTMLHeadingElement": [
    "align"
  ],
  "HTMLHtmlElement": [
    "version"
  ],
  "HTMLHyperlinkElementUtils": [
    "hash",
    "host",
    "hostname",
    "href",
    "origin",
    "password",
    "pathname",
    "port",
    "protocol",
    "search",
    "username"
  ],
  "HTMLIFrameElement": [
    "adAuctionHeaders",
    "align",
    "allow",
    "allowFullscreen",
    "browsingTopics",
    "contentDocument",
    "contentWindow",
    "credentialless",
    "csp",
    "frameBorder",
    "getSVGDocument()",
    "height",
    "loading",
    "longDesc",
    "marginHeight",
    "marginWidth",
    "name",
    "permissionsPolicy",
    "privateToken",
    "referrerPolicy",
    "sandbox",
    "scrolling",
    "src",
    "srcdoc",
    "width"
  ],
  "HTMLImageElement": [
    "align",
    "alt",
    "border",
    "complete",
    "crossOrigin",
    "currentSrc",
    "decode()",
    "decoding",
    "fetchPriority",
    "height",
    "hspace",
    "isMap",
    "loading",
    "longDesc",
    "lowsrc",
    "name",
    "naturalHeight",
    "naturalWidth",
    "referrerPolicy",
    "sizes",
    "src",
    "srcset",
    "useMap",
    "vspace",
    "width",
    "x",
    "y"
  ],
  "HTMLInputElement": [
    "accept",
    "align",
    "alt",
    "autocomplete",
    "capture",
    "checkValidity()",
    "checked",
    "defaultChecked",
    "defaultValue",
    "dirName",
    "disabled",
    "files",
    "form",
    "formAction",
    "formEnctype",
    "formMethod",
    "formNoValidate",
    "formTarget",
    "height",
    "indeterminate",
    "labels",
    "list",
    "max",
    "maxLength",
    "min",
    "minLength",
    "multiple",
    "name",
    "pattern",
    "placeholder",
    "readOnly",
    "reportValidity()",
    "required",
    "select()",
    "selectionDirection",
    "selectionEnd",
    "selectionStart",
    "setCustomValidity(error)",
    "setRangeText(replacement, start, end, selectMode)",
    "setSelectionRange(start, end, direction)",
    "showPicker()",
    "size",
    "src",
    "step",
    "stepDown(n)",
    "stepUp(n)",
    "type",
    "useMap",
    "validationMessage",
    "validity",
    "value",
    "valueAsDate",
    "valueAsNumber",
    "webkitEntries",
    "webkitdirectory",
    "width",
    "willValidate"
  ],
  "HTMLLIElement": [
    "type",
    "value"
  ],
  "HTMLLabelElement": [
    "control",
    "form",
    "htmlFor"
  ],
  "HTMLLegendElement": [
    "align",
    "form"
  ],
  "HTMLLinkElement": [
    "as",
    "blocking",
    "charset",
    "crossOrigin",
    "disabled",
    "fetchPriority",
    "href",
    "hreflang",
    "imageSizes",
    "imageSrcset",
    "integrity",
    "media",
    "referrerPolicy",
    "rel",
    "relList",
    "rev",
    "scrollTargetElement",
    "sizes",
    "target",
    "type"
  ],
  "HTMLMapElement": [
    "areas",
    "name"
  ],
  "HTMLMarqueeElement": [
    "behavior",
    "bgColor",
    "direction",
    "height",
    "hspace",
    "loop",
    "scrollAmount",
    "scrollDelay",
    "start()",
    "stop()",
    "trueSpeed",
    "vspace",
    "width"
  ],
  "HTMLMediaElement": [
    "HAVE_CURRENT_DATA",
    "HAVE_ENOUGH_DATA",
    "HAVE_FUTURE_DATA",
    "HAVE_METADATA",
    "HAVE_NOTHING",
    "NETWORK_EMPTY",
    "NETWORK_IDLE",
    "NETWORK_LOADING",
    "NETWORK_NO_SOURCE",
    "[[SinkId]]",
    "[[channel with worker]]",
    "[[port to worker]]",
    "abort",
    "addTextTrack(kind, label, language)",
    "audioTracks",
    "autoplay",
    "buffered",
    "canPlayType(type)",
    "canplay",
    "canplaythrough",
    "captureStream()",
    "controls",
    "crossOrigin",
    "currentSrc",
    "currentTime",
    "defaultMuted",
    "defaultPlaybackRate",
    "disableRemotePlayback",
    "duration",
    "durationchange",
    "effective media volume",
    "emptied",
    "ended",
    "error",
    "fastSeek(time)",
    "getStartDate()",
    "load()",
    "loadeddata",
    "loadedmetadata",
    "loadstart",
    "loop",
    "media data",
    "mediaKeys",
    "muted",
    "networkState",
    "onencrypted",
    "onwaitingforkey",
    "pause",
    "pause()",
    "paused",
    "play",
    "play()",
    "playbackRate",
    "played",
    "playing",
    "preload",
    "preservesPitch",
    "progress",
    "ratechange",
    "readyState",
    "remote",
    "resize",
    "resume frozen flag",
    "seekable",
    "seeked",
    "seeking",
    "setMediaKeys()",
    "setMediaKeys(mediaKeys)",
    "setSinkId()",
    "setSinkId(sinkId)",
    "sinkId",
    "src",
    "srcObject",
    "stalled",
    "suspend",
    "textTracks",
    "timeupdate",
    "videoTracks",
    "volume",
    "volumechange",
    "waiting"
  ],
  "HTMLMenuElement": [
    "compact"
  ],
  "HTMLMetaElement": [
    "content",
    "httpEquiv",
    "media",
    "name",
    "scheme"
  ],
  "HTMLMeterElement": [
    "high",
    "labels",
    "low",
    "max",
    "min",
    "optimum",
    "value"
  ],
  "HTMLModElement": [
    "cite",
    "dateTime"
  ],
  "HTMLOListElement": [
    "compact",
    "reversed",
    "start",
    "type"
  ],
  "HTMLObjectElement": [
    "align",
    "archive",
    "border",
    "checkValidity()",
    "code",
    "codeBase",
    "codeType",
    "contentDocument",
    "contentWindow",
    "data",
    "declare",
    "form",
    "getSVGDocument()",
    "height",
    "hspace",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "standby",
    "type",
    "useMap",
    "validationMessage",
    "validity",
    "vspace",
    "width",
    "willValidate"
  ],
  "HTMLOptGroupElement": [
    "disabled",
    "label"
  ],
  "HTMLOptionElement": [
    "Option(text, value, defaultSelected, selected)",
    "defaultSelected",
    "disabled",
    "form",
    "index",
    "label",
    "selected",
    "text",
    "value"
  ],
  "HTMLOptionsCollection": [
    "add(element, before)",
    "length",
    "remove(index)",
    "selectedIndex"
  ],
  "HTMLOrSVGElement": [
    "[[CryptographicNonce]]",
    "autofocus",
    "blur()",
    "dataset",
    "focus(options)",
    "nonce",
    "tabIndex"
  ],
  "HTMLOutputElement": [
    "checkValidity()",
    "defaultValue",
    "form",
    "htmlFor",
    "labels",
    "name",
    "reportValidity()",
    "setCustomValidity(error)",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate"
  ],
  "HTMLParagraphElement": [
    "align"
  ],
  "HTMLParamElement": [
    "name",
    "type",
    "value",
    "valueType"
  ],
  "HTMLPortalElement": [
    "HTMLPortalElement()",
    "activate()",
    "activate(options)",
    "constructor()",
    "guest browsing context",
    "just-adopted flag",
    "message",
    "messageerror",
    "onmessage",
    "onmessageerror",
    "postMessage(message)",
    "postMessage(message, options)",
    "referrerPolicy",
    "src"
  ],
  "HTMLPortalElement/activate()": [
    "options"
  ],
  "HTMLPortalElement/activate(options)": [
    "options"
  ],
  "HTMLPortalElement/postMessage(message)": [
    "message",
    "options"
  ],
  "HTMLPortalElement/postMessage(message, options)": [
    "message",
    "options"
  ],
  "HTMLPreElement": [
    "width"
  ],
  "HTMLProgressElement": [
    "labels",
    "max",
    "position",
    "value"
  ],
  "HTMLQuoteElement": [
    "cite"
  ],
  "HTMLScriptElement": [
    "async",
    "blocking",
    "charset",
    "crossOrigin",
    "defer",
    "event",
    "fetchPriority",
    "htmlFor",
    "integrity",
    "noModule",
    "referrerPolicy",
    "script text",
    "src",
    "supports(type)",
    "text",
    "type"
  ],
  "HTMLSelectElement": [
    "add(element, before)",
    "autocomplete",
    "checkValidity()",
    "disabled",
    "form",
    "item(index)",
    "labels",
    "length",
    "multiple",
    "name",
    "namedItem(name)",
    "options",
    "remove()",
    "reportValidity()",
    "required",
    "selectedIndex",
    "selectedOptions",
    "setCustomValidity(error)",
    "showPicker()",
    "size",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate"
  ],
  "HTMLSharedStorageWritableElementUtils": [
    "sharedStorageWritable"
  ],
  "HTMLSlotElement": [
    "assign(...nodes)",
    "assignedElements(options)",
    "assignedNodes(options)",
    "manually assigned nodes",
    "name",
    "slotchange"
  ],
  "HTMLSourceElement": [
    "error",
    "height",
    "media",
    "sizes",
    "src",
    "srcset",
    "type",
    "width"
  ],
  "HTMLStyleElement": [
    "blocking",
    "disabled",
    "media",
    "type"
  ],
  "HTMLTableCaptionElement": [
    "align"
  ],
  "HTMLTableCellElement": [
    "abbr",
    "align",
    "axis",
    "bgColor",
    "cellIndex",
    "ch",
    "chOff",
    "colSpan",
    "headers",
    "height",
    "noWrap",
    "rowSpan",
    "scope",
    "vAlign",
    "width"
  ],
  "HTMLTableColElement": [
    "align",
    "ch",
    "chOff",
    "span",
    "vAlign",
    "width"
  ],
  "HTMLTableElement": [
    "align",
    "bgColor",
    "border",
    "caption",
    "cellPadding",
    "cellSpacing",
    "createCaption()",
    "createTBody()",
    "createTFoot()",
    "createTHead()",
    "deleteCaption()",
    "deleteRow(index)",
    "deleteTFoot()",
    "deleteTHead()",
    "frame",
    "insertRow(index)",
    "rows",
    "rules",
    "summary",
    "tBodies",
    "tFoot",
    "tHead",
    "width"
  ],
  "HTMLTableRowElement": [
    "align",
    "bgColor",
    "cells",
    "ch",
    "chOff",
    "deleteCell(index)",
    "insertCell(index)",
    "rowIndex",
    "sectionRowIndex",
    "vAlign"
  ],
  "HTMLTableSectionElement": [
    "align",
    "ch",
    "chOff",
    "deleteRow(index)",
    "insertRow(index)",
    "rows",
    "vAlign"
  ],
  "HTMLTemplateElement": [
    "content"
  ],
  "HTMLTextAreaElement": [
    "autocomplete",
    "checkValidity()",
    "cols",
    "defaultValue",
    "dirName",
    "disabled",
    "form",
    "labels",
    "maxLength",
    "minLength",
    "name",
    "placeholder",
    "readOnly",
    "reportValidity()",
    "required",
    "rows",
    "select()",
    "selectionDirection",
    "selectionEnd",
    "selectionStart",
    "setCustomValidity(error)",
    "setRangeText(replacement, start, end, selectMode)",
    "setSelectionRange(start, end, direction)",
    "textLength",
    "type",
    "validationMessage",
    "validity",
    "value",
    "willValidate",
    "wrap"
  ],
  "HTMLTimeElement": [
    "dateTime"
  ],
  "HTMLTitleElement": [
    "text"
  ],
  "HTMLTrackElement": [
    "ERROR",
    "LOADED",
    "LOADING",
    "NONE",
    "cuechange",
    "default",
    "error",
    "kind",
    "label",
    "load",
    "readyState",
    "src",
    "srclang",
    "track"
  ],
  "HTMLUListElement": [
    "compact",
    "type"
  ],
  "HTMLVideoElement": [
    "cancelVideoFrameCallback(handle)",
    "disablePictureInPicture",
    "enterpictureinpicture",
    "getVideoPlaybackQuality()",
    "height",
    "leavepictureinpicture",
    "onenterpictureinpicture",
    "onleavepictureinpicture",
    "playsInline",
    "poster",
    "requestPictureInPicture()",
    "requestVideoFrameCallback(callback)",
    "videoHeight",
    "videoWidth",
    "width"
  ],
  "HTMLVideoElement/cancelVideoFrameCallback(handle)": [
    "handle"
  ],
  "HTMLVideoElement/requestVideoFrameCallback(callback)": [
    "callback"
  ],
  "HandwritingDrawing": [
    "addStroke(stroke)",
    "clear()",
    "getPrediction()",
    "getStrokes()",
    "recognizer",
    "removeStroke(stroke)",
    "strokes"
  ],
  "HandwritingDrawing/addStroke(stroke)": [
    "stroke"
  ],
  "HandwritingDrawing/removeStroke(stroke)": [
    "stroke"
  ],
  "HandwritingDrawingSegment": [
    "beginPointIndex",
    "endPointIndex",
    "strokeIndex"
  ],
  "HandwritingHints": [
    "alternatives",
    "inputType",
    "recognitionType",
    "textContext"
  ],
  "HandwritingHintsQueryResult": [
    "alternatives",
    "inputType",
    "recognitionType",
    "textContext"
  ],
  "HandwritingInputType": [
    "\"mouse\"",
    "\"stylus\"",
    "\"touch\""
  ],
  "HandwritingModelConstraint": [
    "languages"
  ],
  "HandwritingPoint": [
    "t",
    "x",
    "y"
  ],
  "HandwritingPrediction": [
    "segmentationResult",
    "text"
  ],
  "HandwritingRecognitionType": [
    "\"per-character\"",
    "\"text\""
  ],
  "HandwritingRecognizer": [
    "active",
    "finish()",
    "startDrawing()",
    "startDrawing(hints)"
  ],
  "HandwritingRecognizer/startDrawing()": [
    "hints"
  ],
  "HandwritingRecognizer/startDrawing(hints)": [
    "hints"
  ],
  "HandwritingRecognizerQueryResult": [
    "hints",
    "textAlternatives",
    "textSegmentation"
  ],
  "HandwritingSegment": [
    "beginIndex",
    "drawingSegments",
    "endIndex",
    "grapheme"
  ],
  "HandwritingStroke": [
    "HandwritingStroke()",
    "addPoint(point)",
    "clear()",
    "constructor()",
    "getPoints()",
    "points"
  ],
  "HandwritingStroke/addPoint(point)": [
    "point"
  ],
  "HardwareAcceleration": [
    "\"no-preference\"",
    "\"prefer-hardware\"",
    "\"prefer-software\"",
    "no-preference",
    "prefer-hardware",
    "prefer-software"
  ],
  "HashChangeEvent": [
    "newURL",
    "oldURL"
  ],
  "HdrMetadataType": [
    "\"smpteSt2086\"",
    "\"smpteSt2094-10\"",
    "\"smpteSt2094-40\"",
    "smpteSt2086",
    "smpteSt2094-10",
    "smpteSt2094-40"
  ],
  "Headers": [
    "Headers()",
    "Headers(init)",
    "append",
    "append(name, value)",
    "constructor()",
    "constructor(init)",
    "delete(name)",
    "fill",
    "get(name)",
    "getSetCookie()",
    "guard",
    "has(name)",
    "header list",
    "remove privileged no-cors request-headers",
    "set(name, value)",
    "validate"
  ],
  "Headers/Headers()": [
    "init"
  ],
  "Headers/Headers(init)": [
    "init"
  ],
  "Headers/append(name, value)": [
    "name",
    "value"
  ],
  "Headers/constructor()": [
    "init"
  ],
  "Headers/constructor(init)": [
    "init"
  ],
  "Headers/delete(name)": [
    "name"
  ],
  "Headers/get(name)": [
    "name"
  ],
  "Headers/has(name)": [
    "name"
  ],
  "Headers/set(name, value)": [
    "name",
    "value"
  ],
  "HevcBitstreamFormat": [
    "\"annexb\"",
    "\"hevc\"",
    "annexb",
    "hevc"
  ],
  "HevcEncoderConfig": [
    "format"
  ],
  "Highlight": [
    "Highlight()",
    "Highlight(...initialRanges)",
    "constructor()",
    "constructor(...initialRanges)",
    "priority",
    "type"
  ],
  "Highlight/Highlight()": [
    "initialRanges"
  ],
  "Highlight/Highlight(...initialRanges)": [
    "initialRanges"
  ],
  "Highlight/constructor()": [
    "initialRanges"
  ],
  "Highlight/constructor(...initialRanges)": [
    "initialRanges"
  ],
  "HighlightType": [
    "\"grammar-error\"",
    "\"highlight\"",
    "\"spelling-error\""
  ],
  "History": [
    "back()",
    "forward()",
    "go(delta)",
    "length",
    "pushState(data, unused, url)",
    "replaceState(data, unused, url)",
    "scrollRestoration",
    "state"
  ],
  "HkdfParams": [
    "hash",
    "info",
    "salt"
  ],
  "HmacImportParams": [
    "hash",
    "length"
  ],
  "HmacKeyAlgorithm": [
    "hash",
    "length"
  ],
  "HmacKeyGenParams": [
    "hash",
    "length"
  ],
  "I/O queue": [
    "peek",
    "push",
    "read",
    "restore"
  ],
  "IDBCursor": [
    "advance(count)",
    "continue()",
    "continue(key)",
    "continuePrimaryKey(key, primaryKey)",
    "delete()",
    "direction",
    "key",
    "primaryKey",
    "request",
    "source",
    "update(value)"
  ],
  "IDBCursor/advance(count)": [
    "count"
  ],
  "IDBCursor/continue()": [
    "key"
  ],
  "IDBCursor/continue(key)": [
    "key"
  ],
  "IDBCursor/continuePrimaryKey(key, primaryKey)": [
    "key",
    "primaryKey"
  ],
  "IDBCursor/update(value)": [
    "value"
  ],
  "IDBCursorDirection": [
    "\"next\"",
    "\"nextunique\"",
    "\"prev\"",
    "\"prevunique\""
  ],
  "IDBCursorWithValue": [
    "value"
  ],
  "IDBDatabase": [
    "close",
    "close()",
    "createObjectStore(name)",
    "createObjectStore(name, options)",
    "deleteObjectStore(name)",
    "name",
    "objectStoreNames",
    "onabort",
    "onclose",
    "onerror",
    "onversionchange",
    "transaction(storeNames)",
    "transaction(storeNames, mode)",
    "transaction(storeNames, mode, options)",
    "version",
    "versionchange"
  ],
  "IDBDatabase/createObjectStore(name)": [
    "name",
    "options"
  ],
  "IDBDatabase/createObjectStore(name, options)": [
    "name",
    "options"
  ],
  "IDBDatabase/deleteObjectStore(name)": [
    "name"
  ],
  "IDBDatabase/transaction(storeNames)": [
    "mode",
    "options",
    "storeNames"
  ],
  "IDBDatabase/transaction(storeNames, mode)": [
    "mode",
    "options",
    "storeNames"
  ],
  "IDBDatabase/transaction(storeNames, mode, options)": [
    "mode",
    "options",
    "storeNames"
  ],
  "IDBDatabaseInfo": [
    "name",
    "version"
  ],
  "IDBFactory": [
    "cmp(first, second)",
    "databases()",
    "deleteDatabase(name)",
    "open(name)",
    "open(name, version)"
  ],
  "IDBFactory/cmp(first, second)": [
    "first",
    "second"
  ],
  "IDBFactory/deleteDatabase(name)": [
    "name"
  ],
  "IDBFactory/open(name)": [
    "name",
    "version"
  ],
  "IDBFactory/open(name, version)": [
    "name",
    "version"
  ],
  "IDBIndex": [
    "count()",
    "count(query)",
    "get(query)",
    "getAll()",
    "getAll(query)",
    "getAll(query, count)",
    "getAllKeys()",
    "getAllKeys(query)",
    "getAllKeys(query, count)",
    "getKey(query)",
    "keyPath",
    "multiEntry",
    "name",
    "objectStore",
    "openCursor()",
    "openCursor(query)",
    "openCursor(query, direction)",
    "openKeyCursor()",
    "openKeyCursor(query)",
    "openKeyCursor(query, direction)",
    "unique"
  ],
  "IDBIndex/count()": [
    "query"
  ],
  "IDBIndex/count(query)": [
    "query"
  ],
  "IDBIndex/get(query)": [
    "query"
  ],
  "IDBIndex/getAll()": [
    "count",
    "query"
  ],
  "IDBIndex/getAll(query)": [
    "count",
    "query"
  ],
  "IDBIndex/getAll(query, count)": [
    "count",
    "query"
  ],
  "IDBIndex/getAllKeys()": [
    "count",
    "query"
  ],
  "IDBIndex/getAllKeys(query)": [
    "count",
    "query"
  ],
  "IDBIndex/getAllKeys(query, count)": [
    "count",
    "query"
  ],
  "IDBIndex/getKey(query)": [
    "query"
  ],
  "IDBIndex/openCursor()": [
    "direction",
    "query"
  ],
  "IDBIndex/openCursor(query)": [
    "direction",
    "query"
  ],
  "IDBIndex/openCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBIndex/openKeyCursor()": [
    "direction",
    "query"
  ],
  "IDBIndex/openKeyCursor(query)": [
    "direction",
    "query"
  ],
  "IDBIndex/openKeyCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBIndexParameters": [
    "multiEntry",
    "unique"
  ],
  "IDBKeyRange": [
    "bound(lower, upper)",
    "bound(lower, upper, lowerOpen)",
    "bound(lower, upper, lowerOpen, upperOpen)",
    "includes(key)",
    "lower",
    "lowerBound(lower)",
    "lowerBound(lower, open)",
    "lowerOpen",
    "only(value)",
    "upper",
    "upperBound(upper)",
    "upperBound(upper, open)",
    "upperOpen"
  ],
  "IDBKeyRange/bound(lower, upper)": [
    "lower",
    "lowerOpen",
    "upper",
    "upperOpen"
  ],
  "IDBKeyRange/bound(lower, upper, lowerOpen)": [
    "lower",
    "lowerOpen",
    "upper",
    "upperOpen"
  ],
  "IDBKeyRange/bound(lower, upper, lowerOpen, upperOpen)": [
    "lower",
    "lowerOpen",
    "upper",
    "upperOpen"
  ],
  "IDBKeyRange/includes(key)": [
    "key"
  ],
  "IDBKeyRange/lowerBound(lower)": [
    "lower",
    "open"
  ],
  "IDBKeyRange/lowerBound(lower, open)": [
    "lower",
    "open"
  ],
  "IDBKeyRange/only(value)": [
    "value"
  ],
  "IDBKeyRange/upperBound(upper)": [
    "open",
    "upper"
  ],
  "IDBKeyRange/upperBound(upper, open)": [
    "open",
    "upper"
  ],
  "IDBObjectStore": [
    "add(value)",
    "add(value, key)",
    "autoIncrement",
    "clear()",
    "count()",
    "count(query)",
    "createIndex(name, keyPath)",
    "createIndex(name, keyPath, options)",
    "delete(query)",
    "deleteIndex(name)",
    "get(query)",
    "getAll()",
    "getAll(query)",
    "getAll(query, count)",
    "getAllKeys()",
    "getAllKeys(query)",
    "getAllKeys(query, count)",
    "getKey(query)",
    "index(name)",
    "indexNames",
    "keyPath",
    "name",
    "openCursor()",
    "openCursor(query)",
    "openCursor(query, direction)",
    "openKeyCursor()",
    "openKeyCursor(query)",
    "openKeyCursor(query, direction)",
    "put(value)",
    "put(value, key)",
    "transaction"
  ],
  "IDBObjectStore/add(value)": [
    "key",
    "value"
  ],
  "IDBObjectStore/add(value, key)": [
    "key",
    "value"
  ],
  "IDBObjectStore/count()": [
    "query"
  ],
  "IDBObjectStore/count(query)": [
    "query"
  ],
  "IDBObjectStore/createIndex(name, keyPath)": [
    "keyPath",
    "name",
    "options"
  ],
  "IDBObjectStore/createIndex(name, keyPath, options)": [
    "keyPath",
    "name",
    "options"
  ],
  "IDBObjectStore/delete(query)": [
    "query"
  ],
  "IDBObjectStore/deleteIndex(name)": [
    "name"
  ],
  "IDBObjectStore/get(query)": [
    "query"
  ],
  "IDBObjectStore/getAll()": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAll(query)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAll(query, count)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAllKeys()": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAllKeys(query)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getAllKeys(query, count)": [
    "count",
    "query"
  ],
  "IDBObjectStore/getKey(query)": [
    "query"
  ],
  "IDBObjectStore/index(name)": [
    "name"
  ],
  "IDBObjectStore/openCursor()": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openCursor(query)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openKeyCursor()": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openKeyCursor(query)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/openKeyCursor(query, direction)": [
    "direction",
    "query"
  ],
  "IDBObjectStore/put(value)": [
    "key",
    "value"
  ],
  "IDBObjectStore/put(value, key)": [
    "key",
    "value"
  ],
  "IDBObjectStoreParameters": [
    "autoIncrement",
    "keyPath"
  ],
  "IDBOpenDBRequest": [
    "blocked",
    "onblocked",
    "onupgradeneeded",
    "upgradeneeded"
  ],
  "IDBRequest": [
    "error",
    "onerror",
    "onsuccess",
    "readyState",
    "result",
    "source",
    "success",
    "transaction"
  ],
  "IDBRequestReadyState": [
    "\"done\"",
    "\"pending\""
  ],
  "IDBTransaction": [
    "abort",
    "abort()",
    "commit()",
    "complete",
    "db",
    "durability",
    "error",
    "mode",
    "objectStore(name)",
    "objectStoreNames",
    "onabort",
    "oncomplete",
    "onerror"
  ],
  "IDBTransaction/objectStore(name)": [
    "name"
  ],
  "IDBTransactionDurability": [
    "\"default\"",
    "\"relaxed\"",
    "\"strict\""
  ],
  "IDBTransactionMode": [
    "\"readonly\"",
    "\"readwrite\"",
    "\"versionchange\""
  ],
  "IDBTransactionOptions": [
    "durability"
  ],
  "IDBVersionChangeEvent": [
    "IDBVersionChangeEvent(type)",
    "IDBVersionChangeEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "newVersion",
    "oldVersion"
  ],
  "IDBVersionChangeEvent/IDBVersionChangeEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEvent/IDBVersionChangeEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "IDBVersionChangeEventInit": [
    "newVersion",
    "oldVersion"
  ],
  "IDL type": [
    "extended attribute associated with",
    "extended attributes associated with"
  ],
  "IIRFilterNode": [
    "IIRFilterNode(context, options)",
    "constructor(context, options)",
    "getFrequencyResponse(frequencyHz, magResponse, phaseResponse)"
  ],
  "IIRFilterNode/IIRFilterNode(context, options)": [
    "context",
    "options"
  ],
  "IIRFilterNode/constructor()": [
    "IIRFilterNode(context, options)",
    "context",
    "options"
  ],
  "IIRFilterNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "IIRFilterNode/getFrequencyResponse()": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "IIRFilterNode/getFrequencyResponse(frequencyHz, magResponse, phaseResponse)": [
    "frequencyHz",
    "magResponse",
    "phaseResponse"
  ],
  "IIRFilterOptions": [
    "feedback",
    "feedforward"
  ],
  "IP address space": [
    "less public",
    "local",
    "private",
    "public"
  ],
  "IPAddressSpace": [
    "\"local\"",
    "\"private\"",
    "\"public\""
  ],
  "ISOBMFF Brand": [
    "av01"
  ],
  "IdentityCredential": [
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)",
    "disconnect()",
    "disconnect(options)",
    "isAutoSelected",
    "token"
  ],
  "IdentityCredential/[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)": [
    "options",
    "origin",
    "sameOriginWithAncestors"
  ],
  "IdentityCredential/disconnect()": [
    "options"
  ],
  "IdentityCredential/disconnect(options)": [
    "options"
  ],
  "IdentityCredentialDisconnectOptions": [
    "accountHint"
  ],
  "IdentityCredentialRequestOptions": [
    "context",
    "providers"
  ],
  "IdentityCredentialRequestOptionsContext": [
    "\"continue\"",
    "\"signin\"",
    "\"signup\"",
    "\"use\""
  ],
  "IdentityProvider": [
    "close()",
    "getUserInfo(config)"
  ],
  "IdentityProvider/getUserInfo(config)": [
    "config"
  ],
  "IdentityProviderAPIConfig": [
    "accounts_endpoint",
    "branding",
    "client_metadata_endpoint",
    "disconnect_endpoint",
    "id_assertion_endpoint",
    "login_url"
  ],
  "IdentityProviderAccount": [
    "approved_clients",
    "domain_hints",
    "email",
    "given_name",
    "id",
    "login_hints",
    "name",
    "picture"
  ],
  "IdentityProviderAccountList": [
    "accounts"
  ],
  "IdentityProviderBranding": [
    "background_color",
    "color",
    "icons",
    "name"
  ],
  "IdentityProviderClientMetadata": [
    "privacy_policy_url",
    "terms_of_service_url"
  ],
  "IdentityProviderConfig": [
    "clientId",
    "configURL"
  ],
  "IdentityProviderIcon": [
    "size",
    "url"
  ],
  "IdentityProviderRequestOptions": [
    "domainHint",
    "loginHint",
    "nonce"
  ],
  "IdentityProviderToken": [
    "token"
  ],
  "IdentityProviderWellKnown": [
    "provider_urls"
  ],
  "IdentityUserInfo": [
    "email",
    "givenName",
    "name",
    "picture"
  ],
  "IdleDeadline": [
    "didTimeout",
    "timeRemaining()"
  ],
  "IdleDetector": [
    "IdleDetector()",
    "[[screenState]]",
    "[[state]]",
    "[[threshold]]",
    "[[userState]]",
    "constructor()",
    "onchange",
    "requestPermission()",
    "screenState",
    "start()",
    "start(options)",
    "userState"
  ],
  "IdleDetector/start()": [
    "options"
  ],
  "IdleDetector/start(options)": [
    "options"
  ],
  "IdleOptions": [
    "signal",
    "threshold"
  ],
  "IdleRequestOptions": [
    "timeout"
  ],
  "ImageBitmap": [
    "close()",
    "height",
    "width"
  ],
  "ImageBitmapOptions": [
    "colorSpaceConversion",
    "imageOrientation",
    "premultiplyAlpha",
    "resizeHeight",
    "resizeQuality",
    "resizeWidth"
  ],
  "ImageBitmapRenderingContext": [
    "canvas",
    "transferFromImageBitmap(bitmap)"
  ],
  "ImageBitmapRenderingContextSettings": [
    "alpha"
  ],
  "ImageCapture": [
    "ImageCapture(videoTrack)",
    "constructor(videoTrack)",
    "getPhotoCapabilities()",
    "getPhotoSettings()",
    "grabFrame()",
    "takePhoto()",
    "takePhoto(photoSettings)",
    "track"
  ],
  "ImageCapture/ImageCapture(videoTrack)": [
    "videoTrack"
  ],
  "ImageCapture/constructor(videoTrack)": [
    "videoTrack"
  ],
  "ImageCapture/takePhoto()": [
    "photoSettings"
  ],
  "ImageCapture/takePhoto(photoSettings)": [
    "photoSettings"
  ],
  "ImageData": [
    "colorSpace",
    "data",
    "height",
    "new ImageData(data, sw, sh, settings)",
    "new ImageData(sw, sh, settings)",
    "width"
  ],
  "ImageDataSettings": [
    "colorSpace"
  ],
  "ImageDecodeOptions": [
    "completeFramesOnly",
    "frameIndex"
  ],
  "ImageDecodeResult": [
    "complete",
    "image"
  ],
  "ImageDecoder": [
    "ImageDecoder(init)",
    "[[ImageTrackList]]",
    "[[closed]]",
    "[[codec implementation]]",
    "[[codec work queue]]",
    "[[complete]]",
    "[[completed promise]]",
    "[[control message queue]]",
    "[[encoded data]]",
    "[[internal selected track index]]",
    "[[message queue blocked]]",
    "[[pending decode promises]]",
    "[[prefer animation]]",
    "[[progressive frame generations]]",
    "[[tracks established]]",
    "[[type]]",
    "check type support",
    "close imagedecoder",
    "close()",
    "complete",
    "completed",
    "constructor(init)",
    "decode complete frame",
    "decode progressive frame",
    "decode()",
    "decode(options)",
    "establish tracks",
    "fatally reject bad data",
    "fetch stream data loop",
    "get default selected track index",
    "isTypeSupported(type)",
    "reject infeasible decode",
    "reset imagedecoder",
    "reset()",
    "resolve decode",
    "tracks",
    "type",
    "update tracks"
  ],
  "ImageDecoder/ImageDecoder(init)": [
    "init"
  ],
  "ImageDecoder/constructor(init)": [
    "init"
  ],
  "ImageDecoder/decode()": [
    "options"
  ],
  "ImageDecoder/decode(options)": [
    "options"
  ],
  "ImageDecoder/isTypeSupported(type)": [
    "type"
  ],
  "ImageDecoderInit": [
    "colorSpaceConversion",
    "data",
    "desiredHeight",
    "desiredWidth",
    "preferAnimation",
    "transfer",
    "type"
  ],
  "ImageOrientation": [
    "flipY",
    "from-image"
  ],
  "ImageResource": [
    "label",
    "sizes",
    "src",
    "type"
  ],
  "ImageSmoothingQuality": [
    "high",
    "low",
    "medium"
  ],
  "ImageTrack": [
    "[[ImageDecoder]]",
    "[[ImageTrackList]]",
    "[[animated]]",
    "[[frame count]]",
    "[[repetition count]]",
    "[[selected]]",
    "animated",
    "frameCount",
    "repetitionCount",
    "selected"
  ],
  "ImageTrackList": [
    "[[ready promise]]",
    "[[selected index]]",
    "[[track list]]",
    "length",
    "ready",
    "selectedIndex",
    "selectedTrack"
  ],
  "ImageTrackList/__getter__(index)": [
    "index"
  ],
  "ImportExportKind": [
    "\"function\"",
    "\"global\"",
    "\"memory\"",
    "\"table\""
  ],
  "Ink": [
    "requestPresenter()",
    "requestPresenter(param)"
  ],
  "Ink/requestPresenter()": [
    "param"
  ],
  "Ink/requestPresenter(param)": [
    "param"
  ],
  "InkPresenter": [
    "presentationArea",
    "updateInkTrailStartPoint(event, style)"
  ],
  "InkPresenter/updateInkTrailStartPoint(event, style)": [
    "event",
    "style"
  ],
  "InkPresenterParam": [
    "presentationArea"
  ],
  "InkTrailStyle": [
    "color",
    "diameter"
  ],
  "InputDeviceCapabilities": [
    "constructor()",
    "constructor(deviceInitDict)",
    "firesTouchEvents",
    "pointerMovementScrolls"
  ],
  "InputDeviceCapabilitiesInit": [
    "firesTouchEvents",
    "pointerMovementScrolls"
  ],
  "InputDeviceInfo": [
    "getCapabilities()"
  ],
  "InputEvent": [
    "InputEvent(type)",
    "InputEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data",
    "dataTransfer",
    "getTargetRanges()",
    "inputType",
    "isComposing",
    "targetRange"
  ],
  "InputEvent/InputEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "InputEvent/InputEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "InputEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "InputEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "InputEventInit": [
    "data",
    "dataTransfer",
    "inputType",
    "isComposing",
    "targetRange",
    "targetRanges"
  ],
  "InputObject": [
    "dir",
    "lang",
    "pagePath",
    "referrerInfo"
  ],
  "InstallEvent": [
    "addRoutes(rules)"
  ],
  "InstallEvent/addRoutes(rules)": [
    "rules"
  ],
  "Instance": [
    "Instance(module)",
    "Instance(module, importObject)",
    "constructor(module)",
    "constructor(module, importObject)",
    "exports"
  ],
  "Instance/Instance(module)": [
    "importObject",
    "module"
  ],
  "Instance/Instance(module, importObject)": [
    "importObject",
    "module"
  ],
  "Instance/constructor(module)": [
    "importObject",
    "module"
  ],
  "Instance/constructor(module, importObject)": [
    "importObject",
    "module"
  ],
  "InterestGroupBiddingAndScoringScriptRunnerGlobalScope": [
    "debug loss report url",
    "debug win report url",
    "forDebuggingOnly",
    "fordebuggingonly",
    "real time reporting contributions",
    "realTimeReporting",
    "realtimereporting"
  ],
  "InterestGroupBiddingScriptRunnerGlobalScope": [
    "bids",
    "expected currency",
    "group has ad components",
    "interest group",
    "is component auction",
    "multi-bid limit",
    "priority",
    "priority signals",
    "setBid()",
    "setBid(oneOrManyBids)",
    "setPriority(priority)",
    "setPrioritySignalsOverride(key)",
    "setPrioritySignalsOverride(key, priority)"
  ],
  "InterestGroupBiddingScriptRunnerGlobalScope/setBid()": [
    "oneOrManyBids"
  ],
  "InterestGroupBiddingScriptRunnerGlobalScope/setBid(oneOrManyBids)": [
    "oneOrManyBids"
  ],
  "InterestGroupBiddingScriptRunnerGlobalScope/setPriority(priority)": [
    "priority"
  ],
  "InterestGroupBiddingScriptRunnerGlobalScope/setPrioritySignalsOverride(key)": [
    "key",
    "priority"
  ],
  "InterestGroupBiddingScriptRunnerGlobalScope/setPrioritySignalsOverride(key, priority)": [
    "key",
    "priority"
  ],
  "InterestGroupReportingScriptRunnerGlobalScope": [
    "interest group",
    "registerAdBeacon(map)",
    "registerAdMacro(name, value)",
    "report url",
    "reporting beacon map",
    "reporting macro map",
    "sendReportTo(url)"
  ],
  "InterestGroupReportingScriptRunnerGlobalScope/registerAdBeacon(map)": [
    "map"
  ],
  "InterestGroupReportingScriptRunnerGlobalScope/registerAdMacro(name, value)": [
    "name",
    "value"
  ],
  "InterestGroupReportingScriptRunnerGlobalScope/sendReportTo(url)": [
    "url"
  ],
  "InterestGroupScriptRunnerGlobalScope": [
    "auction config",
    "privateAggregation"
  ],
  "IntersectionObserver": [
    "IntersectionObserver(callback)",
    "IntersectionObserver(callback, options = {})",
    "IntersectionObserver(callback, options)",
    "[[ObservationTargets]]",
    "[[QueuedEntries]]",
    "[[callback]]",
    "[[delay]]",
    "[[rootMargin]]",
    "[[scrollMargin]]",
    "[[thresholds]]",
    "[[trackVisibility]]",
    "constructor(callback)",
    "constructor(callback, options)",
    "content clip",
    "cross-origin-domain target",
    "delay",
    "disconnect()",
    "explicit root observer",
    "implicit root",
    "implicit root observer",
    "intersection root",
    "observe(target)",
    "root",
    "root intersection rectangle",
    "rootMargin",
    "same-origin-domain target",
    "scrollMargin",
    "takeRecords()",
    "target",
    "thresholds",
    "trackVisibility",
    "unobserve(target)"
  ],
  "IntersectionObserver/IntersectionObserver(callback)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/IntersectionObserver(callback, options)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/constructor(callback)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/constructor(callback, options)": [
    "callback",
    "options"
  ],
  "IntersectionObserver/observe(target)": [
    "target"
  ],
  "IntersectionObserver/unobserve(target)": [
    "target"
  ],
  "IntersectionObserverCallback": [
    "entries",
    "observer"
  ],
  "IntersectionObserverEntry": [
    "IntersectionObserverEntry(intersectionObserverEntryInit)",
    "boundingClientRect",
    "constructor(intersectionObserverEntryInit)",
    "intersectionRatio",
    "intersectionRect",
    "isIntersecting",
    "isVisible",
    "rootBounds",
    "target",
    "time"
  ],
  "IntersectionObserverEntry/IntersectionObserverEntry(intersectionObserverEntryInit)": [
    "intersectionObserverEntryInit"
  ],
  "IntersectionObserverEntry/constructor(intersectionObserverEntryInit)": [
    "intersectionObserverEntryInit"
  ],
  "IntersectionObserverEntryInit": [
    "boundingClientRect",
    "intersectionRatio",
    "intersectionRect",
    "isIntersecting",
    "isVisible",
    "rootBounds",
    "target",
    "time"
  ],
  "IntersectionObserverInit": [
    "delay",
    "root",
    "rootMargin",
    "scrollMargin",
    "threshold",
    "trackVisibility"
  ],
  "IntersectionObserverRegistration": [
    "lastUpdateTime",
    "observer",
    "previousIsIntersecting",
    "previousIsVisible",
    "previousThresholdIndex"
  ],
  "InterventionReportBody": [
    "columnNumber",
    "columnnumber",
    "id",
    "lineNumber",
    "linenumber",
    "message",
    "sourceFile",
    "sourcefile",
    "toJSON()"
  ],
  "IntrinsicSizes": [
    "[[intrinsicSizesRequest]]",
    "maxContentSize",
    "minContentSize"
  ],
  "IntrinsicSizesRequest": [
    "[[layoutChild]]"
  ],
  "IntrinsicSizesResultOptions": [
    "maxContentSize",
    "minContentSize"
  ],
  "IsInputPendingOptions": [
    "includeContinuous"
  ],
  "Issuing a credential request to an authenticator": [
    "authenticator",
    "authenticatorExtensions",
    "clientDataHash",
    "pkOptions",
    "rpId",
    "savedCredentialIds"
  ],
  "ItemDetails": [
    "description",
    "freeTrialPeriod",
    "iconURLs",
    "introductoryPrice",
    "introductoryPriceCycles",
    "introductoryPricePeriod",
    "itemId",
    "price",
    "subscriptionPeriod",
    "title",
    "type"
  ],
  "ItemType": [
    "\"product\"",
    "\"subscription\""
  ],
  "IterationCompositeOperation": [
    "\"accumulate\"",
    "\"replace\""
  ],
  "JSON": [
    "parse(text, reviver)",
    "stringify(value, replacer, space)"
  ],
  "JavaScript": [
    "ecmascript throw",
    "javascript throw"
  ],
  "JavaScript string": [
    "code point length",
    "convert",
    "length"
  ],
  "JsonLd": [
    "JsonLd"
  ],
  "JsonLdEmbed": [
    "@always",
    "@never",
    "@once"
  ],
  "JsonLdError": [
    "code",
    "message"
  ],
  "JsonLdErrorCode": [
    "IRI confused with prefix",
    "colliding keywords",
    "conflicting indexes",
    "context overflow",
    "cyclic IRI mapping",
    "invalid @id value",
    "invalid @import value",
    "invalid @included value",
    "invalid @index value",
    "invalid @nest value",
    "invalid @prefix value",
    "invalid @propagate value",
    "invalid @protected value",
    "invalid @reverse value",
    "invalid @version value",
    "invalid IRI mapping",
    "invalid JSON literal",
    "invalid base IRI",
    "invalid base direction",
    "invalid container mapping",
    "invalid context entry",
    "invalid context nullification",
    "invalid default language",
    "invalid keyword alias",
    "invalid language map value",
    "invalid language mapping",
    "invalid language-tagged string",
    "invalid language-tagged value",
    "invalid local context",
    "invalid remote context",
    "invalid reverse property",
    "invalid reverse property map",
    "invalid reverse property value",
    "invalid scoped context",
    "invalid script element",
    "invalid set or list object",
    "invalid term definition",
    "invalid type mapping",
    "invalid type value",
    "invalid typed value",
    "invalid value object",
    "invalid value object value",
    "invalid vocab mapping",
    "keyword redefinition",
    "loading document failed",
    "loading remote context failed",
    "multiple context link headers",
    "processing mode conflict",
    "protected term redefinition"
  ],
  "JsonLdFramingError": [
    "code",
    "message"
  ],
  "JsonLdFramingErrorCode": [
    "invalid @embed value",
    "invalid frame"
  ],
  "JsonLdOptions": [
    "base",
    "compactArrays",
    "compactToRelative",
    "documentLoader",
    "embed",
    "expandContext",
    "explicit",
    "extractAllScripts",
    "frameDefault",
    "frameExpansion",
    "omitDefault",
    "omitGraph",
    "ordered",
    "processingMode",
    "produceGeneralizedRdf",
    "rdfDirection",
    "requireAll",
    "useNativeTypes",
    "useRdfType"
  ],
  "JsonLdProcessor": [
    "compact()",
    "compact(input)",
    "compact(input, context)",
    "compact(input, context, options)",
    "constructor()",
    "expand()",
    "expand(input)",
    "expand(input, options)",
    "flatten()",
    "flatten(input)",
    "flatten(input, context)",
    "flatten(input, context, options)",
    "frame()",
    "frame(input, frame)",
    "frame(input, frame, options)",
    "fromRdf()",
    "fromRdf(input)",
    "fromRdf(input, options)",
    "toRdf()",
    "toRdf(input)",
    "toRdf(input, options)"
  ],
  "JsonWebKey": [
    "alg",
    "crv",
    "d",
    "dp",
    "dq",
    "e",
    "ext",
    "k",
    "key_ops",
    "kty",
    "n",
    "oth",
    "p",
    "q",
    "qi",
    "use",
    "x",
    "y"
  ],
  "KAnonStatus": [
    "\"belowThreshold\"",
    "\"notCalculated\"",
    "\"passedAndEnforced\"",
    "\"passedNotEnforced\""
  ],
  "KeyAlgorithm": [
    "name"
  ],
  "KeyFormat": [
    "jwk",
    "pkcs8",
    "raw",
    "spki"
  ],
  "KeyFrameRequestEvent": [
    "KeyFrameRequestEvent(type)",
    "KeyFrameRequestEvent(type, rid)",
    "constructor(type)",
    "constructor(type, rid)",
    "rid"
  ],
  "KeyFrameRequestEvent/KeyFrameRequestEvent(type)": [
    "rid",
    "type"
  ],
  "KeyFrameRequestEvent/KeyFrameRequestEvent(type, rid)": [
    "rid",
    "type"
  ],
  "KeyFrameRequestEvent/constructor(type)": [
    "rid",
    "type"
  ],
  "KeyFrameRequestEvent/constructor(type, rid)": [
    "rid",
    "type"
  ],
  "KeySystemTrackConfiguration": [
    "encryptionScheme",
    "robustness"
  ],
  "KeyType": [
    "private",
    "public",
    "secret"
  ],
  "KeyUsage": [
    "decrypt",
    "deriveBits",
    "deriveKey",
    "encrypt",
    "sign",
    "unwrapKey",
    "verify",
    "wrapKey"
  ],
  "Keyboard": [
    "enable keyboard lock",
    "getLayoutMap()",
    "getlayoutmap()",
    "keyboard lock task queue",
    "layoutchange",
    "lock()",
    "lock(keyCodes)",
    "onlayoutchange",
    "reserved key codes",
    "unlock()"
  ],
  "Keyboard/lock()": [
    "keyCodes"
  ],
  "Keyboard/lock(keyCodes)": [
    "keyCodes"
  ],
  "KeyboardEvent": [
    "DOM_KEY_LOCATION_LEFT",
    "DOM_KEY_LOCATION_NUMPAD",
    "DOM_KEY_LOCATION_RIGHT",
    "DOM_KEY_LOCATION_STANDARD",
    "KeyboardEvent(type)",
    "KeyboardEvent(type, eventInitDict)",
    "altKey",
    "charCode",
    "code",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "ctrlKey",
    "getModifierState(keyArg)",
    "initKeyboardEvent(typeArg)",
    "initKeyboardEvent(typeArg, bubblesArg)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey)",
    "initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey, metaKey)",
    "isComposing",
    "key",
    "keyCode",
    "location",
    "metaKey",
    "repeat",
    "shiftKey"
  ],
  "KeyboardEvent/KeyboardEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/KeyboardEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "KeyboardEvent/getModifierState(keyArg)": [
    "keyArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEvent/initKeyboardEvent(typeArg, bubblesArg, cancelableArg, viewArg, keyArg, locationArg, ctrlKey, altKey, shiftKey, metaKey)": [
    "altKey",
    "bubblesArg",
    "cancelableArg",
    "ctrlKey",
    "keyArg",
    "locationArg",
    "metaKey",
    "shiftKey",
    "typeArg",
    "viewArg"
  ],
  "KeyboardEventInit": [
    "charCode",
    "code",
    "isComposing",
    "key",
    "keyCode",
    "location",
    "repeat"
  ],
  "KeyframeAnimationOptions": [
    "id",
    "rangeEnd",
    "rangeStart",
    "timeline"
  ],
  "KeyframeEffect": [
    "KeyframeEffect(source)",
    "KeyframeEffect(target, keyframes)",
    "KeyframeEffect(target, keyframes, options)",
    "composite",
    "constructor(source)",
    "constructor(target, keyframes)",
    "constructor(target, keyframes, options)",
    "getKeyframes()",
    "iterationComposite",
    "keyframes",
    "pseudoElement",
    "setKeyframes(keyframes)",
    "target"
  ],
  "KeyframeEffect/KeyframeEffect(source)": [
    "source"
  ],
  "KeyframeEffect/KeyframeEffect(target, keyframes, options)": [
    "keyframes",
    "options",
    "target"
  ],
  "KeyframeEffect/setKeyframes": [
    "keyframes"
  ],
  "KeyframeEffect/setKeyframes(keyframes)": [
    "keyframes"
  ],
  "KeyframeEffectOptions": [
    "composite",
    "iterationComposite",
    "pseudoElement"
  ],
  "Landmark": [
    "locations",
    "type"
  ],
  "LandmarkType": [
    "\"eye\"",
    "\"mouth\"",
    "\"nose\"",
    "eye",
    "mouth",
    "nose"
  ],
  "LargeBlobSupport": [
    "\"preferred\"",
    "\"required\""
  ],
  "LargestContentfulPaint": [
    "element",
    "id",
    "loadTime",
    "loadtime",
    "renderTime",
    "rendertime",
    "size",
    "toJSON()",
    "url"
  ],
  "LatencyMode": [
    "\"quality\"",
    "\"realtime\"",
    "quality",
    "realtime"
  ],
  "LaunchParams": [
    "files",
    "targetURL"
  ],
  "LaunchQueue": [
    "setConsumer()",
    "setConsumer(consumer)"
  ],
  "LayoutChild": [
    "[[box]]",
    "[[styleMap]]",
    "[[unique id]]",
    "intrinsicSizes()",
    "layoutNextFragment(constraints, breakToken)",
    "styleMap"
  ],
  "LayoutChild/layoutNextFragment(constraints, breakToken)": [
    "breakToken",
    "constraints"
  ],
  "LayoutConstraints": [
    "LayoutConstraints()",
    "LayoutConstraints(options)",
    "availableBlockSize",
    "availableInlineSize",
    "blockFragmentationOffset",
    "blockFragmentationType",
    "data",
    "fixedBlockSize",
    "fixedInlineSize",
    "percentageBlockSize",
    "percentageInlineSize"
  ],
  "LayoutConstraints/LayoutConstraints(options)": [
    "options"
  ],
  "LayoutConstraintsOptions": [
    "availableBlockSize",
    "availableInlineSize",
    "blockFragmentationOffset",
    "blockFragmentationType",
    "data",
    "fixedBlockSize",
    "fixedInlineSize",
    "percentageBlockSize",
    "percentageInlineSize"
  ],
  "LayoutEdgeSizes": [
    "block",
    "blockEnd",
    "blockStart",
    "inline",
    "inlineEnd",
    "inlineStart"
  ],
  "LayoutEdges": [
    "all",
    "block",
    "blockEnd",
    "blockStart",
    "border",
    "inline",
    "inlineEnd",
    "inlineStart",
    "padding",
    "scrollbar"
  ],
  "LayoutFragment": [
    "[[generator]]",
    "[[layoutFragmentRequest]]",
    "[[unique id]]",
    "blockOffset",
    "blockSize",
    "breakToken",
    "data",
    "inlineOffset",
    "inlineSize"
  ],
  "LayoutFragmentRequest": [
    "[[breakToken]]",
    "[[layoutChild]]",
    "[[layoutConstraints]]"
  ],
  "LayoutOptions": [
    "childDisplay",
    "sizing"
  ],
  "LayoutShift": [
    "hadRecentInput",
    "lastInputTime",
    "sources",
    "toJSON()",
    "value"
  ],
  "LayoutShiftAttribution": [
    "currentRect",
    "node",
    "previousRect"
  ],
  "LayoutSizingMode": [
    "\"block-like\"",
    "\"manual\"",
    "block-like",
    "manual"
  ],
  "LayoutWorkletGlobalScope": [
    "registerLayout(name, layoutCtor)"
  ],
  "LayoutWorkletGlobalScope/registerLayout(name, layoutCtor)": [
    "layoutCtor",
    "name"
  ],
  "LifecycleError": [
    "dir",
    "errorDescription",
    "lang"
  ],
  "LineAlignSetting": [
    "\"center\"",
    "\"end\"",
    "\"start\"",
    "center",
    "end",
    "start"
  ],
  "LinearAccelerationSensor": [
    "LinearAccelerationSensor()",
    "LinearAccelerationSensor(options)",
    "constructor()",
    "constructor(options)"
  ],
  "LinearAccelerationSensor/LinearAccelerationSensor()": [
    "options"
  ],
  "LinearAccelerationSensor/LinearAccelerationSensor(options)": [
    "options"
  ],
  "LinearAccelerationSensor/constructor()": [
    "options"
  ],
  "LinearAccelerationSensor/constructor(options)": [
    "options"
  ],
  "LinkStyle": [
    "sheet"
  ],
  "LoadDocumentCallback": [
    "url"
  ],
  "LoadDocumentOptions": [
    "extractAllScripts",
    "profile",
    "requestProfile"
  ],
  "Location": [
    "ancestorOrigins",
    "assign(url)",
    "hash",
    "host",
    "hostname",
    "href",
    "origin",
    "pathname",
    "port",
    "protocol",
    "reload()",
    "replace(url)",
    "search"
  ],
  "Lock": [
    "mode",
    "name"
  ],
  "LockGrantedCallback": [
    "lock"
  ],
  "LockInfo": [
    "clientId",
    "mode",
    "name"
  ],
  "LockManager": [
    "query()",
    "request(name, callback)",
    "request(name, options, callback)"
  ],
  "LockManager/request(name, callback)": [
    "callback",
    "name"
  ],
  "LockManager/request(name, options, callback)": [
    "callback",
    "name",
    "options"
  ],
  "LockManagerSnapshot": [
    "held",
    "pending"
  ],
  "LockMode": [
    "\"exclusive\"",
    "\"shared\""
  ],
  "LockOptions": [
    "ifAvailable",
    "mode",
    "signal",
    "steal"
  ],
  "LoginStatus": [
    "\"logged-in\"",
    "\"logged-out\""
  ],
  "MIDIAccess": [
    "inputs",
    "onstatechange",
    "outputs",
    "sysexEnabled"
  ],
  "MIDIConnectionEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "port"
  ],
  "MIDIConnectionEventInit": [
    "port"
  ],
  "MIDIInput": [
    "onmidimessage"
  ],
  "MIDIMessageEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data"
  ],
  "MIDIMessageEventInit": [
    "data"
  ],
  "MIDIOptions": [
    "software",
    "sysex"
  ],
  "MIDIOutput": [
    "clear()",
    "send()",
    "send(data)",
    "send(data, timestamp)"
  ],
  "MIDIPort": [
    "close()",
    "connection",
    "id",
    "manufacturer",
    "name",
    "onstatechange",
    "open()",
    "state",
    "type",
    "version"
  ],
  "MIDIPortConnectionState": [
    "closed",
    "open",
    "pending"
  ],
  "MIDIPortDeviceState": [
    "connected",
    "disconnected"
  ],
  "MIDIPortType": [
    "input",
    "output"
  ],
  "MIME type": [
    "essence",
    "parameters",
    "subtype",
    "type"
  ],
  "ML": [
    "createContext()",
    "createContext(gpuDevice)",
    "createContext(options)"
  ],
  "ML/createContext(gpuDevice)": [
    "gpuDevice",
    "options"
  ],
  "ML/createContext(options)": [
    "gpuDevice",
    "options"
  ],
  "MLArgMinMaxOptions": [
    "keepDimensions",
    "outputDataType"
  ],
  "MLBatchNormalizationOptions": [
    "axis",
    "bias",
    "epsilon",
    "scale"
  ],
  "MLClampOptions": [
    "maxValue",
    "minValue"
  ],
  "MLComputeResult": [
    "inputs",
    "outputs"
  ],
  "MLContext": [
    "[[contextType]]",
    "[[deviceType]]",
    "[[powerPreference]]",
    "compute(graph, inputs, outputs)"
  ],
  "MLContext/compute(graph, inputs, outputs)": [
    "graph",
    "inputs",
    "outputs"
  ],
  "MLContextOptions": [
    "deviceType",
    "powerPreference"
  ],
  "MLConv2dFilterOperandLayout": [
    "\"hwio\"",
    "\"ihwo\"",
    "\"ohwi\"",
    "\"oihw\""
  ],
  "MLConv2dOptions": [
    "bias",
    "dilations",
    "filterLayout",
    "groups",
    "inputLayout",
    "padding",
    "strides"
  ],
  "MLConvTranspose2dFilterOperandLayout": [
    "\"hwoi\"",
    "\"iohw\"",
    "\"ohwi\""
  ],
  "MLConvTranspose2dOptions": [
    "bias",
    "dilations",
    "filterLayout",
    "groups",
    "inputLayout",
    "outputPadding",
    "outputSizes",
    "padding",
    "strides"
  ],
  "MLDeviceType": [
    "\"cpu\"",
    "\"gpu\"",
    "\"npu\"",
    "cpu",
    "gpu",
    "npu"
  ],
  "MLEluOptions": [
    "alpha"
  ],
  "MLGatherOptions": [
    "axis"
  ],
  "MLGemmOptions": [
    "aTranspose",
    "alpha",
    "bTranspose",
    "beta",
    "c"
  ],
  "MLGraph": [
    "[[context]]",
    "[[implementation]]",
    "[[inputDescriptors]]",
    "[[outputDescriptors]]"
  ],
  "MLGraphBuilder": [
    "MLGraphBuilder(context)",
    "[[context]]",
    "[[hasBuilt]]",
    "abs(input)",
    "abs(input, options)",
    "add(a, b)",
    "add(a, b, options)",
    "argMax(input, axis)",
    "argMax(input, axis, options)",
    "argMin(input, axis)",
    "argMin(input, axis, options)",
    "argminmax-op",
    "averagePool2d(input)",
    "averagePool2d(input, options)",
    "batchNormalization(input, mean, variance)",
    "batchNormalization(input, mean, variance, options)",
    "build(outputs)",
    "calculate conv output size",
    "calculate conv2d output sizes",
    "calculate convtranspose output size",
    "calculate convtranspose2d output sizes",
    "calculate matmul output sizes",
    "calculate padding output sizes",
    "calculate pool2d output sizes",
    "calculate reduction output sizes",
    "calculate resample output sizes",
    "cast(input, type)",
    "cast(input, type, options)",
    "ceil(input)",
    "ceil(input, options)",
    "check resample options",
    "clamp(input)",
    "clamp(input, options)",
    "concat(inputs, axis)",
    "concat(inputs, axis, options)",
    "constant(descriptor, bufferView)",
    "constant(type, value)",
    "constructor(context)",
    "conv2d(input, filter)",
    "conv2d(input, filter, options)",
    "convTranspose2d(input, filter)",
    "convTranspose2d(input, filter, options)",
    "cos(input)",
    "cos(input, options)",
    "create reduction operation",
    "div(a, b)",
    "div(a, b, options)",
    "element-wise-binary-op",
    "element-wise-logical-op",
    "element-wise-unary-op",
    "elu(input)",
    "elu(input, options)",
    "equal(a, b)",
    "equal(a, b, options)",
    "erf(input)",
    "erf(input, options)",
    "exp(input)",
    "exp(input, options)",
    "expand(input, newShape)",
    "expand(input, newShape, options)",
    "floor(input)",
    "floor(input, options)",
    "gather(input, indices)",
    "gather(input, indices, options)",
    "gelu(input)",
    "gelu(input, options)",
    "gemm(a, b)",
    "gemm(a, b, options)",
    "graph",
    "greater(a, b)",
    "greater(a, b, options)",
    "greaterOrEqual(a, b)",
    "greaterOrEqual(a, b, options)",
    "gru(input, weight, recurrentWeight, steps, hiddenSize)",
    "gru(input, weight, recurrentWeight, steps, hiddenSize, options)",
    "gruCell(input, weight, recurrentWeight, hiddenState, hiddenSize)",
    "gruCell(input, weight, recurrentWeight, hiddenState, hiddenSize, options)",
    "hardSigmoid(input)",
    "hardSigmoid(input, options)",
    "hardSwish(input)",
    "hardSwish(input, options)",
    "identity(input)",
    "identity(input, options)",
    "input(name, descriptor)",
    "instanceNormalization(input)",
    "instanceNormalization(input, options)",
    "l2Pool2d(input)",
    "l2Pool2d(input, options)",
    "layerNormalization(input)",
    "layerNormalization(input, options)",
    "leakyRelu(input)",
    "leakyRelu(input, options)",
    "lesser(a, b)",
    "lesser(a, b, options)",
    "lesserOrEqual(a, b)",
    "lesserOrEqual(a, b, options)",
    "linear(input)",
    "linear(input, options)",
    "log(input)",
    "log(input, options)",
    "logicalNot(a)",
    "logicalNot(a, options)",
    "lstm(input, weight, recurrentWeight, steps, hiddenSize)",
    "lstm(input, weight, recurrentWeight, steps, hiddenSize, options)",
    "lstmCell(input, weight, recurrentWeight, hiddenState, cellState, hiddenSize)",
    "lstmCell(input, weight, recurrentWeight, hiddenState, cellState, hiddenSize, options)",
    "matmul(a, b)",
    "matmul(a, b, options)",
    "max(a, b)",
    "max(a, b, options)",
    "maxPool2d(input)",
    "maxPool2d(input, options)",
    "min(a, b)",
    "min(a, b, options)",
    "mul(a, b)",
    "mul(a, b, options)",
    "neg(input)",
    "neg(input, options)",
    "pad(input, beginningPadding, endingPadding)",
    "pad(input, beginningPadding, endingPadding, options)",
    "pooling-op",
    "pow(a, b)",
    "pow(a, b, options)",
    "prelu(input, slope)",
    "prelu(input, slope, options)",
    "reciprocal(input)",
    "reciprocal(input, options)",
    "reduceL1(input)",
    "reduceL1(input, options)",
    "reduceL2(input)",
    "reduceL2(input, options)",
    "reduceLogSum(input)",
    "reduceLogSum(input, options)",
    "reduceLogSumExp(input)",
    "reduceLogSumExp(input, options)",
    "reduceMax(input)",
    "reduceMax(input, options)",
    "reduceMean(input)",
    "reduceMean(input, options)",
    "reduceMin(input)",
    "reduceMin(input, options)",
    "reduceProduct(input)",
    "reduceProduct(input, options)",
    "reduceSum(input)",
    "reduceSum(input, options)",
    "reduceSumSquare(input)",
    "reduceSumSquare(input, options)",
    "relu(input)",
    "relu(input, options)",
    "resample2d(input)",
    "resample2d(input, options)",
    "reshape(input, newShape)",
    "reshape(input, newShape, options)",
    "sigmoid(input)",
    "sigmoid(input, options)",
    "sin(input)",
    "sin(input, options)",
    "slice(input, starts, sizes)",
    "slice(input, starts, sizes, options)",
    "softmax(input, axis)",
    "softmax(input, axis, options)",
    "softplus(input)",
    "softplus(input, options)",
    "softsign(input)",
    "softsign(input, options)",
    "split(input, splits)",
    "split(input, splits, options)",
    "sqrt(input)",
    "sqrt(input, options)",
    "sub(a, b)",
    "sub(a, b, options)",
    "tan(input)",
    "tan(input, options)",
    "tanh(input)",
    "tanh(input, options)",
    "transpose(input)",
    "transpose(input, options)",
    "triangular(input)",
    "triangular(input, options)",
    "validate operand",
    "where(condition, trueValue, falseValue)",
    "where(condition, trueValue, falseValue, options)"
  ],
  "MLGraphBuilder/abs(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/add(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/argMax(input, axis, options)": [
    "axis",
    "input",
    "options"
  ],
  "MLGraphBuilder/argMin(input, axis, options)": [
    "axis",
    "input",
    "options"
  ],
  "MLGraphBuilder/averagePool2d(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/batchNormalization(input, mean, variance, options)": [
    "input",
    "mean",
    "options",
    "variance"
  ],
  "MLGraphBuilder/build(outputs)": [
    "outputs"
  ],
  "MLGraphBuilder/cast(input, type, options)": [
    "input",
    "options",
    "type"
  ],
  "MLGraphBuilder/ceil(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/clamp(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/concat(inputs, axis, options)": [
    "axis",
    "inputs",
    "options"
  ],
  "MLGraphBuilder/constant(descriptor, bufferView)": [
    "bufferView",
    "descriptor"
  ],
  "MLGraphBuilder/constant(type, value)": [
    "type",
    "value"
  ],
  "MLGraphBuilder/constructor(context)": [
    "context"
  ],
  "MLGraphBuilder/conv2d(input, filter, options)": [
    "filter",
    "input",
    "options"
  ],
  "MLGraphBuilder/convTranspose2d(input, filter, options)": [
    "filter",
    "input",
    "options"
  ],
  "MLGraphBuilder/cos(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/div(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/elu(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/equal(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/erf(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/exp(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/expand(input, newShape, options)": [
    "input",
    "newShape",
    "options"
  ],
  "MLGraphBuilder/floor(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/gather(input, indices, options)": [
    "indices",
    "input",
    "options"
  ],
  "MLGraphBuilder/gelu(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/gemm(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/greater(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/greaterOrEqual(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/gru(input, weight, recurrentWeight, steps, hiddenSize, options)": [
    "hiddenSize",
    "input",
    "options",
    "recurrentWeight",
    "steps",
    "weight"
  ],
  "MLGraphBuilder/gruCell(input, weight, recurrentWeight, hiddenState, hiddenSize, options)": [
    "hiddenSize",
    "hiddenState",
    "input",
    "options",
    "recurrentWeight",
    "weight"
  ],
  "MLGraphBuilder/hardSigmoid(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/hardSwish(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/identity(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/input(name, descriptor)": [
    "descriptor",
    "name"
  ],
  "MLGraphBuilder/instanceNormalization(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/l2Pool2d(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/layerNormalization(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/leakyRelu(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/lesser(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/lesserOrEqual(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/linear(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/log(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/logicalNot(a, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/lstm(input, weight, recurrentWeight, steps, hiddenSize, options)": [
    "hiddenSize",
    "input",
    "options",
    "recurrentWeight",
    "steps",
    "weight"
  ],
  "MLGraphBuilder/lstmCell(input, weight, recurrentWeight, hiddenState, cellState, hiddenSize, options)": [
    "cellState",
    "hiddenSize",
    "hiddenState",
    "input",
    "options",
    "recurrentWeight",
    "weight"
  ],
  "MLGraphBuilder/matmul(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/max(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/maxPool2d(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/min(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/mul(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/neg(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/pad(input, beginningPadding, endingPadding, options)": [
    "beginningPadding",
    "endingPadding",
    "input",
    "options"
  ],
  "MLGraphBuilder/pow(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/prelu(input, slope, options)": [
    "input",
    "options",
    "slope"
  ],
  "MLGraphBuilder/reciprocal(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceL1(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceL2(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceLogSum(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceLogSumExp(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceMax(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceMean(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceMin(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceProduct(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceSum(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reduceSumSquare(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/relu(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/resample2d(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/reshape(input, newShape, options)": [
    "input",
    "newShape",
    "options"
  ],
  "MLGraphBuilder/sigmoid(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/sin(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/slice(input, starts, sizes, options)": [
    "input",
    "options",
    "sizes",
    "starts"
  ],
  "MLGraphBuilder/softmax(input, axis, options)": [
    "axis",
    "input",
    "options"
  ],
  "MLGraphBuilder/softplus(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/softsign(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/split(input, splits, options)": [
    "input",
    "options",
    "splits"
  ],
  "MLGraphBuilder/sqrt(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/sub(a, b, options)": [
    "a",
    "b",
    "options"
  ],
  "MLGraphBuilder/tan(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/tanh(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/transpose(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/triangular(input, options)": [
    "input",
    "options"
  ],
  "MLGraphBuilder/where(condition, trueValue, falseValue, options)": [
    "condition",
    "falseValue",
    "options",
    "trueValue"
  ],
  "MLGruCellOptions": [
    "activations",
    "bias",
    "layout",
    "recurrentBias",
    "resetAfter"
  ],
  "MLGruOptions": [
    "activations",
    "bias",
    "direction",
    "initialHiddenState",
    "layout",
    "recurrentBias",
    "resetAfter",
    "returnSequence"
  ],
  "MLGruWeightLayout": [
    "\"rzn\"",
    "\"zrn\""
  ],
  "MLHardSigmoidOptions": [
    "alpha",
    "beta"
  ],
  "MLInputOperandLayout": [
    "\"nchw\"",
    "\"nhwc\""
  ],
  "MLInstanceNormalizationOptions": [
    "bias",
    "epsilon",
    "layout",
    "scale"
  ],
  "MLInterpolationMode": [
    "\"linear\"",
    "\"nearest-neighbor\""
  ],
  "MLLayerNormalizationOptions": [
    "axes",
    "bias",
    "epsilon",
    "scale"
  ],
  "MLLeakyReluOptions": [
    "alpha"
  ],
  "MLLinearOptions": [
    "alpha",
    "beta"
  ],
  "MLLstmCellOptions": [
    "activations",
    "bias",
    "layout",
    "peepholeWeight",
    "recurrentBias"
  ],
  "MLLstmOptions": [
    "activations",
    "bias",
    "direction",
    "initialCellState",
    "initialHiddenState",
    "layout",
    "peepholeWeight",
    "recurrentBias",
    "returnSequence"
  ],
  "MLLstmWeightLayout": [
    "\"ifgo\"",
    "\"iofg\""
  ],
  "MLNamedArrayBufferViews": [
    "transfer"
  ],
  "MLOperand": [
    "[[builder]]",
    "[[descriptor]]",
    "[[name]]",
    "[[operator]]",
    "dataType()",
    "datatype",
    "rank",
    "shape",
    "shape()"
  ],
  "MLOperandDataType": [
    "\"float16\"",
    "\"float32\"",
    "\"int32\"",
    "\"int64\"",
    "\"int8\"",
    "\"uint32\"",
    "\"uint64\"",
    "\"uint8\""
  ],
  "MLOperandDescriptor": [
    "byte length",
    "check dimensions",
    "dataType",
    "dimensions"
  ],
  "MLOperatorOptions": [
    "label"
  ],
  "MLPadOptions": [
    "mode",
    "value"
  ],
  "MLPaddingMode": [
    "\"constant\"",
    "\"edge\"",
    "\"reflection\"",
    "\"symmetric\""
  ],
  "MLPool2dOptions": [
    "dilations",
    "layout",
    "outputSizes",
    "padding",
    "roundingType",
    "strides",
    "windowDimensions"
  ],
  "MLPowerPreference": [
    "\"default\"",
    "\"high-performance\"",
    "\"low-power\"",
    "default",
    "high-performance",
    "low-power"
  ],
  "MLRecurrentNetworkActivation": [
    "\"relu\"",
    "\"sigmoid\"",
    "\"tanh\""
  ],
  "MLRecurrentNetworkDirection": [
    "\"backward\"",
    "\"both\"",
    "\"forward\""
  ],
  "MLReduceOptions": [
    "axes",
    "keepDimensions"
  ],
  "MLResample2dOptions": [
    "axes",
    "mode",
    "scales",
    "sizes"
  ],
  "MLRoundingType": [
    "\"ceil\"",
    "\"floor\""
  ],
  "MLSplitOptions": [
    "axis"
  ],
  "MLTransposeOptions": [
    "permutation"
  ],
  "MLTriangularOptions": [
    "diagonal",
    "upper"
  ],
  "Magnetometer": [
    "Magnetometer()",
    "Magnetometer(sensorOptions)",
    "constructor()",
    "constructor(sensorOptions)",
    "x",
    "y",
    "z"
  ],
  "Magnetometer/Magnetometer()": [
    "sensorOptions"
  ],
  "Magnetometer/Magnetometer(sensorOptions)": [
    "sensorOptions"
  ],
  "Magnetometer/constructor()": [
    "sensorOptions"
  ],
  "Magnetometer/constructor(sensorOptions)": [
    "sensorOptions"
  ],
  "MagnetometerLocalCoordinateSystem": [
    "\"device\"",
    "\"screen\""
  ],
  "MagnetometerSensorOptions": [
    "referenceFrame"
  ],
  "ManagedMediaSource": [
    "constructor()",
    "memory cleanup",
    "onendstreaming",
    "onstartstreaming",
    "streaming"
  ],
  "ManagedSourceBuffer": [
    "memory cleanup",
    "onbufferedchange"
  ],
  "Map": [
    "Map(iterable)",
    "clear()",
    "delete(key)",
    "entries()",
    "forEach(callback, thisArg)",
    "get(key)",
    "groupBy(items, callback)",
    "has(key)",
    "keys()",
    "set(key, value)",
    "size",
    "values()"
  ],
  "Map.prototype [ %Symbol.iterator% ] ( )": [
    "Map.prototype %Symbol.iterator% ()"
  ],
  "Mapping Entries": [
    "entries"
  ],
  "Mapping Entry": [
    "bias",
    "codepoints",
    "copycount",
    "copyindices",
    "designspacecount",
    "designspacesegments",
    "entryiddelta",
    "entryidstringlength",
    "featurecount",
    "featuretags",
    "formatflags",
    "patchencoding"
  ],
  "Math": [
    "E",
    "LN10",
    "LN2",
    "LOG10E",
    "LOG2E",
    "PI",
    "SQRT1_2",
    "SQRT2",
    "abs(x)",
    "acos(x)",
    "acosh(x)",
    "asin(x)",
    "asinh(x)",
    "atan(x)",
    "atan2(y, x)",
    "atanh(x)",
    "cbrt(x)",
    "ceil(x)",
    "clz32(x)",
    "cos(x)",
    "cosh(x)",
    "exp(x)",
    "expm1(x)",
    "floor(x)",
    "fround(x)",
    "hypot(...args)",
    "imul(x, y)",
    "log(x)",
    "log10(x)",
    "log1p(x)",
    "log2(x)",
    "max(...args)",
    "min(...args)",
    "pow(base, exponent)",
    "random()",
    "round(x)",
    "sign(x)",
    "sin(x)",
    "sinh(x)",
    "sqrt(x)",
    "tan(x)",
    "tanh(x)",
    "trunc(x)"
  ],
  "MediaCapabilities": [
    "decodingInfo(configuration)",
    "encodingInfo(configuration)"
  ],
  "MediaCapabilities/decodingInfo(configuration)": [
    "configuration"
  ],
  "MediaCapabilities/encodingInfo(configuration)": [
    "configuration"
  ],
  "MediaCapabilitiesDecodingInfo": [
    "configuration",
    "keySystemAccess"
  ],
  "MediaCapabilitiesEncodingInfo": [
    "configuration"
  ],
  "MediaCapabilitiesInfo": [
    "powerEfficient",
    "smooth",
    "supported"
  ],
  "MediaCapabilitiesKeySystemConfiguration": [
    "audio",
    "distinctiveIdentifier",
    "initDataType",
    "keySystem",
    "persistentState",
    "sessionTypes",
    "video"
  ],
  "MediaConfiguration": [
    "audio",
    "video"
  ],
  "MediaDecodingConfiguration": [
    "keySystemConfiguration",
    "type"
  ],
  "MediaDecodingType": [
    "\"file\"",
    "\"media-source\"",
    "\"webrtc\"",
    "file",
    "media-source",
    "webrtc"
  ],
  "MediaDeviceInfo": [
    "deviceId",
    "groupId",
    "kind",
    "label",
    "toJSON()"
  ],
  "MediaDeviceKind": [
    "audioinput",
    "audiooutput",
    "videoinput"
  ],
  "MediaDevices": [
    "[[AvailableCaptureActions]]",
    "[[RegisteredCaptureActions]]",
    "[[canExposeCameraInfo]]",
    "[[canExposeMicrophoneInfo]]",
    "[[devicesAccessibleMap]]",
    "[[devicesLiveMap]]",
    "[[kindsAccessibleMap]]",
    "[[mediaStreamTrackSources]]",
    "[[storedDeviceList]]",
    "enumerateDevices()",
    "getDisplayMedia()",
    "getDisplayMedia(options)",
    "getSupportedConstraints()",
    "getUserMedia()",
    "getUserMedia(constraints)",
    "getViewportMedia()",
    "getViewportMedia(constraints)",
    "oncaptureaction",
    "ondevicechange",
    "selectAudioOutput()",
    "selectAudioOutput(options)",
    "setCaptureHandleConfig()",
    "setCaptureHandleConfig(config)",
    "setSupportedCaptureActions()",
    "setSupportedCaptureActions(actions)"
  ],
  "MediaElementAudioSourceNode": [
    "MediaElementAudioSourceNode(context, options)",
    "constructor(context, options)",
    "mediaElement"
  ],
  "MediaElementAudioSourceNode/MediaElementAudioSourceNode(context, options)": [
    "context",
    "options"
  ],
  "MediaElementAudioSourceNode/constructor()": [
    "context",
    "options"
  ],
  "MediaElementAudioSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaElementAudioSourceOptions": [
    "mediaElement"
  ],
  "MediaEncodingConfiguration": [
    "type"
  ],
  "MediaEncodingType": [
    "\"record\"",
    "\"webrtc\"",
    "record",
    "webrtc"
  ],
  "MediaEncryptedEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "initData",
    "initDataType"
  ],
  "MediaEncryptedEventInit": [
    "initData",
    "initDataType"
  ],
  "MediaError": [
    "MEDIA_ERR_ABORTED",
    "MEDIA_ERR_DECODE",
    "MEDIA_ERR_NETWORK",
    "MEDIA_ERR_SRC_NOT_SUPPORTED",
    "code",
    "message"
  ],
  "MediaImage": [
    "sizes",
    "source",
    "src",
    "type"
  ],
  "MediaKeyMessageEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "message",
    "messageType"
  ],
  "MediaKeyMessageEventInit": [
    "message",
    "messageType"
  ],
  "MediaKeyMessageType": [
    "individualization-request",
    "license-release",
    "license-renewal",
    "license-request"
  ],
  "MediaKeySession": [
    "close()",
    "closed",
    "expiration",
    "generateRequest()",
    "generateRequest(initDataType, initData)",
    "keyStatuses",
    "load()",
    "load(sessionId)",
    "onkeystatuseschange",
    "onmessage",
    "remove()",
    "sessionId",
    "update()",
    "update(response)"
  ],
  "MediaKeySessionClosedReason": [
    "closed-by-application",
    "hardware-context-reset",
    "internal-error",
    "release-acknowledged",
    "resource-evicted"
  ],
  "MediaKeySessionType": [
    "persistent-license",
    "temporary"
  ],
  "MediaKeyStatus": [
    "expired",
    "internal-error",
    "output-downscaled",
    "output-restricted",
    "released",
    "status-pending",
    "usable",
    "usable-in-future"
  ],
  "MediaKeyStatusMap": [
    "get()",
    "get(keyId)",
    "has()",
    "has(keyId)",
    "size"
  ],
  "MediaKeySystemAccess": [
    "createMediaKeys()",
    "getConfiguration()",
    "keySystem"
  ],
  "MediaKeySystemConfiguration": [
    "audioCapabilities",
    "distinctiveIdentifier",
    "initDataTypes",
    "label",
    "persistentState",
    "sessionTypes",
    "videoCapabilities"
  ],
  "MediaKeySystemMediaCapability": [
    "contentType",
    "encryptionScheme",
    "robustness"
  ],
  "MediaKeys": [
    "createSession()",
    "createSession(sessionType)",
    "getStatusForPolicy()",
    "getStatusForPolicy(policy)",
    "setServerCertificate()",
    "setServerCertificate(serverCertificate)"
  ],
  "MediaKeysPolicy": [
    "minHdcpVersion"
  ],
  "MediaKeysRequirement": [
    "not-allowed",
    "optional",
    "required"
  ],
  "MediaList": [
    "appendMedium(medium)",
    "collection of media queries",
    "deleteMedium(medium)",
    "item(index)",
    "length",
    "mediaText",
    "stringification behavior"
  ],
  "MediaList/appendMedium(medium)": [
    "medium"
  ],
  "MediaList/deleteMedium(medium)": [
    "medium"
  ],
  "MediaList/item(index)": [
    "index"
  ],
  "MediaMetadata": [
    "MediaMetadata()",
    "MediaMetadata(init)",
    "album",
    "artist",
    "artwork",
    "artwork images",
    "chapter information",
    "chapterInfo",
    "constructor()",
    "constructor(init)",
    "media session",
    "title"
  ],
  "MediaMetadata/MediaMetadata()": [
    "init"
  ],
  "MediaMetadata/MediaMetadata(init)": [
    "init"
  ],
  "MediaMetadata/constructor()": [
    "init"
  ],
  "MediaMetadata/constructor(init)": [
    "init"
  ],
  "MediaMetadataInit": [
    "album",
    "artist",
    "artwork",
    "chapterInfo",
    "title"
  ],
  "MediaPositionState": [
    "duration",
    "playbackRate",
    "position"
  ],
  "MediaQueryList": [
    "addListener(callback)",
    "addListener(listener)",
    "change",
    "document",
    "matches",
    "matches state",
    "media",
    "media query list",
    "onchange",
    "removeListener(callback)",
    "removeListener(listener)"
  ],
  "MediaQueryList/addListener(callback)": [
    "callback"
  ],
  "MediaQueryList/addListener(listener)": [
    "listener"
  ],
  "MediaQueryList/removeListener(callback)": [
    "callback"
  ],
  "MediaQueryList/removeListener(listener)": [
    "listener"
  ],
  "MediaQueryListEvent": [
    "MediaQueryListEvent(type)",
    "MediaQueryListEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "matches",
    "media"
  ],
  "MediaQueryListEvent/MediaQueryListEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEvent/MediaQueryListEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MediaQueryListEventInit": [
    "matches",
    "media"
  ],
  "MediaRecorder": [
    "MediaRecorder(stream)",
    "MediaRecorder(stream, options)",
    "audioBitrateMode",
    "audioBitsPerSecond",
    "constructor(stream)",
    "constructor(stream, options)",
    "dataavailable",
    "error",
    "isTypeSupported(type)",
    "mimeType",
    "ondataavailable",
    "onerror",
    "onpause",
    "onresume",
    "onstart",
    "onstop",
    "pause",
    "pause()",
    "requestData()",
    "resume",
    "resume()",
    "start",
    "start()",
    "start(timeslice)",
    "state",
    "stop",
    "stop()",
    "stream",
    "videoBitsPerSecond"
  ],
  "MediaRecorder/MediaRecorder(stream)": [
    "options",
    "stream"
  ],
  "MediaRecorder/MediaRecorder(stream, options)": [
    "options",
    "stream"
  ],
  "MediaRecorder/constructor(stream)": [
    "options",
    "stream"
  ],
  "MediaRecorder/constructor(stream, options)": [
    "options",
    "stream"
  ],
  "MediaRecorder/isTypeSupported(type)": [
    "type"
  ],
  "MediaRecorder/start()": [
    "timeslice"
  ],
  "MediaRecorder/start(timeslice)": [
    "timeslice"
  ],
  "MediaRecorderOptions": [
    "audioBitrateMode",
    "audioBitsPerSecond",
    "bitsPerSecond",
    "mimeType",
    "videoBitsPerSecond",
    "videoKeyFrameIntervalCount",
    "videoKeyFrameIntervalDuration"
  ],
  "MediaSession": [
    "metadata",
    "playbackState",
    "setActionHandler(action, handler)",
    "setCameraActive(active)",
    "setMicrophoneActive(active)",
    "setPositionState()",
    "setPositionState(state)",
    "setScreenshareActive(active)"
  ],
  "MediaSession/setActionHandler(action, handler)": [
    "action",
    "handler"
  ],
  "MediaSession/setCameraActive(active)": [
    "active"
  ],
  "MediaSession/setMicrophoneActive(active)": [
    "active"
  ],
  "MediaSession/setPositionState()": [
    "state"
  ],
  "MediaSession/setPositionState(state)": [
    "state"
  ],
  "MediaSession/setScreenshareActive(active)": [
    "active"
  ],
  "MediaSessionAction": [
    "\"enterpictureinpicture\"",
    "\"hangup\"",
    "\"nextslide\"",
    "\"nexttrack\"",
    "\"pause\"",
    "\"play\"",
    "\"previousslide\"",
    "\"previoustrack\"",
    "\"seekbackward\"",
    "\"seekforward\"",
    "\"seekto\"",
    "\"skipad\"",
    "\"stop\"",
    "\"togglecamera\"",
    "\"togglemicrophone\"",
    "\"togglescreenshare\"",
    "\"voiceactivity\"",
    "enterpictureinpicture",
    "hangup",
    "nextslide",
    "nexttrack",
    "pause",
    "play",
    "previousslide",
    "previoustrack",
    "seekbackward",
    "seekforward",
    "seekto",
    "skipad",
    "stop",
    "togglecamera",
    "togglemicrophone",
    "togglescreenshare",
    "voiceactivity"
  ],
  "MediaSessionActionCaptureDetails": [
    "isActivating"
  ],
  "MediaSessionActionDetails": [
    "action"
  ],
  "MediaSessionActionHandler": [
    "details"
  ],
  "MediaSessionActionSeekToDetails": [
    "fastSeek"
  ],
  "MediaSessionCaptureActionDetails": [
    "isActivating"
  ],
  "MediaSessionPlaybackState": [
    "\"none\"",
    "\"paused\"",
    "\"playing\"",
    "none",
    "paused",
    "playing"
  ],
  "MediaSessionSeekActionDetails": [
    "seekOffset"
  ],
  "MediaSessionSeekToActionDetails": [
    "fastSeek",
    "seekTime"
  ],
  "MediaSettingsRange": [
    "max",
    "min",
    "step"
  ],
  "MediaSource": [
    "[[has ever been attached]]",
    "[[live seekable range]]",
    "[[port to main]]",
    "activeSourceBuffers",
    "addSourceBuffer()",
    "addSourceBuffer(type)",
    "canConstructInDedicatedWorker",
    "clearLiveSeekableRange()",
    "constructor()",
    "duration",
    "endOfStream()",
    "endOfStream(error)",
    "handle",
    "isTypeSupported()",
    "isTypeSupported(type)",
    "onsourceclose",
    "onsourceended",
    "onsourceopen",
    "readyState",
    "removeSourceBuffer()",
    "removeSourceBuffer(sourceBuffer)",
    "setLiveSeekableRange()",
    "setLiveSeekableRange(start, end)",
    "sourceBuffers"
  ],
  "MediaSourceHandle": [
    "[[Detached]]",
    "[[has ever been assigned as srcobject]]"
  ],
  "MediaStream": [
    "active",
    "add a track",
    "addTrack()",
    "addTrack(track)",
    "clone()",
    "constructor!overload-1()",
    "constructor!overload-1(stream)",
    "constructor!overload-2()",
    "constructor!overload-2(tracks)",
    "constructor()",
    "getAudioTracks()",
    "getTrackById()",
    "getTrackById(trackId)",
    "getTracks()",
    "getVideoTracks()",
    "id",
    "onaddtrack",
    "onremovetrack",
    "remove a track",
    "removeTrack()",
    "removeTrack(track)"
  ],
  "MediaStreamAudioDestinationNode": [
    "MediaStreamAudioDestinationNode(context)",
    "MediaStreamAudioDestinationNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "stream"
  ],
  "MediaStreamAudioDestinationNode/MediaStreamAudioDestinationNode(context)": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/MediaStreamAudioDestinationNode(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/constructor()": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/constructor(context)": [
    "context",
    "options"
  ],
  "MediaStreamAudioDestinationNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceNode": [
    "MediaStreamAudioSourceNode(context, options)",
    "[[input track]]",
    "constructor(context, options)",
    "mediaStream"
  ],
  "MediaStreamAudioSourceNode/MediaStreamAudioSourceNode(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceNode/constructor()": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamAudioSourceOptions": [
    "mediaStream"
  ],
  "MediaStreamConstraints": [
    "audio",
    "peerIdentity",
    "preferCurrentTab",
    "video"
  ],
  "MediaStreamTrack": [
    "[[Enabled]]",
    "[[Id]]",
    "[[Kind]]",
    "[[Label]]",
    "[[Muted]]",
    "[[ReadyState]]",
    "[[Source]]",
    "applyConstraints()",
    "applyConstraints(constraints)",
    "capturehandlechange",
    "clone()",
    "contentHint",
    "enabled",
    "ended",
    "getCapabilities()",
    "getCaptureHandle()",
    "getConstraints()",
    "getSettings()",
    "getSupportedCaptureActions()",
    "id",
    "isolated",
    "isolationchange",
    "kind",
    "label",
    "muted",
    "oncapturehandlechange",
    "onended",
    "onisolationchange",
    "onmute",
    "onunmute",
    "readyState",
    "sendCaptureAction()",
    "sendCaptureAction(action)",
    "set a track's muted state",
    "stop()",
    "track enabled state"
  ],
  "MediaStreamTrackAudioSourceNode": [
    "MediaStreamTrackAudioSourceNode(context, options)",
    "constructor(context, options)"
  ],
  "MediaStreamTrackAudioSourceNode/MediaStreamTrackAudioSourceNode(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamTrackAudioSourceNode/constructor()": [
    "context",
    "options"
  ],
  "MediaStreamTrackAudioSourceNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "MediaStreamTrackAudioSourceOptions": [
    "mediaStreamTrack"
  ],
  "MediaStreamTrackEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "track"
  ],
  "MediaStreamTrackEventInit": [
    "track"
  ],
  "MediaStreamTrackProcessor": [
    "MediaStreamTrackProcessor(init)",
    "[[isClosed]]",
    "[[maxBufferSize]]",
    "[[numPendingReads]]",
    "[[queue]]",
    "[[track]]",
    "constructor(init)",
    "readable"
  ],
  "MediaStreamTrackProcessor/MediaStreamTrackProcessor(init)": [
    "init"
  ],
  "MediaStreamTrackProcessor/constructor(init)": [
    "init"
  ],
  "MediaStreamTrackProcessorInit": [
    "maxBufferSize",
    "track"
  ],
  "MediaStreamTrackState": [
    "ended",
    "live"
  ],
  "MediaTrackCapabilities": [
    "aspectRatio",
    "autoGainControl",
    "backgroundBlur",
    "brightness",
    "channelCount",
    "colorTemperature",
    "contrast",
    "cursor",
    "deviceId",
    "displaySurface",
    "echoCancellation",
    "exposureCompensation",
    "exposureMode",
    "exposureTime",
    "facingMode",
    "focusDistance",
    "focusMode",
    "frameRate",
    "groupId",
    "height",
    "iso",
    "latency",
    "logicalSurface",
    "noiseSuppression",
    "pan",
    "resizeMode",
    "sampleRate",
    "sampleSize",
    "saturation",
    "sharpness",
    "tilt",
    "torch",
    "whiteBalanceMode",
    "width",
    "zoom"
  ],
  "MediaTrackConstraintSet": [
    "aspectRatio",
    "autoGainControl",
    "backgroundBlur",
    "brightness",
    "channelCount",
    "colorTemperature",
    "contrast",
    "cursor",
    "deviceId",
    "displaySurface",
    "echoCancellation",
    "exposureCompensation",
    "exposureMode",
    "exposureTime",
    "facingMode",
    "focusDistance",
    "focusMode",
    "frameRate",
    "groupId",
    "height",
    "iso",
    "latency",
    "logicalSurface",
    "noiseSuppression",
    "pan",
    "pointsOfInterest",
    "resizeMode",
    "restrictOwnAudio",
    "sampleRate",
    "sampleSize",
    "saturation",
    "sharpness",
    "suppressLocalAudioPlayback",
    "tilt",
    "torch",
    "whiteBalanceMode",
    "width",
    "zoom"
  ],
  "MediaTrackConstraints": [
    "advanced"
  ],
  "MediaTrackSettings": [
    "aspectRatio",
    "autoGainControl",
    "backgroundBlur",
    "brightness",
    "channelCount",
    "colorTemperature",
    "contrast",
    "cursor",
    "deviceId",
    "displaySurface",
    "echoCancellation",
    "exposureCompensation",
    "exposureMode",
    "exposureTime",
    "facingMode",
    "focusDistance",
    "focusMode",
    "frameRate",
    "groupId",
    "height",
    "iso",
    "latency",
    "logicalSurface",
    "noiseSuppression",
    "pan",
    "pointsOfInterest",
    "resizeMode",
    "restrictOwnAudio",
    "sampleRate",
    "sampleSize",
    "saturation",
    "sharpness",
    "suppressLocalAudioPlayback",
    "tilt",
    "torch",
    "whiteBalanceMode",
    "width",
    "zoom"
  ],
  "MediaTrackSupportedConstraints": [
    "aspectRatio",
    "autoGainControl",
    "backgroundBlur",
    "brightness",
    "channelCount",
    "colorTemperature",
    "contrast",
    "cursor",
    "deviceId",
    "displaySurface",
    "echoCancellation",
    "exposureCompensation",
    "exposureMode",
    "exposureTime",
    "facingMode",
    "focusDistance",
    "focusMode",
    "frameRate",
    "groupId",
    "height",
    "iso",
    "latency",
    "logicalSurface",
    "noiseSuppression",
    "pan",
    "pointsOfInterest",
    "resizeMode",
    "restrictOwnAudio",
    "sampleRate",
    "sampleSize",
    "saturation",
    "sharpness",
    "suppressLocalAudioPlayback",
    "tilt",
    "torch",
    "whiteBalanceMode",
    "width",
    "zoom"
  ],
  "Megabit": [
    "Megabit"
  ],
  "Memory": [
    "Memory(descriptor)",
    "buffer",
    "constructor(descriptor)",
    "grow(delta)",
    "toFixedLengthBuffer()",
    "toResizableBuffer()"
  ],
  "Memory/Memory(descriptor)": [
    "descriptor"
  ],
  "Memory/constructor(descriptor)": [
    "descriptor"
  ],
  "Memory/grow(delta)": [
    "delta"
  ],
  "MemoryAttribution": [
    "container",
    "scope",
    "url"
  ],
  "MemoryAttributionContainer": [
    "id",
    "src"
  ],
  "MemoryBreakdownEntry": [
    "attribution",
    "bytes",
    "types"
  ],
  "MemoryDescriptor": [
    "initial",
    "maximum"
  ],
  "MemoryMeasurement": [
    "breakdown",
    "bytes"
  ],
  "MessageChannel": [
    "port1",
    "port2"
  ],
  "MessageEvent": [
    "data",
    "initMessageEvent(type, bubbles, cancelable, data, origin, lastEventId, source, ports)",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "MessageEventInit": [
    "data",
    "lastEventId",
    "origin",
    "ports",
    "source"
  ],
  "MessagePort": [
    "close",
    "close()",
    "message",
    "messageerror",
    "onclose",
    "onmessage",
    "onmessageerror",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "start()"
  ],
  "MeteringMode": [
    "\"continuous\"",
    "\"manual\"",
    "\"none\"",
    "\"single-shot\"",
    "continuous",
    "manual",
    "none",
    "single-shot"
  ],
  "MidiPermissionDescriptor": [
    "sysex"
  ],
  "Millisecond": [
    "Millisecond"
  ],
  "MimeType": [
    "description",
    "enabledPlugin",
    "suffixes",
    "type"
  ],
  "MimeTypeArray": [
    "item(index)",
    "length",
    "namedItem(name)"
  ],
  "MiniApp manifest": [
    "name"
  ],
  "MiniApp permission resource": [
    "name"
  ],
  "MiniApp platform version resource": [
    "min_code",
    "release_type",
    "target_code"
  ],
  "MiniApp version resource": [
    "code",
    "name"
  ],
  "MiniApp widget resource": [
    "min_code",
    "name"
  ],
  "MiniApp window resource": [
    "background_color"
  ],
  "MockCameraConfiguration": [
    "defaultFrameRate",
    "facingMode"
  ],
  "MockCaptureDeviceConfiguration": [
    "deviceId",
    "groupId",
    "label"
  ],
  "MockCapturePromptResult": [
    "denied",
    "granted"
  ],
  "MockCapturePromptResultConfiguration": [
    "getDisplayMedia",
    "getUserMedia"
  ],
  "MockMicrophoneConfiguration": [
    "defaultSampleRate"
  ],
  "Module": [
    "Module(bytes)",
    "constructor(bytes)",
    "customSections(moduleObject, sectionName)",
    "exports(moduleObject)",
    "imports(moduleObject)"
  ],
  "Module Environment Records": [
    "CreateImportBinding(N, M, N2)",
    "DeleteBinding(N)",
    "GetBindingValue(N, S)",
    "GetThisBinding()",
    "HasThisBinding()"
  ],
  "Module/Module(bytes)": [
    "bytes"
  ],
  "Module/constructor(bytes)": [
    "bytes"
  ],
  "Module/customSections(moduleObject, sectionName)": [
    "moduleObject",
    "sectionName"
  ],
  "Module/exports(moduleObject)": [
    "moduleObject"
  ],
  "Module/imports(moduleObject)": [
    "moduleObject"
  ],
  "ModuleExportDescriptor": [
    "kind",
    "name"
  ],
  "ModuleImportDescriptor": [
    "kind",
    "module",
    "name"
  ],
  "MonitorTypeSurfacesEnum": [
    "exclude",
    "include"
  ],
  "MouseEvent": [
    "MouseEvent(type)",
    "MouseEvent(type, eventInitDict)",
    "altKey",
    "button",
    "buttons",
    "clientX",
    "clientY",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "ctrlKey",
    "getModifierState(keyArg)",
    "initMouseEvent(typeArg)",
    "initMouseEvent(typeArg, bubblesArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg)",
    "initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg, relatedTargetArg)",
    "layerX",
    "layerY",
    "metaKey",
    "movementX",
    "movementY",
    "offsetX",
    "offsetY",
    "pageX",
    "pageY",
    "relatedTarget",
    "screenX",
    "screenY",
    "shiftKey",
    "x",
    "y"
  ],
  "MouseEvent/MouseEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/MouseEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "MouseEvent/getModifierState(keyArg)": [
    "keyArg"
  ],
  "MouseEvent/initMouseEvent(typeArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEvent/initMouseEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg, screenXArg, screenYArg, clientXArg, clientYArg, ctrlKeyArg, altKeyArg, shiftKeyArg, metaKeyArg, buttonArg, relatedTargetArg)": [
    "altKeyArg",
    "bubblesArg",
    "buttonArg",
    "cancelableArg",
    "clientXArg",
    "clientYArg",
    "ctrlKeyArg",
    "detailArg",
    "metaKeyArg",
    "relatedTargetArg",
    "screenXArg",
    "screenYArg",
    "shiftKeyArg",
    "typeArg",
    "viewArg"
  ],
  "MouseEventInit": [
    "button",
    "buttons",
    "clientX",
    "clientY",
    "movementX",
    "movementY",
    "relatedTarget",
    "screenX",
    "screenY"
  ],
  "MultiCacheQueryOptions": [
    "cacheName"
  ],
  "MutationCallback": [
    "mutations",
    "observer"
  ],
  "MutationEvent": [
    "ADDITION",
    "MODIFICATION",
    "REMOVAL",
    "attrChange",
    "attrName",
    "initMutationEvent(typeArg)",
    "initMutationEvent(typeArg, bubblesArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg)",
    "initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg, attrChangeArg)",
    "newValue",
    "prevValue",
    "relatedNode"
  ],
  "MutationEvent/initMutationEvent(typeArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationEvent/initMutationEvent(typeArg, bubblesArg, cancelableArg, relatedNodeArg, prevValueArg, newValueArg, attrNameArg, attrChangeArg)": [
    "attrChangeArg",
    "attrNameArg",
    "bubblesArg",
    "cancelableArg",
    "newValueArg",
    "prevValueArg",
    "relatedNodeArg",
    "typeArg"
  ],
  "MutationObserver": [
    "MutationObserver(callback)",
    "callback",
    "constructor(callback)",
    "disconnect()",
    "node list",
    "observe(target)",
    "observe(target, options)",
    "record queue",
    "takeRecords()"
  ],
  "MutationObserver/MutationObserver(callback)": [
    "callback"
  ],
  "MutationObserver/constructor(callback)": [
    "callback"
  ],
  "MutationObserver/observe(target)": [
    "options",
    "target"
  ],
  "MutationObserver/observe(target, options)": [
    "options",
    "target"
  ],
  "MutationObserverInit": [
    "attributeFilter",
    "attributeOldValue",
    "attributes",
    "characterData",
    "characterDataOldValue",
    "childList",
    "subtree"
  ],
  "MutationRecord": [
    "addedNodes",
    "attributeName",
    "attributeNamespace",
    "nextSibling",
    "oldValue",
    "previousSibling",
    "removedNodes",
    "target",
    "type"
  ],
  "NDEFMakeReadOnlyOptions": [
    "signal"
  ],
  "NDEFMessage": [
    "constructor()",
    "constructor(messageInit)",
    "records"
  ],
  "NDEFMessageInit": [
    "records"
  ],
  "NDEFReader": [
    "[[ActivatedReaderList]]",
    "[[PendingMakeReadOnly]]",
    "[[PendingWrite]]",
    "[[Suspended]]",
    "[[WriteMessage]]",
    "[[WriteOptions]]",
    "constructor()",
    "makeReadOnly()",
    "makeReadOnly(options)",
    "onreading",
    "onreadingerror",
    "scan()",
    "scan(options)",
    "write()",
    "write(message)",
    "write(message, options)"
  ],
  "NDEFReadingEvent": [
    "constructor()",
    "constructor(type, readingEventInitDict)",
    "message",
    "serialNumber"
  ],
  "NDEFReadingEventInit": [
    "message",
    "serialNumber"
  ],
  "NDEFRecord": [
    "constructor()",
    "constructor(recordInit)",
    "data",
    "encoding",
    "id",
    "lang",
    "mediaType",
    "recordType",
    "toRecords()"
  ],
  "NDEFRecordInit": [
    "data",
    "encoding",
    "id",
    "lang",
    "mediaType",
    "recordType"
  ],
  "NDEFScanOptions": [
    "signal"
  ],
  "NDEFWriteOptions": [
    "overwrite",
    "signal"
  ],
  "NamedFlow": [
    "firstEmptyRegionIndex",
    "getContent()",
    "getRegions()",
    "getRegionsByContent()",
    "getRegionsByContent(node)",
    "name",
    "overset"
  ],
  "NamedFlow/getRegionsByContent()": [
    "node"
  ],
  "NamedFlow/getRegionsByContent(node)": [
    "node"
  ],
  "NamedFlowMap": [
    "delete()",
    "get()",
    "has()",
    "set()"
  ],
  "NamedFlowMap/delete()": [
    "flowName"
  ],
  "NamedFlowMap/get()": [
    "flowName"
  ],
  "NamedFlowMap/has()": [
    "flowName"
  ],
  "NamedFlowMap/set()": [
    "flowName",
    "flowValue"
  ],
  "NamedNodeMap": [
    "attribute list",
    "element",
    "getNamedItem(qualifiedName)",
    "getNamedItemNS(namespace, localName)",
    "item(index)",
    "length",
    "removeNamedItem(qualifiedName)",
    "removeNamedItemNS(namespace, localName)",
    "setNamedItem(attr)",
    "setNamedItemNS(attr)"
  ],
  "NamedNodeMap/getNamedItem(qualifiedName)": [
    "qualifiedName"
  ],
  "NamedNodeMap/getNamedItemNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "NamedNodeMap/item(index)": [
    "index"
  ],
  "NamedNodeMap/removeNamedItem(qualifiedName)": [
    "qualifiedName"
  ],
  "NamedNodeMap/removeNamedItemNS(namespace, localName)": [
    "localName",
    "namespace"
  ],
  "NamedNodeMap/setNamedItem(attr)": [
    "attr"
  ],
  "NamedNodeMap/setNamedItemNS(attr)": [
    "attr"
  ],
  "NativeError": [
    "message",
    "name"
  ],
  "NavigateEvent": [
    "canIntercept",
    "destination",
    "downloadRequest",
    "formData",
    "hasUAVisualTransition",
    "hashChange",
    "info",
    "intercept(options)",
    "navigationType",
    "scroll()",
    "signal",
    "userInitiated"
  ],
  "NavigateEventInit": [
    "canIntercept",
    "destination",
    "downloadRequest",
    "formData",
    "hasUAVisualTransition",
    "hashChange",
    "info",
    "navigationType",
    "signal",
    "userInitiated"
  ],
  "Navigation": [
    "activation",
    "back(options)",
    "canGoBack",
    "canGoForward",
    "currentEntry",
    "currententrychange",
    "entries()",
    "forward(options)",
    "navigate",
    "navigate(url, options)",
    "navigateerror",
    "navigatesuccess",
    "oncurrententrychange",
    "onnavigate",
    "onnavigateerror",
    "onnavigatesuccess",
    "reload(options)",
    "transition",
    "traverseTo(key, options)",
    "updateCurrentEntry(options)"
  ],
  "NavigationActivation": [
    "entry",
    "from",
    "navigationType"
  ],
  "NavigationCurrentEntryChangeEvent": [
    "from",
    "navigationType"
  ],
  "NavigationCurrentEntryChangeEventInit": [
    "from",
    "navigationType"
  ],
  "NavigationDestination": [
    "getState()",
    "id",
    "index",
    "key",
    "sameDocument",
    "url"
  ],
  "NavigationEvent": [
    "NavigationEvent(type)",
    "NavigationEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "dir",
    "navbeforefocus",
    "navnotarget",
    "relatedTarget"
  ],
  "NavigationEvent/NavigationEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEvent/NavigationEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NavigationEventInit": [
    "dir",
    "relatedTarget"
  ],
  "NavigationFocusReset": [
    "after-transition",
    "manual"
  ],
  "NavigationHistoryBehavior": [
    "auto",
    "push",
    "replace"
  ],
  "NavigationHistoryEntry": [
    "dispose",
    "getState()",
    "id",
    "index",
    "key",
    "ondispose",
    "sameDocument",
    "url"
  ],
  "NavigationInterceptOptions": [
    "focusReset",
    "handler",
    "scroll"
  ],
  "NavigationNavigateOptions": [
    "history",
    "state"
  ],
  "NavigationOptions": [
    "info"
  ],
  "NavigationPreloadManager": [
    "disable()",
    "enable()",
    "getState()",
    "setHeaderValue(value)"
  ],
  "NavigationPreloadManager/setHeaderValue(value)": [
    "value"
  ],
  "NavigationPreloadState": [
    "enabled",
    "headerValue"
  ],
  "NavigationResult": [
    "committed",
    "finished"
  ],
  "NavigationScrollBehavior": [
    "after-transition",
    "manual"
  ],
  "NavigationTimingType": [
    "back_forward",
    "navigate",
    "prerender",
    "reload"
  ],
  "NavigationTransition": [
    "finished",
    "from",
    "navigationType"
  ],
  "NavigationType": [
    "push",
    "reload",
    "replace",
    "traverse"
  ],
  "NavigationUpdateCurrentEntryOptions": [
    "state"
  ],
  "Navigator": [
    "3. feature query",
    "4. create a handwriting recognizer",
    "[[BatteryManager]]",
    "[[BatteryPromise]]",
    "[[gamepads]]",
    "[[hasGamepadGesture]]",
    "[[sharePromise]]",
    "adAuctionComponents(numAdComponents)",
    "audioSession",
    "bluetooth",
    "canLoadAdAuctionFencedFrame()",
    "canShare()",
    "canShare(data)",
    "clearOriginJoinedAdInterestGroups(owner)",
    "clearOriginJoinedAdInterestGroups(owner, interestGroupsToKeep)",
    "clipboard",
    "contacts",
    "contacts manager",
    "createAuctionNonce()",
    "createHandwritingRecognizer(constraint)",
    "credentials",
    "deprecatedReplaceInURN(urnOrConfig, replacements)",
    "deprecatedRunAdAuctionEnforcesKAnonymity",
    "deprecatedURNtoURL(urnOrConfig)",
    "deprecatedURNtoURL(urnOrConfig, send_reports)",
    "devicePosture",
    "doNotTrack",
    "epubReadingSystem",
    "geolocation",
    "getAutoplayPolicy(context)",
    "getAutoplayPolicy(element)",
    "getAutoplayPolicy(type)",
    "getBattery()",
    "getGamepads()",
    "getInstalledRelatedApps()",
    "getInterestGroupAdAuctionData(config)",
    "getUserMedia()",
    "getUserMedia(constraints, successCallback, errorCallback)",
    "hid",
    "identity",
    "ink",
    "joinAdInterestGroup(group)",
    "keyboard",
    "leaveAdInterestGroup()",
    "leaveAdInterestGroup(group)",
    "login",
    "managed",
    "maxTouchPoints",
    "mediaCapabilities",
    "mediaDevices",
    "mediaSession",
    "permissions",
    "preferences",
    "presentation",
    "protectedAudience",
    "queryHandwritingRecognizer(constraint)",
    "removeTrackingException()",
    "removeTrackingException(properties)",
    "requestMIDIAccess()",
    "requestMIDIAccess(options)",
    "requestMediaKeySystemAccess()",
    "requestMediaKeySystemAccess(keySystem, supportedConfigurations)",
    "runAdAuction(config)",
    "scheduling",
    "sendBeacon()",
    "sendBeacon(url)",
    "sendBeacon(url, data)",
    "serial",
    "serviceWorker",
    "share()",
    "share(data)",
    "smartCard",
    "storeTrackingException()",
    "storeTrackingException(properties)",
    "trackingExceptionExists()",
    "trackingExceptionExists(properties)",
    "updateAdInterestGroups()",
    "usb",
    "userActivation",
    "vibrate()",
    "vibrate(pattern)",
    "virtualKeyboard",
    "wakeLock",
    "windowControlsOverlay",
    "xr"
  ],
  "Navigator/adAuctionComponents(numAdComponents)": [
    "numAdComponents"
  ],
  "Navigator/clearOriginJoinedAdInterestGroups(owner)": [
    "interestGroupsToKeep",
    "owner"
  ],
  "Navigator/clearOriginJoinedAdInterestGroups(owner, interestGroupsToKeep)": [
    "interestGroupsToKeep",
    "owner"
  ],
  "Navigator/createHandwritingRecognizer(constraint)": [
    "constraint"
  ],
  "Navigator/deprecatedReplaceInURN(urnOrConfig, replacements)": [
    "replacements",
    "urnOrConfig"
  ],
  "Navigator/deprecatedURNtoURL(urnOrConfig)": [
    "send_reports",
    "urnOrConfig"
  ],
  "Navigator/deprecatedURNtoURL(urnOrConfig, send_reports)": [
    "send_reports",
    "urnOrConfig"
  ],
  "Navigator/getAutoplayPolicy(context)": [
    "context"
  ],
  "Navigator/getAutoplayPolicy(element)": [
    "element"
  ],
  "Navigator/getAutoplayPolicy(type)": [
    "type"
  ],
  "Navigator/getInterestGroupAdAuctionData(config)": [
    "config"
  ],
  "Navigator/joinAdInterestGroup(group)": [
    "group"
  ],
  "Navigator/leaveAdInterestGroup()": [
    "group"
  ],
  "Navigator/leaveAdInterestGroup(group)": [
    "group"
  ],
  "Navigator/queryHandwritingRecognizer(constraint)": [
    "constraint"
  ],
  "Navigator/runAdAuction(config)": [
    "config"
  ],
  "NavigatorAutomationInformation": [
    "webdriver"
  ],
  "NavigatorBadge": [
    "clearAppBadge()",
    "setAppBadge()",
    "setAppBadge(contents)"
  ],
  "NavigatorConcurrentHardware": [
    "navigator.hardwareConcurrency"
  ],
  "NavigatorContentUtils": [
    "registerProtocolHandler(scheme, url)",
    "unregisterProtocolHandler(scheme, url)"
  ],
  "NavigatorCookies": [
    "cookieEnabled"
  ],
  "NavigatorDeviceMemory": [
    "deviceMemory"
  ],
  "NavigatorGPU": [
    "gpu"
  ],
  "NavigatorID": [
    "appCodeName",
    "appName",
    "appVersion",
    "oscpu",
    "platform",
    "product",
    "productSub",
    "taintEnabled()",
    "userAgent",
    "vendor",
    "vendorSub"
  ],
  "NavigatorLanguage": [
    "language",
    "languages"
  ],
  "NavigatorLocks": [
    "locks"
  ],
  "NavigatorLogin": [
    "setStatus(status)"
  ],
  "NavigatorLogin/setStatus(status)": [
    "status"
  ],
  "NavigatorML": [
    "ml"
  ],
  "NavigatorManagedData": [
    "getAnnotatedAssetId()",
    "getAnnotatedLocation()",
    "getDirectoryId()",
    "getHostname()",
    "getManagedConfiguration(keys)",
    "getSerialNumber()",
    "onmanagedconfigurationchange"
  ],
  "NavigatorManagedData/getManagedConfiguration(keys)": [
    "keys"
  ],
  "NavigatorNetworkInformation": [
    "connection"
  ],
  "NavigatorOnLine": [
    "onLine"
  ],
  "NavigatorPlugins": [
    "javaEnabled()",
    "mimeTypes",
    "pdfViewerEnabled",
    "plugins"
  ],
  "NavigatorStorage": [
    "storage"
  ],
  "NavigatorStorageBuckets": [
    "storageBuckets"
  ],
  "NavigatorUA": [
    "getHighEntropyValues(hints)",
    "toJSON()",
    "userAgentData"
  ],
  "NavigatorUABrandVersion": [
    "brand",
    "version"
  ],
  "NavigatorUAData": [
    "brands",
    "getHighEntropyValues(hints)",
    "mobile",
    "platform",
    "toJSON()"
  ],
  "NavigatorUAData/getHighEntropyValues(hints)": [
    "hints"
  ],
  "NetworkInformation": [
    "downlink",
    "downlinkMax",
    "effectiveType",
    "onchange",
    "rtt",
    "type"
  ],
  "NetworkInformationSaveData": [
    "NetworkInformationSaveData",
    "saveData"
  ],
  "Node": [
    "ATTRIBUTE_NODE",
    "CDATA_SECTION_NODE",
    "COMMENT_NODE",
    "DOCUMENT_FRAGMENT_NODE",
    "DOCUMENT_NODE",
    "DOCUMENT_POSITION_CONTAINED_BY",
    "DOCUMENT_POSITION_CONTAINS",
    "DOCUMENT_POSITION_DISCONNECTED",
    "DOCUMENT_POSITION_FOLLOWING",
    "DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC",
    "DOCUMENT_POSITION_PRECEDING",
    "DOCUMENT_TYPE_NODE",
    "ELEMENT_NODE",
    "ENTITY_NODE",
    "ENTITY_REFERENCE_NODE",
    "NOTATION_NODE",
    "PROCESSING_INSTRUCTION_NODE",
    "TEXT_NODE",
    "appendChild(node)",
    "baseURI",
    "childNodes",
    "cloneNode()",
    "cloneNode(deep)",
    "compareDocumentPosition(other)",
    "contains(other)",
    "empty",
    "ensure pre-insertion validity",
    "equals",
    "firstChild",
    "getFeature()",
    "getRootNode()",
    "getRootNode(options)",
    "getUserData()",
    "hasChildNodes()",
    "insertBefore(node, child)",
    "isConnected",
    "isDefaultNamespace(namespace)",
    "isEqualNode(otherNode)",
    "isSameNode(otherNode)",
    "isSupported",
    "language",
    "lastChild",
    "length",
    "lookupNamespaceURI(prefix)",
    "lookupPrefix(namespace)",
    "nextSibling",
    "node document",
    "nodeName",
    "nodeType",
    "nodeValue",
    "normalize()",
    "ownerDocument",
    "parentElement",
    "parentNode",
    "previousSibling",
    "removeChild(child)",
    "replace all",
    "replaceChild(node, child)",
    "setUserData()",
    "supported tokens",
    "textContent"
  ],
  "Node/appendChild(node)": [
    "node"
  ],
  "Node/cloneNode()": [
    "deep"
  ],
  "Node/cloneNode(deep)": [
    "deep"
  ],
  "Node/compareDocumentPosition(other)": [
    "other"
  ],
  "Node/contains(other)": [
    "other"
  ],
  "Node/getRootNode()": [
    "options"
  ],
  "Node/getRootNode(options)": [
    "options"
  ],
  "Node/insertBefore(node, child)": [
    "child",
    "node"
  ],
  "Node/isDefaultNamespace(namespace)": [
    "namespace"
  ],
  "Node/isEqualNode(otherNode)": [
    "otherNode"
  ],
  "Node/isSameNode(otherNode)": [
    "otherNode"
  ],
  "Node/lookupNamespaceURI(prefix)": [
    "prefix"
  ],
  "Node/lookupPrefix(namespace)": [
    "namespace"
  ],
  "Node/removeChild(child)": [
    "child"
  ],
  "Node/replaceChild(node, child)": [
    "child",
    "node"
  ],
  "NodeFilter": [
    "FILTER_ACCEPT",
    "FILTER_REJECT",
    "FILTER_SKIP",
    "SHOW_ALL",
    "SHOW_ATTRIBUTE",
    "SHOW_CDATA_SECTION",
    "SHOW_COMMENT",
    "SHOW_DOCUMENT",
    "SHOW_DOCUMENT_FRAGMENT",
    "SHOW_DOCUMENT_TYPE",
    "SHOW_ELEMENT",
    "SHOW_ENTITY",
    "SHOW_ENTITY_REFERENCE",
    "SHOW_NOTATION",
    "SHOW_PROCESSING_INSTRUCTION",
    "SHOW_TEXT",
    "acceptNode(node)"
  ],
  "NodeFilter/acceptNode(node)": [
    "node"
  ],
  "NodeIterator": [
    "detach()",
    "expandEntityReferences",
    "filter",
    "iterator collection",
    "nextNode()",
    "pointer before reference",
    "pointerBeforeReferenceNode",
    "previousNode()",
    "reference",
    "referenceNode",
    "root",
    "traverse",
    "whatToShow"
  ],
  "NodeList": [
    "item(index)",
    "length"
  ],
  "NodeList/item(index)": [
    "index"
  ],
  "NonDocumentTypeChildNode": [
    "nextElementSibling",
    "previousElementSibling"
  ],
  "NonElementParentNode": [
    "getElementById(elementId)"
  ],
  "NonElementParentNode/getElementById(elementId)": [
    "elementId"
  ],
  "NotRestoredReasonDetails": [
    "reason"
  ],
  "NotRestoredReasons": [
    "children",
    "id",
    "name",
    "reasons",
    "src",
    "url"
  ],
  "Notification": [
    "Notification(title)",
    "Notification(title, options)",
    "actions",
    "badge",
    "body",
    "close()",
    "constructor(title)",
    "constructor(title, options)",
    "data",
    "dir",
    "icon",
    "image",
    "lang",
    "maxActions",
    "onclick",
    "onclose",
    "onerror",
    "onshow",
    "permission",
    "renotify",
    "requestPermission()",
    "requestPermission(deprecatedCallback)",
    "requireInteraction",
    "silent",
    "tag",
    "timestamp",
    "title",
    "vibrate"
  ],
  "Notification/Notification(title)": [
    "options",
    "title"
  ],
  "Notification/Notification(title, options)": [
    "options",
    "title"
  ],
  "Notification/constructor(title)": [
    "options",
    "title"
  ],
  "Notification/constructor(title, options)": [
    "options",
    "title"
  ],
  "Notification/requestPermission()": [
    "deprecatedCallback"
  ],
  "Notification/requestPermission(deprecatedCallback)": [
    "deprecatedCallback"
  ],
  "NotificationAction": [
    "action",
    "icon",
    "title"
  ],
  "NotificationDirection": [
    "\"auto\"",
    "\"ltr\"",
    "\"rtl\""
  ],
  "NotificationEvent": [
    "NotificationEvent(type, eventInitDict)",
    "action",
    "constructor(type, eventInitDict)",
    "notification"
  ],
  "NotificationEvent/NotificationEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NotificationEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "NotificationEventInit": [
    "action",
    "notification"
  ],
  "NotificationOptions": [
    "actions",
    "badge",
    "body",
    "data",
    "dir",
    "icon",
    "image",
    "lang",
    "renotify",
    "requireInteraction",
    "silent",
    "tag",
    "timestamp",
    "vibrate"
  ],
  "NotificationPermission": [
    "\"default\"",
    "\"denied\"",
    "\"granted\""
  ],
  "NotificationPermissionCallback": [
    "permission"
  ],
  "Number": [
    "EPSILON",
    "MAX_SAFE_INTEGER",
    "MAX_VALUE",
    "MIN_SAFE_INTEGER",
    "MIN_VALUE",
    "NEGATIVE_INFINITY",
    "NaN",
    "Number(value)",
    "POSITIVE_INFINITY",
    "isFinite(number)",
    "isInteger(number)",
    "isNaN(number)",
    "isSafeInteger(number)",
    "parseFloat(string)",
    "parseInt(string, radix)",
    "toExponential(fractionDigits)",
    "toFixed(fractionDigits)",
    "toLocaleString(reserved1, reserved2)",
    "toPrecision(precision)",
    "toString(radix)",
    "valueOf()"
  ],
  "OS debug data type": [
    "os-source-delegated",
    "os-trigger-delegated"
  ],
  "OS registration": [
    "debug reporting enabled",
    "url"
  ],
  "OTPCredential": [
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)",
    "[[type]]",
    "code"
  ],
  "OTPCredentialRequestOptions": [
    "transport"
  ],
  "OTPCredentialTransportType": [
    "\"sms\"",
    "sms"
  ],
  "Object": [
    "Object(value)",
    "assign(target, ...sources)",
    "create(O, Properties)",
    "defineProperties(O, Properties)",
    "defineProperty(O, P, Attributes)",
    "entries(O)",
    "freeze(O)",
    "fromEntries(iterable)",
    "getOwnPropertyDescriptor(O, P)",
    "getOwnPropertyDescriptors(O)",
    "getOwnPropertyNames(O)",
    "getOwnPropertySymbols(O)",
    "getPrototypeOf(O)",
    "groupBy(items, callback)",
    "hasOwn(O, P)",
    "hasOwnProperty(V)",
    "is(value1, value2)",
    "isExtensible(O)",
    "isFrozen(O)",
    "isPrototypeOf(V)",
    "isSealed(O)",
    "keys(O)",
    "preventExtensions(O)",
    "propertyIsEnumerable(V)",
    "seal(O)",
    "setPrototypeOf(O, proto)",
    "toLocaleString(reserved1, reserved2)",
    "toString()",
    "valueOf()",
    "values(O)"
  ],
  "Object Environment Records": [
    "CreateImmutableBinding(N, S)",
    "CreateMutableBinding(N, D)",
    "DeleteBinding(N)",
    "GetBindingValue(N, S)",
    "HasBinding(N)",
    "HasSuperBinding()",
    "HasThisBinding()",
    "InitializeBinding(N, V)",
    "SetMutableBinding(N, V, S)",
    "WithBaseObject()"
  ],
  "OfflineAudioCompletionEvent": [
    "OfflineAudioCompletionEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "renderedBuffer"
  ],
  "OfflineAudioCompletionEvent/OfflineAudioCompletionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "OfflineAudioCompletionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "OfflineAudioCompletionEventInit": [
    "renderedBuffer"
  ],
  "OfflineAudioContext": [
    "OfflineAudioContext(contextOptions)",
    "OfflineAudioContext(numberOfChannels, length, sampleRate)",
    "[[rendered buffer]]",
    "[[rendering started]]",
    "complete",
    "constructor(contextOptions)",
    "constructor(numberOfChannels, length, sampleRate)",
    "length",
    "oncomplete",
    "resume()",
    "startRendering()",
    "suspend(suspendTime)"
  ],
  "OfflineAudioContext/constructor(contextOptions)": [
    "contextOptions"
  ],
  "OfflineAudioContext/constructor(numberOfChannels, length, sampleRate)": [
    "length",
    "numberOfChannels",
    "sampleRate"
  ],
  "OfflineAudioContext/suspend()": [
    "suspendTime"
  ],
  "OfflineAudioContext/suspend(suspendTime)": [
    "suspendTime"
  ],
  "OfflineAudioContextOptions": [
    "length",
    "numberOfChannels",
    "renderSizeHint",
    "sampleRate"
  ],
  "OffscreenCanvas": [
    "OffscreenCanvas(width, height)",
    "canvas",
    "contextlost",
    "contextrestored",
    "convertToBlob(options)",
    "getContext(contextId, options)",
    "height",
    "oncontextlost",
    "oncontextrestored",
    "transferToImageBitmap()",
    "width"
  ],
  "OpaqueProperty": [
    "\"opaque\""
  ],
  "OpenFilePickerOptions": [
    "multiple"
  ],
  "OperatingPointSelectorProperty": [
    "a1op"
  ],
  "OperationType": [
    "\"send-redemption-record\"",
    "\"token-redemption\"",
    "\"token-request\""
  ],
  "OptionalEffectTiming": [
    "delay",
    "direction",
    "duration",
    "easing",
    "endDelay",
    "fill",
    "iterationStart",
    "iterations",
    "playbackRate"
  ],
  "OpusApplication": [
    "\"audio\"",
    "\"lowdelay\"",
    "\"voip\"",
    "audio",
    "lowdelay",
    "voip"
  ],
  "OpusBitstreamFormat": [
    "\"ogg\"",
    "\"opus\"",
    "ogg",
    "opus"
  ],
  "OpusEncoderConfig": [
    "application",
    "complexity",
    "format",
    "frameDuration",
    "packetlossperc",
    "signal",
    "usedtx",
    "useinbandfec"
  ],
  "OpusSignal": [
    "\"auto\"",
    "\"music\"",
    "\"voice\"",
    "auto",
    "music",
    "voice"
  ],
  "OrientationLockType": [
    "any",
    "landscape",
    "landscape-primary",
    "landscape-secondary",
    "natural",
    "portrait",
    "portrait-primary",
    "portrait-secondary"
  ],
  "OrientationSensor": [
    "populateMatrix(targetMatrix)",
    "quaternion"
  ],
  "OrientationSensor/populateMatrix(targetMatrix)": [
    "targetMatrix"
  ],
  "OrientationSensorLocalCoordinateSystem": [
    "\"device\"",
    "\"screen\""
  ],
  "OrientationSensorOptions": [
    "referenceFrame"
  ],
  "OrientationType": [
    "landscape-primary",
    "landscape-secondary",
    "portrait-primary",
    "portrait-secondary"
  ],
  "OscillatorNode": [
    "OscillatorNode(context)",
    "OscillatorNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "detune",
    "frequency",
    "setPeriodicWave(periodicWave)",
    "type"
  ],
  "OscillatorNode/OscillatorNode(context)": [
    "context",
    "options"
  ],
  "OscillatorNode/OscillatorNode(context, options)": [
    "context",
    "options"
  ],
  "OscillatorNode/constructor()": [
    "context",
    "options"
  ],
  "OscillatorNode/constructor(context)": [
    "context",
    "options"
  ],
  "OscillatorNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "OscillatorNode/setPeriodicWave()": [
    "periodicWave"
  ],
  "OscillatorNode/setPeriodicWave(periodicWave)": [
    "periodicWave"
  ],
  "OscillatorOptions": [
    "detune",
    "frequency",
    "periodicWave",
    "type"
  ],
  "OscillatorType": [
    "\"custom\"",
    "\"sawtooth\"",
    "\"sine\"",
    "\"square\"",
    "\"triangle\"",
    "custom",
    "sawtooth",
    "sine",
    "square",
    "triangle"
  ],
  "OverSampleType": [
    "\"2x\"",
    "\"4x\"",
    "\"none\"",
    "2x",
    "4x",
    "none"
  ],
  "OverconstrainedError": [
    "constraint",
    "constructor()",
    "constructor(constraint)",
    "constructor(constraint, message)"
  ],
  "OverscrollEvent": [
    "OverscrollEvent",
    "deltaX",
    "deltaY"
  ],
  "OverscrollEventInit": [
    "OverscrollEventInit",
    "deltaX",
    "deltaY"
  ],
  "PADebugModeOptions": [
    "debugKey"
  ],
  "PAExtendedHistogramContribution": [
    "bucket",
    "filteringId",
    "value"
  ],
  "PAHistogramContribution": [
    "bucket",
    "filteringId",
    "value"
  ],
  "PASignalValue": [
    "baseValue",
    "offset",
    "scale"
  ],
  "POST resource": [
    "request body",
    "request content-type"
  ],
  "PUAP1KeyAgmnt": [
    "key agreement key",
    "public point"
  ],
  "PUAToken": [
    "in use",
    "in use flag",
    "initial usage time limit",
    "max usage time period",
    "not in use",
    "pinuvauthtoken",
    "rolling timer",
    "state variables",
    "usage timer",
    "user present time limit",
    "userpresent flag",
    "userverified flag"
  ],
  "Page": [
    "onpagehidden",
    "onpageloaded",
    "onpageready",
    "onpageshown",
    "onpageunloaded",
    "pageInputObject",
    "pageState"
  ],
  "PageInputObject": [
    "pageInputQuery"
  ],
  "PageRevealEvent": [
    "viewTransition"
  ],
  "PageRevealEventInit": [
    "viewTransition"
  ],
  "PageState": [
    "hidden",
    "loaded",
    "ready",
    "shown",
    "unloaded"
  ],
  "PageSwapEvent": [
    "activation",
    "viewTransition"
  ],
  "PageSwapEventInit": [
    "activation",
    "viewTransition"
  ],
  "PageTransitionEvent": [
    "persisted"
  ],
  "PaintRenderingContext2D": [
    "alpha",
    "output bitmap"
  ],
  "PaintRenderingContext2DSettings": [
    "alpha"
  ],
  "PaintSize": [
    "height",
    "width"
  ],
  "PaintWorkletGlobalScope": [
    "devicePixelRatio",
    "registerPaint(name, paintCtor)"
  ],
  "PaintWorkletGlobalScope/registerPaint(name, paintCtor)": [
    "name",
    "paintCtor"
  ],
  "PannerNode": [
    "PannerNode(context)",
    "PannerNode(context, options)",
    "coneInnerAngle",
    "coneOuterAngle",
    "coneOuterGain",
    "constructor(context)",
    "constructor(context, options)",
    "distanceModel",
    "maxDistance",
    "orientationX",
    "orientationY",
    "orientationZ",
    "panningModel",
    "positionX",
    "positionY",
    "positionZ",
    "refDistance",
    "rolloffFactor",
    "setOrientation(x, y, z)",
    "setPosition(x, y, z)"
  ],
  "PannerNode/PannerNode(context)": [
    "context",
    "options"
  ],
  "PannerNode/PannerNode(context, options)": [
    "context",
    "options"
  ],
  "PannerNode/constructor()": [
    "context",
    "options"
  ],
  "PannerNode/constructor(context)": [
    "context",
    "options"
  ],
  "PannerNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "PannerNode/setOrientation()": [
    "x",
    "y",
    "z"
  ],
  "PannerNode/setOrientation(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "PannerNode/setPosition()": [
    "x",
    "y",
    "z"
  ],
  "PannerNode/setPosition(x, y, z)": [
    "x",
    "y",
    "z"
  ],
  "PannerOptions": [
    "coneInnerAngle",
    "coneOuterAngle",
    "coneOuterGain",
    "distanceModel",
    "maxDistance",
    "orientationX",
    "orientationY",
    "orientationZ",
    "panningModel",
    "positionX",
    "positionY",
    "positionZ",
    "refDistance",
    "rolloffFactor"
  ],
  "PanningModelType": [
    "\"HRTF\"",
    "\"equalpower\"",
    "HRTF",
    "equalpower"
  ],
  "ParentNode": [
    "append()",
    "append(...nodes)",
    "childElementCount",
    "children",
    "firstElementChild",
    "lastElementChild",
    "prepend()",
    "prepend(...nodes)",
    "querySelector(selectors)",
    "querySelectorAll(selectors)",
    "replaceChildren()",
    "replaceChildren(...nodes)"
  ],
  "ParentNode/append()": [
    "nodes"
  ],
  "ParentNode/append(...nodes)": [
    "nodes"
  ],
  "ParentNode/prepend()": [
    "nodes"
  ],
  "ParentNode/prepend(...nodes)": [
    "nodes"
  ],
  "ParentNode/querySelector(selectors)": [
    "selectors"
  ],
  "ParentNode/querySelectorAll(selectors)": [
    "selectors"
  ],
  "ParentNode/replaceChildren()": [
    "nodes"
  ],
  "ParentNode/replaceChildren(...nodes)": [
    "nodes"
  ],
  "ParityType": [
    "even",
    "none",
    "odd"
  ],
  "PasswordCredential": [
    "PasswordCredential(data)",
    "PasswordCredential(form)",
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "constructor(data)",
    "constructor(form)",
    "password"
  ],
  "PasswordCredential/PasswordCredential(data)": [
    "data"
  ],
  "PasswordCredential/PasswordCredential(form)": [
    "form"
  ],
  "PasswordCredential/constructor(data)": [
    "data"
  ],
  "PasswordCredential/constructor(form)": [
    "form"
  ],
  "PasswordCredentialData": [
    "iconURL",
    "name",
    "origin",
    "password"
  ],
  "Path2D": [
    "Path2D(path)",
    "addPath(path, transform)"
  ],
  "PayerErrors": [
    "email",
    "name",
    "phone"
  ],
  "Payment Method": [
    "additional data type"
  ],
  "PaymentComplete": [
    "fail",
    "success",
    "unknown"
  ],
  "PaymentCompleteDetails": [
    "data"
  ],
  "PaymentCredentialInstrument": [
    "displayName",
    "icon",
    "iconMustBeShown"
  ],
  "PaymentCurrencyAmount": [
    "currency",
    "value"
  ],
  "PaymentDelegation": [
    "payerEmail",
    "payerName",
    "payerPhone",
    "shippingAddress"
  ],
  "PaymentDetailsBase": [
    "displayItems",
    "modifiers",
    "shippingOptions"
  ],
  "PaymentDetailsInit": [
    "id",
    "total"
  ],
  "PaymentDetailsModifier": [
    "additionalDisplayItems",
    "data",
    "supportedMethods",
    "total"
  ],
  "PaymentDetailsUpdate": [
    "error",
    "payerErrors",
    "paymentMethodErrors",
    "shippingAddressErrors",
    "total"
  ],
  "PaymentHandlerResponse": [
    "details",
    "methodName",
    "payerEmail",
    "payerName",
    "payerPhone",
    "shippingAddress",
    "shippingOption"
  ],
  "PaymentItem": [
    "amount",
    "label",
    "pending"
  ],
  "PaymentManager": [
    "enableDelegations()",
    "enableDelegations(delegations)",
    "userHint"
  ],
  "PaymentMethodChangeEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "methodDetails",
    "methodName"
  ],
  "PaymentMethodChangeEventInit": [
    "methodDetails",
    "methodName"
  ],
  "PaymentMethodData": [
    "data",
    "supportedMethods"
  ],
  "PaymentOptions": [
    "requestBillingAddress",
    "requestPayerEmail",
    "requestPayerName",
    "requestPayerPhone",
    "requestShipping",
    "shippingType"
  ],
  "PaymentRequest": [
    "[[acceptPromise]]",
    "[[details]]",
    "[[handler]]",
    "[[options]]",
    "[[response]]",
    "[[serializedMethodData]]",
    "[[serializedModifierData]]",
    "[[state]]",
    "[[updating]]",
    "abort()",
    "canMakePayment()",
    "closed",
    "constructor()",
    "constructor(methodData, details)",
    "constructor(methodData, details, options)",
    "created",
    "id",
    "interactive",
    "isSecurePaymentConfirmationAvailable()",
    "onpaymentmethodchange",
    "onshippingaddresschange",
    "onshippingoptionchange",
    "shippingAddress",
    "shippingOption",
    "shippingType",
    "show()",
    "show(detailsPromise)",
    "state"
  ],
  "PaymentRequestDetailsUpdate": [
    "error",
    "modifiers",
    "paymentMethodErrors",
    "shippingAddressErrors",
    "shippingOptions",
    "total"
  ],
  "PaymentRequestEvent": [
    "[[respondWithCalled]]",
    "[[windowClient]]",
    "changePaymentMethod()",
    "changePaymentMethod(methodName)",
    "changePaymentMethod(methodName, methodDetails)",
    "changeShippingAddress()",
    "changeShippingAddress(shippingAddress)",
    "changeShippingOption()",
    "changeShippingOption(shippingOption)",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "methodData",
    "modifiers",
    "openWindow()",
    "openWindow(url)",
    "paymentOptions",
    "paymentRequestId",
    "paymentRequestOrigin",
    "respondWith()",
    "respondWith(handlerResponsePromise)",
    "shippingOptions",
    "topOrigin",
    "total"
  ],
  "PaymentRequestEventInit": [
    "methodData",
    "modifiers",
    "paymentOptions",
    "paymentRequestId",
    "paymentRequestOrigin",
    "shippingOptions",
    "topOrigin",
    "total"
  ],
  "PaymentRequestUpdateEvent": [
    "Constructor",
    "PaymentRequestUpdateEvent.PaymentRequestUpdateEvent()",
    "[[waitForUpdate]]",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "updateWith()",
    "updateWith(detailsPromise)"
  ],
  "PaymentResponse": [
    "[[complete]]",
    "[[request]]",
    "[[retryPromise]]",
    "complete()",
    "complete(result)",
    "complete(result, details)",
    "details",
    "methodName",
    "onpayerdetailchange",
    "payerEmail",
    "payerName",
    "payerPhone",
    "requestId",
    "retry()",
    "retry(errorFields)",
    "shippingAddress",
    "shippingOption"
  ],
  "PaymentShippingOption": [
    "amount",
    "id",
    "label",
    "selected"
  ],
  "PaymentShippingType": [
    "delivery",
    "pickup",
    "shipping"
  ],
  "PaymentValidationErrors": [
    "error",
    "payer",
    "paymentMethod",
    "shippingAddress"
  ],
  "Pbkdf2Params": [
    "hash",
    "iterations",
    "salt"
  ],
  "Per table brotli patch": [
    "compatibilityid",
    "format",
    "patches"
  ],
  "Performance": [
    "clearMarks()",
    "clearMarks(markName)",
    "clearMeasures()",
    "clearMeasures(measureName)",
    "clearResourceTimings()",
    "eventCounts",
    "getEntries()",
    "getEntriesByName()",
    "getEntriesByName(name)",
    "getEntriesByName(name, type)",
    "getEntriesByType()",
    "getEntriesByType(type)",
    "interactionCount",
    "mark()",
    "mark(markName)",
    "mark(markName, markOptions)",
    "measure()",
    "measure(measureName)",
    "measure(measureName, startOrMeasureOptions)",
    "measure(measureName, startOrMeasureOptions, endMark)",
    "measureUserAgentSpecificMemory()",
    "navigation",
    "now()",
    "onresourcetimingbufferfull",
    "setResourceTimingBufferSize()",
    "setResourceTimingBufferSize(maxSize)",
    "timeOrigin",
    "timing",
    "toJSON()"
  ],
  "PerformanceElementTiming": [
    "element",
    "id",
    "identifier",
    "intersectionRect",
    "loadTime",
    "naturalHeight",
    "naturalWidth",
    "renderTime",
    "toJSON()",
    "url"
  ],
  "PerformanceEntry": [
    "duration",
    "entryType",
    "id",
    "name",
    "navigationId",
    "startTime",
    "toJSON()"
  ],
  "PerformanceEventTiming": [
    "associated event",
    "cancelable",
    "eventtarget",
    "interactionId",
    "processingEnd",
    "processingStart",
    "target",
    "toJSON()"
  ],
  "PerformanceLongAnimationFrameTiming": [
    "blockingDuration",
    "duration",
    "entryType",
    "firstUIEventTimestamp",
    "name",
    "renderStart",
    "scripts",
    "startTime",
    "styleAndLayoutStart",
    "timing info",
    "toJSON()"
  ],
  "PerformanceLongTaskTiming": [
    "attribution",
    "duration",
    "entryType",
    "name",
    "startTime",
    "toJSON()"
  ],
  "PerformanceMark": [
    "constructor()",
    "constructor(markName)",
    "constructor(markName, markOptions)",
    "detail"
  ],
  "PerformanceMarkOptions": [
    "detail",
    "startTime"
  ],
  "PerformanceMeasure": [
    "detail"
  ],
  "PerformanceMeasureOptions": [
    "detail",
    "duration",
    "end",
    "start"
  ],
  "PerformanceNavigation": [
    "TYPE_BACK_FORWARD",
    "TYPE_NAVIGATE",
    "TYPE_RELOAD",
    "TYPE_RESERVED",
    "redirectCount",
    "toJSON()",
    "type"
  ],
  "PerformanceNavigationTiming": [
    "activationStart",
    "criticalCHRestart",
    "domComplete",
    "domContentLoadedEventEnd",
    "domContentLoadedEventStart",
    "domInteractive",
    "loadEventEnd",
    "loadEventStart",
    "notRestoredReasons",
    "redirectCount",
    "service worker timing",
    "toJSON()",
    "type",
    "unloadEventEnd",
    "unloadEventStart"
  ],
  "PerformanceObserver": [
    "constructor()",
    "constructor(callback)",
    "disconnect()",
    "observe()",
    "observe(options)",
    "supportedEntryTypes",
    "takeRecords()"
  ],
  "PerformanceObserverCallbackOptions": [
    "droppedEntriesCount"
  ],
  "PerformanceObserverEntryList": [
    "getEntries()",
    "getEntriesByName()",
    "getEntriesByName(name)",
    "getEntriesByName(name, type)",
    "getEntriesByType()",
    "getEntriesByType(type)"
  ],
  "PerformanceObserverInit": [
    "buffered",
    "durationThreshold",
    "entryTypes",
    "type"
  ],
  "PerformanceResourceTiming": [
    "connectEnd",
    "connectStart",
    "contentType",
    "decodedBodySize",
    "deliveryType",
    "domainLookupEnd",
    "domainLookupStart",
    "encodedBodySize",
    "fetchStart",
    "firstInterimResponseStart",
    "initiatorType",
    "nextHopProtocol",
    "redirectEnd",
    "redirectStart",
    "renderBlockingStatus",
    "requestStart",
    "responseEnd",
    "responseStart",
    "responseStatus",
    "secureConnectionStart",
    "serverTiming",
    "toJSON()",
    "transferSize",
    "workerStart"
  ],
  "PerformanceScriptTiming": [
    "duration",
    "entryType",
    "executionStart",
    "forcedStyleAndLayoutDuration",
    "invoker",
    "invokerType",
    "name",
    "pauseDuration",
    "sourceCharPosition",
    "sourceFunctionName",
    "sourceURL",
    "startTime",
    "timing info",
    "toJSON()",
    "window",
    "window attribution",
    "windowAttribution"
  ],
  "PerformanceServerTiming": [
    "description",
    "duration",
    "name",
    "toJSON()"
  ],
  "PerformanceTiming": [
    "connectEnd",
    "connectStart",
    "domComplete",
    "domContentLoadedEventEnd",
    "domContentLoadedEventStart",
    "domInteractive",
    "domLoading",
    "domainLookupEnd",
    "domainLookupStart",
    "fetchStart",
    "loadEventEnd",
    "loadEventStart",
    "navigationStart",
    "redirectEnd",
    "redirectStart",
    "requestStart",
    "responseEnd",
    "responseStart",
    "secureConnectionStart",
    "toJSON()",
    "unloadEventEnd",
    "unloadEventStart"
  ],
  "PeriodicSyncEvent": [
    "PeriodicSyncEvent(type, init)",
    "constructor(type, init)",
    "tag"
  ],
  "PeriodicSyncEvent/PeriodicSyncEvent(type, init)": [
    "init",
    "type"
  ],
  "PeriodicSyncEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "PeriodicSyncEventInit": [
    "tag"
  ],
  "PeriodicSyncManager": [
    "getTags()",
    "register(tag)",
    "register(tag, options)",
    "service worker registration",
    "unregister(tag)"
  ],
  "PeriodicSyncManager/register(tag)": [
    "options",
    "tag"
  ],
  "PeriodicSyncManager/register(tag, options)": [
    "options",
    "tag"
  ],
  "PeriodicSyncManager/unregister(tag)": [
    "tag"
  ],
  "PeriodicWave": [
    "PeriodicWave(context)",
    "PeriodicWave(context, options)",
    "[[imag]]",
    "[[normalize]]",
    "[[real]]",
    "constructor(context)",
    "constructor(context, options)"
  ],
  "PeriodicWave/PeriodicWave(context)": [
    "context",
    "options"
  ],
  "PeriodicWave/PeriodicWave(context, options)": [
    "context",
    "options"
  ],
  "PeriodicWave/constructor()": [
    "context",
    "options"
  ],
  "PeriodicWave/constructor(context)": [
    "context",
    "options"
  ],
  "PeriodicWave/constructor(context, options)": [
    "context",
    "options"
  ],
  "PeriodicWaveConstraints": [
    "disableNormalization"
  ],
  "PeriodicWaveOptions": [
    "imag",
    "real"
  ],
  "PermissionDescriptor": [
    "name",
    "stronger than"
  ],
  "PermissionName": [
    "\"bluetooth-le-scan\"",
    "\"clipboard-write\"",
    "\"file-system\"",
    "\"usb\""
  ],
  "PermissionPolicy": [
    "\"local-fonts\"",
    "\"window-management\"",
    "attribution-reporting"
  ],
  "PermissionSetParameters": [
    "descriptor",
    "state"
  ],
  "PermissionState": [
    "denied",
    "granted",
    "prompt"
  ],
  "PermissionStatus": [
    "[[query]]",
    "name",
    "onchange",
    "state"
  ],
  "Permissions": [
    "query()",
    "query(permissionDesc)",
    "request(permissionDesc)",
    "revoke(permissionDesc)"
  ],
  "Permissions/request(permissionDesc)": [
    "permissionDesc"
  ],
  "Permissions/revoke(permissionDesc)": [
    "permissionDesc"
  ],
  "PermissionsPolicy": [
    "allowedFeatures()",
    "allowsFeature(feature)",
    "allowsFeature(feature, origin)",
    "features()",
    "getAllowlistForFeature(feature)",
    "shared-storage",
    "shared-storage-select-url"
  ],
  "PermissionsPolicy/allowsFeature(feature)": [
    "feature",
    "origin"
  ],
  "PermissionsPolicy/allowsFeature(feature, origin)": [
    "feature",
    "origin"
  ],
  "PermissionsPolicy/getAllowlistForFeature(feature)": [
    "feature"
  ],
  "PermissionsPolicyViolationReportBody": [
    "columnNumber",
    "columnnumber",
    "disposition",
    "featureId",
    "featureid",
    "lineNumber",
    "linenumber",
    "sourceFile",
    "sourcefile",
    "toJSON()"
  ],
  "PhotoCapabilities": [
    "fillLightMode",
    "imageHeight",
    "imageWidth",
    "redEyeReduction"
  ],
  "PhotoSettings": [
    "fillLightMode",
    "imageHeight",
    "imageWidth",
    "redEyeReduction"
  ],
  "PictureInPictureEvent": [
    "PictureInPictureEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "pictureInPictureWindow"
  ],
  "PictureInPictureEvent/PictureInPictureEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "PictureInPictureEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "PictureInPictureEventInit": [
    "pictureInPictureWindow"
  ],
  "PictureInPictureWindow": [
    "height",
    "onresize",
    "resize",
    "width"
  ],
  "PlaneLayout": [
    "offset",
    "stride"
  ],
  "PlaybackDirection": [
    "\"alternate\"",
    "\"alternate-reverse\"",
    "\"auto\"",
    "\"backwards\"",
    "\"both\"",
    "\"forwards\"",
    "\"none\"",
    "\"normal\"",
    "\"reverse\"",
    "alternate",
    "alternate-reverse",
    "auto",
    "backwards",
    "both",
    "forwards",
    "none",
    "normal",
    "reverse"
  ],
  "Plugin": [
    "description",
    "filename",
    "item(index)",
    "length",
    "name",
    "namedItem(name)"
  ],
  "PluginArray": [
    "item(index)",
    "length",
    "namedItem(name)",
    "refresh()"
  ],
  "Point2D": [
    "x",
    "y"
  ],
  "PointerEvent": [
    "altitudeAngle",
    "azimuthAngle",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "getCoalescedEvents()",
    "getPredictedEvents()",
    "height",
    "isPrimary",
    "persistentDeviceId",
    "pointerId",
    "pointerType",
    "pressure",
    "tangentialPressure",
    "tiltX",
    "tiltY",
    "twist",
    "width"
  ],
  "PointerEventInit": [
    "altitudeAngle",
    "azimuthAngle",
    "coalescedEvents",
    "height",
    "isPrimary",
    "persistentDeviceId",
    "pointerId",
    "pointerType",
    "predictedEvents",
    "pressure",
    "tangentialPressure",
    "tiltX",
    "tiltY",
    "twist",
    "width"
  ],
  "PointerLockOptions": [
    "unadjustedMovement"
  ],
  "PopStateEvent": [
    "hasUAVisualTransition",
    "state"
  ],
  "PopStateEventInit": [
    "hasUAVisualTransition",
    "state"
  ],
  "PortalActivateEvent": [
    "PortalActivateEvent(type)",
    "PortalActivateEvent(type, eventInitDict)",
    "activation promise",
    "adoptPredecessor()",
    "adopted predecessor element",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data",
    "predecessor browsing context",
    "successor window"
  ],
  "PortalActivateEvent/PortalActivateEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "PortalActivateEvent/PortalActivateEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "PortalActivateEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "PortalActivateEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "PortalActivateEventInit": [
    "data"
  ],
  "PortalActivateOptions": [
    "data"
  ],
  "PortalHost": [
    "message",
    "messageerror",
    "onmessage",
    "onmessageerror",
    "postMessage(message)",
    "postMessage(message, options)"
  ],
  "PortalHost/postMessage(message)": [
    "message",
    "options"
  ],
  "PortalHost/postMessage(message, options)": [
    "message",
    "options"
  ],
  "PositionAlignSetting": [
    "\"auto\"",
    "\"center\"",
    "\"line-left\"",
    "\"line-right\"",
    "auto",
    "center",
    "line-left",
    "line-right"
  ],
  "PositionOptions": [
    "enableHighAccuracy",
    "maximumAge",
    "timeout"
  ],
  "PredefinedColorSpace": [
    "display-p3",
    "srgb"
  ],
  "PreferenceManager": [
    "colorScheme",
    "contrast",
    "reducedData",
    "reducedMotion",
    "reducedTransparency"
  ],
  "PreferenceObject": [
    "change",
    "clearOverride()",
    "onchange",
    "override",
    "preferenceobject update steps",
    "requestOverride(value)",
    "validValues",
    "value"
  ],
  "PreferenceObject/requestOverride(value)": [
    "value"
  ],
  "PremultiplyAlpha": [
    "default",
    "none",
    "premultiply"
  ],
  "Presentation": [
    "defaultRequest",
    "receiver"
  ],
  "PresentationAvailability": [
    "onchange",
    "value"
  ],
  "PresentationConnection": [
    "binaryType",
    "close()",
    "id",
    "onclose",
    "onconnect",
    "onmessage",
    "onterminate",
    "send!overload-1()",
    "send!overload-1(data)",
    "send!overload-2()",
    "send!overload-2(data)",
    "send!overload-3()",
    "send!overload-3(data)",
    "send()",
    "send(message)",
    "state",
    "terminate()",
    "url"
  ],
  "PresentationConnectionAvailableEvent": [
    "connection",
    "constructor()",
    "constructor(type, eventInitDict)"
  ],
  "PresentationConnectionAvailableEventInit": [
    "connection"
  ],
  "PresentationConnectionCloseEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "message",
    "reason"
  ],
  "PresentationConnectionCloseEventInit": [
    "message",
    "reason"
  ],
  "PresentationConnectionCloseReason": [
    "closed",
    "error",
    "wentaway"
  ],
  "PresentationConnectionList": [
    "connections",
    "onconnectionavailable"
  ],
  "PresentationConnectionState": [
    "closed",
    "connected",
    "connecting",
    "terminated"
  ],
  "PresentationReceiver": [
    "connectionList"
  ],
  "PresentationRequest": [
    "constructor!overload-1()",
    "constructor!overload-1(urls)",
    "constructor()",
    "constructor(url)",
    "getAvailability()",
    "onconnectionavailable",
    "reconnect()",
    "reconnect(presentationId)",
    "start()"
  ],
  "PresentationStyle": [
    "\"attachment\"",
    "\"inline\"",
    "\"unspecified\""
  ],
  "PressureObserver": [
    "[[AfterPenaltyRecordMap]]",
    "[[Callback]]",
    "[[ChangesCountMap]]",
    "[[LastRecordMap]]",
    "[[MaxChangesThreshold]]",
    "[[ObservationWindow]]",
    "[[PenaltyDuration]]",
    "[[PendingObservePromises]]",
    "[[QueuedRecords]]",
    "[[SampleIntervalMap]]",
    "constructor()",
    "constructor(callback)",
    "disconnect()",
    "knownSources",
    "observe()",
    "observe(source)",
    "observe(source, options)",
    "takeRecords()",
    "unobserve()",
    "unobserve(source)"
  ],
  "PressureObserverOptions": [
    "sampleInterval"
  ],
  "PressureRecord": [
    "[[Source]]",
    "[[State]]",
    "[[Time]]",
    "source",
    "state",
    "time",
    "toJSON()"
  ],
  "PressureSource": [
    "cpu",
    "thermals"
  ],
  "PressureState": [
    "critical",
    "fair",
    "nominal",
    "serious"
  ],
  "PreviousWin": [
    "adJSON",
    "timeDelta"
  ],
  "PrivateAggregation": [
    "allowed to use",
    "contributeToHistogram(contribution)",
    "contributeToHistogramOnEvent(event, contribution)",
    "enableDebugMode()",
    "enableDebugMode(options)",
    "scoping details"
  ],
  "PrivateAggregation/contributeToHistogram(contribution)": [
    "contribution"
  ],
  "PrivateAggregation/contributeToHistogramOnEvent(event, contribution)": [
    "contribution",
    "event"
  ],
  "PrivateAggregation/enableDebugMode()": [
    "options"
  ],
  "PrivateAggregation/enableDebugMode(options)": [
    "options"
  ],
  "PrivateNetworkAccessPermissionDescriptor": [
    "id"
  ],
  "PrivateToken": [
    "issuers",
    "operation",
    "refreshPolicy",
    "version"
  ],
  "ProcessingInstruction": [
    "substring data",
    "target"
  ],
  "Profiler": [
    "constructor()",
    "constructor(options)",
    "new Profiler(options)",
    "sampleInterval",
    "stop()",
    "stopped"
  ],
  "ProfilerFrame": [
    "column",
    "line",
    "name",
    "resourceId"
  ],
  "ProfilerInitOptions": [
    "maxBufferSize",
    "sampleInterval"
  ],
  "ProfilerSample": [
    "stackId",
    "timestamp"
  ],
  "ProfilerStack": [
    "frameId",
    "parentId"
  ],
  "ProfilerTrace": [
    "frames",
    "resources",
    "samples",
    "stacks"
  ],
  "ProgressEvent": [
    "ProgressEvent(type)",
    "ProgressEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "lengthComputable",
    "loaded",
    "total"
  ],
  "ProgressEvent/ProgressEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEvent/ProgressEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "ProgressEventInit": [
    "lengthComputable",
    "loaded",
    "total"
  ],
  "Promise": [
    "Promise(executor)",
    "all(iterable)",
    "allSettled(iterable)",
    "any(iterable)",
    "catch(onRejected)",
    "finally(onFinally)",
    "invoker name when created",
    "race(iterable)",
    "reject(r)",
    "resolve(x)",
    "script url when created",
    "then(onFulfilled, onRejected)",
    "withResolvers()"
  ],
  "PromiseRejectionEvent": [
    "promise",
    "reason"
  ],
  "PromptResponseObject": [
    "userChoice"
  ],
  "PropertyDefinition": [
    "inherits",
    "initialValue",
    "name",
    "syntax"
  ],
  "ProtectedAudience": [
    "queryFeatureSupport(feature)"
  ],
  "ProtectedAudience/queryFeatureSupport(feature)": [
    "feature"
  ],
  "ProtectedAudiencePrivateAggregationConfig": [
    "aggregationCoordinatorOrigin"
  ],
  "ProtocolXError": [
    "error code"
  ],
  "ProximitySensor": [
    "ProximitySensor()",
    "ProximitySensor(sensorOptions)",
    "constructor()",
    "constructor(sensorOptions)",
    "distance",
    "max",
    "near"
  ],
  "ProximitySensor/ProximitySensor()": [
    "sensorOptions"
  ],
  "ProximitySensor/ProximitySensor(sensorOptions)": [
    "sensorOptions"
  ],
  "ProximitySensor/constructor()": [
    "sensorOptions"
  ],
  "ProximitySensor/constructor(sensorOptions)": [
    "sensorOptions"
  ],
  "Proxy": [
    "Proxy(target, handler)",
    "revocable(target, handler)"
  ],
  "PublicKeyCredential": [
    "[[CollectFromCredentialStore]](origin, options, sameOriginWithAncestors)",
    "[[Create]](origin, options, sameOriginWithAncestors)",
    "[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)",
    "[[Store]](credential, sameOriginWithAncestors)",
    "[[clientExtensionsResults]]",
    "[[discovery]]",
    "[[identifier]]",
    "[[preventSilentAccess]](credential, sameOriginWithAncestors)",
    "[[type]]",
    "authenticatorAttachment",
    "getClientCapabilities()",
    "getClientExtensionResults()",
    "isConditionalMediationAvailable()",
    "isPasskeyPlatformAuthenticatorAvailable()",
    "isUserVerifyingPlatformAuthenticatorAvailable()",
    "issuing a credential request to an authenticator",
    "parseCreationOptionsFromJSON(options)",
    "parseRequestOptionsFromJSON(options)",
    "rawId",
    "response",
    "toJSON()"
  ],
  "PublicKeyCredential/[[Create]](origin, options, sameOriginWithAncestors)": [
    "options",
    "origin",
    "sameOriginWithAncestors"
  ],
  "PublicKeyCredential/[[DiscoverFromExternalSource]](origin, options, sameOriginWithAncestors)": [
    "options",
    "origin",
    "sameOriginWithAncestors"
  ],
  "PublicKeyCredential/[[Store]](credential, sameOriginWithAncestors)": [
    "credential",
    "sameOriginWithAncestors"
  ],
  "PublicKeyCredential/parseCreationOptionsFromJSON(options)": [
    "options"
  ],
  "PublicKeyCredential/parseRequestOptionsFromJSON(options)": [
    "options"
  ],
  "PublicKeyCredentialCreationOptions": [
    "attestation",
    "attestationFormats",
    "authenticatorSelection",
    "challenge",
    "excludeCredentials",
    "extensions",
    "hints",
    "pubKeyCredParams",
    "rp",
    "timeout",
    "user"
  ],
  "PublicKeyCredentialCreationOptionsJSON": [
    "attestation",
    "attestationFormats",
    "authenticatorSelection",
    "challenge",
    "excludeCredentials",
    "extensions",
    "hints",
    "pubKeyCredParams",
    "rp",
    "timeout",
    "user"
  ],
  "PublicKeyCredentialDescriptor": [
    "id",
    "transports",
    "type"
  ],
  "PublicKeyCredentialDescriptorJSON": [
    "id",
    "transports",
    "type"
  ],
  "PublicKeyCredentialEntity": [
    "name"
  ],
  "PublicKeyCredentialHints": [
    "\"client-device\"",
    "\"hybrid\"",
    "\"security-key\"",
    "client-device",
    "hybrid",
    "security-key"
  ],
  "PublicKeyCredentialParameters": [
    "alg",
    "type"
  ],
  "PublicKeyCredentialRequestOptions": [
    "allowCredentials",
    "attestation",
    "attestationFormats",
    "challenge",
    "extensions",
    "hints",
    "rpId",
    "timeout",
    "userVerification"
  ],
  "PublicKeyCredentialRequestOptionsJSON": [
    "allowCredentials",
    "attestation",
    "attestationFormats",
    "challenge",
    "extensions",
    "hints",
    "rpId",
    "timeout",
    "userVerification"
  ],
  "PublicKeyCredentialRpEntity": [
    "id"
  ],
  "PublicKeyCredentialType": [
    "\"public-key\"",
    "public-key"
  ],
  "PublicKeyCredentialUserEntity": [
    "displayName",
    "id"
  ],
  "PublicKeyCredentialUserEntityJSON": [
    "displayName",
    "id",
    "name"
  ],
  "PurchaseDetails": [
    "itemId",
    "purchaseToken"
  ],
  "PushEncryptionKeyName": [
    "auth",
    "p256dh"
  ],
  "PushEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "data"
  ],
  "PushEventInit": [
    "data"
  ],
  "PushManager": [
    "getSubscription()",
    "permissionState()",
    "permissionState(options)",
    "subscribe()",
    "subscribe(options)",
    "supportedContentEncodings"
  ],
  "PushMessageData": [
    "arrayBuffer()",
    "blob()",
    "bytes()",
    "json()",
    "text()"
  ],
  "PushPermissionDescriptor": [
    "userVisibleOnly"
  ],
  "PushSubscription": [
    "endpoint",
    "expirationTime",
    "getKey()",
    "getKey(name)",
    "options",
    "toJSON()",
    "unsubscribe()",
    "unsubscribed"
  ],
  "PushSubscriptionChangeEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "newSubscription",
    "oldSubscription"
  ],
  "PushSubscriptionChangeEventInit": [
    "newSubscription",
    "oldSubscription"
  ],
  "PushSubscriptionJSON": [
    "endpoint",
    "expirationTime",
    "keys"
  ],
  "PushSubscriptionOptions": [
    "applicationServerKey",
    "userVisibleOnly"
  ],
  "PushSubscriptionOptionsInit": [
    "applicationServerKey",
    "userVisibleOnly"
  ],
  "QueryOptions": [
    "postscriptNames"
  ],
  "QueuingStrategy": [
    "highWaterMark",
    "size"
  ],
  "QueuingStrategyInit": [
    "highWaterMark"
  ],
  "QueuingStrategySize": [
    "chunk"
  ],
  "RTCAudioPlayoutStats": [
    "kind",
    "synthesizedSamplesDuration",
    "synthesizedSamplesEvents",
    "totalPlayoutDelay",
    "totalSamplesCount",
    "totalSamplesDuration"
  ],
  "RTCAudioSourceStats": [
    "audioLevel",
    "echoReturnLoss",
    "echoReturnLossEnhancement",
    "totalAudioEnergy",
    "totalSamplesDuration"
  ],
  "RTCBundlePolicy": [
    "balanced",
    "max-bundle",
    "max-compat"
  ],
  "RTCCertificate": [
    "[[Certificate]]",
    "[[KeyingMaterialHandle]]",
    "[[Origin]]",
    "expires",
    "getFingerprints()"
  ],
  "RTCCertificateExpiration": [
    "expires"
  ],
  "RTCCertificateStats": [
    "base64Certificate",
    "fingerprint",
    "fingerprintAlgorithm",
    "issuerCertificateId"
  ],
  "RTCCodecStats": [
    "channels",
    "clockRate",
    "mimeType",
    "payloadType",
    "sdpFmtpLine",
    "transportId"
  ],
  "RTCConfiguration": [
    "bundlePolicy",
    "certificates",
    "iceCandidatePoolSize",
    "iceServers",
    "iceTransportPolicy",
    "peerIdentity",
    "rtcpMuxPolicy"
  ],
  "RTCDTMFSender": [
    "[[Duration]]",
    "[[InterToneGap]]",
    "[[ToneBuffer]]",
    "canInsertDTMF",
    "insertDTMF()",
    "insertDTMF(tones)",
    "insertDTMF(tones, duration)",
    "insertDTMF(tones, duration, interToneGap)",
    "ontonechange",
    "toneBuffer",
    "tonechange"
  ],
  "RTCDTMFToneChangeEvent": [
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "tone"
  ],
  "RTCDTMFToneChangeEventInit": [
    "tone"
  ],
  "RTCDataChannel": [
    "[[BufferedAmount]]",
    "[[DataChannelId]]",
    "[[DataChannelLabel]]",
    "[[DataChannelProtocol]]",
    "[[MaxPacketLifeTime]]",
    "[[MaxRetransmits]]",
    "[[Negotiated]]",
    "[[Ordered]]",
    "[[ReadyState]]",
    "binaryType",
    "bufferedAmount",
    "bufferedAmountLowThreshold",
    "bufferedamountlow",
    "close",
    "close()",
    "closing",
    "error",
    "id",
    "label",
    "maxPacketLifeTime",
    "maxRetransmits",
    "message",
    "negotiated",
    "onbufferedamountlow",
    "onclose",
    "onclosing",
    "onerror",
    "onmessage",
    "onopen",
    "open",
    "ordered",
    "priority",
    "protocol",
    "readyState",
    "send!overload-1()",
    "send!overload-1(data)",
    "send!overload-2()",
    "send!overload-2(data)",
    "send!overload-3()",
    "send!overload-3(data)",
    "send()",
    "send(data)"
  ],
  "RTCDataChannel underlying data transport": [
    "closed"
  ],
  "RTCDataChannelEvent": [
    "channel",
    "constructor()",
    "constructor(type, eventInitDict)"
  ],
  "RTCDataChannelEventInit": [
    "channel"
  ],
  "RTCDataChannelInit": [
    "id",
    "maxPacketLifeTime",
    "maxRetransmits",
    "negotiated",
    "ordered",
    "priority",
    "protocol"
  ],
  "RTCDataChannelState": [
    "closed",
    "closing",
    "connecting",
    "open"
  ],
  "RTCDataChannelStats": [
    "bytesReceived",
    "bytesSent",
    "dataChannelIdentifier",
    "label",
    "messagesReceived",
    "messagesSent",
    "protocol",
    "state"
  ],
  "RTCDegradationPreference": [
    "balanced",
    "maintain-framerate",
    "maintain-resolution"
  ],
  "RTCDtlsFingerprint": [
    "algorithm",
    "value"
  ],
  "RTCDtlsRole": [
    "client",
    "server",
    "unknown"
  ],
  "RTCDtlsTransport": [
    "[[DtlsTransportState]]",
    "[[RemoteCertificates]]",
    "error",
    "getRemoteCertificates()",
    "iceTransport",
    "onerror",
    "onstatechange",
    "state",
    "statechange"
  ],
  "RTCDtlsTransportState": [
    "closed",
    "connected",
    "connecting",
    "failed",
    "new"
  ],
  "RTCEncodedAudioFrame": [
    "RTCEncodedAudioFrame(originalFrame)",
    "RTCEncodedAudioFrame(originalFrame, options)",
    "constructor()",
    "constructor(originalFrame)",
    "constructor(originalFrame, options)",
    "data",
    "getMetadata()"
  ],
  "RTCEncodedAudioFrame/RTCEncodedAudioFrame(originalFrame)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedAudioFrame/RTCEncodedAudioFrame(originalFrame, options)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedAudioFrame/constructor(originalFrame)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedAudioFrame/constructor(originalFrame, options)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedAudioFrameMetadata": [
    "contributingSources",
    "mimeType",
    "payloadType",
    "rtpTimestamp",
    "sequenceNumber",
    "synchronizationSource"
  ],
  "RTCEncodedAudioFrameOptions": [
    "metadata"
  ],
  "RTCEncodedVideoFrame": [
    "RTCEncodedVideoFrame(originalFrame)",
    "RTCEncodedVideoFrame(originalFrame, options)",
    "constructor()",
    "constructor(originalFrame)",
    "constructor(originalFrame, options)",
    "data",
    "getMetadata()",
    "type"
  ],
  "RTCEncodedVideoFrame/RTCEncodedVideoFrame(originalFrame)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedVideoFrame/RTCEncodedVideoFrame(originalFrame, options)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedVideoFrame/constructor(originalFrame)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedVideoFrame/constructor(originalFrame, options)": [
    "options",
    "originalFrame"
  ],
  "RTCEncodedVideoFrameMetadata": [
    "contributingSources",
    "dependencies",
    "frameId",
    "height",
    "mimeType",
    "payloadType",
    "rtpTimestamp",
    "spatialIndex",
    "synchronizationSource",
    "temporalIndex",
    "timestamp",
    "width"
  ],
  "RTCEncodedVideoFrameOptions": [
    "metadata"
  ],
  "RTCEncodedVideoFrameType": [
    "\"delta\"",
    "\"empty\"",
    "\"key\"",
    "delta",
    "empty",
    "key"
  ],
  "RTCError": [
    "constructor()",
    "constructor(init)",
    "constructor(init, message)",
    "errorDetail",
    "httpRequestStatusCode",
    "receivedAlert",
    "sctpCauseCode",
    "sdpLineNumber",
    "sentAlert"
  ],
  "RTCErrorDetailType": [
    "data-channel-failure",
    "dtls-failure",
    "fingerprint-failure",
    "hardware-encoder-error",
    "hardware-encoder-not-available",
    "sctp-failure",
    "sdp-syntax-error"
  ],
  "RTCErrorDetailTypeIdp": [
    "idp-bad-script-failure",
    "idp-execution-failure",
    "idp-load-failure",
    "idp-need-login",
    "idp-timeout",
    "idp-tls-failure",
    "idp-token-expired",
    "idp-token-invalid"
  ],
  "RTCErrorEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "error"
  ],
  "RTCErrorEventInit": [
    "error"
  ],
  "RTCErrorInit": [
    "errorDetail",
    "httpRequestStatusCode",
    "receivedAlert",
    "sctpCauseCode",
    "sdpLineNumber",
    "sentAlert"
  ],
  "RTCIceCandidate": [
    "address",
    "candidate",
    "component",
    "constructor()",
    "constructor(candidateInitDict)",
    "foundation",
    "port",
    "priority",
    "protocol",
    "relatedAddress",
    "relatedPort",
    "relayProtocol",
    "sdpMLineIndex",
    "sdpMid",
    "tcpType",
    "toJSON()",
    "type",
    "url",
    "usernameFragment"
  ],
  "RTCIceCandidateInit": [
    "candidate",
    "sdpMLineIndex",
    "sdpMid",
    "usernameFragment"
  ],
  "RTCIceCandidatePair": [
    "[[Local]]",
    "[[Remote]]",
    "local",
    "remote"
  ],
  "RTCIceCandidatePairStats": [
    "availableIncomingBitrate",
    "availableOutgoingBitrate",
    "bytesDiscardedOnSend",
    "bytesReceived",
    "bytesSent",
    "consentRequestsSent",
    "currentRoundTripTime",
    "lastPacketReceivedTimestamp",
    "lastPacketSentTimestamp",
    "localCandidateId",
    "nominated",
    "packetsDiscardedOnSend",
    "packetsReceived",
    "packetsSent",
    "remoteCandidateId",
    "requestsReceived",
    "requestsSent",
    "responsesReceived",
    "responsesSent",
    "state",
    "totalRoundTripTime",
    "transportId"
  ],
  "RTCIceCandidateStats": [
    "address",
    "candidateType",
    "foundation",
    "port",
    "priority",
    "protocol",
    "relatedAddress",
    "relatedPort",
    "relayProtocol",
    "tcpType",
    "transportId",
    "url",
    "usernameFragment"
  ],
  "RTCIceCandidateType": [
    "host",
    "prflx",
    "relay",
    "srflx"
  ],
  "RTCIceComponent": [
    "rtcp",
    "rtp"
  ],
  "RTCIceConnectionState": [
    "checking",
    "closed",
    "completed",
    "connected",
    "disconnected",
    "failed",
    "new"
  ],
  "RTCIceGatherOptions": [
    "gatherPolicy",
    "iceServers"
  ],
  "RTCIceGathererState": [
    "complete",
    "gathering",
    "new"
  ],
  "RTCIceGatheringState": [
    "complete",
    "gathering",
    "new"
  ],
  "RTCIceParameters": [
    "iceLite",
    "password",
    "usernameFragment"
  ],
  "RTCIceProtocol": [
    "tcp",
    "udp"
  ],
  "RTCIceRole": [
    "controlled",
    "controlling",
    "unknown"
  ],
  "RTCIceServer": [
    "credential",
    "urls",
    "username"
  ],
  "RTCIceServerTransportProtocol": [
    "tcp",
    "tls",
    "udp"
  ],
  "RTCIceTcpCandidateType": [
    "active",
    "passive",
    "so"
  ],
  "RTCIceTransport": [
    "[[IceGathererState]]",
    "[[IceRole]]",
    "[[IceTransportState]]",
    "[[SelectedCandidatePair]]",
    "addRemoteCandidate()",
    "addRemoteCandidate(remoteCandidate)",
    "change the selected candidate pair and state",
    "component",
    "constructor()",
    "gather()",
    "gather(options)",
    "gatheringState",
    "gatheringstatechange",
    "getLocalCandidates()",
    "getLocalParameters()",
    "getRemoteCandidates()",
    "getRemoteParameters()",
    "getSelectedCandidatePair()",
    "icecandidate",
    "icecandidateerror",
    "onerror",
    "ongatheringstatechange",
    "onicecandidate",
    "onselectedcandidatepairchange",
    "onstatechange",
    "role",
    "selectedcandidatepairchange",
    "start()",
    "start(remoteParameters)",
    "start(remoteParameters, role)",
    "state",
    "statechange",
    "stop()"
  ],
  "RTCIceTransportPolicy": [
    "all",
    "relay"
  ],
  "RTCIceTransportState": [
    "checking",
    "closed",
    "completed",
    "connected",
    "disconnected",
    "failed",
    "new"
  ],
  "RTCIdentityAssertion": [
    "constructor()",
    "constructor(idp, name)",
    "idp",
    "name"
  ],
  "RTCIdentityAssertionResult": [
    "assertion",
    "idp"
  ],
  "RTCIdentityProvider": [
    "generateAssertion",
    "validateAssertion"
  ],
  "RTCIdentityProviderDetails": [
    "domain",
    "protocol"
  ],
  "RTCIdentityProviderGlobalScope": [
    "rtcIdentityProvider"
  ],
  "RTCIdentityProviderOptions": [
    "peerIdentity",
    "protocol",
    "usernameHint"
  ],
  "RTCIdentityProviderRegistrar": [
    "register()",
    "register(idp)"
  ],
  "RTCIdentityValidationResult": [
    "contents",
    "identity"
  ],
  "RTCInboundRtpStreamStats": [
    "audioLevel",
    "bytesReceived",
    "concealedSamples",
    "concealmentEvents",
    "decoderImplementation",
    "estimatedPlayoutTimestamp",
    "fecBytesReceived",
    "fecPacketsDiscarded",
    "fecPacketsReceived",
    "fecSsrc",
    "firCount",
    "frameHeight",
    "frameWidth",
    "framesAssembledFromMultiplePackets",
    "framesDecoded",
    "framesDropped",
    "framesPerSecond",
    "framesReceived",
    "framesRendered",
    "freezeCount",
    "headerBytesReceived",
    "insertedSamplesForDeceleration",
    "jitterBufferDelay",
    "jitterBufferEmittedCount",
    "jitterBufferMinimumDelay",
    "jitterBufferTargetDelay",
    "keyFramesDecoded",
    "lastPacketReceivedTimestamp",
    "mid",
    "nackCount",
    "packetsDiscarded",
    "pauseCount",
    "playoutId",
    "pliCount",
    "powerEfficientDecoder",
    "qpSum",
    "remoteId",
    "removedSamplesForAcceleration",
    "retransmittedBytesReceived",
    "retransmittedPacketsReceived",
    "rtxSsrc",
    "silentConcealedSamples",
    "totalAssemblyTime",
    "totalAudioEnergy",
    "totalDecodeTime",
    "totalFreezesDuration",
    "totalInterFrameDelay",
    "totalPausesDuration",
    "totalProcessingDelay",
    "totalSamplesDuration",
    "totalSamplesReceived",
    "totalSquaredInterFrameDelay",
    "trackIdentifier"
  ],
  "RTCLocalSessionDescriptionInit": [
    "sdp",
    "type"
  ],
  "RTCMediaSourceStats": [
    "kind",
    "trackIdentifier"
  ],
  "RTCOfferOptions": [
    "iceRestart",
    "offerToReceiveAudio",
    "offerToReceiveVideo"
  ],
  "RTCOutboundRtpStreamStats": [
    "active",
    "encoderImplementation",
    "firCount",
    "frameHeight",
    "frameWidth",
    "framesEncoded",
    "framesPerSecond",
    "framesSent",
    "headerBytesSent",
    "hugeFramesSent",
    "keyFramesEncoded",
    "mediaSourceId",
    "mid",
    "nackCount",
    "pliCount",
    "powerEfficientEncoder",
    "qpSum",
    "qualityLimitationDurations",
    "qualityLimitationReason",
    "qualityLimitationResolutionChanges",
    "remoteId",
    "retransmittedBytesSent",
    "retransmittedPacketsSent",
    "rid",
    "rtxSsrc",
    "scalabilityMode",
    "targetBitrate",
    "totalEncodeTime",
    "totalEncodedBytesTarget",
    "totalPacketSendDelay"
  ],
  "RTCPeerConnection": [
    "[[Configuration]]",
    "[[ConnectionState]]",
    "[[CurrentLocalDescription]]",
    "[[CurrentRemoteDescription]]",
    "[[DataChannels]]",
    "[[DocumentOrigin]]",
    "[[EarlyCandidates]]",
    "[[IceConnectionState]]",
    "[[IceGatheringState]]",
    "[[IsClosed]]",
    "[[LastCreatedAnswer]]",
    "[[LastCreatedOffer]]",
    "[[LocalIceCredentialsToReplace]]",
    "[[NegotiationNeeded]]",
    "[[Operations]]",
    "[[PendingLocalDescription]]",
    "[[PendingRemoteDescription]]",
    "[[SctpTransport]]",
    "[[SignalingState]]",
    "[[UpdateNegotiationNeededFlagOnEmptyChain]]",
    "addIceCandidate!overload-1()",
    "addIceCandidate!overload-1(candidate, successCallback, failureCallback)",
    "addIceCandidate()",
    "addIceCandidate(candidate)",
    "addTrack()",
    "addTrack(track)",
    "addTrack(track, streams)",
    "addTransceiver()",
    "addTransceiver(trackOrKind)",
    "addTransceiver(trackOrKind, init)",
    "addtransceiver sendencodings validation steps",
    "canTrickleIceCandidates",
    "close()",
    "connectionState",
    "connectionstatechange",
    "constructor()",
    "constructor(configuration)",
    "createAnswer!overload-1()",
    "createAnswer!overload-1(successCallback, failureCallback)",
    "createAnswer()",
    "createAnswer(options)",
    "createDataChannel()",
    "createDataChannel(label)",
    "createDataChannel(label, dataChannelDict)",
    "createOffer!overload-1()",
    "createOffer!overload-1(successCallback, failureCallback)",
    "createOffer!overload-1(successCallback, failureCallback, options)",
    "createOffer()",
    "createOffer(options)",
    "currentLocalDescription",
    "currentRemoteDescription",
    "datachannel",
    "generateCertificate()",
    "generateCertificate(keygenAlgorithm)",
    "getConfiguration()",
    "getIdentityAssertion()",
    "getReceivers()",
    "getSenders()",
    "getStats()",
    "getStats(selector)",
    "getTransceivers()",
    "iceConnectionState",
    "iceGatheringState",
    "icecandidate",
    "icecandidateerror",
    "iceconnectionstatechange",
    "icegatheringstatechange",
    "idpErrorInfo",
    "idpLoginUrl",
    "localDescription",
    "negotiationneeded",
    "onconnectionstatechange",
    "ondatachannel",
    "onicecandidate",
    "onicecandidateerror",
    "oniceconnectionstatechange",
    "onicegatheringstatechange",
    "onnegotiationneeded",
    "onsignalingstatechange",
    "ontrack",
    "peerIdentity",
    "pendingLocalDescription",
    "pendingRemoteDescription",
    "remoteDescription",
    "removeTrack()",
    "removeTrack(sender)",
    "restartIce()",
    "sctp",
    "setConfiguration()",
    "setConfiguration(configuration)",
    "setIdentityProvider()",
    "setIdentityProvider(provider)",
    "setIdentityProvider(provider, options)",
    "setLocalDescription!overload-1()",
    "setLocalDescription!overload-1(description, successCallback, failureCallback)",
    "setLocalDescription()",
    "setLocalDescription(description)",
    "setRemoteDescription!overload-1()",
    "setRemoteDescription!overload-1(description, successCallback, failureCallback)",
    "setRemoteDescription()",
    "setRemoteDescription(description)",
    "signalingState",
    "signalingstatechange",
    "track"
  ],
  "RTCPeerConnectionIceErrorEvent": [
    "address",
    "constructor()",
    "constructor(type, eventInitDict)",
    "errorCode",
    "errorText",
    "port",
    "url"
  ],
  "RTCPeerConnectionIceErrorEventInit": [
    "address",
    "errorCode",
    "errorText",
    "port",
    "url"
  ],
  "RTCPeerConnectionIceEvent": [
    "candidate",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "url"
  ],
  "RTCPeerConnectionIceEventInit": [
    "candidate",
    "url"
  ],
  "RTCPeerConnectionState": [
    "closed",
    "connected",
    "connecting",
    "disconnected",
    "failed",
    "new"
  ],
  "RTCPeerConnectionStats": [
    "dataChannelsClosed",
    "dataChannelsOpened"
  ],
  "RTCPriorityType": [
    "\"high\"",
    "\"low\"",
    "\"medium\"",
    "\"very-low\"",
    "high",
    "low",
    "medium",
    "very-low"
  ],
  "RTCQualityLimitationReason": [
    "bandwidth",
    "cpu",
    "none",
    "other"
  ],
  "RTCReceivedRtpStreamStats": [
    "jitter",
    "packetsLost",
    "packetsReceived"
  ],
  "RTCRemoteInboundRtpStreamStats": [
    "fractionLost",
    "localId",
    "roundTripTime",
    "roundTripTimeMeasurements",
    "totalRoundTripTime"
  ],
  "RTCRemoteOutboundRtpStreamStats": [
    "localId",
    "remoteTimestamp",
    "reportsSent",
    "roundTripTime",
    "roundTripTimeMeasurements",
    "totalRoundTripTime"
  ],
  "RTCRtcpMuxPolicy": [
    "require"
  ],
  "RTCRtcpParameters": [
    "cname",
    "reducedSize"
  ],
  "RTCRtpCapabilities": [
    "codecs",
    "headerExtensions"
  ],
  "RTCRtpCodec": [
    "channels",
    "clockRate",
    "mimeType",
    "sdpFmtpLine"
  ],
  "RTCRtpCodecCapability": [
    "channels",
    "clockRate",
    "mimeType",
    "sdpFmtpLine"
  ],
  "RTCRtpCodecParameters": [
    "channels",
    "clockRate",
    "mimeType",
    "payloadType",
    "sdpFmtpLine"
  ],
  "RTCRtpCodingParameters": [
    "rid"
  ],
  "RTCRtpContributingSource": [
    "audioLevel",
    "rtpTimestamp",
    "source",
    "timestamp"
  ],
  "RTCRtpEncodingParameters": [
    "active",
    "codec",
    "maxBitrate",
    "maxFramerate",
    "networkPriority",
    "priority",
    "scalabilityMode",
    "scaleResolutionDownBy"
  ],
  "RTCRtpHeaderExtensionCapability": [
    "uri"
  ],
  "RTCRtpHeaderExtensionParameters": [
    "encrypted",
    "id",
    "uri"
  ],
  "RTCRtpParameters": [
    "codecs",
    "headerExtensions",
    "rtcp"
  ],
  "RTCRtpReceiver": [
    "[[AssociatedRemoteMediaStreams]]",
    "[[JitterBufferTarget]]",
    "[[LastStableStateAssociatedRemoteMediaStreams]]",
    "[[LastStableStateReceiveCodecs]]",
    "[[LastStableStateReceiverTransport]]",
    "[[ReceiveCodecs]]",
    "[[ReceiverTrack]]",
    "[[ReceiverTransport]]",
    "getCapabilities()",
    "getCapabilities(kind)",
    "getContributingSources()",
    "getParameters()",
    "getStats()",
    "getSynchronizationSources()",
    "jitterBufferTarget",
    "track",
    "transform",
    "transport"
  ],
  "RTCRtpScriptTransform": [
    "RTCRtpScriptTransform(worker)",
    "RTCRtpScriptTransform(worker, options)",
    "RTCRtpScriptTransform(worker, options, transfer)",
    "constructor(worker)",
    "constructor(worker, options)",
    "constructor(worker, options, transfer)",
    "generateKeyFrame(rid)",
    "onbandwidthestimate",
    "onkeyframerequest",
    "readable",
    "sendKeyFrameRequest()",
    "writable"
  ],
  "RTCRtpScriptTransform/RTCRtpScriptTransform(worker)": [
    "options",
    "transfer",
    "worker"
  ],
  "RTCRtpScriptTransform/RTCRtpScriptTransform(worker, options)": [
    "options",
    "transfer",
    "worker"
  ],
  "RTCRtpScriptTransform/RTCRtpScriptTransform(worker, options, transfer)": [
    "options",
    "transfer",
    "worker"
  ],
  "RTCRtpScriptTransform/constructor(worker)": [
    "options",
    "transfer",
    "worker"
  ],
  "RTCRtpScriptTransform/constructor(worker, options)": [
    "options",
    "transfer",
    "worker"
  ],
  "RTCRtpScriptTransform/constructor(worker, options, transfer)": [
    "options",
    "transfer",
    "worker"
  ],
  "RTCRtpScriptTransformer": [
    "generateKeyFrame()",
    "generateKeyFrame(rid)",
    "onkeyframerequest",
    "options",
    "readable",
    "sendKeyFrameRequest()",
    "writable"
  ],
  "RTCRtpScriptTransformer/generateKeyFrame()": [
    "rid"
  ],
  "RTCRtpScriptTransformer/generateKeyFrame(rid)": [
    "rid"
  ],
  "RTCRtpSendParameters": [
    "degradationPreference",
    "encodings",
    "transactionId"
  ],
  "RTCRtpSender": [
    "[[AssociatedMediaStreamIds]]",
    "[[Dtmf]]",
    "[[LastReturnedParameters]]",
    "[[LastStableRidlessSendEncodings]]",
    "[[LastStableStateSenderTransport]]",
    "[[SendCodecs]]",
    "[[SendEncodings]]",
    "[[SenderTrack]]",
    "[[SenderTransport]]",
    "dtmf",
    "generateKeyFrame()",
    "generateKeyFrame(rids)",
    "getCapabilities()",
    "getCapabilities(kind)",
    "getParameters()",
    "getStats()",
    "list of implemented send codecs",
    "replaceTrack()",
    "replaceTrack(withTrack)",
    "setParameters()",
    "setParameters(parameters)",
    "setParameters(parameters, setParameterOptions)",
    "setStreams()",
    "setStreams(streams)",
    "setparameters validation steps",
    "track",
    "transform",
    "transport"
  ],
  "RTCRtpSender/generateKeyFrame()": [
    "rids"
  ],
  "RTCRtpSender/generateKeyFrame(rids)": [
    "rids"
  ],
  "RTCRtpStreamStats": [
    "codecId",
    "kind",
    "ssrc",
    "transportId"
  ],
  "RTCRtpTransceiver": [
    "[[CurrentDirection]]",
    "[[Direction]]",
    "[[FiredDirection]]",
    "[[JsepMid]]",
    "[[Mid]]",
    "[[PreferredCodecs]]",
    "[[Receiver]]",
    "[[Receptive]]",
    "[[Sender]]",
    "[[Stopped]]",
    "[[Stopping]]",
    "currentDirection",
    "direction",
    "mid",
    "receiver",
    "sender",
    "setCodecPreferences()",
    "setCodecPreferences(codecs)",
    "stop()",
    "transceiver kind"
  ],
  "RTCRtpTransceiverDirection": [
    "inactive",
    "recvonly",
    "sendonly",
    "sendrecv",
    "stopped"
  ],
  "RTCRtpTransceiverInit": [
    "direction",
    "sendEncodings",
    "streams"
  ],
  "RTCRtpTransform": [
    "association steps"
  ],
  "RTCSctpTransport": [
    "[[MaxChannels]]",
    "[[MaxMessageSize]]",
    "[[SctpTransportState]]",
    "maxChannels",
    "maxMessageSize",
    "onstatechange",
    "state",
    "statechange",
    "transport"
  ],
  "RTCSctpTransportState": [
    "closed",
    "connected",
    "connecting"
  ],
  "RTCSdpType": [
    "answer",
    "offer",
    "pranswer",
    "rollback"
  ],
  "RTCSentRtpStreamStats": [
    "bytesSent",
    "packetsSent"
  ],
  "RTCSessionDescription": [
    "constructor()",
    "constructor(descriptionInitDict)",
    "sdp",
    "toJSON()",
    "type"
  ],
  "RTCSessionDescriptionInit": [
    "sdp",
    "type"
  ],
  "RTCSignalingState": [
    "closed",
    "have-local-offer",
    "have-local-pranswer",
    "have-remote-offer",
    "have-remote-pranswer",
    "stable"
  ],
  "RTCStats": [
    "id",
    "timestamp",
    "type"
  ],
  "RTCStatsIceCandidatePairState": [
    "failed",
    "frozen",
    "in-progress",
    "succeeded",
    "waiting"
  ],
  "RTCStatsType": [
    "candidate-pair",
    "certificate",
    "codec",
    "data-channel",
    "inbound-rtp",
    "local-candidate",
    "media-playout",
    "media-source",
    "outbound-rtp",
    "peer-connection",
    "remote-candidate",
    "remote-inbound-rtp",
    "remote-outbound-rtp",
    "transport"
  ],
  "RTCTrackEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "receiver",
    "streams",
    "track",
    "transceiver"
  ],
  "RTCTrackEventInit": [
    "receiver",
    "streams",
    "track",
    "transceiver"
  ],
  "RTCTransformEvent": [
    "transformer"
  ],
  "RTCTransportStats": [
    "bytesReceived",
    "bytesSent",
    "dtlsCipher",
    "dtlsRole",
    "dtlsState",
    "iceLocalUsernameFragment",
    "iceRole",
    "iceState",
    "localCertificateId",
    "packetsReceived",
    "packetsSent",
    "remoteCertificateId",
    "selectedCandidatePairChanges",
    "selectedCandidatePairId",
    "srtpCipher",
    "tlsVersion"
  ],
  "RTCVideoSourceStats": [
    "frames",
    "framesPerSecond",
    "height",
    "width"
  ],
  "RadioNodeList": [
    "value"
  ],
  "Range": [
    "END_TO_END",
    "END_TO_START",
    "Range()",
    "START_TO_END",
    "START_TO_START",
    "cloneContents()",
    "cloneRange()",
    "collapse()",
    "collapse(toStart)",
    "commonAncestorContainer",
    "compareBoundaryPoints(how, sourceRange)",
    "comparePoint(node, offset)",
    "constructor()",
    "createContextualFragment(string)",
    "deleteContents()",
    "detach()",
    "extractContents()",
    "getBoundingClientRect()",
    "getClientRects()",
    "insertNode(node)",
    "intersectsNode(node)",
    "isPointInRange(node, offset)",
    "selectNode(node)",
    "selectNodeContents(node)",
    "set the end",
    "set the start",
    "setEnd(node, offset)",
    "setEndAfter(node)",
    "setEndBefore(node)",
    "setStart(node, offset)",
    "setStartAfter(node)",
    "setStartBefore(node)",
    "stringificationbehavior",
    "surroundContents(newParent)"
  ],
  "Range/collapse()": [
    "toStart"
  ],
  "Range/collapse(toStart)": [
    "toStart"
  ],
  "Range/compareBoundaryPoints(how, sourceRange)": [
    "how",
    "sourceRange"
  ],
  "Range/comparePoint(node, offset)": [
    "node",
    "offset"
  ],
  "Range/insertNode(node)": [
    "node"
  ],
  "Range/intersectsNode(node)": [
    "node"
  ],
  "Range/isPointInRange(node, offset)": [
    "node",
    "offset"
  ],
  "Range/selectNode(node)": [
    "node"
  ],
  "Range/selectNodeContents(node)": [
    "node"
  ],
  "Range/setEnd(node, offset)": [
    "node",
    "offset"
  ],
  "Range/setEndAfter(node)": [
    "node"
  ],
  "Range/setEndBefore(node)": [
    "node"
  ],
  "Range/setStart(node, offset)": [
    "node",
    "offset"
  ],
  "Range/setStartAfter(node)": [
    "node"
  ],
  "Range/setStartBefore(node)": [
    "node"
  ],
  "Range/surroundContents(newParent)": [
    "newParent"
  ],
  "RasterizationPoint": [
    "barycentriccoordinates",
    "coveragemask",
    "depth",
    "destination",
    "frontfacing",
    "perspectivedivisor",
    "primitivevertices"
  ],
  "RdfDataset": [
    "add()",
    "add(graphName, graph)",
    "constructor()",
    "defaultGraph",
    "iterable"
  ],
  "RdfGraph": [
    "add()",
    "add(triple)",
    "constructor()",
    "iterable"
  ],
  "RdfLiteral": [
    "constructor()",
    "datatype",
    "language",
    "value"
  ],
  "RdfTriple": [
    "constructor()",
    "object",
    "predicate",
    "subject"
  ],
  "ReadOptions": [
    "signal"
  ],
  "ReadableByteStreamController": [
    "[[CancelSteps]]",
    "[[PullSteps]]",
    "[[ReleaseSteps]]",
    "[[autoallocatechunksize]]",
    "[[byobrequest]]",
    "[[cancelalgorithm]]",
    "[[closerequested]]",
    "[[pendingpullintos]]",
    "[[pullagain]]",
    "[[pullalgorithm]]",
    "[[pulling]]",
    "[[queue]]",
    "[[queuetotalsize]]",
    "[[started]]",
    "[[strategyhwm]]",
    "[[stream]]",
    "byobRequest",
    "close()",
    "desiredSize",
    "enqueue(chunk)",
    "error()",
    "error(e)"
  ],
  "ReadableByteStreamController/enqueue(chunk)": [
    "chunk"
  ],
  "ReadableByteStreamController/error()": [
    "e"
  ],
  "ReadableByteStreamController/error(e)": [
    "e"
  ],
  "ReadableStream": [
    "ReadableStream()",
    "ReadableStream(underlyingSource)",
    "ReadableStream(underlyingSource, strategy)",
    "[[controller]]",
    "[[detached]]",
    "[[disturbed]]",
    "[[reader]]",
    "[[state]]",
    "[[storederror]]",
    "cancel",
    "cancel()",
    "cancel(reason)",
    "close",
    "closed",
    "constructor()",
    "constructor(underlyingSource)",
    "constructor(underlyingSource, strategy)",
    "create a proxy",
    "creating a proxy",
    "current byob request view",
    "desired size to fill up to the high water mark",
    "disturbed",
    "enqueue",
    "error",
    "errored",
    "from(asyncIterable)",
    "get a reader",
    "getReader()",
    "getReader(options)",
    "getting a reader",
    "locked",
    "need more data",
    "needs more data",
    "options",
    "pipe",
    "pipe through",
    "pipe to",
    "pipeThrough(transform)",
    "pipeThrough(transform, options)",
    "pipeTo(destination)",
    "pipeTo(destination, options)",
    "piped through",
    "piped to",
    "piping through",
    "piping to",
    "pull from bytes",
    "readable",
    "set up",
    "set up with byte reading support",
    "tee",
    "tee()",
    "teeing"
  ],
  "ReadableStream async iterator": [
    "prevent cancel",
    "reader"
  ],
  "ReadableStream/ReadableStream()": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/ReadableStream(underlyingSource)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/ReadableStream(underlyingSource, strategy)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/cancel()": [
    "reason"
  ],
  "ReadableStream/cancel(reason)": [
    "reason"
  ],
  "ReadableStream/constructor()": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/constructor(underlyingSource)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/constructor(underlyingSource, strategy)": [
    "strategy",
    "underlyingSource"
  ],
  "ReadableStream/from(asyncIterable)": [
    "asyncIterable"
  ],
  "ReadableStream/getReader()": [
    "options"
  ],
  "ReadableStream/getReader(options)": [
    "options"
  ],
  "ReadableStream/pipe through": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/pipe to": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/pipeThrough(transform)": [
    "options",
    "transform"
  ],
  "ReadableStream/pipeThrough(transform, options)": [
    "options",
    "transform"
  ],
  "ReadableStream/pipeTo(destination)": [
    "destination",
    "options"
  ],
  "ReadableStream/pipeTo(destination, options)": [
    "destination",
    "options"
  ],
  "ReadableStream/piped through": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/piped to": [
    "preventabort",
    "preventcancel",
    "preventclose",
    "signal"
  ],
  "ReadableStream/set up": [
    "cancelalgorithm",
    "highwatermark",
    "pullalgorithm",
    "sizealgorithm"
  ],
  "ReadableStream/set up with byte reading support": [
    "cancelalgorithm",
    "highwatermark",
    "pullalgorithm"
  ],
  "ReadableStreamBYOBReader": [
    "ReadableStreamBYOBReader(stream)",
    "[[readintorequests]]",
    "constructor(stream)",
    "read(view)",
    "read(view, options)",
    "releaseLock()"
  ],
  "ReadableStreamBYOBReader/ReadableStreamBYOBReader(stream)": [
    "stream"
  ],
  "ReadableStreamBYOBReader/constructor(stream)": [
    "stream"
  ],
  "ReadableStreamBYOBReader/read(view)": [
    "options",
    "view"
  ],
  "ReadableStreamBYOBReader/read(view, options)": [
    "options",
    "view"
  ],
  "ReadableStreamBYOBReaderReadOptions": [
    "min"
  ],
  "ReadableStreamBYOBRequest": [
    "[[controller]]",
    "[[view]]",
    "respond(bytesWritten)",
    "respondWithNewView(view)",
    "view"
  ],
  "ReadableStreamBYOBRequest/respond(bytesWritten)": [
    "bytesWritten"
  ],
  "ReadableStreamBYOBRequest/respondWithNewView(view)": [
    "view"
  ],
  "ReadableStreamController": [
    "[[CancelSteps]]",
    "[[PullSteps]]",
    "[[ReleaseSteps]]"
  ],
  "ReadableStreamDefaultController": [
    "[[CancelSteps]]",
    "[[PullSteps]]",
    "[[ReleaseSteps]]",
    "[[cancelalgorithm]]",
    "[[closerequested]]",
    "[[pullagain]]",
    "[[pullalgorithm]]",
    "[[pulling]]",
    "[[queue]]",
    "[[queuetotalsize]]",
    "[[started]]",
    "[[strategyhwm]]",
    "[[strategysizealgorithm]]",
    "[[stream]]",
    "close()",
    "desiredSize",
    "enqueue()",
    "enqueue(chunk)",
    "error()",
    "error(e)"
  ],
  "ReadableStreamDefaultController/enqueue()": [
    "chunk"
  ],
  "ReadableStreamDefaultController/enqueue(chunk)": [
    "chunk"
  ],
  "ReadableStreamDefaultController/error()": [
    "e"
  ],
  "ReadableStreamDefaultController/error(e)": [
    "e"
  ],
  "ReadableStreamDefaultReader": [
    "ReadableStreamDefaultReader(stream)",
    "[[readrequests]]",
    "cancel",
    "constructor(stream)",
    "read a chunk",
    "read all bytes",
    "read()",
    "reading a chunk",
    "reading all bytes",
    "release",
    "releaseLock()"
  ],
  "ReadableStreamDefaultReader/ReadableStreamDefaultReader(stream)": [
    "stream"
  ],
  "ReadableStreamDefaultReader/constructor(stream)": [
    "stream"
  ],
  "ReadableStreamGenericReader": [
    "[[closedpromise]]",
    "[[stream]]",
    "cancel()",
    "cancel(reason)",
    "closed"
  ],
  "ReadableStreamGenericReader/cancel()": [
    "reason"
  ],
  "ReadableStreamGenericReader/cancel(reason)": [
    "reason"
  ],
  "ReadableStreamGetReaderOptions": [
    "mode"
  ],
  "ReadableStreamIteratorOptions": [
    "preventCancel"
  ],
  "ReadableStreamReadResult": [
    "done",
    "value"
  ],
  "ReadableStreamReaderMode": [
    "\"byob\""
  ],
  "ReadableStreamType": [
    "\"bytes\"",
    "bytes"
  ],
  "ReadableWritablePair": [
    "readable",
    "writable"
  ],
  "ReadyState": [
    "closed",
    "ended",
    "open"
  ],
  "RealTimeContribution": [
    "bucket",
    "latencyThreshold",
    "priorityWeight"
  ],
  "RealTimeReporting": [
    "contributeToHistogram(contribution)"
  ],
  "RealTimeReporting/contributeToHistogram(contribution)": [
    "contribution"
  ],
  "RecordingState": [
    "\"inactive\"",
    "\"paused\"",
    "\"recording\"",
    "inactive",
    "paused",
    "recording"
  ],
  "RedEyeReduction": [
    "\"always\"",
    "\"controllable\"",
    "\"never\"",
    "always",
    "controllable",
    "never"
  ],
  "ReferrerPolicy": [
    "",
    "\"\"",
    "\"no-referrer\"",
    "\"no-referrer-when-downgrade\"",
    "\"origin\"",
    "\"origin-when-cross-origin\"",
    "\"same-origin\"",
    "\"strict-origin\"",
    "\"strict-origin-when-cross-origin\"",
    "\"unsafe-url\"",
    "no-referrer",
    "no-referrer-when-downgrade",
    "origin",
    "origin-when-cross-origin",
    "same-origin",
    "strict-origin",
    "strict-origin-when-cross-origin",
    "unsafe-url"
  ],
  "Reflect": [
    "apply(target, thisArgument, argumentsList)",
    "construct(target, argumentsList, newTarget)",
    "defineProperty(target, propertyKey, attributes)",
    "deleteProperty(target, propertyKey)",
    "get(target, propertyKey, receiver)",
    "getOwnPropertyDescriptor(target, propertyKey)",
    "getPrototypeOf(target)",
    "has(target, propertyKey)",
    "isExtensible(target)",
    "ownKeys(target)",
    "preventExtensions(target)",
    "set(target, propertyKey, V, receiver)",
    "setPrototypeOf(target, proto)"
  ],
  "RefreshPolicy": [
    "\"none\"",
    "\"refresh\""
  ],
  "RegExp": [
    "RegExp(pattern, flags)",
    "compile(pattern, flags)",
    "dotAll",
    "exec(string)",
    "flags",
    "global",
    "hasIndices",
    "ignoreCase",
    "multiline",
    "source",
    "sticky",
    "test(S)",
    "toString()",
    "unicode",
    "unicodeSets"
  ],
  "RegExp.prototype [ %Symbol.match% ] ( string )": [
    "RegExp.prototype %Symbol.match% (string)"
  ],
  "RegExp.prototype [ %Symbol.matchAll% ] ( string )": [
    "RegExp.prototype %Symbol.matchAll% (string)"
  ],
  "RegExp.prototype [ %Symbol.replace% ] ( string, replaceValue )": [
    "RegExp.prototype %Symbol.replace% (string, replaceValue)"
  ],
  "RegExp.prototype [ %Symbol.search% ] ( string )": [
    "RegExp.prototype %Symbol.search% (string)"
  ],
  "RegExp.prototype [ %Symbol.split% ] ( string, limit )": [
    "RegExp.prototype %Symbol.split% (string, limit)"
  ],
  "Region": [
    "getRegionFlowRanges()",
    "regionOverset"
  ],
  "RegistrationOptions": [
    "scope",
    "type",
    "updateViaCache"
  ],
  "RegistrationResponseJSON": [
    "authenticatorAttachment",
    "clientExtensionResults",
    "id",
    "rawId",
    "response",
    "type"
  ],
  "RelatedApplication": [
    "id",
    "platform",
    "url",
    "version"
  ],
  "RelativeOrientationSensor": [
    "RelativeOrientationSensor()",
    "RelativeOrientationSensor(sensorOptions)",
    "constructor()",
    "constructor(sensorOptions)"
  ],
  "RelativeOrientationSensor/RelativeOrientationSensor()": [
    "sensorOptions"
  ],
  "RelativeOrientationSensor/RelativeOrientationSensor(sensorOptions)": [
    "sensorOptions"
  ],
  "RelativeOrientationSensor/constructor()": [
    "sensorOptions"
  ],
  "RelativeOrientationSensor/constructor(sensorOptions)": [
    "sensorOptions"
  ],
  "RemoteDocument": [
    "constructor()",
    "contentType",
    "contextUrl",
    "document",
    "documentUrl",
    "profile"
  ],
  "RemotePlayback": [
    "cancelWatchAvailability()",
    "cancelWatchAvailability(id)",
    "onconnect",
    "onconnecting",
    "ondisconnect",
    "prompt()",
    "state",
    "watchAvailability()",
    "watchAvailability(callback)"
  ],
  "RemotePlaybackState": [
    "connected",
    "connecting",
    "disconnected"
  ],
  "RenderBlockingStatusType": [
    "blocking",
    "non-blocking"
  ],
  "RenderState": [
    "[[blendConstant]]",
    "[[colorAttachments]]",
    "[[depthStencilAttachment]]",
    "[[occlusionQueryIndex]]",
    "[[scissorRect]]",
    "[[stencilReference]]",
    "[[viewport]]"
  ],
  "Report": [
    "body",
    "toJSON()",
    "type",
    "url"
  ],
  "ReportBody": [
    "toJSON()"
  ],
  "ReportResultBrowserSignals": [
    "dataVersion",
    "desirability",
    "modifiedBid",
    "topLevelSellerSignals"
  ],
  "ReportWinBrowserSignals": [
    "adCost",
    "buyerReportingId",
    "dataVersion",
    "interestGroupName",
    "kAnonStatus",
    "madeHighestScoringOtherBid",
    "modelingSignals",
    "seller"
  ],
  "ReportingBrowserSignals": [
    "bid",
    "bidCurrency",
    "buyerAndSellerReportingId",
    "componentSeller",
    "highestScoringOtherBid",
    "highestScoringOtherBidCurrency",
    "interestGroupOwner",
    "renderURL",
    "topLevelSeller",
    "topWindowHostname"
  ],
  "ReportingObserver": [
    "ReportingObserver(callback)",
    "ReportingObserver(callback, options)",
    "callback",
    "constructor(callback)",
    "constructor(callback, options)",
    "disconnect()",
    "observe()",
    "options",
    "report queue",
    "takeRecords()"
  ],
  "ReportingObserver/ReportingObserver(callback)": [
    "callback",
    "options"
  ],
  "ReportingObserver/ReportingObserver(callback, options)": [
    "callback",
    "options"
  ],
  "ReportingObserver/constructor(callback)": [
    "callback",
    "options"
  ],
  "ReportingObserver/constructor(callback, options)": [
    "callback",
    "options"
  ],
  "ReportingObserverCallback": [
    "observer",
    "reports"
  ],
  "ReportingObserverOptions": [
    "buffered",
    "types"
  ],
  "Request": [
    "Request(input)",
    "Request(input, init)",
    "cache",
    "clone()",
    "constructor(input)",
    "constructor(input, init)",
    "create",
    "creating",
    "credentials",
    "destination",
    "duplex",
    "headers",
    "integrity",
    "isHistoryNavigation",
    "isReloadNavigation",
    "keepalive",
    "method",
    "mode",
    "redirect",
    "referrer",
    "referrerPolicy",
    "request",
    "signal",
    "targetAddressSpace",
    "url"
  ],
  "Request/Request(input)": [
    "init",
    "input"
  ],
  "Request/Request(input, init)": [
    "init",
    "input"
  ],
  "Request/constructor(input)": [
    "init",
    "input"
  ],
  "Request/constructor(input, init)": [
    "init",
    "input"
  ],
  "RequestCache": [
    "\"default\"",
    "\"force-cache\"",
    "\"no-cache\"",
    "\"no-store\"",
    "\"only-if-cached\"",
    "\"reload\""
  ],
  "RequestCredentials": [
    "\"include\"",
    "\"omit\"",
    "\"same-origin\""
  ],
  "RequestDestination": [
    "\"\"",
    "\"audio\"",
    "\"audioworklet\"",
    "\"document\"",
    "\"embed\"",
    "\"font\"",
    "\"frame\"",
    "\"iframe\"",
    "\"image\"",
    "\"json\"",
    "\"manifest\"",
    "\"object\"",
    "\"paintworklet\"",
    "\"report\"",
    "\"script\"",
    "\"sharedworker\"",
    "\"style\"",
    "\"track\"",
    "\"video\"",
    "\"worker\"",
    "\"xslt\""
  ],
  "RequestDeviceOptions": [
    "acceptAllDevices",
    "exclusionFilters",
    "filters",
    "optionalManufacturerData",
    "optionalServices"
  ],
  "RequestDuplex": [
    "\"half\""
  ],
  "RequestInit": [
    "adAuctionHeaders",
    "attributionReporting",
    "body",
    "browsingTopics",
    "cache",
    "credentials",
    "duplex",
    "headers",
    "integrity",
    "keepalive",
    "method",
    "mode",
    "priority",
    "privateToken",
    "redirect",
    "referrer",
    "referrerPolicy",
    "sharedStorageWritable",
    "signal",
    "targetAddressSpace",
    "window"
  ],
  "RequestMode": [
    "\"cors\"",
    "\"navigate\"",
    "\"no-cors\"",
    "\"same-origin\""
  ],
  "RequestPriority": [
    "\"auto\"",
    "\"high\"",
    "\"low\""
  ],
  "RequestRedirect": [
    "\"error\"",
    "\"follow\"",
    "\"manual\""
  ],
  "ResidentKeyRequirement": [
    "\"discouraged\"",
    "\"preferred\"",
    "\"required\"",
    "discouraged",
    "preferred",
    "required"
  ],
  "ResizeObservation": [
    "ResizeObservation(target, observedBox)",
    "ResizeObservation(target, options)",
    "constructor(target, observedBox)",
    "isActive()",
    "lastReportedSizes",
    "observedBox",
    "target"
  ],
  "ResizeObservation/ResizeObservation(target, observedBox)": [
    "observedBox",
    "target"
  ],
  "ResizeObservation/constructor(target, observedBox)": [
    "observedBox",
    "target"
  ],
  "ResizeObserver": [
    "ResizeObserver(callback)",
    "[[activeTargets]]",
    "[[callback]]",
    "[[observationTargets]]",
    "[[skippedTargets]]",
    "activeTargets",
    "callback",
    "constructor(callback)",
    "disconnect()",
    "observationTargets",
    "observe(target)",
    "observe(target, options)",
    "skippedTargets",
    "unobserve(target)"
  ],
  "ResizeObserver/ResizeObserver(callback)": [
    "callback"
  ],
  "ResizeObserver/constructor(callback)": [
    "callback"
  ],
  "ResizeObserver/observe(target)": [
    "options",
    "target"
  ],
  "ResizeObserver/observe(target, options)": [
    "options",
    "target"
  ],
  "ResizeObserver/unobserve(target)": [
    "target"
  ],
  "ResizeObserverBoxOptions": [
    "\"border-box\"",
    "\"content-box\"",
    "\"device-pixel-content-box\""
  ],
  "ResizeObserverCallback": [
    "entries",
    "observer"
  ],
  "ResizeObserverEntry": [
    "borderBoxSize",
    "contentBoxSize",
    "contentRect",
    "devicePixelContentBoxSize",
    "target"
  ],
  "ResizeObserverOptions": [
    "box"
  ],
  "ResizeObserverSize": [
    "blockSize",
    "inlineSize"
  ],
  "ResizeQuality": [
    "high",
    "low",
    "medium",
    "pixelated"
  ],
  "Response": [
    "Response()",
    "Response(body)",
    "Response(body, init)",
    "clone()",
    "constructor()",
    "constructor(body)",
    "constructor(body, init)",
    "create",
    "creating",
    "error()",
    "headers",
    "json(data)",
    "json(data, init)",
    "ok",
    "redirect(url)",
    "redirect(url, status)",
    "redirected",
    "response",
    "status",
    "statusText",
    "type",
    "url"
  ],
  "Response/Response()": [
    "body",
    "init"
  ],
  "Response/Response(body)": [
    "body",
    "init"
  ],
  "Response/Response(body, init)": [
    "body",
    "init"
  ],
  "Response/constructor()": [
    "body",
    "init"
  ],
  "Response/constructor(body)": [
    "body",
    "init"
  ],
  "Response/constructor(body, init)": [
    "body",
    "init"
  ],
  "Response/json(data)": [
    "data",
    "init"
  ],
  "Response/json(data, init)": [
    "data",
    "init"
  ],
  "Response/redirect(url)": [
    "status",
    "url"
  ],
  "Response/redirect(url, status)": [
    "status",
    "url"
  ],
  "ResponseInit": [
    "headers",
    "status",
    "statusText"
  ],
  "ResponseType": [
    "\"basic\"",
    "\"cors\"",
    "\"default\"",
    "\"error\"",
    "\"opaque\"",
    "\"opaqueredirect\""
  ],
  "RestrictionTarget": [
    "[[Element]]",
    "fromElement()",
    "fromElement(element)"
  ],
  "RouterCondition": [
    "not",
    "or",
    "requestDestination",
    "requestMethod",
    "requestMode",
    "runningStatus",
    "urlPattern"
  ],
  "RouterRule": [
    "condition",
    "source"
  ],
  "RouterSourceDict": [
    "cacheName"
  ],
  "RouterSourceEnum": [
    "\"cache\"",
    "\"fetch-event\"",
    "\"network\"",
    "\"race-network-and-fetch-handler\""
  ],
  "RsaHashedImportParams": [
    "hash"
  ],
  "RsaHashedKeyAlgorithm": [
    "hash"
  ],
  "RsaHashedKeyGenParams": [
    "hash"
  ],
  "RsaKeyAlgorithm": [
    "modulusLength",
    "publicExponent"
  ],
  "RsaKeyGenParams": [
    "modulusLength",
    "publicExponent"
  ],
  "RsaOaepParams": [
    "label"
  ],
  "RsaOtherPrimesInfo": [
    "d",
    "r",
    "t"
  ],
  "RsaPssParams": [
    "saltLength"
  ],
  "RunFunctionForSharedStorageSelectURLOperation": [
    "data",
    "urls"
  ],
  "RunningStatus": [
    "\"not-running\"",
    "\"running\""
  ],
  "SFrameTransform": [
    "SFrameTransform()",
    "SFrameTransform(options)",
    "constructor()",
    "constructor(options)",
    "onerror",
    "setEncryptionKey(key)",
    "setEncryptionKey(key, keyID)"
  ],
  "SFrameTransform/SFrameTransform()": [
    "options"
  ],
  "SFrameTransform/SFrameTransform(options)": [
    "options"
  ],
  "SFrameTransform/constructor()": [
    "options"
  ],
  "SFrameTransform/constructor(options)": [
    "options"
  ],
  "SFrameTransform/setEncryptionKey(key)": [
    "key",
    "keyID"
  ],
  "SFrameTransform/setEncryptionKey(key, keyID)": [
    "key",
    "keyID"
  ],
  "SFrameTransformErrorEvent": [
    "SFrameTransformErrorEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "errorType",
    "frame",
    "keyID"
  ],
  "SFrameTransformErrorEvent/SFrameTransformErrorEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SFrameTransformErrorEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SFrameTransformErrorEventInit": [
    "errorType",
    "frame",
    "keyID"
  ],
  "SFrameTransformErrorEventType": [
    "\"authentication\"",
    "\"keyID\"",
    "\"syntax\""
  ],
  "SFrameTransformOptions": [
    "role"
  ],
  "SFrameTransformRole": [
    "\"decrypt\"",
    "\"encrypt\""
  ],
  "SVGAElement": [
    "download",
    "hreflang",
    "ping",
    "referrerPolicy",
    "rel",
    "relList",
    "target",
    "text",
    "type"
  ],
  "SVGAngle": [
    "SVG_ANGLETYPE_DEG",
    "SVG_ANGLETYPE_GRAD",
    "SVG_ANGLETYPE_RAD",
    "SVG_ANGLETYPE_UNKNOWN",
    "SVG_ANGLETYPE_UNSPECIFIED",
    "convertToSpecifiedUnits",
    "newValueSpecifiedUnits",
    "unitType",
    "value",
    "valueAsString",
    "valueInSpecifiedUnits"
  ],
  "SVGAnimatedAngle": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedBoolean": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedEnumeration": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedInteger": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedLength": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedLengthList": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedNumber": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedNumberList": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedPoints": [
    "animatedPoints",
    "points"
  ],
  "SVGAnimatedPreserveAspectRatio": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedRect": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedString": [
    "animVal",
    "baseVal"
  ],
  "SVGAnimatedTransformList": [
    "animVal",
    "baseVal"
  ],
  "SVGCircleElement": [
    "cx",
    "cy",
    "r"
  ],
  "SVGClipPathElement": [
    "clipPathUnits",
    "transform"
  ],
  "SVGComponentTransferFunctionElement": [
    "SVG_FECOMPONENTTRANSFER_TYPE_DISCRETE",
    "SVG_FECOMPONENTTRANSFER_TYPE_GAMMA",
    "SVG_FECOMPONENTTRANSFER_TYPE_IDENTITY",
    "SVG_FECOMPONENTTRANSFER_TYPE_LINEAR",
    "SVG_FECOMPONENTTRANSFER_TYPE_TABLE",
    "SVG_FECOMPONENTTRANSFER_TYPE_UNKNOWN",
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tableValues",
    "type"
  ],
  "SVGElement": [
    "className",
    "ownerSVGElement",
    "viewportElement"
  ],
  "SVGElementInstance": [
    "correspondingElement",
    "correspondingUseElement"
  ],
  "SVGEllipseElement": [
    "cx",
    "cy",
    "rx",
    "ry"
  ],
  "SVGFEBlendElement": [
    "SVG_FEBLEND_MODE_COLOR",
    "SVG_FEBLEND_MODE_COLOR_BURN",
    "SVG_FEBLEND_MODE_COLOR_DODGE",
    "SVG_FEBLEND_MODE_DARKEN",
    "SVG_FEBLEND_MODE_DIFFERENCE",
    "SVG_FEBLEND_MODE_EXCLUSION",
    "SVG_FEBLEND_MODE_HARD_LIGHT",
    "SVG_FEBLEND_MODE_HUE",
    "SVG_FEBLEND_MODE_LIGHTEN",
    "SVG_FEBLEND_MODE_LUMINOSITY",
    "SVG_FEBLEND_MODE_MULTIPLY",
    "SVG_FEBLEND_MODE_NORMAL",
    "SVG_FEBLEND_MODE_OVERLAY",
    "SVG_FEBLEND_MODE_SATURATION",
    "SVG_FEBLEND_MODE_SCREEN",
    "SVG_FEBLEND_MODE_SOFT_LIGHT",
    "SVG_FEBLEND_MODE_UNKNOWN",
    "in1",
    "in2",
    "mode"
  ],
  "SVGFEColorMatrixElement": [
    "SVG_FECOLORMATRIX_TYPE_HUEROTATE",
    "SVG_FECOLORMATRIX_TYPE_LUMINANCETOALPHA",
    "SVG_FECOLORMATRIX_TYPE_MATRIX",
    "SVG_FECOLORMATRIX_TYPE_SATURATE",
    "SVG_FECOLORMATRIX_TYPE_UNKNOWN",
    "in1",
    "type",
    "values"
  ],
  "SVGFEComponentTransferElement": [
    "in1"
  ],
  "SVGFECompositeElement": [
    "SVG_FECOMPOSITE_OPERATOR_ARITHMETIC",
    "SVG_FECOMPOSITE_OPERATOR_ATOP",
    "SVG_FECOMPOSITE_OPERATOR_IN",
    "SVG_FECOMPOSITE_OPERATOR_OUT",
    "SVG_FECOMPOSITE_OPERATOR_OVER",
    "SVG_FECOMPOSITE_OPERATOR_UNKNOWN",
    "SVG_FECOMPOSITE_OPERATOR_XOR",
    "in1",
    "in2",
    "k1",
    "k2",
    "k3",
    "k4",
    "operator"
  ],
  "SVGFEConvolveMatrixElement": [
    "SVG_EDGEMODE_DUPLICATE",
    "SVG_EDGEMODE_NONE",
    "SVG_EDGEMODE_UNKNOWN",
    "SVG_EDGEMODE_WRAP",
    "bias",
    "divisor",
    "edgeMode",
    "in1",
    "kernelMatrix",
    "kernelUnitLengthX",
    "kernelUnitLengthY",
    "orderX",
    "orderY",
    "preserveAlpha",
    "targetX",
    "targetY"
  ],
  "SVGFEDiffuseLightingElement": [
    "diffuseConstant",
    "in1",
    "kernelUnitLengthX",
    "kernelUnitLengthY",
    "surfaceScale"
  ],
  "SVGFEDisplacementMapElement": [
    "SVG_CHANNEL_A",
    "SVG_CHANNEL_B",
    "SVG_CHANNEL_G",
    "SVG_CHANNEL_R",
    "SVG_CHANNEL_UNKNOWN",
    "in1",
    "in2",
    "scale",
    "xChannelSelector",
    "yChannelSelector"
  ],
  "SVGFEDistantLightElement": [
    "azimuth",
    "elevation"
  ],
  "SVGFEDropShadowElement": [
    "dx",
    "dy",
    "in1",
    "setStdDeviation(stdDeviationX, stdDeviationY)",
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEDropShadowElement/setStdDeviation(stdDeviationX, stdDeviationY)": [
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEGaussianBlurElement": [
    "SVG_EDGEMODE_DUPLICATE",
    "SVG_EDGEMODE_NONE",
    "SVG_EDGEMODE_UNKNOWN",
    "SVG_EDGEMODE_WRAP",
    "edgeMode",
    "in1",
    "setStdDeviation(stdDeviationX, stdDeviationY)",
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEGaussianBlurElement/setStdDeviation(stdDeviationX, stdDeviationY)": [
    "stdDeviationX",
    "stdDeviationY"
  ],
  "SVGFEImageElement": [
    "crossOrigin",
    "preserveAspectRatio"
  ],
  "SVGFEMergeNodeElement": [
    "in1"
  ],
  "SVGFEMorphologyElement": [
    "SVG_MORPHOLOGY_OPERATOR_DILATE",
    "SVG_MORPHOLOGY_OPERATOR_ERODE",
    "SVG_MORPHOLOGY_OPERATOR_UNKNOWN",
    "in1",
    "operator",
    "radiusX",
    "radiusY"
  ],
  "SVGFEOffsetElement": [
    "dx",
    "dy",
    "in1"
  ],
  "SVGFEPointLightElement": [
    "x",
    "y",
    "z"
  ],
  "SVGFESpecularLightingElement": [
    "in1",
    "kernelUnitLengthX",
    "kernelUnitLengthY",
    "specularConstant",
    "specularExponent",
    "surfaceScale"
  ],
  "SVGFESpotLightElement": [
    "limitingConeAngle",
    "pointsAtX",
    "pointsAtY",
    "pointsAtZ",
    "specularExponent",
    "x",
    "y",
    "z"
  ],
  "SVGFETileElement": [
    "in1"
  ],
  "SVGFETurbulenceElement": [
    "SVG_STITCHTYPE_NOSTITCH",
    "SVG_STITCHTYPE_STITCH",
    "SVG_STITCHTYPE_UNKNOWN",
    "SVG_TURBULENCE_TYPE_FRACTALNOISE",
    "SVG_TURBULENCE_TYPE_TURBULENCE",
    "SVG_TURBULENCE_TYPE_UNKNOWN",
    "baseFrequencyX",
    "baseFrequencyY",
    "numOctaves",
    "seed",
    "stitchTiles",
    "type"
  ],
  "SVGFilterElement": [
    "filterUnits",
    "height",
    "primitiveUnits",
    "width",
    "x",
    "y"
  ],
  "SVGFilterPrimitiveStandardAttributes": [
    "height",
    "result",
    "width",
    "x",
    "y"
  ],
  "SVGFitToViewBox": [
    "preserveAspectRatio",
    "viewBox"
  ],
  "SVGForeignObjectElement": [
    "height",
    "width",
    "x",
    "y"
  ],
  "SVGGeometryElement": [
    "getPointAtLength",
    "getTotalLength",
    "isPointInFill",
    "isPointInStroke",
    "pathLength"
  ],
  "SVGGradientElement": [
    "SVG_SPREADMETHOD_PAD",
    "SVG_SPREADMETHOD_REFLECT",
    "SVG_SPREADMETHOD_REPEAT",
    "SVG_SPREADMETHOD_UNKNOWN",
    "gradientTransform",
    "gradientUnits",
    "spreadMethod"
  ],
  "SVGGraphicsElement": [
    "getBBox",
    "getCTM",
    "getScreenCTM",
    "transform"
  ],
  "SVGImageElement": [
    "crossOrigin",
    "height",
    "preserveAspectRatio",
    "width",
    "x",
    "y"
  ],
  "SVGLength": [
    "SVG_LENGTHTYPE_CM",
    "SVG_LENGTHTYPE_EMS",
    "SVG_LENGTHTYPE_EXS",
    "SVG_LENGTHTYPE_IN",
    "SVG_LENGTHTYPE_MM",
    "SVG_LENGTHTYPE_NUMBER",
    "SVG_LENGTHTYPE_PC",
    "SVG_LENGTHTYPE_PERCENTAGE",
    "SVG_LENGTHTYPE_PT",
    "SVG_LENGTHTYPE_PX",
    "SVG_LENGTHTYPE_UNKNOWN",
    "convertToSpecifiedUnits",
    "newValueSpecifiedUnits",
    "unitType",
    "value",
    "valueAsString",
    "valueInSpecifiedUnits"
  ],
  "SVGLineElement": [
    "x1",
    "x2",
    "y1",
    "y2"
  ],
  "SVGLinearGradientElement": [
    "x1",
    "x2",
    "y1",
    "y2"
  ],
  "SVGMarkerElement": [
    "SVG_MARKERUNITS_STROKEWIDTH",
    "SVG_MARKERUNITS_UNKNOWN",
    "SVG_MARKERUNITS_USERSPACEONUSE",
    "SVG_MARKER_ORIENT_ANGLE",
    "SVG_MARKER_ORIENT_AUTO",
    "SVG_MARKER_ORIENT_UNKNOWN",
    "markerHeight",
    "markerUnits",
    "markerWidth",
    "orient",
    "orientAngle",
    "orientType",
    "refX",
    "refY",
    "setOrientToAngle",
    "setOrientToAuto"
  ],
  "SVGMaskElement": [
    "height",
    "maskContentUnits",
    "maskUnits",
    "width",
    "x",
    "y"
  ],
  "SVGNumber": [
    "value"
  ],
  "SVGPatternElement": [
    "height",
    "patternContentUnits",
    "patternTransform",
    "patternUnits",
    "width",
    "x",
    "y"
  ],
  "SVGPreserveAspectRatio": [
    "SVG_MEETORSLICE_MEET",
    "SVG_MEETORSLICE_SLICE",
    "SVG_MEETORSLICE_UNKNOWN",
    "SVG_PRESERVEASPECTRATIO_NONE",
    "SVG_PRESERVEASPECTRATIO_UNKNOWN",
    "SVG_PRESERVEASPECTRATIO_XMAXYMAX",
    "SVG_PRESERVEASPECTRATIO_XMAXYMID",
    "SVG_PRESERVEASPECTRATIO_XMAXYMIN",
    "SVG_PRESERVEASPECTRATIO_XMIDYMAX",
    "SVG_PRESERVEASPECTRATIO_XMIDYMID",
    "SVG_PRESERVEASPECTRATIO_XMIDYMIN",
    "SVG_PRESERVEASPECTRATIO_XMINYMAX",
    "SVG_PRESERVEASPECTRATIO_XMINYMID",
    "SVG_PRESERVEASPECTRATIO_XMINYMIN",
    "align",
    "meetOrSlice"
  ],
  "SVGRadialGradientElement": [
    "cx",
    "cy",
    "fr",
    "fx",
    "fy",
    "r"
  ],
  "SVGRectElement": [
    "height",
    "rx",
    "ry",
    "width",
    "x",
    "y"
  ],
  "SVGSVGElement": [
    "checkEnclosure",
    "checkIntersection",
    "createSVGAngle",
    "createSVGLength",
    "createSVGMatrix",
    "createSVGNumber",
    "createSVGPoint",
    "createSVGRect",
    "createSVGTransform",
    "createSVGTransformFromMatrix",
    "currentScale",
    "currentTranslate",
    "deselectAll",
    "forceRedraw",
    "getElementById",
    "getEnclosureList",
    "getIntersectionList",
    "height",
    "suspendRedraw",
    "unsuspendRedraw",
    "unsuspendRedrawAll",
    "width",
    "x",
    "y"
  ],
  "SVGScriptElement": [
    "crossOrigin",
    "type"
  ],
  "SVGStopElement": [
    "offset"
  ],
  "SVGStyleElement": [
    "media",
    "title",
    "type"
  ],
  "SVGTests": [
    "requiredExtensions",
    "systemLanguage"
  ],
  "SVGTextContentElement": [
    "LENGTHADJUST_SPACING",
    "LENGTHADJUST_SPACINGANDGLYPHS",
    "LENGTHADJUST_UNKNOWN",
    "getCharNumAtPosition",
    "getComputedTextLength",
    "getEndPositionOfChar",
    "getExtentOfChar",
    "getNumberOfChars",
    "getRotationOfChar",
    "getStartPositionOfChar",
    "getSubStringLength",
    "lengthAdjust",
    "selectSubString",
    "textLength"
  ],
  "SVGTextPathElement": [
    "TEXTPATH_METHODTYPE_ALIGN",
    "TEXTPATH_METHODTYPE_STRETCH",
    "TEXTPATH_METHODTYPE_UNKNOWN",
    "TEXTPATH_SPACINGTYPE_AUTO",
    "TEXTPATH_SPACINGTYPE_EXACT",
    "TEXTPATH_SPACINGTYPE_UNKNOWN",
    "method",
    "spacing",
    "startOffset"
  ],
  "SVGTextPositioningElement": [
    "dx",
    "dy",
    "rotate",
    "x",
    "y"
  ],
  "SVGTransform": [
    "SVG_TRANSFORM_MATRIX",
    "SVG_TRANSFORM_ROTATE",
    "SVG_TRANSFORM_SCALE",
    "SVG_TRANSFORM_SKEWX",
    "SVG_TRANSFORM_SKEWY",
    "SVG_TRANSFORM_TRANSLATE",
    "SVG_TRANSFORM_UNKNOWN",
    "angle",
    "matrix",
    "setMatrix",
    "setRotate",
    "setScale",
    "setSkewX",
    "setSkewY",
    "setTranslate",
    "type"
  ],
  "SVGTransformList": [
    "consolidate",
    "createSVGTransformFromMatrix"
  ],
  "SVGURIReference": [
    "href"
  ],
  "SVGUnitTypes": [
    "SVG_UNIT_TYPE_OBJECTBOUNDINGBOX",
    "SVG_UNIT_TYPE_UNKNOWN",
    "SVG_UNIT_TYPE_USERSPACEONUSE"
  ],
  "SVGUseElement": [
    "animatedInstanceRoot",
    "height",
    "instanceRoot",
    "width",
    "x",
    "y"
  ],
  "SVGZoomAndPan": [
    "SVG_ZOOMANDPAN_DISABLE",
    "SVG_ZOOMANDPAN_MAGNIFY",
    "SVG_ZOOMANDPAN_UNKNOWN",
    "zoomAndPan"
  ],
  "SameSiteCookiesType": [
    "\"all\"",
    "\"none\""
  ],
  "Sanitizer": [
    "Sanitizer()",
    "Sanitizer(config)",
    "constructor",
    "constructor()",
    "constructor(config)",
    "get",
    "get()",
    "getUnsafe()",
    "getunsafe"
  ],
  "Sanitizer/Sanitizer()": [
    "config"
  ],
  "Sanitizer/Sanitizer(config)": [
    "config"
  ],
  "Sanitizer/constructor()": [
    "config"
  ],
  "Sanitizer/constructor(config)": [
    "config"
  ],
  "SanitizerAttributeNamespace": [
    "name",
    "namespace"
  ],
  "SanitizerConfig": [
    "attributes",
    "canonical",
    "comments",
    "contains",
    "dataAttributes",
    "elements",
    "get a sanitizer config from options",
    "removeAttributes",
    "removeElements",
    "replaceWithChildrenElements",
    "valid"
  ],
  "SanitizerElementNamespace": [
    "name",
    "namespace"
  ],
  "SanitizerElementNamespaceWithAttributes": [
    "attributes",
    "removeAttributes"
  ],
  "SanitizerNameList": [
    "canonical",
    "valid"
  ],
  "SanitizerNameWithAttributesList": [
    "canonical"
  ],
  "SaveFilePickerOptions": [
    "suggestedName"
  ],
  "Scheduler": [
    "dynamic priority task queue map",
    "postTask(callback)",
    "postTask(callback, options)",
    "static priority task queue map",
    "yield()"
  ],
  "Scheduler/postTask(callback)": [
    "callback",
    "options"
  ],
  "Scheduler/postTask(callback, options)": [
    "callback",
    "options"
  ],
  "SchedulerPostTaskOptions": [
    "delay",
    "priority",
    "signal"
  ],
  "Scheduling": [
    "isInputPending()",
    "isInputPending(isInputPendingOptions)"
  ],
  "ScoreAdOutput": [
    "allowComponentAuction",
    "bid",
    "bidCurrency",
    "desirability",
    "incomingBidInSellerCurrency"
  ],
  "ScoringBrowserSignals": [
    "adComponents",
    "bidCurrency",
    "biddingDurationMsec",
    "crossOriginDataVersion",
    "dataVersion",
    "forDebuggingOnlyInCooldownOrLockout",
    "interestGroupOwner",
    "renderSize",
    "renderURL",
    "topWindowHostname"
  ],
  "Screen": [
    "active orientation lock",
    "availHeight",
    "availWidth",
    "change",
    "colorDepth",
    "current orientation angle",
    "current orientation type",
    "height",
    "isExtended",
    "onchange",
    "orientation",
    "pixelDepth",
    "width"
  ],
  "ScreenDetailed": [
    "availLeft",
    "availTop",
    "change",
    "devicePixelRatio",
    "isInternal",
    "isPrimary",
    "label",
    "left",
    "onchange",
    "top"
  ],
  "ScreenDetails": [
    "currentScreen",
    "currentscreenchange",
    "oncurrentscreenchange",
    "onscreenschange",
    "screens",
    "screenschange"
  ],
  "ScreenIdleState": [
    "\"locked\"",
    "\"unlocked\""
  ],
  "ScreenOrientation": [
    "[[angle]]",
    "[[initialType]]",
    "[[type]]",
    "angle",
    "change",
    "lock()",
    "lock(orientation)",
    "onchange",
    "type",
    "unlock()"
  ],
  "ScriptInvokerType": [
    "\"classic-script\"",
    "\"event-listener\"",
    "\"module-script\"",
    "\"reject-promise\"",
    "\"resolve-promise\"",
    "\"user-callback\""
  ],
  "ScriptProcessorNode": [
    "audioprocess",
    "bufferSize",
    "onaudioprocess"
  ],
  "ScriptWindowAttribution": [
    "\"ancestor\"",
    "\"descendant\"",
    "\"other\"",
    "\"same-page\"",
    "\"self\""
  ],
  "ScriptingPolicyReportBody": [
    "colno",
    "lineno",
    "toJSON()",
    "violationSample",
    "violationType",
    "violationURL"
  ],
  "ScriptingPolicyViolationType": [
    "\"eval\"",
    "\"externalScript\"",
    "\"inlineEventHandler\"",
    "\"inlineScript\""
  ],
  "ScrollAxis": [
    "\"block\"",
    "\"inline\"",
    "\"x\"",
    "\"y\""
  ],
  "ScrollBehavior": [
    "\"auto\"",
    "\"instant\"",
    "\"smooth\""
  ],
  "ScrollIntoViewOptions": [
    "block",
    "inline"
  ],
  "ScrollLogicalPosition": [
    "\"center\"",
    "\"end\"",
    "\"nearest\"",
    "\"start\""
  ],
  "ScrollOptions": [
    "behavior"
  ],
  "ScrollRestoration": [
    "auto",
    "manual"
  ],
  "ScrollSetting": [
    "",
    "\"\"",
    "\"up\"",
    "up"
  ],
  "ScrollTimeline": [
    "ScrollTimeline()",
    "ScrollTimeline(options)",
    "axis",
    "constructor()",
    "constructor(options)",
    "source"
  ],
  "ScrollTimeline/ScrollTimeline()": [
    "options"
  ],
  "ScrollTimeline/ScrollTimeline(options)": [
    "options"
  ],
  "ScrollTimeline/constructor()": [
    "options"
  ],
  "ScrollTimeline/constructor(options)": [
    "options"
  ],
  "ScrollTimelineOptions": [
    "axis",
    "source"
  ],
  "ScrollToOptions": [
    "left",
    "top"
  ],
  "Sec-Purpose prefetch": [
    "anonymous-client-ip"
  ],
  "SecurePaymentConfirmationRequest": [
    "challenge",
    "credentialIds",
    "extensions",
    "instrument",
    "locale",
    "payeeName",
    "payeeOrigin",
    "rpId",
    "showOptOut",
    "timeout"
  ],
  "SecurityPolicyViolationEvent": [
    "SecurityPolicyViolationEvent(type)",
    "SecurityPolicyViolationEvent(type, eventInitDict)",
    "blockedURI",
    "columnNumber",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "disposition",
    "documentURI",
    "effectiveDirective",
    "lineNumber",
    "originalPolicy",
    "referrer",
    "sample",
    "sourceFile",
    "statusCode",
    "violatedDirective"
  ],
  "SecurityPolicyViolationEvent/SecurityPolicyViolationEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEvent/SecurityPolicyViolationEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SecurityPolicyViolationEventDisposition": [
    "\"enforce\"",
    "\"report\""
  ],
  "SecurityPolicyViolationEventInit": [
    "blockedURI",
    "columnNumber",
    "disposition",
    "documentURI",
    "effectiveDirective",
    "lineNumber",
    "originalPolicy",
    "referrer",
    "sample",
    "sourceFile",
    "statusCode",
    "violatedDirective"
  ],
  "Selection": [
    "addRange()",
    "addRange(range)",
    "anchorNode",
    "anchorOffset",
    "collapse()",
    "collapse(node)",
    "collapse(node, offset)",
    "collapseToEnd()",
    "collapseToStart()",
    "containsNode()",
    "containsNode(node)",
    "containsNode(node, allowPartialContainment)",
    "deleteFromDocument()",
    "direction",
    "empty()",
    "extend()",
    "extend(node)",
    "extend(node, offset)",
    "focusNode",
    "focusOffset",
    "getComposedRanges()",
    "getComposedRanges(shadowRoots)",
    "getRangeAt()",
    "getRangeAt(index)",
    "isCollapsed",
    "modify()",
    "modify(alter)",
    "modify(alter, direction)",
    "modify(alter, direction, granularity)",
    "rangeCount",
    "removeAllRanges()",
    "removeRange()",
    "removeRange(range)",
    "selectAllChildren()",
    "selectAllChildren(node)",
    "setBaseAndExtent()",
    "setBaseAndExtent(anchorNode, anchorOffset, focusNode, focusOffset)",
    "setPosition()",
    "setPosition(node)",
    "setPosition(node, offset)",
    "stringifier()",
    "type"
  ],
  "SelectionMode": [
    "end",
    "preserve",
    "select",
    "start"
  ],
  "SelfCapturePreferenceEnum": [
    "exclude",
    "include"
  ],
  "Sensor": [
    "[[frequency]]",
    "[[lastEventFiredAt]]",
    "[[pendingReadingNotification]]",
    "[[state]]",
    "activated",
    "hasReading",
    "onactivate",
    "onerror",
    "onreading",
    "start()",
    "stop()",
    "timestamp"
  ],
  "SensorErrorEvent": [
    "SensorErrorEvent(type, errorEventInitDict)",
    "constructor(type, errorEventInitDict)",
    "error"
  ],
  "SensorErrorEvent/SensorErrorEvent(type, errorEventInitDict)": [
    "errorEventInitDict",
    "type"
  ],
  "SensorErrorEvent/constructor(type, errorEventInitDict)": [
    "errorEventInitDict",
    "type"
  ],
  "SensorErrorEventInit": [
    "error"
  ],
  "SensorOptions": [
    "frequency"
  ],
  "SequenceEffect": [
    "SequenceEffect(children)",
    "SequenceEffect(children, timing)",
    "clone()",
    "constructor(children)",
    "constructor(children, timing)"
  ],
  "SequenceEffect/SequenceEffect(children)": [
    "children",
    "timing"
  ],
  "SequenceEffect/SequenceEffect(children, timing)": [
    "children",
    "timing"
  ],
  "SequenceEffect/constructor(children)": [
    "children",
    "timing"
  ],
  "SequenceEffect/constructor(children, timing)": [
    "children",
    "timing"
  ],
  "Serial": [
    "getPorts()",
    "onconnect",
    "ondisconnect",
    "requestPort()",
    "requestPort(options)"
  ],
  "SerialInputSignals": [
    "clearToSend",
    "dataCarrierDetect",
    "dataSetReady",
    "ringIndicator"
  ],
  "SerialOptions": [
    "baudRate",
    "bufferSize",
    "dataBits",
    "flowControl",
    "parity",
    "stopBits"
  ],
  "SerialOutputSignals": [
    "break",
    "dataTerminalReady",
    "requestToSend"
  ],
  "SerialPort": [
    "[[bufferSize]]",
    "[[connected]]",
    "[[pendingClosePromise]]",
    "[[readFatal]]",
    "[[readable]]",
    "[[state]]",
    "[[writable]]",
    "[[writeFatal]]",
    "close()",
    "connected",
    "forget()",
    "getInfo()",
    "getSignals()",
    "onconnect",
    "ondisconnect",
    "open()",
    "open(options)",
    "readable",
    "setSignals()",
    "setSignals(signals)",
    "writable"
  ],
  "SerialPortFilter": [
    "bluetoothServiceClassId",
    "usbProductId",
    "usbVendorId"
  ],
  "SerialPortInfo": [
    "bluetoothServiceClassId",
    "usbProductId",
    "usbVendorId"
  ],
  "SerialPortRequestOptions": [
    "allowedBluetoothServiceClassIds",
    "filters"
  ],
  "ServiceEventHandlers": [
    "onserviceadded",
    "onservicechanged",
    "onserviceremoved"
  ],
  "ServiceWorker": [
    "onstatechange",
    "postMessage(message)",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "scriptURL",
    "state",
    "statechange"
  ],
  "ServiceWorker/postMessage(message)": [
    "message",
    "options"
  ],
  "ServiceWorker/postMessage(message, options)": [
    "message",
    "options"
  ],
  "ServiceWorker/postMessage(message, transfer)": [
    "message",
    "transfer"
  ],
  "ServiceWorkerClient": [
    "lifecycleState"
  ],
  "ServiceWorkerContainer": [
    "client message queue",
    "controller",
    "controllerchange",
    "getRegistration()",
    "getRegistration(clientURL)",
    "getRegistrations()",
    "message",
    "messageerror",
    "oncontrollerchange",
    "onmessage",
    "onmessageerror",
    "ready",
    "ready promise",
    "register(scriptURL)",
    "register(scriptURL, options)",
    "service worker client",
    "startMessages()"
  ],
  "ServiceWorkerContainer/getRegistration()": [
    "clientURL"
  ],
  "ServiceWorkerContainer/getRegistration(clientURL)": [
    "clientURL"
  ],
  "ServiceWorkerContainer/register(scriptURL)": [
    "options",
    "scriptURL"
  ],
  "ServiceWorkerContainer/register(scriptURL, options)": [
    "options",
    "scriptURL"
  ],
  "ServiceWorkerGlobalScope": [
    "activate",
    "associated cookiestore",
    "backgroundfetchabort",
    "backgroundfetchclick",
    "backgroundfetchfail",
    "backgroundfetchsuccess",
    "clients",
    "contentdelete",
    "cookieStore",
    "fetch",
    "force bypass cache for import scripts flag",
    "importScripts(urls)",
    "install",
    "message",
    "messageerror",
    "onactivate",
    "onbackgroundfetchabort",
    "onbackgroundfetchclick",
    "onbackgroundfetchfail",
    "onbackgroundfetchsuccess",
    "oncanmakepayment",
    "oncontentdelete",
    "oncookiechange",
    "onfetch",
    "oninstall",
    "onmessage",
    "onmessageerror",
    "onnotificationclick",
    "onnotificationclose",
    "onpaymentrequest",
    "onperiodicsync",
    "onpush",
    "onpushsubscriptionchange",
    "onsync",
    "race response map",
    "registration",
    "service worker",
    "serviceWorker",
    "skipWaiting()"
  ],
  "ServiceWorkerRegistration": [
    "active",
    "background fetch manager",
    "backgroundFetch",
    "content index",
    "cookies",
    "getNotifications()",
    "getNotifications(filter)",
    "index",
    "installing",
    "navigationPreload",
    "onupdatefound",
    "paymentManager",
    "periodic sync manager",
    "periodicSync",
    "pushManager",
    "scope",
    "service worker registration",
    "showNotification(title)",
    "showNotification(title, options)",
    "sync",
    "unregister()",
    "update()",
    "updateViaCache",
    "updatefound",
    "waiting"
  ],
  "ServiceWorkerRegistration/getNotifications()": [
    "filter"
  ],
  "ServiceWorkerRegistration/getNotifications(filter)": [
    "filter"
  ],
  "ServiceWorkerRegistration/showNotification(title)": [
    "options",
    "title"
  ],
  "ServiceWorkerRegistration/showNotification(title, options)": [
    "options",
    "title"
  ],
  "ServiceWorkerState": [
    "\"activated\"",
    "\"activating\"",
    "\"installed\"",
    "\"installing\"",
    "\"parsed\"",
    "\"redundant\""
  ],
  "ServiceWorkerUpdateViaCache": [
    "\"all\"",
    "\"imports\"",
    "\"none\""
  ],
  "SessionManager async iterator": [
    "current state"
  ],
  "Set": [
    "Set(iterable)",
    "add(value)",
    "clear()",
    "delete(value)",
    "difference(other)",
    "entries()",
    "forEach(callback, thisArg)",
    "has(value)",
    "intersection(other)",
    "isDisjointFrom(other)",
    "isSubsetOf(other)",
    "isSupersetOf(other)",
    "keys()",
    "size",
    "symmetricDifference(other)",
    "union(other)",
    "values()"
  ],
  "Set.prototype [ %Symbol.iterator% ] ( )": [
    "Set.prototype %Symbol.iterator% ()"
  ],
  "SetHTMLOptions": [
    "sanitizer"
  ],
  "ShadowAnimation": [
    "sourceAnimation"
  ],
  "ShadowRoot": [
    "available to element internals",
    "clonable",
    "declarative",
    "delegates focus",
    "delegatesFocus",
    "getHTML(options)",
    "host",
    "innerHTML",
    "mode",
    "onslotchange",
    "serializable",
    "setHTML(html)",
    "setHTML(html, options)",
    "setHTMLUnsafe(html)",
    "setHTMLUnsafe(html, options)",
    "slot assignment",
    "slotAssignment"
  ],
  "ShadowRoot/setHTML(html)": [
    "html",
    "options"
  ],
  "ShadowRoot/setHTML(html, options)": [
    "html",
    "options"
  ],
  "ShadowRoot/setHTMLUnsafe(html)": [
    "html",
    "options"
  ],
  "ShadowRoot/setHTMLUnsafe(html, options)": [
    "html",
    "options"
  ],
  "ShadowRootInit": [
    "clonable",
    "delegatesFocus",
    "mode",
    "serializable",
    "slotAssignment"
  ],
  "ShadowRootMode": [
    "\"closed\"",
    "\"open\""
  ],
  "ShareData": [
    "files",
    "text",
    "title",
    "url"
  ],
  "ShareTarget": [
    "action",
    "enctype",
    "method",
    "params"
  ],
  "ShareTargetParams": [
    "text",
    "title",
    "url"
  ],
  "SharedArrayBuffer": [
    "SharedArrayBuffer(length, options)",
    "byteLength",
    "create",
    "grow(newLength)",
    "growable",
    "maxByteLength",
    "slice(start, end)",
    "write"
  ],
  "SharedArrayBuffer/write": [
    "startingoffset"
  ],
  "SharedStorage": [
    "append(key, value)",
    "clear()",
    "createWorklet(moduleURL)",
    "createWorklet(moduleURL, options)",
    "data partition origin",
    "delete(key)",
    "get(key)",
    "length()",
    "remainingBudget()",
    "run(name)",
    "run(name, options)",
    "selectURL(name, urls)",
    "selectURL(name, urls, options)",
    "set(key, value)",
    "set(key, value, options)",
    "worklet"
  ],
  "SharedStorage/append(key, value)": [
    "key",
    "value"
  ],
  "SharedStorage/createWorklet(moduleURL)": [
    "moduleURL",
    "options"
  ],
  "SharedStorage/createWorklet(moduleURL, options)": [
    "moduleURL",
    "options"
  ],
  "SharedStorage/delete(key)": [
    "key"
  ],
  "SharedStorage/get(key)": [
    "key"
  ],
  "SharedStorage/run(name)": [
    "name",
    "options"
  ],
  "SharedStorage/run(name, options)": [
    "name",
    "options"
  ],
  "SharedStorage/selectURL(name, urls)": [
    "name",
    "options",
    "urls"
  ],
  "SharedStorage/selectURL(name, urls, options)": [
    "name",
    "options",
    "urls"
  ],
  "SharedStorage/set(key, value)": [
    "key",
    "options",
    "value"
  ],
  "SharedStorage/set(key, value, options)": [
    "key",
    "options",
    "value"
  ],
  "SharedStorageDataOrigin": [
    "\"context-origin\"",
    "\"script-origin\""
  ],
  "SharedStorageIterator": [
    "asynchronous iterator initialization steps",
    "error",
    "get the next iteration result",
    "pending entries"
  ],
  "SharedStoragePrivateAggregationConfig": [
    "aggregationCoordinatorOrigin",
    "contextId",
    "filteringIdMaxBytes"
  ],
  "SharedStorageRunOperationMethodOptions": [
    "data",
    "keepAlive",
    "privateAggregationConfig",
    "resolveToConfig"
  ],
  "SharedStorageSetMethodOptions": [
    "ignoreIfPresent"
  ],
  "SharedStorageUrlWithMetadata": [
    "reportingMetadata",
    "url"
  ],
  "SharedStorageWorklet": [
    "addmodule initiated",
    "data origin",
    "has cross-origin data origin",
    "run(name)",
    "run(name, options)",
    "selectURL(name, urls)",
    "selectURL(name, urls, options)"
  ],
  "SharedStorageWorklet/run(name)": [
    "name",
    "options"
  ],
  "SharedStorageWorklet/run(name, options)": [
    "name",
    "options"
  ],
  "SharedStorageWorklet/selectURL(name, urls)": [
    "name",
    "options",
    "urls"
  ],
  "SharedStorageWorklet/selectURL(name, urls, options)": [
    "name",
    "options",
    "urls"
  ],
  "SharedStorageWorkletGlobalScope": [
    "addmodule success",
    "check whether addmodule is finished",
    "operation map",
    "outside settings",
    "privateAggregation",
    "register(name, operationCtor)",
    "sharedStorage",
    "sharedstorage getter"
  ],
  "SharedStorageWorkletGlobalScope/register(name, operationCtor)": [
    "name",
    "operationCtor"
  ],
  "SharedStorageWorkletOptions": [
    "dataOrigin"
  ],
  "SharedWorker": [
    "SharedWorker(scriptURL, options)",
    "error",
    "port"
  ],
  "SharedWorkerGlobalScope": [
    "close()",
    "connect",
    "constructor origin",
    "constructor url",
    "credentials",
    "name",
    "onconnect",
    "samesitecookies"
  ],
  "SharedWorkerOptions": [
    "sameSiteCookies"
  ],
  "SlotAssignmentMode": [
    "\"manual\"",
    "\"named\""
  ],
  "Slottable": [
    "assignedSlot"
  ],
  "SmartCardAccessMode": [
    "corresponding",
    "direct",
    "exclusive",
    "shared"
  ],
  "SmartCardConnectOptions": [
    "preferredProtocols"
  ],
  "SmartCardConnectResult": [
    "activeProtocol",
    "connection"
  ],
  "SmartCardConnection": [
    "[[activeProtocol]]",
    "[[comm]]",
    "[[context]]",
    "[[transactionState]]",
    "control()",
    "control(controlCode, data)",
    "disconnect()",
    "disconnect(disposition)",
    "getAttribute()",
    "getAttribute(tag)",
    "setAttribute()",
    "setAttribute(tag, value)",
    "startTransaction()",
    "startTransaction(transaction)",
    "startTransaction(transaction, options)",
    "status()",
    "transmit()",
    "transmit(sendBuffer)",
    "transmit(sendBuffer, options)"
  ],
  "SmartCardConnectionState": [
    "absent",
    "corresponding",
    "negotiable",
    "powered",
    "present",
    "raw",
    "swallowed",
    "t0",
    "t1"
  ],
  "SmartCardConnectionStatus": [
    "answerToReset",
    "readerName",
    "state"
  ],
  "SmartCardContext": [
    "[[connections]]",
    "[[operationInProgress]]",
    "[[resourceManager]]",
    "[[signal]]",
    "[[tracker]]",
    "connect()",
    "connect(readerName, accessMode)",
    "connect(readerName, accessMode, options)",
    "getStatusChange()",
    "getStatusChange(readerStates)",
    "getStatusChange(readerStates, options)",
    "listReaders()"
  ],
  "SmartCardDisposition": [
    "eject",
    "leave",
    "reset",
    "unpower"
  ],
  "SmartCardError": [
    "constructor()",
    "constructor(options)",
    "constructor(options, message)",
    "corresponding",
    "responseCode"
  ],
  "SmartCardErrorOptions": [
    "responseCode"
  ],
  "SmartCardGetStatusChangeOptions": [
    "signal",
    "timeout"
  ],
  "SmartCardProtocol": [
    "corresponding flags",
    "raw",
    "t0",
    "t1",
    "valid protocol value"
  ],
  "SmartCardReaderStateFlagsIn": [
    "corresponding",
    "empty",
    "exclusive",
    "ignore",
    "inuse",
    "mute",
    "present",
    "unavailable",
    "unaware",
    "unpowered"
  ],
  "SmartCardReaderStateFlagsOut": [
    "changed",
    "corresponding",
    "empty",
    "exclusive",
    "ignore",
    "inuse",
    "mute",
    "present",
    "unavailable",
    "unknown",
    "unpowered"
  ],
  "SmartCardReaderStateIn": [
    "corresponding",
    "currentCount",
    "currentState",
    "readerName"
  ],
  "SmartCardReaderStateOut": [
    "answerToReset",
    "corresponding",
    "eventCount",
    "eventState",
    "readerName"
  ],
  "SmartCardResourceManager": [
    "establishContext()"
  ],
  "SmartCardResponseCode": [
    "no-service",
    "no-smartcard",
    "not-ready",
    "not-transacted",
    "proto-mismatch",
    "reader-unavailable",
    "removed-card",
    "reset-card",
    "server-too-busy",
    "sharing-violation",
    "system-cancelled",
    "unknown-reader",
    "unpowered-card",
    "unresponsive-card",
    "unsupported-card",
    "unsupported-feature"
  ],
  "SmartCardTransactionOptions": [
    "signal"
  ],
  "SmartCardTransmitOptions": [
    "protocol"
  ],
  "SnapEvent": [
    "SnapEvent(type)",
    "SnapEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "scrollsnapchange",
    "scrollsnapchanging",
    "snapTargetBlock",
    "snapTargetInline"
  ],
  "SnapEvent/SnapEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "SnapEvent/SnapEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SnapEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "SnapEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SnapEventInit": [
    "snapTargetBlock",
    "snapTargetInline"
  ],
  "SocketDnsQueryType": [
    "ipv4",
    "ipv6"
  ],
  "Source Text Module Records": [
    "GetExportedNames(exportStarSet)",
    "ResolveExport(exportName, resolveSet)"
  ],
  "SourceBuffer": [
    "[[append state]]",
    "[[buffer full flag]]",
    "[[first initialization segment received flag]]",
    "[[generate timestamps flag]]",
    "[[group end timestamp]]",
    "[[group start timestamp]]",
    "[[input buffer]]",
    "[[pending initialization segment for changeType flag]]",
    "abort()",
    "appendBuffer()",
    "appendBuffer(data)",
    "appendWindowEnd",
    "appendWindowStart",
    "audioTracks",
    "buffered",
    "changeType()",
    "changeType(type)",
    "mode",
    "onabort",
    "onerror",
    "onupdate",
    "onupdateend",
    "onupdatestart",
    "remove()",
    "remove(start, end)",
    "textTracks",
    "timestampOffset",
    "updating",
    "videoTracks"
  ],
  "SourceBufferList": [
    "getter()",
    "getter(index)",
    "length",
    "onaddsourcebuffer",
    "onremovesourcebuffer"
  ],
  "SpatialNavigationDirection": [
    "\"down\"",
    "\"left\"",
    "\"right\"",
    "\"up\""
  ],
  "SpatialNavigationSearchOptions": [
    "candidates",
    "container"
  ],
  "SpeechGrammar": [
    "src",
    "weight"
  ],
  "SpeechGrammarList": [
    "SpeechGrammarList()",
    "addFromString(string)",
    "addFromString(string, weight)",
    "addFromURI(src)",
    "addFromURI(src, weight)",
    "constructor()",
    "item(index)",
    "length"
  ],
  "SpeechGrammarList/addFromString(string)": [
    "string",
    "weight"
  ],
  "SpeechGrammarList/addFromString(string, weight)": [
    "string",
    "weight"
  ],
  "SpeechGrammarList/addFromURI(src)": [
    "src",
    "weight"
  ],
  "SpeechGrammarList/addFromURI(src, weight)": [
    "src",
    "weight"
  ],
  "SpeechGrammarList/item(index)": [
    "index"
  ],
  "SpeechRecognition": [
    "SpeechRecognition()",
    "abort()",
    "audioend",
    "audiostart",
    "constructor()",
    "continuous",
    "end",
    "error",
    "grammars",
    "interimResults",
    "lang",
    "maxAlternatives",
    "nomatch",
    "onaudioend",
    "onaudiostart",
    "onend",
    "onerror",
    "onnomatch",
    "onresult",
    "onsoundend",
    "onsoundstart",
    "onspeechend",
    "onspeechstart",
    "onstart",
    "result",
    "soundend",
    "soundstart",
    "speechend",
    "speechstart",
    "start",
    "start()",
    "stop()"
  ],
  "SpeechRecognitionAlternative": [
    "confidence",
    "transcript"
  ],
  "SpeechRecognitionErrorCode": [
    "\"aborted\"",
    "\"audio-capture\"",
    "\"bad-grammar\"",
    "\"language-not-supported\"",
    "\"network\"",
    "\"no-speech\"",
    "\"not-allowed\"",
    "\"service-not-allowed\""
  ],
  "SpeechRecognitionErrorEvent": [
    "SpeechRecognitionErrorEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "error",
    "message"
  ],
  "SpeechRecognitionErrorEvent/SpeechRecognitionErrorEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechRecognitionErrorEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechRecognitionErrorEventInit": [
    "error",
    "message"
  ],
  "SpeechRecognitionEvent": [
    "SpeechRecognitionEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "resultIndex",
    "results"
  ],
  "SpeechRecognitionEvent/SpeechRecognitionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechRecognitionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechRecognitionEventInit": [
    "resultIndex",
    "results"
  ],
  "SpeechRecognitionResult": [
    "isFinal",
    "item(index)",
    "length"
  ],
  "SpeechRecognitionResult/item(index)": [
    "index"
  ],
  "SpeechRecognitionResultList": [
    "item(index)",
    "length"
  ],
  "SpeechRecognitionResultList/item(index)": [
    "index"
  ],
  "SpeechSynthesis": [
    "cancel()",
    "getVoices()",
    "onvoiceschanged",
    "pause()",
    "paused",
    "pending",
    "resume()",
    "speak(utterance)",
    "speaking",
    "voiceschanged"
  ],
  "SpeechSynthesis/speak(utterance)": [
    "utterance"
  ],
  "SpeechSynthesisErrorCode": [
    "\"audio-busy\"",
    "\"audio-hardware\"",
    "\"canceled\"",
    "\"interrupted\"",
    "\"invalid-argument\"",
    "\"language-unavailable\"",
    "\"network\"",
    "\"not-allowed\"",
    "\"synthesis-failed\"",
    "\"synthesis-unavailable\"",
    "\"text-too-long\"",
    "\"voice-unavailable\""
  ],
  "SpeechSynthesisErrorEvent": [
    "SpeechSynthesisErrorEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "error"
  ],
  "SpeechSynthesisErrorEvent/SpeechSynthesisErrorEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechSynthesisErrorEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechSynthesisErrorEventInit": [
    "error"
  ],
  "SpeechSynthesisEvent": [
    "SpeechSynthesisEvent(type, eventInitDict)",
    "charIndex",
    "charLength",
    "constructor(type, eventInitDict)",
    "elapsedTime",
    "name",
    "utterance"
  ],
  "SpeechSynthesisEvent/SpeechSynthesisEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechSynthesisEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "SpeechSynthesisEventInit": [
    "charIndex",
    "charLength",
    "elapsedTime",
    "name",
    "utterance"
  ],
  "SpeechSynthesisUtterance": [
    "SpeechSynthesisUtterance()",
    "SpeechSynthesisUtterance(text)",
    "boundary",
    "constructor()",
    "constructor(text)",
    "end",
    "error",
    "lang",
    "mark",
    "onboundary",
    "onend",
    "onerror",
    "onmark",
    "onpause",
    "onresume",
    "onstart",
    "pause",
    "pitch",
    "rate",
    "resume",
    "start",
    "text",
    "voice",
    "volume"
  ],
  "SpeechSynthesisUtterance/SpeechSynthesisUtterance()": [
    "text"
  ],
  "SpeechSynthesisUtterance/SpeechSynthesisUtterance(text)": [
    "text"
  ],
  "SpeechSynthesisUtterance/constructor()": [
    "text"
  ],
  "SpeechSynthesisUtterance/constructor(text)": [
    "text"
  ],
  "SpeechSynthesisVoice": [
    "default",
    "lang",
    "localService",
    "name",
    "voiceURI"
  ],
  "StartViewTransitionOptions": [
    "types",
    "update"
  ],
  "StatefulAnimator": [
    "StatefulAnimator()",
    "StatefulAnimator(options)",
    "StatefulAnimator(options, state)",
    "state()"
  ],
  "StatefulAnimator/StatefulAnimator(options, state)": [
    "options",
    "state"
  ],
  "StatelessAnimator": [
    "StatelessAnimator()",
    "StatelessAnimator(options)"
  ],
  "StatelessAnimator/StatelessAnimator(options)": [
    "options"
  ],
  "StaticRange": [
    "StaticRange(init)",
    "constructor(init)",
    "valid"
  ],
  "StaticRange/StaticRange(init)": [
    "init"
  ],
  "StaticRange/constructor(init)": [
    "init"
  ],
  "StaticRangeInit": [
    "endContainer",
    "endOffset",
    "startContainer",
    "startOffset"
  ],
  "StereoPannerNode": [
    "StereoPannerNode(context)",
    "StereoPannerNode(context, options)",
    "constructor(context)",
    "constructor(context, options)",
    "pan"
  ],
  "StereoPannerNode/StereoPannerNode(context)": [
    "context",
    "options"
  ],
  "StereoPannerNode/StereoPannerNode(context, options)": [
    "context",
    "options"
  ],
  "StereoPannerNode/constructor()": [
    "context",
    "options"
  ],
  "StereoPannerNode/constructor(context)": [
    "context",
    "options"
  ],
  "StereoPannerNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "StereoPannerOptions": [
    "pan"
  ],
  "Storage": [
    "clear()",
    "getItem(key)",
    "key(index)",
    "length",
    "removeItem(key)",
    "setItem(key, value)"
  ],
  "StorageAccessHandle": [
    "BroadcastChannel(name)",
    "SharedWorker(scriptURL)",
    "SharedWorker(scriptURL, options)",
    "caches",
    "createObjectURL(obj)",
    "estimate()",
    "getDirectory()",
    "indexedDB",
    "localStorage",
    "locks",
    "revokeObjectURL(url)",
    "sessionStorage",
    "types"
  ],
  "StorageAccessHandle/BroadcastChannel(name)": [
    "name"
  ],
  "StorageAccessHandle/SharedWorker(scriptURL)": [
    "options",
    "scriptURL"
  ],
  "StorageAccessHandle/SharedWorker(scriptURL, options)": [
    "options",
    "scriptURL"
  ],
  "StorageAccessHandle/createObjectURL(obj)": [
    "obj"
  ],
  "StorageAccessHandle/revokeObjectURL(url)": [
    "url"
  ],
  "StorageAccessTypes": [
    "BroadcastChannel",
    "SharedWorker",
    "all",
    "caches",
    "cookies",
    "createObjectURL",
    "estimate",
    "getDirectory",
    "indexedDB",
    "localStorage",
    "locks",
    "revokeObjectURL",
    "sessionStorage"
  ],
  "StorageBucket": [
    "caches",
    "estimate()",
    "expiration time",
    "expires()",
    "getDirectory()",
    "indexedDB",
    "name",
    "persist()",
    "persisted()",
    "quota value",
    "setExpires(expires)"
  ],
  "StorageBucket/setExpires(expires)": [
    "expires"
  ],
  "StorageBucketManager": [
    "delete(name)",
    "keys()",
    "open(name)",
    "open(name, options)",
    "storage bucket manager"
  ],
  "StorageBucketManager/delete(name)": [
    "name"
  ],
  "StorageBucketManager/open(name)": [
    "name",
    "options"
  ],
  "StorageBucketManager/open(name, options)": [
    "name",
    "options"
  ],
  "StorageBucketOptions": [
    "expires",
    "persisted",
    "quota"
  ],
  "StorageEstimate": [
    "quota",
    "usage"
  ],
  "StorageEvent": [
    "initStorageEvent(type, bubbles, cancelable, key, oldValue, newValue, url, storageArea)",
    "key",
    "newValue",
    "oldValue",
    "storageArea",
    "url"
  ],
  "StorageManager": [
    "estimate()",
    "getDirectory()",
    "persist()",
    "persisted()"
  ],
  "StreamPipeOptions": [
    "preventAbort",
    "preventCancel",
    "preventClose",
    "signal"
  ],
  "String": [
    "String(value)",
    "anchor(name)",
    "at(index)",
    "big()",
    "blink()",
    "bold()",
    "charAt(pos)",
    "charCodeAt(pos)",
    "codePointAt(pos)",
    "concat(...args)",
    "endsWith(searchString, endPosition)",
    "fixed()",
    "fontcolor(colour)",
    "fontsize(size)",
    "fromCharCode(...codeUnits)",
    "fromCodePoint(...codePoints)",
    "includes(searchString, position)",
    "indexOf(searchString, position)",
    "isWellFormed()",
    "italics()",
    "lastIndexOf(searchString, position)",
    "link(url)",
    "localeCompare(that, reserved1, reserved2)",
    "match(regexp)",
    "matchAll(regexp)",
    "normalize(form)",
    "padEnd(maxLength, fillString)",
    "padStart(maxLength, fillString)",
    "raw(template, ...substitutions)",
    "repeat(count)",
    "replace(searchValue, replaceValue)",
    "replaceAll(searchValue, replaceValue)",
    "search(regexp)",
    "slice(start, end)",
    "small()",
    "split(separator, limit)",
    "startsWith(searchString, position)",
    "strike()",
    "sub()",
    "substr(start, length)",
    "substring(start, end)",
    "sup()",
    "toLocaleLowerCase(reserved1, reserved2)",
    "toLocaleUpperCase(reserved1, reserved2)",
    "toLowerCase()",
    "toString()",
    "toUpperCase()",
    "toWellFormed()",
    "trim()",
    "trimEnd()",
    "trimLeft()",
    "trimRight()",
    "trimStart()",
    "valueOf()"
  ],
  "String.prototype [ %Symbol.iterator% ] ( )": [
    "String.prototype %Symbol.iterator% ()"
  ],
  "StructuredSerializeOptions": [
    "transfer"
  ],
  "StylePropertyMap": [
    "[[declarations]]",
    "append(property)",
    "append(property, ...values)",
    "clear()",
    "delete(property)",
    "get(property)",
    "getAll(property)",
    "has(property)",
    "set(property)",
    "set(property, ...values)",
    "size"
  ],
  "StylePropertyMap/append(property)": [
    "property",
    "values"
  ],
  "StylePropertyMap/append(property, ...values)": [
    "property",
    "values"
  ],
  "StylePropertyMap/delete(property)": [
    "property"
  ],
  "StylePropertyMap/set(property)": [
    "property",
    "values"
  ],
  "StylePropertyMap/set(property, ...values)": [
    "property",
    "values"
  ],
  "StylePropertyMapReadOnly": [
    "[[declarations]]",
    "get(property)",
    "getAll(property)",
    "has(property)",
    "size"
  ],
  "StylePropertyMapReadOnly/get(property)": [
    "property"
  ],
  "StylePropertyMapReadOnly/getAll(property)": [
    "property"
  ],
  "StylePropertyMapReadOnly/has(property)": [
    "property"
  ],
  "StyleSheet": [
    "disabled",
    "href",
    "media",
    "ownerNode",
    "parentStyleSheet",
    "title",
    "type"
  ],
  "StyleSheetList": [
    "item(index)",
    "length"
  ],
  "StyleSheetList/item(index)": [
    "index"
  ],
  "SubmitEvent": [
    "submitter"
  ],
  "SubtleCrypto": [
    "decrypt()",
    "decrypt(algorithm, key, data)",
    "deriveBits()",
    "deriveBits(algorithm, baseKey)",
    "deriveBits(algorithm, baseKey, length)",
    "deriveKey()",
    "deriveKey(algorithm, baseKey, derivedKeyType, extractable, keyUsages)",
    "digest()",
    "digest(algorithm, data)",
    "encrypt()",
    "encrypt(algorithm, key, data)",
    "exportKey()",
    "exportKey(format, key)",
    "generateKey()",
    "generateKey(algorithm, extractable, keyUsages)",
    "importKey()",
    "importKey(format, keyData, algorithm, extractable, keyUsages)",
    "sign()",
    "sign(algorithm, key, data)",
    "unwrapKey()",
    "unwrapKey(format, wrappedKey, unwrappingKey, unwrapAlgorithm, unwrappedKeyAlgorithm, extractable, keyUsages)",
    "verify()",
    "verify(algorithm, key, signature, data)",
    "wrapKey()",
    "wrapKey(format, key, wrappingKey, wrapAlgorithm)"
  ],
  "Supports-Loading-Mode": [
    "credentialed-prerender",
    "fenced-frame",
    "uncredentialed-prefetch"
  ],
  "SurfaceSwitchingPreferenceEnum": [
    "exclude",
    "include"
  ],
  "SvcOutputMetadata": [
    "temporalLayerId"
  ],
  "Symbol": [
    "Symbol(description)",
    "asyncIterator",
    "description",
    "for(key)",
    "hasInstance",
    "isConcatSpreadable",
    "iterator",
    "keyFor(sym)",
    "match",
    "matchAll",
    "replace",
    "search",
    "species",
    "split",
    "toPrimitive",
    "toString()",
    "toStringTag",
    "unscopables",
    "valueOf()"
  ],
  "Symbol.prototype [ %Symbol.toPrimitive% ] ( hint )": [
    "Symbol.prototype %Symbol.toPrimitive% (hint)"
  ],
  "SyncEvent": [
    "SyncEvent(type, init)",
    "constructor(type, init)",
    "lastChance",
    "tag"
  ],
  "SyncEvent/SyncEvent(type, init)": [
    "init",
    "type"
  ],
  "SyncEvent/constructor(type, init)": [
    "init",
    "type"
  ],
  "SyncEventInit": [
    "lastChance",
    "tag"
  ],
  "SyncManager": [
    "getTags()",
    "register(tag)",
    "sync"
  ],
  "SyncManager/register(tag)": [
    "tag"
  ],
  "SystemAudioPreferenceEnum": [
    "exclude",
    "include"
  ],
  "TCPServerSocket": [
    "[[closedPromise]]",
    "[[openedPromise]]",
    "[[readable]]",
    "close()",
    "closed",
    "constructor()",
    "constructor(localAddress)",
    "constructor(localAddress, options)",
    "opened"
  ],
  "TCPServerSocketOpenInfo": [
    "localAddress",
    "localPort",
    "readable"
  ],
  "TCPServerSocketOptions": [
    "backlog",
    "ipv6Only",
    "localPort"
  ],
  "TCPSocket": [
    "[[closedPromise]]",
    "[[openedPromise]]",
    "[[readable]]",
    "[[writable]]",
    "close()",
    "closed",
    "constructor()",
    "constructor(remoteAddress, remotePort)",
    "constructor(remoteAddress, remotePort, options)",
    "opened"
  ],
  "TCPSocketOpenInfo": [
    "localAddress",
    "localPort",
    "readable",
    "remoteAddress",
    "remotePort",
    "writable"
  ],
  "TCPSocketOptions": [
    "dnsQueryType",
    "keepAliveDelay",
    "noDelay",
    "receiveBufferSize",
    "sendBufferSize"
  ],
  "Table": [
    "Table(descriptor)",
    "Table(descriptor, value)",
    "constructor(descriptor)",
    "constructor(descriptor, value)",
    "get(index)",
    "grow(delta)",
    "grow(delta, value)",
    "length",
    "set(index)",
    "set(index, value)"
  ],
  "Table/Table(descriptor)": [
    "descriptor",
    "value"
  ],
  "Table/Table(descriptor, value)": [
    "descriptor",
    "value"
  ],
  "Table/constructor(descriptor)": [
    "descriptor",
    "value"
  ],
  "Table/constructor(descriptor, value)": [
    "descriptor",
    "value"
  ],
  "Table/get(index)": [
    "index"
  ],
  "Table/grow(delta)": [
    "delta",
    "value"
  ],
  "Table/grow(delta, value)": [
    "delta",
    "value"
  ],
  "Table/set(index)": [
    "index",
    "value"
  ],
  "Table/set(index, value)": [
    "index",
    "value"
  ],
  "TableDescriptor": [
    "element",
    "initial",
    "maximum"
  ],
  "TableKind": [
    "\"anyfunc\"",
    "\"externref\""
  ],
  "TablePatch": [
    "brotlistream",
    "flags",
    "tag"
  ],
  "TaskAttributionTiming": [
    "containerId",
    "containerName",
    "containerSrc",
    "containerType",
    "duration",
    "entryType",
    "name",
    "startTime",
    "toJSON()"
  ],
  "TaskController": [
    "TaskController()",
    "TaskController(init)",
    "constructor()",
    "constructor(init)",
    "setPriority(priority)"
  ],
  "TaskController/TaskController()": [
    "init"
  ],
  "TaskController/TaskController(init)": [
    "init"
  ],
  "TaskController/constructor()": [
    "init"
  ],
  "TaskController/constructor(init)": [
    "init"
  ],
  "TaskController/setPriority(priority)": [
    "priority"
  ],
  "TaskControllerInit": [
    "priority"
  ],
  "TaskPriority": [
    "\"background\"",
    "\"user-blocking\"",
    "\"user-visible\"",
    "background",
    "user-blocking",
    "user-visible"
  ],
  "TaskPriorityChangeEvent": [
    "TaskPriorityChangeEvent(type, priorityChangeEventInitDict)",
    "constructor(type, priorityChangeEventInitDict)",
    "previousPriority"
  ],
  "TaskPriorityChangeEvent/TaskPriorityChangeEvent(type, priorityChangeEventInitDict)": [
    "priorityChangeEventInitDict",
    "type"
  ],
  "TaskPriorityChangeEvent/constructor(type, priorityChangeEventInitDict)": [
    "priorityChangeEventInitDict",
    "type"
  ],
  "TaskPriorityChangeEventInit": [
    "previousPriority"
  ],
  "TaskSignal": [
    "add a priority change algorithm",
    "any(signals)",
    "any(signals, init)",
    "dependent",
    "dependent signals",
    "has fixed priority",
    "have fixed priority",
    "onprioritychange",
    "priority",
    "priority change algorithms",
    "priority changing",
    "prioritychange",
    "signal priority change",
    "source signal"
  ],
  "TaskSignal/any(signals)": [
    "init",
    "signals"
  ],
  "TaskSignal/any(signals, init)": [
    "init",
    "signals"
  ],
  "TaskSignalAnyInit": [
    "priority"
  ],
  "TestUtils": [
    "gc()"
  ],
  "Text": [
    "Text()",
    "Text(data)",
    "constructor()",
    "constructor(data)",
    "drag",
    "dragend",
    "dragstart",
    "isElementContentWhitespace",
    "replaceWholeText()",
    "splitText(offset)",
    "substring data",
    "wholeText"
  ],
  "Text/Text()": [
    "data"
  ],
  "Text/Text(data)": [
    "data"
  ],
  "Text/constructor()": [
    "data"
  ],
  "Text/constructor(data)": [
    "data"
  ],
  "Text/splitText(offset)": [
    "offset"
  ],
  "TextDecodeOptions": [
    "stream"
  ],
  "TextDecoder": [
    "TextDecoder()",
    "TextDecoder(label)",
    "TextDecoder(label, options)",
    "constructor()",
    "constructor(label)",
    "constructor(label, options)",
    "decode()",
    "decode(input)",
    "decode(input, options)",
    "do not flush"
  ],
  "TextDecoder/TextDecoder()": [
    "label",
    "options"
  ],
  "TextDecoder/TextDecoder(label)": [
    "label",
    "options"
  ],
  "TextDecoder/TextDecoder(label, options)": [
    "label",
    "options"
  ],
  "TextDecoder/constructor()": [
    "label",
    "options"
  ],
  "TextDecoder/constructor(label)": [
    "label",
    "options"
  ],
  "TextDecoder/constructor(label, options)": [
    "label",
    "options"
  ],
  "TextDecoder/decode()": [
    "input",
    "options"
  ],
  "TextDecoder/decode(input)": [
    "input",
    "options"
  ],
  "TextDecoder/decode(input, options)": [
    "input",
    "options"
  ],
  "TextDecoderCommon": [
    "bom seen",
    "decoder",
    "encoding",
    "error mode",
    "fatal",
    "i/o queue",
    "ignore bom",
    "ignoreBOM"
  ],
  "TextDecoderOptions": [
    "fatal",
    "ignoreBOM"
  ],
  "TextDecoderStream": [
    "TextDecoderStream()",
    "TextDecoderStream(label)",
    "TextDecoderStream(label, options)",
    "constructor()",
    "constructor(label)",
    "constructor(label, options)"
  ],
  "TextDecoderStream/TextDecoderStream()": [
    "label",
    "options"
  ],
  "TextDecoderStream/TextDecoderStream(label)": [
    "label",
    "options"
  ],
  "TextDecoderStream/TextDecoderStream(label, options)": [
    "label",
    "options"
  ],
  "TextDecoderStream/constructor()": [
    "label",
    "options"
  ],
  "TextDecoderStream/constructor(label)": [
    "label",
    "options"
  ],
  "TextDecoderStream/constructor(label, options)": [
    "label",
    "options"
  ],
  "TextDetector": [
    "TextDetector()",
    "constructor()",
    "detect(image)"
  ],
  "TextDetector/detect(image)": [
    "image"
  ],
  "TextDirection": [
    "auto",
    "ltr",
    "rtl"
  ],
  "TextEncoder": [
    "TextEncoder()",
    "constructor()",
    "encode()",
    "encode(input)",
    "encodeInto(source, destination)"
  ],
  "TextEncoder/encode()": [
    "input"
  ],
  "TextEncoder/encode(input)": [
    "input"
  ],
  "TextEncoder/encodeInto(source, destination)": [
    "destination",
    "source"
  ],
  "TextEncoderCommon": [
    "encoding"
  ],
  "TextEncoderEncodeIntoResult": [
    "read",
    "written"
  ],
  "TextEncoderStream": [
    "TextEncoderStream()",
    "constructor()",
    "encoder",
    "pending high surrogate"
  ],
  "TextEvent": [
    "data",
    "initTextEvent(type)",
    "initTextEvent(type, bubbles)",
    "initTextEvent(type, bubbles, cancelable)",
    "initTextEvent(type, bubbles, cancelable, view)",
    "initTextEvent(type, bubbles, cancelable, view, data)"
  ],
  "TextEvent/initTextEvent(type)": [
    "bubbles",
    "cancelable",
    "data",
    "type",
    "view"
  ],
  "TextEvent/initTextEvent(type, bubbles)": [
    "bubbles",
    "cancelable",
    "data",
    "type",
    "view"
  ],
  "TextEvent/initTextEvent(type, bubbles, cancelable)": [
    "bubbles",
    "cancelable",
    "data",
    "type",
    "view"
  ],
  "TextEvent/initTextEvent(type, bubbles, cancelable, view)": [
    "bubbles",
    "cancelable",
    "data",
    "type",
    "view"
  ],
  "TextEvent/initTextEvent(type, bubbles, cancelable, view, data)": [
    "bubbles",
    "cancelable",
    "data",
    "type",
    "view"
  ],
  "TextFormat": [
    "backgroundColor",
    "constructor()",
    "constructor(options)",
    "rangeEnd",
    "rangeStart",
    "textColor",
    "underlineColor",
    "underlineStyle",
    "underlineThickness"
  ],
  "TextFormatInit": [
    "backgroundColor",
    "rangeEnd",
    "rangeStart",
    "textColor",
    "underlineColor",
    "underlineStyle",
    "underlineThickness"
  ],
  "TextFormatUpdateEvent": [
    "constructor()",
    "constructor(options)",
    "constructor(type)",
    "constructor(type, options)",
    "getTextFormats()"
  ],
  "TextFormatUpdateEventInit": [
    "textFormats"
  ],
  "TextMetrics": [
    "actualBoundingBoxAscent",
    "actualBoundingBoxDescent",
    "actualBoundingBoxLeft",
    "actualBoundingBoxRight",
    "alphabeticBaseline",
    "emHeightAscent",
    "emHeightDescent",
    "fontBoundingBoxAscent",
    "fontBoundingBoxDescent",
    "hangingBaseline",
    "ideographicBaseline",
    "width"
  ],
  "TextTrack": [
    "activeCues",
    "addCue(cue)",
    "cuechange",
    "cues",
    "id",
    "inBandMetadataTrackDispatchType",
    "kind",
    "label",
    "language",
    "mode",
    "oncuechange",
    "removeCue(cue)",
    "sourceBuffer"
  ],
  "TextTrackCue": [
    "endTime",
    "enter",
    "exit",
    "id",
    "onenter",
    "onexit",
    "pauseOnExit",
    "startTime",
    "track"
  ],
  "TextTrackCueList": [
    "getCueById(id)",
    "length"
  ],
  "TextTrackList": [
    "addtrack",
    "change",
    "getTrackById(id)",
    "length",
    "onaddtrack",
    "onchange",
    "onremovetrack",
    "removetrack"
  ],
  "TextTrackMode": [
    "disabled",
    "hidden",
    "showing"
  ],
  "TextUpdateEvent": [
    "compositionEnd",
    "compositionStart",
    "constructor()",
    "constructor(options)",
    "constructor(type)",
    "constructor(type, options)",
    "selectionEnd",
    "selectionStart",
    "text",
    "updateRangeEnd",
    "updateRangeStart"
  ],
  "TextUpdateEventInit": [
    "compositionEnd",
    "compositionStart",
    "selectionEnd",
    "selectionStart",
    "text",
    "updateRangeEnd",
    "updateRangeStart"
  ],
  "TimeRanges": [
    "end(index)",
    "length",
    "start(index)"
  ],
  "TimelineRangeOffset": [
    "offset",
    "rangeName"
  ],
  "ToggleEvent": [
    "newState",
    "oldState"
  ],
  "TokenBinding": [
    "id",
    "status"
  ],
  "TokenBindingStatus": [
    "\"present\"",
    "\"supported\"",
    "present",
    "supported"
  ],
  "TokenVersion": [
    "\"1\""
  ],
  "TopLevelStorageAccessPermissionDescriptor": [
    "requestedOrigin"
  ],
  "Touch": [
    "altitudeAngle",
    "azimuthAngle",
    "clientX",
    "clientY",
    "constructor()",
    "constructor(touchInitDict)",
    "force",
    "identifier",
    "pageX",
    "pageY",
    "radiusX",
    "radiusY",
    "rotationAngle",
    "screenX",
    "screenY",
    "target",
    "touchType"
  ],
  "TouchEvent": [
    "altKey",
    "changedTouches",
    "constructor()",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "ctrlKey",
    "getModifierState()",
    "getModifierState(keyArg)",
    "metaKey",
    "shiftKey",
    "targetTouches",
    "touches"
  ],
  "TouchEventInit": [
    "changedTouches",
    "targetTouches",
    "touches"
  ],
  "TouchInit": [
    "altitudeAngle",
    "azimuthAngle",
    "clientX",
    "clientY",
    "force",
    "identifier",
    "pageX",
    "pageY",
    "radiusX",
    "radiusY",
    "rotationAngle",
    "screenX",
    "screenY",
    "target",
    "touchType"
  ],
  "TouchList": [
    "item()",
    "item(index)",
    "length"
  ],
  "TouchType": [
    "direct",
    "stylus"
  ],
  "TrackEvent": [
    "track"
  ],
  "TrackingExData": [
    "details",
    "explanation",
    "maxAge",
    "name",
    "site",
    "targets"
  ],
  "TrackingExResult": [
    "isSiteWide"
  ],
  "TransferFunction": [
    "\"hlg\"",
    "\"pq\"",
    "\"srgb\"",
    "hlg",
    "pq",
    "srgb"
  ],
  "TransformStream": [
    "TransformStream()",
    "TransformStream(transformer)",
    "TransformStream(transformer, writableStrategy)",
    "TransformStream(transformer, writableStrategy, readableStrategy)",
    "[[backpressure]]",
    "[[backpressurechangepromise]]",
    "[[controller]]",
    "[[detached]]",
    "[[readable]]",
    "[[writable]]",
    "constructor()",
    "constructor(transformer)",
    "constructor(transformer, writableStrategy)",
    "constructor(transformer, writableStrategy, readableStrategy)",
    "enqueue",
    "error",
    "readable",
    "set up",
    "setting up",
    "terminate",
    "writable"
  ],
  "TransformStream/TransformStream()": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/TransformStream(transformer)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/TransformStream(transformer, writableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/TransformStream(transformer, writableStrategy, readableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor()": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor(transformer)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor(transformer, writableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/constructor(transformer, writableStrategy, readableStrategy)": [
    "readableStrategy",
    "transformer",
    "writableStrategy"
  ],
  "TransformStream/set up": [
    "cancelalgorithm",
    "flushalgorithm",
    "transformalgorithm"
  ],
  "TransformStreamDefaultController": [
    "[[cancelalgorithm]]",
    "[[finishpromise]]",
    "[[flushalgorithm]]",
    "[[stream]]",
    "[[transformalgorithm]]",
    "desiredSize",
    "enqueue()",
    "enqueue(chunk)",
    "error()",
    "error(e)",
    "error(reason)",
    "terminate()"
  ],
  "TransformStreamDefaultController/enqueue()": [
    "chunk"
  ],
  "TransformStreamDefaultController/enqueue(chunk)": [
    "chunk"
  ],
  "TransformStreamDefaultController/error()": [
    "reason"
  ],
  "TransformStreamDefaultController/error(reason)": [
    "reason"
  ],
  "Transformer": [
    "cancel",
    "flush",
    "readableType",
    "start",
    "transform",
    "writableType"
  ],
  "TransformerCancelCallback": [
    "reason"
  ],
  "TransformerFlushCallback": [
    "controller"
  ],
  "TransformerStartCallback": [
    "controller"
  ],
  "TransformerTransformCallback": [
    "chunk",
    "controller"
  ],
  "TransitionEvent": [
    "TransitionEvent(type)",
    "TransitionEvent(type, transitionEventInitDict)",
    "constructor(type)",
    "constructor(type, transitionEventInitDict)",
    "elapsedTime",
    "propertyName",
    "pseudoElement"
  ],
  "TransitionEvent/TransitionEvent(type)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEvent/TransitionEvent(type, transitionEventInitDict)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEvent/constructor(type)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEvent/constructor(type, transitionEventInitDict)": [
    "transitionEventInitDict",
    "type"
  ],
  "TransitionEventInit": [
    "elapsedTime",
    "propertyName",
    "pseudoElement"
  ],
  "TreeWalker": [
    "current",
    "currentNode",
    "expandEntityReferences",
    "filter",
    "firstChild()",
    "lastChild()",
    "nextNode()",
    "nextSibling()",
    "parentNode()",
    "previousNode()",
    "previousSibling()",
    "root",
    "traverse children",
    "whatToShow"
  ],
  "TrustedHTML": [
    "data",
    "stringificationbehavior",
    "toJSON()"
  ],
  "TrustedScript": [
    "data",
    "stringificationbehavior",
    "toJSON()"
  ],
  "TrustedScriptURL": [
    "data",
    "stringificationbehavior",
    "toJSON()"
  ],
  "TrustedTypePolicy": [
    "createHTML(input)",
    "createHTML(input, ...arguments)",
    "createScript(input)",
    "createScript(input, ...arguments)",
    "createScriptURL(input)",
    "createScriptURL(input, ...arguments)",
    "name",
    "options"
  ],
  "TrustedTypePolicy/createHTML(input)": [
    "arguments",
    "input"
  ],
  "TrustedTypePolicy/createHTML(input, ...arguments)": [
    "arguments",
    "input"
  ],
  "TrustedTypePolicy/createScript(input)": [
    "arguments",
    "input"
  ],
  "TrustedTypePolicy/createScript(input, ...arguments)": [
    "arguments",
    "input"
  ],
  "TrustedTypePolicy/createScriptURL(input)": [
    "arguments",
    "input"
  ],
  "TrustedTypePolicy/createScriptURL(input, ...arguments)": [
    "arguments",
    "input"
  ],
  "TrustedTypePolicyFactory": [
    "createPolicy(policyName)",
    "createPolicy(policyName, policyOptions)",
    "created policy names",
    "default policy",
    "defaultPolicy",
    "emptyHTML",
    "emptyScript",
    "getAttributeType(tagName, attribute)",
    "getAttributeType(tagName, attribute, elementNs)",
    "getAttributeType(tagName, attribute, elementNs, attrNs)",
    "getPropertyType(tagName, property)",
    "getPropertyType(tagName, property, elementNs)",
    "isHTML(value)",
    "isScript(value)",
    "isScriptURL(value)"
  ],
  "TrustedTypePolicyFactory/createPolicy(policyName)": [
    "policyName",
    "policyOptions"
  ],
  "TrustedTypePolicyFactory/createPolicy(policyName, policyOptions)": [
    "policyName",
    "policyOptions"
  ],
  "TrustedTypePolicyFactory/getAttributeType(tagName, attribute)": [
    "attrNs",
    "attribute",
    "elementNs",
    "tagName"
  ],
  "TrustedTypePolicyFactory/getAttributeType(tagName, attribute, elementNs)": [
    "attrNs",
    "attribute",
    "elementNs",
    "tagName"
  ],
  "TrustedTypePolicyFactory/getAttributeType(tagName, attribute, elementNs, attrNs)": [
    "attrNs",
    "attribute",
    "elementNs",
    "tagName"
  ],
  "TrustedTypePolicyFactory/getPropertyType(tagName, property)": [
    "elementNs",
    "property",
    "tagName"
  ],
  "TrustedTypePolicyFactory/getPropertyType(tagName, property, elementNs)": [
    "elementNs",
    "property",
    "tagName"
  ],
  "TrustedTypePolicyFactory/isHTML(value)": [
    "value"
  ],
  "TrustedTypePolicyFactory/isScript(value)": [
    "value"
  ],
  "TrustedTypePolicyFactory/isScriptURL(value)": [
    "value"
  ],
  "TrustedTypePolicyOptions": [
    "createHTML",
    "createScript",
    "createScriptURL"
  ],
  "TypedArray": [
    "BYTES_PER_ELEMENT",
    "TypedArray(...args)"
  ],
  "UADataValues": [
    "architecture",
    "bitness",
    "brands",
    "formFactors",
    "fullVersionList",
    "mobile",
    "model",
    "platform",
    "platformVersion",
    "uaFullVersion",
    "wow64"
  ],
  "UALowEntropyJSON": [
    "brands",
    "mobile",
    "platform"
  ],
  "UDPMessage": [
    "data",
    "dnsQueryType",
    "remoteAddress",
    "remotePort"
  ],
  "UDPSocket": [
    "[[closedPromise]]",
    "[[openedPromise]]",
    "[[readable]]",
    "[[writable]]",
    "close()",
    "closed",
    "constructor()",
    "constructor(options)",
    "opened"
  ],
  "UDPSocketOpenInfo": [
    "localAddress",
    "localPort",
    "readable",
    "remoteAddress",
    "remotePort",
    "writable"
  ],
  "UDPSocketOptions": [
    "dnsQueryType",
    "ipv6Only",
    "localAddress",
    "localPort",
    "receiveBufferSize",
    "remoteAddress",
    "remotePort",
    "sendBufferSize"
  ],
  "UIEvent": [
    "UIEvent(type)",
    "UIEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "detail",
    "initUIEvent(typeArg)",
    "initUIEvent(typeArg, bubblesArg)",
    "initUIEvent(typeArg, bubblesArg, cancelableArg)",
    "initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg)",
    "initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg)",
    "sourceCapabilities",
    "view",
    "which"
  ],
  "UIEvent/UIEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/UIEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "UIEvent/initUIEvent(typeArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg, cancelableArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEvent/initUIEvent(typeArg, bubblesArg, cancelableArg, viewArg, detailArg)": [
    "bubblesArg",
    "cancelableArg",
    "detailArg",
    "typeArg",
    "viewArg"
  ],
  "UIEventInit": [
    "detail",
    "sourceCapabilities",
    "view",
    "which"
  ],
  "ULongRange": [
    "max",
    "min"
  ],
  "URL": [
    "URL(url)",
    "URL(url, base)",
    "canParse(url)",
    "canParse(url, base)",
    "constructor(url)",
    "constructor(url, base)",
    "createObjectURL(obj)",
    "hash",
    "host",
    "hostname",
    "href",
    "initialize",
    "origin",
    "parse(url)",
    "parse(url, base)",
    "password",
    "pathname",
    "port",
    "protocol",
    "query object",
    "revokeObjectURL(url)",
    "search",
    "searchParams",
    "stringification behavior",
    "toJSON()",
    "url",
    "username",
    "within scope"
  ],
  "URL pattern": [
    "create",
    "has regexp groups",
    "hash component",
    "hostname component",
    "match",
    "password component",
    "pathname component",
    "port component",
    "protocol component",
    "search component",
    "username component"
  ],
  "URL search variance": [
    "no-vary params",
    "vary on key order",
    "vary params"
  ],
  "URL search variance/no-vary params": [
    "wildcard"
  ],
  "URL search variance/vary params": [
    "wildcard"
  ],
  "URL serializer": [
    "exclude fragment"
  ],
  "URL/URL(url)": [
    "base",
    "url"
  ],
  "URL/URL(url, base)": [
    "base",
    "url"
  ],
  "URL/canParse(url)": [
    "base",
    "url"
  ],
  "URL/canParse(url, base)": [
    "base",
    "url"
  ],
  "URL/constructor(url)": [
    "base",
    "url"
  ],
  "URL/constructor(url, base)": [
    "base",
    "url"
  ],
  "URL/createObjectURL(obj)": [
    "obj"
  ],
  "URL/parse(url)": [
    "base",
    "url"
  ],
  "URL/parse(url, base)": [
    "base",
    "url"
  ],
  "URL/revokeObjectURL(url)": [
    "url"
  ],
  "URLPattern": [
    "URLPattern()",
    "URLPattern(input)",
    "URLPattern(input, baseURL)",
    "URLPattern(input, baseURL, options)",
    "URLPattern(input, options)",
    "associated url pattern",
    "constructor()",
    "constructor(input)",
    "constructor(input, baseURL)",
    "constructor(input, baseURL, options)",
    "constructor(input, options)",
    "exec()",
    "exec(input)",
    "exec(input, baseURL)",
    "hasRegExpGroups",
    "hash",
    "hostname",
    "initialize",
    "password",
    "pathname",
    "port",
    "protocol",
    "search",
    "test()",
    "test(input)",
    "test(input, baseURL)",
    "username"
  ],
  "URLPattern/URLPattern()": [
    "input",
    "options"
  ],
  "URLPattern/URLPattern(input)": [
    "input",
    "options"
  ],
  "URLPattern/URLPattern(input, baseURL)": [
    "baseURL",
    "input",
    "options"
  ],
  "URLPattern/URLPattern(input, baseURL, options)": [
    "baseURL",
    "input",
    "options"
  ],
  "URLPattern/URLPattern(input, options)": [
    "input",
    "options"
  ],
  "URLPattern/constructor()": [
    "input",
    "options"
  ],
  "URLPattern/constructor(input)": [
    "input",
    "options"
  ],
  "URLPattern/constructor(input, baseURL)": [
    "baseURL",
    "input",
    "options"
  ],
  "URLPattern/constructor(input, baseURL, options)": [
    "baseURL",
    "input",
    "options"
  ],
  "URLPattern/constructor(input, options)": [
    "input",
    "options"
  ],
  "URLPattern/exec()": [
    "baseURL",
    "input"
  ],
  "URLPattern/exec(input)": [
    "baseURL",
    "input"
  ],
  "URLPattern/exec(input, baseURL)": [
    "baseURL",
    "input"
  ],
  "URLPattern/test()": [
    "baseURL",
    "input"
  ],
  "URLPattern/test(input)": [
    "baseURL",
    "input"
  ],
  "URLPattern/test(input, baseURL)": [
    "baseURL",
    "input"
  ],
  "URLPatternComponentResult": [
    "groups",
    "input"
  ],
  "URLPatternInit": [
    "baseURL",
    "hash",
    "hostname",
    "password",
    "pathname",
    "port",
    "protocol",
    "search",
    "username"
  ],
  "URLPatternOptions": [
    "ignoreCase"
  ],
  "URLPatternResult": [
    "hash",
    "hostname",
    "inputs",
    "password",
    "pathname",
    "port",
    "protocol",
    "search",
    "username"
  ],
  "URLSearchParams": [
    "URLSearchParams()",
    "URLSearchParams(init)",
    "append(name, value)",
    "constructor()",
    "constructor(init)",
    "delete(name)",
    "delete(name, value)",
    "get(name)",
    "getAll(name)",
    "has(name)",
    "has(name, value)",
    "initialize",
    "list",
    "set(name, value)",
    "size",
    "sort()",
    "stringificationbehavior",
    "update",
    "url object"
  ],
  "URLSearchParams/URLSearchParams()": [
    "init"
  ],
  "URLSearchParams/URLSearchParams(init)": [
    "init"
  ],
  "URLSearchParams/append(name, value)": [
    "name",
    "value"
  ],
  "URLSearchParams/constructor()": [
    "init"
  ],
  "URLSearchParams/constructor(init)": [
    "init"
  ],
  "URLSearchParams/delete(name)": [
    "name",
    "value"
  ],
  "URLSearchParams/delete(name, value)": [
    "name",
    "value"
  ],
  "URLSearchParams/get(name)": [
    "name"
  ],
  "URLSearchParams/getAll(name)": [
    "name"
  ],
  "URLSearchParams/has(name)": [
    "name",
    "value"
  ],
  "URLSearchParams/has(name, value)": [
    "name",
    "value"
  ],
  "URLSearchParams/set(name, value)": [
    "name",
    "value"
  ],
  "USB": [
    "getDevices()",
    "onconnect",
    "ondisconnect",
    "requestDevice(options)"
  ],
  "USB/requestDevice(options)": [
    "options"
  ],
  "USBAlternateInterface": [
    "USBAlternateInterface(deviceInterface, alternateSetting)",
    "[[alternateSetting]]",
    "[[endpoints]]",
    "[[interface]]",
    "alternateSetting",
    "constructor(deviceInterface, alternateSetting)",
    "endpoints",
    "interfaceClass",
    "interfaceName",
    "interfaceProtocol",
    "interfaceSubclass"
  ],
  "USBAlternateInterface/USBAlternateInterface(deviceInterface, alternateSetting)": [
    "alternateSetting",
    "deviceInterface"
  ],
  "USBAlternateInterface/constructor(deviceInterface, alternateSetting)": [
    "alternateSetting",
    "deviceInterface"
  ],
  "USBBlocklistEntry": [
    "bcdDevice",
    "idProduct",
    "idVendor"
  ],
  "USBConfiguration": [
    "USBConfiguration(device, configurationValue)",
    "[[configurationValue]]",
    "[[device]]",
    "[[interfaces]]",
    "configurationName",
    "configurationValue",
    "constructor(device, configurationValue)",
    "interfaces"
  ],
  "USBConfiguration/USBConfiguration(device, configurationValue)": [
    "configurationValue",
    "device"
  ],
  "USBConfiguration/constructor(device, configurationValue)": [
    "configurationValue",
    "device"
  ],
  "USBConnectionEvent": [
    "USBConnectionEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "device"
  ],
  "USBConnectionEvent/USBConnectionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "USBConnectionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "USBConnectionEventInit": [
    "device"
  ],
  "USBControlTransferParameters": [
    "index",
    "recipient",
    "request",
    "requestType",
    "value"
  ],
  "USBDevice": [
    "[[claimedInterface]]",
    "[[configurationValue]]",
    "[[configurations]]",
    "[[selectedAlternateSetting]]",
    "claimInterface(interfaceNumber)",
    "clearHalt(direction, endpointNumber)",
    "close()",
    "configuration",
    "configurations",
    "controlTransferIn(setup, length)",
    "controlTransferOut(setup)",
    "controlTransferOut(setup, data)",
    "deviceClass",
    "deviceProtocol",
    "deviceSubclass",
    "deviceVersionMajor",
    "deviceVersionMinor",
    "deviceVersionSubminor",
    "forget()",
    "isochronousTransferIn(endpointNumber, packetLengths)",
    "isochronousTransferOut(endpointNumber, data, packetLengths)",
    "manufacturerName",
    "open()",
    "opened",
    "productId",
    "productName",
    "releaseInterface(interfaceNumber)",
    "reset()",
    "selectAlternateInterface(interfaceNumber, alternateSetting)",
    "selectConfiguration(configurationValue)",
    "serialNumber",
    "transferIn(endpointNumber, length)",
    "transferOut(endpointNumber, data)",
    "usbVersionMajor",
    "usbVersionMinor",
    "usbVersionSubminor",
    "vendorId"
  ],
  "USBDevice/claimInterface(interfaceNumber)": [
    "interfaceNumber"
  ],
  "USBDevice/clearHalt(direction, endpointNumber)": [
    "direction",
    "endpointNumber"
  ],
  "USBDevice/controlTransferIn(setup, length)": [
    "length",
    "setup"
  ],
  "USBDevice/controlTransferOut(setup)": [
    "data",
    "setup"
  ],
  "USBDevice/controlTransferOut(setup, data)": [
    "data",
    "setup"
  ],
  "USBDevice/isochronousTransferIn(endpointNumber, packetLengths)": [
    "endpointNumber",
    "packetLengths"
  ],
  "USBDevice/isochronousTransferOut(endpointNumber, data, packetLengths)": [
    "data",
    "endpointNumber",
    "packetLengths"
  ],
  "USBDevice/releaseInterface(interfaceNumber)": [
    "interfaceNumber"
  ],
  "USBDevice/selectAlternateInterface(interfaceNumber, alternateSetting)": [
    "alternateSetting",
    "interfaceNumber"
  ],
  "USBDevice/selectConfiguration(configurationValue)": [
    "configurationValue"
  ],
  "USBDevice/transferIn(endpointNumber, length)": [
    "endpointNumber",
    "length"
  ],
  "USBDevice/transferOut(endpointNumber, data)": [
    "data",
    "endpointNumber"
  ],
  "USBDeviceFilter": [
    "classCode",
    "productId",
    "protocolCode",
    "serialNumber",
    "subclassCode",
    "vendorId"
  ],
  "USBDeviceRequestOptions": [
    "exclusionFilters",
    "filters"
  ],
  "USBDirection": [
    "\"in\"",
    "\"out\""
  ],
  "USBEndpoint": [
    "USBEndpoint(alternate, endpointNumber, direction)",
    "[[alternateInterface]]",
    "[[endpointAddress]]",
    "constructor(alternate, endpointNumber, direction)",
    "direction",
    "endpointNumber",
    "packetSize",
    "type"
  ],
  "USBEndpoint/USBEndpoint(alternate, endpointNumber, direction)": [
    "alternate",
    "direction",
    "endpointNumber"
  ],
  "USBEndpoint/constructor(alternate, endpointNumber, direction)": [
    "alternate",
    "direction",
    "endpointNumber"
  ],
  "USBEndpointType": [
    "\"bulk\"",
    "\"interrupt\"",
    "\"isochronous\""
  ],
  "USBInTransferResult": [
    "USBInTransferResult(status)",
    "USBInTransferResult(status, data)",
    "constructor(status)",
    "constructor(status, data)",
    "data",
    "status"
  ],
  "USBInTransferResult/USBInTransferResult(status)": [
    "data",
    "status"
  ],
  "USBInTransferResult/USBInTransferResult(status, data)": [
    "data",
    "status"
  ],
  "USBInTransferResult/constructor(status)": [
    "data",
    "status"
  ],
  "USBInTransferResult/constructor(status, data)": [
    "data",
    "status"
  ],
  "USBInterface": [
    "USBInterface(configuration, interfaceNumber)",
    "[[alternates]]",
    "[[configuration]]",
    "[[interfaceNumber]]",
    "[[isProtectedClass]]",
    "alternate",
    "alternates",
    "claimed",
    "constructor(configuration, interfaceNumber)",
    "interfaceNumber"
  ],
  "USBInterface/USBInterface(configuration, interfaceNumber)": [
    "configuration",
    "interfaceNumber"
  ],
  "USBInterface/constructor(configuration, interfaceNumber)": [
    "configuration",
    "interfaceNumber"
  ],
  "USBIsochronousInTransferPacket": [
    "USBIsochronousInTransferPacket(status)",
    "USBIsochronousInTransferPacket(status, data)",
    "constructor(status)",
    "constructor(status, data)",
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/USBIsochronousInTransferPacket(status)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/USBIsochronousInTransferPacket(status, data)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/constructor(status)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferPacket/constructor(status, data)": [
    "data",
    "status"
  ],
  "USBIsochronousInTransferResult": [
    "USBIsochronousInTransferResult(packets)",
    "USBIsochronousInTransferResult(packets, data)",
    "constructor(packets)",
    "constructor(packets, data)",
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/USBIsochronousInTransferResult(packets)": [
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/USBIsochronousInTransferResult(packets, data)": [
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/constructor(packets)": [
    "data",
    "packets"
  ],
  "USBIsochronousInTransferResult/constructor(packets, data)": [
    "data",
    "packets"
  ],
  "USBIsochronousOutTransferPacket": [
    "USBIsochronousOutTransferPacket(status)",
    "USBIsochronousOutTransferPacket(status, bytesWritten)",
    "bytesWritten",
    "constructor(status)",
    "constructor(status, bytesWritten)",
    "status"
  ],
  "USBIsochronousOutTransferPacket/USBIsochronousOutTransferPacket(status)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferPacket/USBIsochronousOutTransferPacket(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferPacket/constructor(status)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferPacket/constructor(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBIsochronousOutTransferResult": [
    "USBIsochronousOutTransferResult(packets)",
    "constructor(packets)",
    "packets"
  ],
  "USBIsochronousOutTransferResult/USBIsochronousOutTransferResult(packets)": [
    "packets"
  ],
  "USBIsochronousOutTransferResult/constructor(packets)": [
    "packets"
  ],
  "USBOutTransferResult": [
    "USBOutTransferResult(status)",
    "USBOutTransferResult(status, bytesWritten)",
    "bytesWritten",
    "constructor(status)",
    "constructor(status, bytesWritten)",
    "status"
  ],
  "USBOutTransferResult/USBOutTransferResult(status)": [
    "bytesWritten",
    "status"
  ],
  "USBOutTransferResult/USBOutTransferResult(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBOutTransferResult/constructor(status)": [
    "bytesWritten",
    "status"
  ],
  "USBOutTransferResult/constructor(status, bytesWritten)": [
    "bytesWritten",
    "status"
  ],
  "USBPermissionDescriptor": [
    "exclusionFilters",
    "filters"
  ],
  "USBPermissionResult": [
    "devices"
  ],
  "USBPermissionStorage": [
    "allowedDevices"
  ],
  "USBRecipient": [
    "\"device\"",
    "\"endpoint\"",
    "\"interface\"",
    "\"other\""
  ],
  "USBRequestType": [
    "\"class\"",
    "\"standard\"",
    "\"vendor\""
  ],
  "USBTransferStatus": [
    "\"babble\"",
    "\"ok\"",
    "\"stall\""
  ],
  "UncalibratedMagnetometer": [
    "UncalibratedMagnetometer()",
    "UncalibratedMagnetometer(sensorOptions)",
    "constructor()",
    "constructor(sensorOptions)",
    "x",
    "xBias",
    "y",
    "yBias",
    "z",
    "zBias"
  ],
  "UncalibratedMagnetometer/UncalibratedMagnetometer()": [
    "sensorOptions"
  ],
  "UncalibratedMagnetometer/UncalibratedMagnetometer(sensorOptions)": [
    "sensorOptions"
  ],
  "UncalibratedMagnetometer/constructor()": [
    "sensorOptions"
  ],
  "UncalibratedMagnetometer/constructor(sensorOptions)": [
    "sensorOptions"
  ],
  "UnderlineStyle": [
    "dashed",
    "dotted",
    "none",
    "solid",
    "wavy"
  ],
  "UnderlineThickness": [
    "none",
    "thick",
    "thin"
  ],
  "UnderlyingSink": [
    "abort",
    "close",
    "start",
    "type",
    "write"
  ],
  "UnderlyingSinkAbortCallback": [
    "reason"
  ],
  "UnderlyingSinkStartCallback": [
    "controller"
  ],
  "UnderlyingSinkWriteCallback": [
    "chunk",
    "controller"
  ],
  "UnderlyingSource": [
    "autoAllocateChunkSize",
    "cancel",
    "pull",
    "start",
    "type"
  ],
  "UnderlyingSourceCancelCallback": [
    "reason"
  ],
  "UnderlyingSourcePullCallback": [
    "controller"
  ],
  "UnderlyingSourceStartCallback": [
    "controller"
  ],
  "UserActivation": [
    "hasBeenActive",
    "isActive"
  ],
  "UserIdleState": [
    "\"active\"",
    "\"idle\""
  ],
  "UserVerificationRequirement": [
    "\"discouraged\"",
    "\"preferred\"",
    "\"required\"",
    "discouraged",
    "preferred",
    "required"
  ],
  "VTTCue": [
    "VTTCue(startTime, endTime, text)",
    "align",
    "constructor(startTime, endTime, text)",
    "getCueAsHTML()",
    "line",
    "lineAlign",
    "position",
    "positionAlign",
    "region",
    "size",
    "snapToLines",
    "text",
    "vertical"
  ],
  "VTTCue/VTTCue(startTime, endTime, text)": [
    "endTime",
    "startTime",
    "text"
  ],
  "VTTCue/constructor(startTime, endTime, text)": [
    "endTime",
    "startTime",
    "text"
  ],
  "VTTRegion": [
    "VTTRegion()",
    "constructor()",
    "id",
    "lines",
    "regionAnchorX",
    "regionAnchorY",
    "scroll",
    "viewportAnchorX",
    "viewportAnchorY",
    "width"
  ],
  "ValidityState": [
    "badInput",
    "customError",
    "patternMismatch",
    "rangeOverflow",
    "rangeUnderflow",
    "stepMismatch",
    "tooLong",
    "tooShort",
    "typeMismatch",
    "valid",
    "valueMissing"
  ],
  "ValueEvent": [
    "ValueEvent(type)",
    "ValueEvent(type, initDict)",
    "constructor(type)",
    "constructor(type, initDict)",
    "value"
  ],
  "ValueEvent/ValueEvent(type)": [
    "initDict",
    "type"
  ],
  "ValueEvent/ValueEvent(type, initDict)": [
    "initDict",
    "type"
  ],
  "ValueEvent/constructor(type)": [
    "initDict",
    "type"
  ],
  "ValueEvent/constructor(type, initDict)": [
    "initDict",
    "type"
  ],
  "ValueEventInit": [
    "value"
  ],
  "ValueType": [
    "\"anyfunc\"",
    "\"externref\"",
    "\"f32\"",
    "\"f64\"",
    "\"i32\"",
    "\"i64\"",
    "\"v128\""
  ],
  "VideoColorPrimaries": [
    "\"bt2020\"",
    "\"bt470bg\"",
    "\"bt709\"",
    "\"smpte170m\"",
    "\"smpte432\"",
    "bt2020",
    "bt470bg",
    "bt709",
    "smpte170m",
    "smpte432"
  ],
  "VideoColorSpace": [
    "VideoColorSpace()",
    "VideoColorSpace(init)",
    "[[full range]]",
    "[[matrix]]",
    "[[primaries]]",
    "[[transfer]]",
    "constructor()",
    "constructor(init)",
    "fullRange",
    "matrix",
    "primaries",
    "toJSON()",
    "transfer"
  ],
  "VideoColorSpace/VideoColorSpace()": [
    "init"
  ],
  "VideoColorSpace/VideoColorSpace(init)": [
    "init"
  ],
  "VideoColorSpace/constructor()": [
    "init"
  ],
  "VideoColorSpace/constructor(init)": [
    "init"
  ],
  "VideoColorSpaceInit": [
    "fullRange",
    "matrix",
    "primaries",
    "transfer"
  ],
  "VideoConfiguration": [
    "bitrate",
    "colorGamut",
    "contentType",
    "framerate",
    "hasAlphaChannel",
    "hdrMetadataType",
    "height",
    "scalabilityMode",
    "spatialScalability",
    "transferFunction",
    "width"
  ],
  "VideoDecoder": [
    "VideoDecoder(init)",
    "[[active decoder config]]",
    "[[codec implementation]]",
    "[[codec saturated]]",
    "[[codec work queue]]",
    "[[control message queue]]",
    "[[decodeQueueSize]]",
    "[[dequeue event scheduled]]",
    "[[error callback]]",
    "[[key chunk required]]",
    "[[message queue blocked]]",
    "[[output callback]]",
    "[[pending flush promises]]",
    "[[state]]",
    "close()",
    "configure(config)",
    "constructor(init)",
    "decode(chunk)",
    "decodeQueueSize",
    "dequeue",
    "flush()",
    "isConfigSupported(config)",
    "ondequeue",
    "reset()",
    "schedule dequeue event",
    "state"
  ],
  "VideoDecoder/VideoDecoder(init)": [
    "init"
  ],
  "VideoDecoder/configure(config)": [
    "config"
  ],
  "VideoDecoder/constructor(init)": [
    "init"
  ],
  "VideoDecoder/decode(chunk)": [
    "chunk"
  ],
  "VideoDecoder/isConfigSupported(config)": [
    "config"
  ],
  "VideoDecoderConfig": [
    "codec",
    "codedHeight",
    "codedWidth",
    "colorSpace",
    "description",
    "displayAspectHeight",
    "displayAspectWidth",
    "hardwareAcceleration",
    "optimizeForLatency"
  ],
  "VideoDecoderInit": [
    "error",
    "output"
  ],
  "VideoDecoderSupport": [
    "config",
    "supported"
  ],
  "VideoEncoder": [
    "VideoEncoder(init)",
    "[[active encoder config]]",
    "[[active output config]]",
    "[[codec implementation]]",
    "[[codec saturated]]",
    "[[codec work queue]]",
    "[[control message queue]]",
    "[[dequeue event scheduled]]",
    "[[encodeQueueSize]]",
    "[[error callback]]",
    "[[message queue blocked]]",
    "[[output callback]]",
    "[[pending flush promises]]",
    "[[state]]",
    "close()",
    "configure(config)",
    "constructor(init)",
    "dequeue",
    "encode(frame)",
    "encode(frame, options)",
    "encodeQueueSize",
    "flush()",
    "isConfigSupported(config)",
    "ondequeue",
    "reset()",
    "schedule dequeue event",
    "state"
  ],
  "VideoEncoder/VideoEncoder(init)": [
    "init"
  ],
  "VideoEncoder/configure(config)": [
    "config"
  ],
  "VideoEncoder/constructor(init)": [
    "init"
  ],
  "VideoEncoder/encode(frame)": [
    "frame",
    "options"
  ],
  "VideoEncoder/encode(frame, options)": [
    "frame",
    "options"
  ],
  "VideoEncoder/isConfigSupported(config)": [
    "config"
  ],
  "VideoEncoderBitrateMode": [
    "\"constant\"",
    "\"quantizer\"",
    "\"variable\"",
    "constant",
    "quantizer",
    "variable"
  ],
  "VideoEncoderConfig": [
    "alpha",
    "avc",
    "bitrate",
    "bitrateMode",
    "codec",
    "contentHint",
    "displayHeight",
    "displayWidth",
    "framerate",
    "hardwareAcceleration",
    "height",
    "hevc",
    "latencyMode",
    "scalabilityMode",
    "width"
  ],
  "VideoEncoderEncodeOptions": [
    "av1",
    "avc",
    "hevc",
    "keyFrame",
    "vp9"
  ],
  "VideoEncoderEncodeOptionsForAv1": [
    "quantizer"
  ],
  "VideoEncoderEncodeOptionsForAvc": [
    "quantizer"
  ],
  "VideoEncoderEncodeOptionsForHevc": [
    "quantizer"
  ],
  "VideoEncoderEncodeOptionsForVp9": [
    "quantizer"
  ],
  "VideoEncoderInit": [
    "error",
    "output"
  ],
  "VideoEncoderSupport": [
    "config",
    "supported"
  ],
  "VideoFacingModeEnum": [
    "environment",
    "left",
    "right",
    "user"
  ],
  "VideoFrame": [
    "VideoFrame(data, init)",
    "VideoFrame(image)",
    "VideoFrame(image, init)",
    "[[coded height]]",
    "[[coded width]]",
    "[[color space]]",
    "[[display height]]",
    "[[display width]]",
    "[[duration]]",
    "[[format]]",
    "[[metadata]]",
    "[[resource reference]]",
    "[[timestamp]]",
    "[[visible height]]",
    "[[visible left]]",
    "[[visible top]]",
    "[[visible width]]",
    "allocationSize()",
    "allocationSize(options)",
    "clone()",
    "close()",
    "codedHeight",
    "codedRect",
    "codedWidth",
    "colorSpace",
    "compute layout and allocation size",
    "constructor(data, init)",
    "constructor(image)",
    "constructor(image, init)",
    "convert to rgb frame",
    "copy videoframe metadata",
    "copyTo(destination)",
    "copyTo(destination, options)",
    "displayHeight",
    "displayWidth",
    "duration",
    "format",
    "initialize frame from other frame",
    "initialize frame with resource and size",
    "initialize visible rect and display size",
    "metadata()",
    "parse videoframecopytooptions",
    "parse visible rect",
    "pick color space",
    "timestamp",
    "verify rect offset alignment",
    "visibleRect"
  ],
  "VideoFrame/VideoFrame(data, init)": [
    "data",
    "init"
  ],
  "VideoFrame/VideoFrame(image)": [
    "image",
    "init"
  ],
  "VideoFrame/VideoFrame(image, init)": [
    "image",
    "init"
  ],
  "VideoFrame/allocationSize()": [
    "options"
  ],
  "VideoFrame/allocationSize(options)": [
    "options"
  ],
  "VideoFrame/constructor(data, init)": [
    "data",
    "init"
  ],
  "VideoFrame/constructor(image)": [
    "image",
    "init"
  ],
  "VideoFrame/constructor(image, init)": [
    "image",
    "init"
  ],
  "VideoFrame/copyTo(destination)": [
    "destination",
    "options"
  ],
  "VideoFrame/copyTo(destination, options)": [
    "destination",
    "options"
  ],
  "VideoFrameBufferInit": [
    "codedHeight",
    "codedWidth",
    "colorSpace",
    "displayHeight",
    "displayWidth",
    "duration",
    "format",
    "layout",
    "metadata",
    "timestamp",
    "transfer",
    "visibleRect"
  ],
  "VideoFrameCallbackMetadata": [
    "captureTime",
    "expectedDisplayTime",
    "height",
    "mediaTime",
    "presentationTime",
    "presentedFrames",
    "processingDuration",
    "receiveTime",
    "rtpTimestamp",
    "width"
  ],
  "VideoFrameCopyToOptions": [
    "colorSpace",
    "format",
    "layout",
    "rect"
  ],
  "VideoFrameInit": [
    "alpha",
    "displayHeight",
    "displayWidth",
    "duration",
    "metadata",
    "timestamp",
    "visibleRect"
  ],
  "VideoFrameOutputCallback": [
    "output"
  ],
  "VideoFrameRequestCallback": [
    "metadata",
    "now"
  ],
  "VideoMatrixCoefficients": [
    "\"bt2020-ncl\"",
    "\"bt470bg\"",
    "\"bt709\"",
    "\"rgb\"",
    "\"smpte170m\"",
    "bt2020-ncl",
    "bt470bg",
    "bt709",
    "rgb",
    "smpte170m"
  ],
  "VideoPixelFormat": [
    "\"BGRA\"",
    "\"BGRX\"",
    "\"I420\"",
    "\"I420A\"",
    "\"I420AP10\"",
    "\"I420AP12\"",
    "\"I420P10\"",
    "\"I420P12\"",
    "\"I422\"",
    "\"I422A\"",
    "\"I422AP10\"",
    "\"I422AP12\"",
    "\"I422P10\"",
    "\"I422P12\"",
    "\"I444\"",
    "\"I444A\"",
    "\"I444AP10\"",
    "\"I444AP12\"",
    "\"I444P10\"",
    "\"I444P12\"",
    "\"NV12\"",
    "\"RGBA\"",
    "\"RGBX\"",
    "BGRA",
    "BGRX",
    "I420",
    "I420A",
    "I420AP10",
    "I420AP12",
    "I420P10",
    "I420P12",
    "I422",
    "I422A",
    "I422AP10",
    "I422AP12",
    "I422P10",
    "I422P12",
    "I444",
    "I444A",
    "I444AP10",
    "I444AP12",
    "I444P10",
    "I444P12",
    "NV12",
    "RGBA",
    "RGBX"
  ],
  "VideoPlaybackQuality": [
    "corruptedVideoFrames",
    "creationTime",
    "droppedVideoFrames",
    "foo",
    "totalVideoFrames"
  ],
  "VideoResizeModeEnum": [
    "crop-and-scale",
    "none"
  ],
  "VideoTrack": [
    "id",
    "kind",
    "label",
    "language",
    "selected",
    "sourceBuffer"
  ],
  "VideoTrackGenerator": [
    "VideoTrackGenerator()",
    "[[isMuted]]",
    "[[track]]",
    "constructor()",
    "muted",
    "track",
    "writable"
  ],
  "VideoTrackList": [
    "addtrack",
    "change",
    "getTrackById(id)",
    "length",
    "onaddtrack",
    "onchange",
    "onremovetrack",
    "removetrack",
    "selectedIndex"
  ],
  "VideoTransferCharacteristics": [
    "\"bt709\"",
    "\"hlg\"",
    "\"iec61966-2-1\"",
    "\"linear\"",
    "\"pq\"",
    "\"smpte170m\"",
    "bt709",
    "hlg",
    "iec61966-2-1",
    "linear",
    "pq",
    "smpte170m"
  ],
  "ViewTimeline": [
    "ViewTimeline()",
    "ViewTimeline(options)",
    "constructor()",
    "constructor(options)",
    "endOffset",
    "startOffset",
    "subject"
  ],
  "ViewTimeline/ViewTimeline()": [
    "options"
  ],
  "ViewTimeline/ViewTimeline(options)": [
    "options"
  ],
  "ViewTimeline/constructor()": [
    "options"
  ],
  "ViewTimeline/constructor(options)": [
    "options"
  ],
  "ViewTimelineOptions": [
    "axis",
    "inset",
    "subject"
  ],
  "ViewTransition": [
    "active types",
    "finished",
    "finished promise",
    "initial snapshot containing block size",
    "named elements",
    "outbound post-capture steps",
    "phase",
    "process old state captured",
    "ready",
    "ready promise",
    "skipTransition()",
    "transition root pseudo-element",
    "types",
    "update callback",
    "update callback done promise",
    "updateCallbackDone"
  ],
  "ViewTransitionNavigation": [
    "\"auto\"",
    "\"none\""
  ],
  "Viewport": [
    "segments"
  ],
  "VirtualKeyboard": [
    "boundingRect",
    "hide()",
    "ongeometrychange",
    "overlaysContent",
    "show()"
  ],
  "VisualViewport": [
    "height",
    "offsetLeft",
    "offsetTop",
    "onresize",
    "onscroll",
    "onscrollend",
    "pageLeft",
    "pageTop",
    "resize",
    "scale",
    "scroll",
    "scrollend",
    "width"
  ],
  "WakeLock": [
    "request()",
    "request(type)"
  ],
  "WakeLockSentinel": [
    "[[Released]]",
    "onrelease",
    "release()",
    "released",
    "type"
  ],
  "WakeLockType": [
    "screen"
  ],
  "WatchAdvertisementsOptions": [
    "signal"
  ],
  "WaveShaperNode": [
    "WaveShaperNode(context)",
    "WaveShaperNode(context, options)",
    "[[curve set]]",
    "constructor(context)",
    "constructor(context, options)",
    "curve",
    "oversample"
  ],
  "WaveShaperNode/WaveShaperNode(context)": [
    "context",
    "options"
  ],
  "WaveShaperNode/WaveShaperNode(context, options)": [
    "context",
    "options"
  ],
  "WaveShaperNode/constructor()": [
    "context",
    "options"
  ],
  "WaveShaperNode/constructor(context)": [
    "context",
    "options"
  ],
  "WaveShaperNode/constructor(context, options)": [
    "context",
    "options"
  ],
  "WaveShaperOptions": [
    "curve",
    "oversample"
  ],
  "WeakMap": [
    "WeakMap(iterable)",
    "delete(key)",
    "get(key)",
    "has(key)",
    "set(key, value)"
  ],
  "WeakRef": [
    "WeakRef(target)",
    "deref()"
  ],
  "WeakSet": [
    "WeakSet(iterable)",
    "add(value)",
    "delete(value)",
    "has(value)"
  ],
  "Web IDL arguments list": [
    "converting"
  ],
  "WebAssembly": [
    "compile(bytes)",
    "compileStreaming(source)",
    "instantiate(bytes)",
    "instantiate(bytes, importObject)",
    "instantiate(moduleObject)",
    "instantiate(moduleObject, importObject)",
    "instantiateStreaming(source)",
    "instantiateStreaming(source, importObject)",
    "validate(bytes)"
  ],
  "WebAssembly/compile(bytes)": [
    "bytes"
  ],
  "WebAssembly/compileStreaming(source)": [
    "source"
  ],
  "WebAssembly/instantiate(bytes)": [
    "bytes",
    "importObject"
  ],
  "WebAssembly/instantiate(bytes, importObject)": [
    "bytes",
    "importObject"
  ],
  "WebAssembly/instantiate(moduleObject)": [
    "importObject",
    "moduleObject"
  ],
  "WebAssembly/instantiate(moduleObject, importObject)": [
    "importObject",
    "moduleObject"
  ],
  "WebAssembly/instantiateStreaming(source)": [
    "importObject",
    "source"
  ],
  "WebAssembly/instantiateStreaming(source, importObject)": [
    "importObject",
    "source"
  ],
  "WebAssembly/validate(bytes)": [
    "bytes"
  ],
  "WebAssemblyInstantiatedSource": [
    "instance",
    "module"
  ],
  "WebCodecsErrorCallback": [
    "error"
  ],
  "WebDriver navigation status": [
    "id",
    "status",
    "url"
  ],
  "WebGLContextAttributes": [
    "xrCompatible"
  ],
  "WebGLRenderingContextBase": [
    "makeXRCompatible()"
  ],
  "WebSocket": [
    "CLOSED",
    "CLOSING",
    "CONNECTING",
    "OPEN",
    "WebSocket(url)",
    "WebSocket(url, protocols)",
    "binary type",
    "binaryType",
    "bufferedAmount",
    "close",
    "close()",
    "close(code)",
    "close(code, reason)",
    "constructor(url)",
    "constructor(url, protocols)",
    "error",
    "extensions",
    "internal-url",
    "message",
    "onclose",
    "onerror",
    "onmessage",
    "onopen",
    "open",
    "protocol",
    "ready state",
    "readyState",
    "send(data)",
    "url"
  ],
  "WebSocket/WebSocket(url)": [
    "protocols",
    "url"
  ],
  "WebSocket/WebSocket(url, protocols)": [
    "protocols",
    "url"
  ],
  "WebSocket/close()": [
    "code",
    "reason"
  ],
  "WebSocket/close(code)": [
    "code",
    "reason"
  ],
  "WebSocket/close(code, reason)": [
    "code",
    "reason"
  ],
  "WebSocket/constructor(url)": [
    "protocols",
    "url"
  ],
  "WebSocket/constructor(url, protocols)": [
    "protocols",
    "url"
  ],
  "WebSocket/send(data)": [
    "data"
  ],
  "WebTransport": [
    "WebTransport(url)",
    "WebTransport(url, options)",
    "[[AnticipatedConcurrentIncomingBidirectionalStreams]]",
    "[[AnticipatedConcurrentIncomingUnidirectionalStreams]]",
    "[[Closed]]",
    "[[CongestionControl]]",
    "[[Datagrams]]",
    "[[Draining]]",
    "[[IncomingBidirectionalStreams]]",
    "[[IncomingUnidirectionalStreams]]",
    "[[Ready]]",
    "[[ReceiveStreams]]",
    "[[Reliability]]",
    "[[SendStreams]]",
    "[[Session]]",
    "[[State]]",
    "anticipatedConcurrentIncomingBidirectionalStreams",
    "anticipatedConcurrentIncomingUnidirectionalStreams",
    "cleanup",
    "close()",
    "close(closeInfo)",
    "closed",
    "congestionControl",
    "constructor(url)",
    "constructor(url, options)",
    "createBidirectionalStream()",
    "createBidirectionalStream(options)",
    "createSendGroup()",
    "createUnidirectionalStream()",
    "createUnidirectionalStream(options)",
    "datagrams",
    "draining",
    "getStats()",
    "incomingBidirectionalStreams",
    "incomingUnidirectionalStreams",
    "queue a network task",
    "ready",
    "reliability",
    "supportsReliableOnly"
  ],
  "WebTransport/WebTransport(url)": [
    "options",
    "url"
  ],
  "WebTransport/WebTransport(url, options)": [
    "options",
    "url"
  ],
  "WebTransport/close()": [
    "closeInfo"
  ],
  "WebTransport/close(closeInfo)": [
    "closeInfo"
  ],
  "WebTransport/constructor(url)": [
    "options",
    "url"
  ],
  "WebTransport/constructor(url, options)": [
    "options",
    "url"
  ],
  "WebTransport/createBidirectionalStream()": [
    "options"
  ],
  "WebTransport/createBidirectionalStream(options)": [
    "options"
  ],
  "WebTransport/createUnidirectionalStream()": [
    "options"
  ],
  "WebTransport/createUnidirectionalStream(options)": [
    "options"
  ],
  "WebTransportBidirectionalStream": [
    "[[Readable]]",
    "[[Transport]]",
    "[[Writable]]",
    "readable",
    "writable"
  ],
  "WebTransportCloseInfo": [
    "closeCode",
    "reason"
  ],
  "WebTransportCongestionControl": [
    "\"default\"",
    "\"low-latency\"",
    "\"throughput\""
  ],
  "WebTransportConnectionStats": [
    "bytesLost",
    "bytesReceived",
    "bytesSent",
    "datagrams",
    "estimatedSendRate",
    "minRtt",
    "packetsLost",
    "packetsReceived",
    "packetsSent",
    "rttVariation",
    "smoothedRtt"
  ],
  "WebTransportDatagramDuplexStream": [
    "[[IncomingDatagramsExpirationDuration]]",
    "[[IncomingDatagramsHighWaterMark]]",
    "[[IncomingDatagramsPullPromise]]",
    "[[IncomingDatagramsQueue]]",
    "[[OutgoingDatagramsExpirationDuration]]",
    "[[OutgoingDatagramsHighWaterMark]]",
    "[[OutgoingDatagramsQueue]]",
    "[[OutgoingMaxDatagramSize]]",
    "[[Readable]]",
    "[[Writable]]",
    "create",
    "creating",
    "incomingHighWaterMark",
    "incomingMaxAge",
    "maxDatagramSize",
    "outgoingHighWaterMark",
    "outgoingMaxAge",
    "readable",
    "writable"
  ],
  "WebTransportDatagramDuplexStream/create": [
    "readable",
    "writable"
  ],
  "WebTransportDatagramStats": [
    "droppedIncoming",
    "expiredIncoming",
    "expiredOutgoing",
    "lostOutgoing"
  ],
  "WebTransportError": [
    "WebTransportError()",
    "WebTransportError(message)",
    "WebTransportError(message, options)",
    "[[Source]]",
    "[[StreamErrorCode]]",
    "constructor()",
    "constructor(message)",
    "constructor(message, options)",
    "source",
    "streamErrorCode"
  ],
  "WebTransportError/WebTransportError()": [
    "message",
    "options"
  ],
  "WebTransportError/WebTransportError(message)": [
    "message",
    "options"
  ],
  "WebTransportError/WebTransportError(message, options)": [
    "message",
    "options"
  ],
  "WebTransportError/constructor()": [
    "message",
    "options"
  ],
  "WebTransportError/constructor(message)": [
    "message",
    "options"
  ],
  "WebTransportError/constructor(message, options)": [
    "message",
    "options"
  ],
  "WebTransportErrorOptions": [
    "source",
    "streamErrorCode"
  ],
  "WebTransportErrorSource": [
    "\"session\"",
    "\"stream\""
  ],
  "WebTransportHash": [
    "algorithm",
    "value"
  ],
  "WebTransportOptions": [
    "allowPooling",
    "anticipatedConcurrentIncomingBidirectionalStreams",
    "anticipatedConcurrentIncomingUnidirectionalStreams",
    "congestionControl",
    "requireUnreliable",
    "serverCertificateHashes"
  ],
  "WebTransportReceiveStream": [
    "[[InternalStream]]",
    "[[Transport]]",
    "cancel",
    "create",
    "creating",
    "getStats()",
    "pull bytes"
  ],
  "WebTransportReceiveStreamStats": [
    "bytesRead",
    "bytesReceived"
  ],
  "WebTransportReliabilityMode": [
    "\"pending\"",
    "\"reliable-only\"",
    "\"supports-unreliable\""
  ],
  "WebTransportSendGroup": [
    "[[Transport]]",
    "create",
    "creating",
    "getStats()"
  ],
  "WebTransportSendStream": [
    "[[AtomicWriteRequests]]",
    "[[InternalStream]]",
    "[[PendingOperation]]",
    "[[SendGroup]]",
    "[[SendOrder]]",
    "[[Transport]]",
    "abort",
    "abort all atomic write requests",
    "close",
    "create",
    "creating",
    "getStats()",
    "getWriter()",
    "sendGroup",
    "sendOrder",
    "write"
  ],
  "WebTransportSendStreamOptions": [
    "sendGroup",
    "sendOrder",
    "waitUntilAvailable"
  ],
  "WebTransportSendStreamStats": [
    "bytesAcknowledged",
    "bytesSent",
    "bytesWritten"
  ],
  "WebTransportWriter": [
    "atomicWrite()",
    "atomicWrite(chunk)",
    "create",
    "creating"
  ],
  "WebTransportWriter/atomicWrite()": [
    "chunk"
  ],
  "WebTransportWriter/atomicWrite(chunk)": [
    "chunk"
  ],
  "WellKnownDirectory": [
    "\"desktop\"",
    "\"documents\"",
    "\"downloads\"",
    "\"music\"",
    "\"pictures\"",
    "\"videos\"",
    "determine the directory the picker will start in",
    "remember a picked directory",
    "too sensitive or dangerous"
  ],
  "WheelEvent": [
    "DOM_DELTA_LINE",
    "DOM_DELTA_PAGE",
    "DOM_DELTA_PIXEL",
    "WheelEvent(type)",
    "WheelEvent(type, eventInitDict)",
    "constructor(type)",
    "constructor(type, eventInitDict)",
    "deltaMode",
    "deltaX",
    "deltaY",
    "deltaZ"
  ],
  "WheelEvent/WheelEvent(type)": [
    "eventInitDict",
    "type"
  ],
  "WheelEvent/WheelEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "WheelEvent/constructor(type)": [
    "eventInitDict",
    "type"
  ],
  "WheelEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "WheelEventInit": [
    "deltaMode",
    "deltaX",
    "deltaY",
    "deltaZ"
  ],
  "Window": [
    "[[TitleBarArea]]",
    "[[defaultElementStylesMap]]",
    "[[registeredPropertySet]]",
    "[[screenDetails]]",
    "[[targetScreenFullscreen]]",
    "afterprint",
    "alert()",
    "alert(message)",
    "associated cookiestore",
    "beforeprint",
    "beforeunload",
    "blur",
    "blur()",
    "browsing context",
    "cancelIdleCallback()",
    "cancelIdleCallback(handle)",
    "captureEvents()",
    "clientInformation",
    "close()",
    "closed",
    "confirm(message)",
    "cookieStore",
    "credentialless",
    "current event",
    "customElements",
    "devicePixelRatio",
    "devicemotion",
    "deviceorientation",
    "deviceorientationabsolute",
    "document",
    "documentPictureInPicture",
    "documentpictureinpicture api",
    "error",
    "event",
    "eventcounts",
    "external",
    "fence",
    "focus",
    "focus()",
    "frameElement",
    "frames",
    "getComputedStyle(elt)",
    "getComputedStyle(elt, pseudoElt)",
    "getDigitalGoodsService(serviceProvider)",
    "getScreenDetails()",
    "getSelection()",
    "hashchange",
    "history",
    "innerHeight",
    "innerWidth",
    "interactioncount",
    "languagechange",
    "launchQueue",
    "length",
    "load",
    "location",
    "locationbar",
    "matchMedia(query)",
    "menubar",
    "message",
    "messageerror",
    "moveBy(x, y)",
    "moveTo(x, y)",
    "name",
    "navigable",
    "navigate(dir)",
    "navigation",
    "navigator",
    "offline",
    "onabort",
    "onanimationcancel",
    "onanimationend",
    "onanimationiteration",
    "onanimationstart",
    "onappinstalled",
    "onauxclick",
    "onbeforeinput",
    "onbeforeinstallprompt",
    "onbeforematch",
    "onbeforetoggle",
    "oncancel",
    "oncanplay",
    "oncanplaythrough",
    "onchange",
    "onclick",
    "onclose",
    "oncontextlost",
    "oncontextmenu",
    "oncontextrestored",
    "oncopy",
    "oncuechange",
    "oncut",
    "ondblclick",
    "ondevicemotion",
    "ondeviceorientation",
    "ondeviceorientationabsolute",
    "ondrag",
    "ondragend",
    "ondragenter",
    "ondragleave",
    "ondragover",
    "ondragstart",
    "ondrop",
    "ondurationchange",
    "onemptied",
    "onended",
    "onformdata",
    "oninput",
    "oninvalid",
    "onkeydown",
    "onkeypress",
    "onkeyup",
    "online",
    "onloadeddata",
    "onloadedmetadata",
    "onloadstart",
    "onmousedown",
    "onmouseenter",
    "onmouseleave",
    "onmousemove",
    "onmouseout",
    "onmouseover",
    "onmouseup",
    "onorientationchange",
    "onpaste",
    "onpause",
    "onplay",
    "onplaying",
    "onportalactivate",
    "onprogress",
    "onratechange",
    "onreset",
    "onscrollend",
    "onscrollsnapchange",
    "onscrollsnapchanging",
    "onsecuritypolicyviolation",
    "onseeked",
    "onseeking",
    "onselect",
    "onslotchange",
    "onstalled",
    "onsubmit",
    "onsuspend",
    "ontimeupdate",
    "ontoggle",
    "onvolumechange",
    "onwaiting",
    "onwebkitanimationend",
    "onwebkitanimationiteration",
    "onwebkitanimationstart",
    "onwebkittransitionend",
    "onwheel",
    "open(url, target, features)",
    "opener",
    "orientation",
    "originAgentCluster",
    "outerHeight",
    "outerWidth",
    "pageXOffset",
    "pageYOffset",
    "pagehide",
    "pagereveal",
    "pageshow",
    "pageswap",
    "parent",
    "personalbar",
    "popstate",
    "portalHost",
    "portalactivate",
    "postMessage(message, options)",
    "postMessage(message, targetOrigin, transfer)",
    "print()",
    "prompt(message, default)",
    "queryLocalFonts()",
    "queryLocalFonts(options)",
    "rejectionhandled",
    "releaseEvents()",
    "requestIdleCallback()",
    "requestIdleCallback(callback)",
    "requestIdleCallback(callback, options)",
    "resize",
    "resizeBy(x, y)",
    "resizeTo(width, height)",
    "resizeTo(x, y)",
    "screen",
    "screenLeft",
    "screenTop",
    "screenX",
    "screenY",
    "scroll()",
    "scroll(options)",
    "scroll(x, y)",
    "scrollBy()",
    "scrollBy(options)",
    "scrollBy(x, y)",
    "scrollTo()",
    "scrollTo(options)",
    "scrollTo(x, y)",
    "scrollX",
    "scrollY",
    "scrollbars",
    "self",
    "sharedStorage",
    "sharedstorage getter",
    "showDirectoryPicker()",
    "showDirectoryPicker(options)",
    "showOpenFilePicker()",
    "showOpenFilePicker(options)",
    "showSaveFilePicker()",
    "showSaveFilePicker(options)",
    "speechSynthesis",
    "status",
    "statusbar",
    "stop()",
    "storage",
    "toolbar",
    "top",
    "trusted type policy factory",
    "unhandledrejection",
    "unload",
    "viewport",
    "visualViewport",
    "window"
  ],
  "Window/getComputedStyle(elt)": [
    "elt",
    "pseudoElt"
  ],
  "Window/getComputedStyle(elt, pseudoElt)": [
    "elt",
    "pseudoElt"
  ],
  "Window/getDigitalGoodsService(serviceProvider)": [
    "serviceProvider"
  ],
  "Window/matchMedia(query)": [
    "query"
  ],
  "Window/moveBy(x, y)": [
    "x",
    "y"
  ],
  "Window/moveTo(x, y)": [
    "x",
    "y"
  ],
  "Window/navigate(dir)": [
    "dir"
  ],
  "Window/queryLocalFonts()": [
    "options"
  ],
  "Window/queryLocalFonts(options)": [
    "options"
  ],
  "Window/resizeBy(x, y)": [
    "x",
    "y"
  ],
  "Window/resizeTo(width, height)": [
    "height",
    "width"
  ],
  "Window/resizeTo(x, y)": [
    "x",
    "y"
  ],
  "Window/scroll()": [
    "options"
  ],
  "Window/scroll(options)": [
    "options"
  ],
  "Window/scroll(x, y)": [
    "x",
    "y"
  ],
  "Window/scrollBy()": [
    "options"
  ],
  "Window/scrollBy(options)": [
    "options"
  ],
  "Window/scrollBy(x, y)": [
    "x",
    "y"
  ],
  "Window/scrollTo()": [
    "options"
  ],
  "Window/scrollTo(options)": [
    "options"
  ],
  "Window/scrollTo(x, y)": [
    "x",
    "y"
  ],
  "Window/showDirectoryPicker()": [
    "options"
  ],
  "Window/showDirectoryPicker(options)": [
    "options"
  ],
  "Window/showOpenFilePicker()": [
    "options"
  ],
  "Window/showOpenFilePicker(options)": [
    "options"
  ],
  "Window/showSaveFilePicker()": [
    "options"
  ],
  "Window/showSaveFilePicker(options)": [
    "options"
  ],
  "WindowClient": [
    "ancestor origins array",
    "ancestorOrigins",
    "browsing context",
    "focus()",
    "focused",
    "navigate(url)",
    "visibilityState"
  ],
  "WindowClient/navigate(url)": [
    "url"
  ],
  "WindowControlsOverlay": [
    "getTitlebarAreaRect()",
    "ongeometrychange",
    "visible"
  ],
  "WindowControlsOverlayGeometryChangeEvent": [
    "constructor()",
    "constructor(type, eventInitDict)",
    "titlebarAreaRect",
    "visible"
  ],
  "WindowControlsOverlayGeometryChangeEventInit": [
    "titlebarAreaRect",
    "visible"
  ],
  "WindowEventHandlers": [
    "onafterprint",
    "onbeforeprint",
    "onbeforeunload",
    "ongamepadconnected",
    "ongamepaddisconnected",
    "onhashchange",
    "onlanguagechange",
    "onmessage",
    "onmessageerror",
    "onoffline",
    "ononline",
    "onpagehide",
    "onpagereveal",
    "onpageshow",
    "onpageswap",
    "onpopstate",
    "onportalactivate",
    "onrejectionhandled",
    "onstorage",
    "onunhandledrejection",
    "onunload"
  ],
  "WindowLocalStorage": [
    "localStorage"
  ],
  "WindowOrWorkerGlobalScope": [
    "atob(data)",
    "brands frozen array",
    "btoa(data)",
    "caches",
    "clearInterval(id)",
    "clearTimeout(id)",
    "createImageBitmap(image, options)",
    "crossOriginIsolated",
    "crypto",
    "endpoints",
    "fetch(input)",
    "fetch(input, init)",
    "full version list frozen array",
    "indexedDB",
    "isSecureContext",
    "map of active timers",
    "map of settimeout and setinterval ids",
    "memory attribution token",
    "origin",
    "performance",
    "queueMicrotask(callback)",
    "registered reporting observer list",
    "report buffer",
    "reportError(e)",
    "reports",
    "scheduler",
    "setInterval(handler, timeout, ...arguments)",
    "setTimeout(handler, timeout, ...arguments)",
    "structuredClone(value, options)",
    "trustedTypes"
  ],
  "WindowOrWorkerGlobalScope/fetch(input)": [
    "init",
    "input"
  ],
  "WindowOrWorkerGlobalScope/fetch(input, init)": [
    "init",
    "input"
  ],
  "WindowPostMessageOptions": [
    "targetOrigin"
  ],
  "WindowSessionStorage": [
    "sessionStorage"
  ],
  "Worker": [
    "Worker(scriptURL, options)",
    "error",
    "message",
    "messageerror",
    "onmessage",
    "onmessageerror",
    "postMessage(message, options)",
    "postMessage(message, transfer)",
    "terminate()"
  ],
  "WorkerGlobalScope": [
    "closing",
    "cross-origin isolated capability",
    "embedder policy",
    "error",
    "importScripts(...urls)",
    "languagechange",
    "location",
    "module map",
    "name",
    "navigator",
    "offline",
    "onerror",
    "onlanguagechange",
    "online",
    "onoffline",
    "ononline",
    "onrejectionhandled",
    "onunhandledrejection",
    "owner set",
    "policy container",
    "rejectionhandled",
    "scripting policy",
    "securitypolicyviolation",
    "self",
    "type",
    "unhandledrejection",
    "url"
  ],
  "WorkerLocation": [
    "hash",
    "host",
    "hostname",
    "href",
    "origin",
    "pathname",
    "port",
    "protocol",
    "search"
  ],
  "WorkerNavigator": [
    "hid",
    "mediaCapabilities",
    "permissions",
    "serial",
    "serviceWorker",
    "smartCard",
    "usb"
  ],
  "Worklet": [
    "addModule(moduleURL, options)",
    "global scopes"
  ],
  "WorkletAnimation": [
    "WorkletAnimation(animatorName)",
    "WorkletAnimation(animatorName, effects)",
    "WorkletAnimation(animatorName, effects, timeline)",
    "WorkletAnimation(animatorName, effects, timeline, options)",
    "animatorName",
    "constructor(animatorName)",
    "constructor(animatorName, effects)",
    "constructor(animatorName, effects, timeline)",
    "constructor(animatorName, effects, timeline, options)"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName, effects)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName, effects, timeline)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/WorkletAnimation(animatorName, effects, timeline, options)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName, effects)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName, effects, timeline)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimation/constructor(animatorName, effects, timeline, options)": [
    "animatorName",
    "effects",
    "options",
    "timeline"
  ],
  "WorkletAnimationEffect": [
    "getComputedTiming()",
    "getTiming()",
    "localTime"
  ],
  "WorkletGlobalScope": [
    "scripting policy"
  ],
  "WorkletGroupEffect": [
    "getChildren()"
  ],
  "WorkletOptions": [
    "credentials"
  ],
  "WritableStream": [
    "WritableStream()",
    "WritableStream(underlyingSink)",
    "WritableStream(underlyingSink, strategy)",
    "[[backpressure]]",
    "[[closerequest]]",
    "[[controller]]",
    "[[detached]]",
    "[[inflightcloserequest]]",
    "[[inflightwriterequest]]",
    "[[pendingabortrequest]]",
    "[[state]]",
    "[[storederror]]",
    "[[writer]]",
    "[[writerequests]]",
    "abort",
    "abort()",
    "abort(reason)",
    "aborting",
    "close",
    "close()",
    "closing",
    "constructor()",
    "constructor(underlyingSink)",
    "constructor(underlyingSink, strategy)",
    "error",
    "erroring",
    "get a writer",
    "getWriter()",
    "getting a writer",
    "locked",
    "set up",
    "signal"
  ],
  "WritableStream/WritableStream()": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/WritableStream(underlyingSink)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/WritableStream(underlyingSink, strategy)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/abort()": [
    "reason"
  ],
  "WritableStream/abort(reason)": [
    "reason"
  ],
  "WritableStream/constructor()": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/constructor(underlyingSink)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/constructor(underlyingSink, strategy)": [
    "strategy",
    "underlyingSink"
  ],
  "WritableStream/set up": [
    "abortalgorithm",
    "closealgorithm",
    "highwatermark",
    "sizealgorithm",
    "writealgorithm"
  ],
  "WritableStreamController": [
    "[[AbortSteps]]",
    "[[ErrorSteps]]"
  ],
  "WritableStreamDefaultController": [
    "[[AbortSteps]]",
    "[[ErrorSteps]]",
    "[[abortalgorithm]]",
    "[[abortcontroller]]",
    "[[closealgorithm]]",
    "[[queue]]",
    "[[queuetotalsize]]",
    "[[started]]",
    "[[strategyhwm]]",
    "[[strategysizealgorithm]]",
    "[[stream]]",
    "[[writealgorithm]]",
    "error()",
    "error(e)",
    "signal"
  ],
  "WritableStreamDefaultController/error()": [
    "e"
  ],
  "WritableStreamDefaultController/error(e)": [
    "e"
  ],
  "WritableStreamDefaultWriter": [
    "WritableStreamDefaultWriter(stream)",
    "[[closedpromise]]",
    "[[readypromise]]",
    "[[stream]]",
    "abort()",
    "abort(reason)",
    "close()",
    "closed",
    "constructor(stream)",
    "desiredSize",
    "ready",
    "release",
    "releaseLock()",
    "write a chunk",
    "write()",
    "write(chunk)",
    "writing a chunk"
  ],
  "WritableStreamDefaultWriter/WritableStreamDefaultWriter(stream)": [
    "stream"
  ],
  "WritableStreamDefaultWriter/abort()": [
    "reason"
  ],
  "WritableStreamDefaultWriter/abort(reason)": [
    "reason"
  ],
  "WritableStreamDefaultWriter/constructor(stream)": [
    "stream"
  ],
  "WritableStreamDefaultWriter/write()": [
    "chunk"
  ],
  "WritableStreamDefaultWriter/write(chunk)": [
    "chunk"
  ],
  "WriteCommandType": [
    "\"seek\"",
    "\"truncate\"",
    "\"write\""
  ],
  "WriteParams": [
    "data",
    "position",
    "size",
    "type"
  ],
  "XMLHttpRequest": [
    "DONE",
    "HEADERS_RECEIVED",
    "LOADING",
    "OPENED",
    "UNSENT",
    "XMLHttpRequest()",
    "abort()",
    "constructor()",
    "fetch controller",
    "getAllResponseHeaders()",
    "getResponseHeader(name)",
    "onreadystatechange",
    "open(method, url)",
    "open(method, url, async)",
    "open(method, url, async, username)",
    "open(method, url, async, username, password)",
    "overrideMimeType(mime)",
    "private state token",
    "readyState",
    "readystatechange",
    "response",
    "responseText",
    "responseType",
    "responseURL",
    "responseXML",
    "send()",
    "send(body)",
    "setAttributionReporting(options)",
    "setPrivateToken(privateToken)",
    "setRequestHeader(name, value)",
    "status",
    "statusText",
    "timeout",
    "upload",
    "withCredentials"
  ],
  "XMLHttpRequest/getResponseHeader(name)": [
    "name"
  ],
  "XMLHttpRequest/open(method, url)": [
    "method",
    "url"
  ],
  "XMLHttpRequest/open(method, url, async)": [
    "async",
    "method",
    "password",
    "url",
    "username"
  ],
  "XMLHttpRequest/open(method, url, async, username)": [
    "async",
    "method",
    "password",
    "url",
    "username"
  ],
  "XMLHttpRequest/open(method, url, async, username, password)": [
    "async",
    "method",
    "password",
    "url",
    "username"
  ],
  "XMLHttpRequest/overrideMimeType(mime)": [
    "mime"
  ],
  "XMLHttpRequest/send()": [
    "body"
  ],
  "XMLHttpRequest/send(body)": [
    "body"
  ],
  "XMLHttpRequest/setAttributionReporting(options)": [
    "options"
  ],
  "XMLHttpRequest/setPrivateToken(privateToken)": [
    "privateToken"
  ],
  "XMLHttpRequest/setRequestHeader(name, value)": [
    "name",
    "value"
  ],
  "XMLHttpRequestEventTarget": [
    "abort",
    "error",
    "load",
    "loadend",
    "loadstart",
    "onabort",
    "onerror",
    "onload",
    "onloadend",
    "onloadstart",
    "onprogress",
    "ontimeout",
    "progress",
    "timeout"
  ],
  "XMLHttpRequestResponseType": [
    "\"\"",
    "\"arraybuffer\"",
    "\"blob\"",
    "\"document\"",
    "\"json\"",
    "\"text\""
  ],
  "XMLSerializer": [
    "constructor()",
    "serializeToString()",
    "serializeToString(root)"
  ],
  "XPathEvaluator": [
    "XPathEvaluator()",
    "constructor()"
  ],
  "XPathEvaluatorBase": [
    "createExpression(expression)",
    "createExpression(expression, resolver)",
    "createNSResolver(nodeResolver)",
    "evaluate(expression, contextNode)",
    "evaluate(expression, contextNode, resolver)",
    "evaluate(expression, contextNode, resolver, type)",
    "evaluate(expression, contextNode, resolver, type, result)"
  ],
  "XPathEvaluatorBase/createExpression(expression)": [
    "expression",
    "resolver"
  ],
  "XPathEvaluatorBase/createExpression(expression, resolver)": [
    "expression",
    "resolver"
  ],
  "XPathEvaluatorBase/createNSResolver(nodeResolver)": [
    "nodeResolver"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode, resolver)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode, resolver, type)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathEvaluatorBase/evaluate(expression, contextNode, resolver, type, result)": [
    "contextNode",
    "expression",
    "resolver",
    "result",
    "type"
  ],
  "XPathExpression": [
    "evaluate(contextNode)",
    "evaluate(contextNode, type)",
    "evaluate(contextNode, type, result)"
  ],
  "XPathExpression/evaluate(contextNode)": [
    "contextNode",
    "result",
    "type"
  ],
  "XPathExpression/evaluate(contextNode, type)": [
    "contextNode",
    "result",
    "type"
  ],
  "XPathExpression/evaluate(contextNode, type, result)": [
    "contextNode",
    "result",
    "type"
  ],
  "XPathNSResolver": [
    "lookupNamespaceURI(prefix)"
  ],
  "XPathNSResolver/lookupNamespaceURI(prefix)": [
    "prefix"
  ],
  "XPathResult": [
    "ANY_TYPE",
    "ANY_UNORDERED_NODE_TYPE",
    "BOOLEAN_TYPE",
    "FIRST_ORDERED_NODE_TYPE",
    "NUMBER_TYPE",
    "ORDERED_NODE_ITERATOR_TYPE",
    "ORDERED_NODE_SNAPSHOT_TYPE",
    "STRING_TYPE",
    "UNORDERED_NODE_ITERATOR_TYPE",
    "UNORDERED_NODE_SNAPSHOT_TYPE",
    "booleanValue",
    "invalidIteratorState",
    "iterateNext()",
    "numberValue",
    "resultType",
    "singleNodeValue",
    "snapshotItem(index)",
    "snapshotLength",
    "stringValue"
  ],
  "XPathResult/snapshotItem(index)": [
    "index"
  ],
  "XR device": [
    "set of granted features"
  ],
  "XRAnchor": [
    "anchorSpace",
    "delete()",
    "deleted",
    "native origin",
    "requestPersistentHandle()",
    "session"
  ],
  "XRBoundedReferenceSpace": [
    "boundsGeometry",
    "native bounds geometry"
  ],
  "XRCPUDepthInformation": [
    "data",
    "getDepthInMeters(x, y)"
  ],
  "XRCPUDepthInformation/getDepthInMeters(x, y)": [
    "x",
    "y"
  ],
  "XRCamera": [
    "camera image",
    "height",
    "view",
    "width"
  ],
  "XRCompositionLayer": [
    "blendTextureSourceAlpha",
    "context",
    "destroy()",
    "forceMonoPresentation",
    "isstatic",
    "layout",
    "media",
    "mipLevels",
    "needsRedraw",
    "opacity",
    "quality",
    "session"
  ],
  "XRCubeLayer": [
    "onredraw",
    "orientation",
    "redraw",
    "space"
  ],
  "XRCubeLayerInit": [
    "orientation"
  ],
  "XRCylinderLayer": [
    "aspectRatio",
    "centralAngle",
    "onredraw",
    "radius",
    "redraw",
    "space",
    "transform"
  ],
  "XRCylinderLayerInit": [
    "aspectRatio",
    "centralAngle",
    "radius",
    "textureType",
    "transform"
  ],
  "XRDOMOverlayInit": [
    "root"
  ],
  "XRDOMOverlayState": [
    "type"
  ],
  "XRDOMOverlayType": [
    "\"floating\"",
    "\"head-locked\"",
    "\"screen\"",
    "floating",
    "head-locked",
    "screen"
  ],
  "XRDepthDataFormat": [
    "\"float32\"",
    "\"luminance-alpha\"",
    "\"unsigned-short\""
  ],
  "XRDepthInformation": [
    "depth buffer",
    "height",
    "normDepthBufferFromNormView",
    "rawValueToMeters",
    "view",
    "width"
  ],
  "XRDepthStateInit": [
    "dataFormatPreference",
    "usagePreference"
  ],
  "XRDepthUsage": [
    "\"cpu-optimized\"",
    "\"gpu-optimized\""
  ],
  "XREnvironmentBlendMode": [
    "\"additive\"",
    "\"alpha-blend\"",
    "\"opaque\"",
    "additive",
    "alpha-blend",
    "opaque"
  ],
  "XREquirectLayer": [
    "centralHorizontalAngle",
    "lowerVerticalAngle",
    "onredraw",
    "radius",
    "redraw",
    "space",
    "transform",
    "upperVerticalAngle"
  ],
  "XREquirectLayerInit": [
    "centralHorizontalAngle",
    "lowerVerticalAngle",
    "radius",
    "textureType",
    "transform",
    "upperVerticalAngle"
  ],
  "XREye": [
    "\"left\"",
    "\"none\"",
    "\"right\""
  ],
  "XRFrame": [
    "active",
    "animationframe",
    "apply frame updates",
    "apply gamepad frame updates",
    "createAnchor(pose, space)",
    "detectedMeshes",
    "detectedPlanes",
    "fillJointRadii(jointSpaces, radii)",
    "fillPoses(spaces, baseSpace, transforms)",
    "getDepthInformation(view)",
    "getHitTestResults(hitTestSource)",
    "getHitTestResultsForTransientInput(hitTestSource)",
    "getJointPose(joint, baseSpace)",
    "getLightEstimate(lightProbe)",
    "getPose(space, baseSpace)",
    "getViewerPose(referenceSpace)",
    "map of hit test sources to hit test results",
    "map of hit test sources to hit test results for transient input",
    "metaData",
    "predictedDisplayTime",
    "session",
    "time",
    "trackedAnchors"
  ],
  "XRFrame/createAnchor(pose, space)": [
    "pose",
    "space"
  ],
  "XRFrame/fillJointRadii(jointSpaces, radii)": [
    "jointSpaces",
    "radii"
  ],
  "XRFrame/fillPoses(spaces, baseSpace, transforms)": [
    "baseSpace",
    "spaces",
    "transforms"
  ],
  "XRFrame/getDepthInformation(view)": [
    "view"
  ],
  "XRFrame/getHitTestResults(hitTestSource)": [
    "hitTestSource"
  ],
  "XRFrame/getHitTestResultsForTransientInput(hitTestSource)": [
    "hitTestSource"
  ],
  "XRFrame/getJointPose(joint, baseSpace)": [
    "baseSpace",
    "joint"
  ],
  "XRFrame/getLightEstimate(lightProbe)": [
    "lightProbe"
  ],
  "XRFrame/getPose(space, baseSpace)": [
    "baseSpace",
    "space"
  ],
  "XRFrame/getViewerPose(referenceSpace)": [
    "referenceSpace"
  ],
  "XRFrameRequestCallback": [
    "cancelled",
    "frame",
    "time"
  ],
  "XRHand": [
    "[[joints]]",
    "get(jointName)",
    "get(key)",
    "input source",
    "size"
  ],
  "XRHand/get(key)": [
    "key"
  ],
  "XRHandJoint": [
    "\"index-finger-metacarpal\"",
    "\"index-finger-phalanx-distal\"",
    "\"index-finger-phalanx-intermediate\"",
    "\"index-finger-phalanx-proximal\"",
    "\"index-finger-tip\"",
    "\"middle-finger-metacarpal\"",
    "\"middle-finger-phalanx-distal\"",
    "\"middle-finger-phalanx-intermediate\"",
    "\"middle-finger-phalanx-proximal\"",
    "\"middle-finger-tip\"",
    "\"pinky-finger-metacarpal\"",
    "\"pinky-finger-phalanx-distal\"",
    "\"pinky-finger-phalanx-intermediate\"",
    "\"pinky-finger-phalanx-proximal\"",
    "\"pinky-finger-tip\"",
    "\"ring-finger-metacarpal\"",
    "\"ring-finger-phalanx-distal\"",
    "\"ring-finger-phalanx-intermediate\"",
    "\"ring-finger-phalanx-proximal\"",
    "\"ring-finger-tip\"",
    "\"thumb-metacarpal\"",
    "\"thumb-phalanx-distal\"",
    "\"thumb-phalanx-proximal\"",
    "\"thumb-tip\"",
    "\"wrist\""
  ],
  "XRHandedness": [
    "\"left\"",
    "\"none\"",
    "\"right\""
  ],
  "XRHitTestOptionsInit": [
    "effective entitytypes",
    "effective offsetray",
    "entityTypes",
    "offsetRay",
    "space"
  ],
  "XRHitTestResult": [
    "createAnchor()",
    "frame",
    "getPose(baseSpace)",
    "native entity",
    "native origin"
  ],
  "XRHitTestResult/getPose(baseSpace)": [
    "baseSpace"
  ],
  "XRHitTestSource": [
    "active",
    "cancel()",
    "entity types",
    "native origin",
    "offset ray",
    "session"
  ],
  "XRHitTestTrackableType": [
    "\"mesh\"",
    "\"plane\"",
    "\"point\""
  ],
  "XRInputSource": [
    "gamepad",
    "gripSpace",
    "hand",
    "handedness",
    "input profile name",
    "profiles",
    "skipRendering",
    "targetRayMode",
    "targetRaySpace"
  ],
  "XRInputSourceArray": [
    "length"
  ],
  "XRInputSourceArray/__getter__(index)": [
    "index"
  ],
  "XRInputSourceEvent": [
    "XRInputSourceEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "frame",
    "inputSource"
  ],
  "XRInputSourceEvent/XRInputSourceEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourceEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourceEventInit": [
    "frame",
    "inputSource"
  ],
  "XRInputSourcesChangeEvent": [
    "XRInputSourcesChangeEvent(type, eventInitDict)",
    "added",
    "constructor(type, eventInitDict)",
    "removed",
    "session"
  ],
  "XRInputSourcesChangeEvent/XRInputSourcesChangeEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourcesChangeEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRInputSourcesChangeEventInit": [
    "added",
    "removed",
    "session"
  ],
  "XRInteractionMode": [
    "\"screen-space\"",
    "\"world-space\""
  ],
  "XRJointPose": [
    "radius"
  ],
  "XRJointSpace": [
    "hand",
    "joint",
    "jointName",
    "jointname"
  ],
  "XRLayerEvent": [
    "XRLayerEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "layer"
  ],
  "XRLayerEvent/XRLayerEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRLayerEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRLayerEventInit": [
    "layer"
  ],
  "XRLayerInit": [
    "clearOnAccess",
    "colorFormat",
    "depthFormat",
    "isStatic",
    "layout",
    "mipLevels",
    "space",
    "viewPixelHeight",
    "viewPixelWidth"
  ],
  "XRLayerLayout": [
    "\"default\"",
    "\"mono\"",
    "\"stereo\"",
    "\"stereo-left-right\"",
    "\"stereo-top-bottom\"",
    "default",
    "mono",
    "stereo",
    "stereo-left-right",
    "stereo-top-bottom"
  ],
  "XRLayerQuality": [
    "\"default\"",
    "\"graphics-optimized\"",
    "\"text-optimized\"",
    "default",
    "graphics-optimized",
    "text-optimized"
  ],
  "XRLightEstimate": [
    "primaryLightDirection",
    "primaryLightIntensity",
    "sphericalHarmonicsCoefficients"
  ],
  "XRLightProbe": [
    "onreflectionchange",
    "probeSpace",
    "reflection format",
    "reflectionchange",
    "session"
  ],
  "XRLightProbeInit": [
    "reflectionFormat"
  ],
  "XRMediaBinding": [
    "XRMediaBinding(session)",
    "constructor(session)",
    "createCylinderLayer(video)",
    "createCylinderLayer(video, init)",
    "createEquirectLayer(video)",
    "createEquirectLayer(video, init)",
    "createQuadLayer(video)",
    "createQuadLayer(video, init)",
    "session"
  ],
  "XRMediaBinding/XRMediaBinding(session)": [
    "session"
  ],
  "XRMediaBinding/constructor(session)": [
    "session"
  ],
  "XRMediaBinding/createCylinderLayer(video)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createCylinderLayer(video, init)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createEquirectLayer(video)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createEquirectLayer(video, init)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createQuadLayer(video)": [
    "init",
    "video"
  ],
  "XRMediaBinding/createQuadLayer(video, init)": [
    "init",
    "video"
  ],
  "XRMediaCylinderLayerInit": [
    "aspectRatio",
    "centralAngle",
    "radius",
    "transform"
  ],
  "XRMediaEquirectLayerInit": [
    "centralHorizontalAngle",
    "lowerVerticalAngle",
    "radius",
    "transform",
    "upperVerticalAngle"
  ],
  "XRMediaLayerInit": [
    "invertStereo",
    "layout",
    "space"
  ],
  "XRMediaQuadLayerInit": [
    "height",
    "transform",
    "width"
  ],
  "XRMesh": [
    "frame",
    "indices",
    "lastChangedTime",
    "meshSpace",
    "native entity",
    "semanticLabel",
    "vertices"
  ],
  "XRMeshBlock": [
    "indices",
    "normals",
    "vertices"
  ],
  "XRMeshQuality": [
    "\"high\"",
    "\"low\"",
    "\"medium\""
  ],
  "XRMetadata": [
    "nearMesh",
    "worldMesh"
  ],
  "XRNearMeshFeature": [
    "quality"
  ],
  "XRNearMeshFeature/quality": [
    "quality"
  ],
  "XRPermissionDescriptor": [
    "mode",
    "optionalFeatures",
    "requiredFeatures"
  ],
  "XRPermissionStatus": [
    "granted"
  ],
  "XRPlane": [
    "frame",
    "lastChangedTime",
    "native entity",
    "orientation",
    "planeSpace",
    "polygon",
    "semanticLabel"
  ],
  "XRPlaneOrientation": [
    "\"horizontal\"",
    "\"vertical\""
  ],
  "XRPose": [
    "angularVelocity",
    "computed offset",
    "emulatedPosition",
    "linearVelocity",
    "transform"
  ],
  "XRProjectionLayer": [
    "colortextures for secondary views",
    "deltaPose",
    "depthstenciltextures for secondary views",
    "fixedFoveation",
    "ignoreDepthValues",
    "textureArrayLength",
    "textureHeight",
    "textureWidth"
  ],
  "XRProjectionLayerInit": [
    "clearOnAccess",
    "colorFormat",
    "depthFormat",
    "scaleFactor",
    "textureType"
  ],
  "XRQuadLayer": [
    "height",
    "onredraw",
    "redraw",
    "space",
    "transform",
    "width"
  ],
  "XRQuadLayerInit": [
    "height",
    "textureType",
    "transform",
    "width"
  ],
  "XRRay": [
    "XRRay()",
    "XRRay(origin)",
    "XRRay(origin, direction)",
    "XRRay(transform)",
    "constructor()",
    "constructor(origin)",
    "constructor(origin, direction)",
    "constructor(transform)",
    "direction",
    "matrix",
    "obtain the matrix",
    "origin"
  ],
  "XRRay/XRRay()": [
    "direction",
    "origin"
  ],
  "XRRay/XRRay(origin)": [
    "direction",
    "origin"
  ],
  "XRRay/XRRay(origin, direction)": [
    "direction",
    "origin"
  ],
  "XRRay/XRRay(transform)": [
    "transform"
  ],
  "XRRay/constructor()": [
    "direction",
    "origin"
  ],
  "XRRay/constructor(origin)": [
    "direction",
    "origin"
  ],
  "XRRay/constructor(origin, direction)": [
    "direction",
    "origin"
  ],
  "XRRay/constructor(transform)": [
    "transform"
  ],
  "XRRayDirectionInit": [
    "w",
    "x",
    "y",
    "z"
  ],
  "XRReferenceSpace": [
    "getOffsetReferenceSpace(originOffset)",
    "onreset",
    "reset",
    "type"
  ],
  "XRReferenceSpace/getOffsetReferenceSpace(originOffset)": [
    "originOffset"
  ],
  "XRReferenceSpaceEvent": [
    "XRReferenceSpaceEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "referenceSpace",
    "transform"
  ],
  "XRReferenceSpaceEvent/XRReferenceSpaceEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRReferenceSpaceEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRReferenceSpaceEventInit": [
    "referenceSpace",
    "transform"
  ],
  "XRReferenceSpaceType": [
    "\"bounded-floor\"",
    "\"local\"",
    "\"local-floor\"",
    "\"unbounded\"",
    "\"viewer\"",
    "bounded-floor",
    "local",
    "local-floor",
    "unbounded",
    "viewer"
  ],
  "XRReflectionFormat": [
    "\"rgba16f\"",
    "\"srgba8\""
  ],
  "XRRenderState": [
    "baseLayer",
    "composition enabled",
    "depthFar",
    "depthNear",
    "inlineVerticalFieldOfView",
    "layers",
    "output canvas"
  ],
  "XRRenderStateInit": [
    "baseLayer",
    "depthFar",
    "depthNear",
    "inlineVerticalFieldOfView",
    "layers"
  ],
  "XRRigidTransform": [
    "XRRigidTransform()",
    "XRRigidTransform(position)",
    "XRRigidTransform(position, orientation)",
    "constructor()",
    "constructor(position)",
    "constructor(position, orientation)",
    "internal matrix",
    "inverse",
    "matrix",
    "obtain the matrix",
    "orientation",
    "position"
  ],
  "XRRigidTransform/XRRigidTransform()": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/XRRigidTransform(position)": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/XRRigidTransform(position, orientation)": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/constructor()": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/constructor(position)": [
    "orientation",
    "position"
  ],
  "XRRigidTransform/constructor(position, orientation)": [
    "orientation",
    "position"
  ],
  "XRSession": [
    "add input source",
    "animation frame",
    "cancelAnimationFrame(handle)",
    "change input source",
    "deletePersistentAnchor(uuid)",
    "depthDataFormat",
    "depthUsage",
    "domOverlayState",
    "enabledFeatures",
    "end",
    "end()",
    "environmentBlendMode",
    "frameRate",
    "frameratechange",
    "initiateRoomCapture()",
    "inputSources",
    "inputsourceschange",
    "interactionMode",
    "internal nominal framerate",
    "internal target framerate",
    "isSystemKeyboardSupported",
    "list of frame updates",
    "list of views",
    "map of new anchors",
    "map of persistent anchors",
    "mode",
    "onend",
    "onframeratechange",
    "oninputsourceschange",
    "onselect",
    "onselectend",
    "onselectstart",
    "onsqueeze",
    "onsqueezeend",
    "onsqueezestart",
    "onvisibilitychange",
    "persistentAnchors",
    "preferredReflectionFormat",
    "promise resolved",
    "remove input source",
    "renderState",
    "requestAnimationFrame(callback)",
    "requestHitTestSource(options)",
    "requestHitTestSourceForTransientInput(options)",
    "requestLightProbe()",
    "requestLightProbe(options)",
    "requestReferenceSpace(type)",
    "restorePersistentAnchor(uuid)",
    "select",
    "selectend",
    "selectstart",
    "set of active hit test sources",
    "set of active hit test sources for transient input",
    "set of granted features",
    "set of tracked anchors",
    "set of tracked meshes",
    "set of tracked planes",
    "squeeze",
    "squeezeend",
    "squeezestart",
    "supportedFrameRates",
    "updateRenderState()",
    "updateRenderState(newState)",
    "updateRenderState(state)",
    "updateTargetFrameRate(rate)",
    "viewer reference space",
    "visibility state",
    "visibilityState",
    "visibilitychange",
    "xr device"
  ],
  "XRSession/cancelAnimationFrame(handle)": [
    "handle"
  ],
  "XRSession/deletePersistentAnchor(uuid)": [
    "uuid"
  ],
  "XRSession/requestAnimationFrame(callback)": [
    "callback"
  ],
  "XRSession/requestHitTestSource(options)": [
    "options"
  ],
  "XRSession/requestHitTestSourceForTransientInput(options)": [
    "options"
  ],
  "XRSession/requestLightProbe()": [
    "options"
  ],
  "XRSession/requestLightProbe(options)": [
    "options"
  ],
  "XRSession/requestReferenceSpace(type)": [
    "type"
  ],
  "XRSession/restorePersistentAnchor(uuid)": [
    "uuid"
  ],
  "XRSession/updateRenderState()": [
    "state"
  ],
  "XRSession/updateRenderState(state)": [
    "state"
  ],
  "XRSession/updateTargetFrameRate(rate)": [
    "rate"
  ],
  "XRSessionEvent": [
    "XRSessionEvent(type, eventInitDict)",
    "constructor(type, eventInitDict)",
    "session"
  ],
  "XRSessionEvent/XRSessionEvent(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRSessionEvent/constructor(type, eventInitDict)": [
    "eventInitDict",
    "type"
  ],
  "XRSessionEventInit": [
    "session"
  ],
  "XRSessionInit": [
    "depthSensing",
    "domOverlay",
    "optionalFeatures",
    "requiredFeatures"
  ],
  "XRSessionMode": [
    "\"immersive-ar\"",
    "\"immersive-vr\"",
    "\"inline\"",
    "immersive-ar",
    "immersive-vr",
    "inline"
  ],
  "XRSessionSupportedPermissionDescriptor": [
    "mode"
  ],
  "XRSpace": [
    "coordinate system",
    "effective origin",
    "native origin",
    "origin offset",
    "session"
  ],
  "XRSubImage": [
    "viewport"
  ],
  "XRSystem": [
    "devicechange",
    "isSessionSupported(mode)",
    "ondevicechange",
    "requestSession(mode)",
    "requestSession(mode, options)"
  ],
  "XRSystem/isSessionSupported(mode)": [
    "mode"
  ],
  "XRSystem/requestSession(mode)": [
    "mode",
    "options"
  ],
  "XRSystem/requestSession(mode, options)": [
    "mode",
    "options"
  ],
  "XRTargetRayMode": [
    "\"gaze\"",
    "\"screen\"",
    "\"tracked-pointer\"",
    "\"transient-pointer\"",
    "gaze",
    "screen",
    "tracked-pointer",
    "transient-pointer"
  ],
  "XRTextureType": [
    "\"texture\"",
    "\"texture-array\"",
    "texture",
    "texture-array"
  ],
  "XRTransientInputHitTestOptionsInit": [
    "effective entitytypes",
    "effective offsetray",
    "entityTypes",
    "offsetRay",
    "profile"
  ],
  "XRTransientInputHitTestResult": [
    "frame",
    "inputSource",
    "results"
  ],
  "XRTransientInputHitTestSource": [
    "active",
    "cancel()",
    "entity types",
    "offset ray",
    "profile",
    "session"
  ],
  "XRView": [
    "camera",
    "eye",
    "frame",
    "internal projection matrix",
    "isFirstPersonObserver",
    "obtain a scaled viewport",
    "obtain the projection matrix",
    "projectionMatrix",
    "recommendedViewportScale",
    "requestViewportScale(scale)",
    "session",
    "transform",
    "underlying view"
  ],
  "XRView/requestViewportScale(scale)": [
    "scale"
  ],
  "XRViewerPose": [
    "views"
  ],
  "XRViewport": [
    "height",
    "width",
    "x",
    "y"
  ],
  "XRVisibilityState": [
    "\"hidden\"",
    "\"visible\"",
    "\"visible-blurred\"",
    "hidden",
    "visible",
    "visible-blurred"
  ],
  "XRWebGLBinding": [
    "XRWebGLBinding(session, context)",
    "constructor(session, context)",
    "context",
    "createCubeLayer()",
    "createCubeLayer(init)",
    "createCylinderLayer()",
    "createCylinderLayer(init)",
    "createEquirectLayer()",
    "createEquirectLayer(init)",
    "createProjectionLayer()",
    "createProjectionLayer(init)",
    "createQuadLayer()",
    "createQuadLayer(init)",
    "getCameraImage(camera)",
    "getDepthInformation(view)",
    "getReflectionCubeMap(lightProbe)",
    "getSubImage(layer, frame)",
    "getSubImage(layer, frame, eye)",
    "getViewSubImage(layer, view)",
    "nativeProjectionScaleFactor",
    "session",
    "usesDepthValues"
  ],
  "XRWebGLBinding/XRWebGLBinding(session, context)": [
    "context",
    "session"
  ],
  "XRWebGLBinding/constructor(session, context)": [
    "context",
    "session"
  ],
  "XRWebGLBinding/createCubeLayer()": [
    "init"
  ],
  "XRWebGLBinding/createCubeLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createCylinderLayer()": [
    "init"
  ],
  "XRWebGLBinding/createCylinderLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createEquirectLayer()": [
    "init"
  ],
  "XRWebGLBinding/createEquirectLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createProjectionLayer()": [
    "init"
  ],
  "XRWebGLBinding/createProjectionLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/createQuadLayer()": [
    "init"
  ],
  "XRWebGLBinding/createQuadLayer(init)": [
    "init"
  ],
  "XRWebGLBinding/getCameraImage(camera)": [
    "camera"
  ],
  "XRWebGLBinding/getDepthInformation(view)": [
    "view"
  ],
  "XRWebGLBinding/getReflectionCubeMap(lightProbe)": [
    "lightProbe"
  ],
  "XRWebGLBinding/getSubImage(layer, frame)": [
    "eye",
    "frame",
    "layer"
  ],
  "XRWebGLBinding/getSubImage(layer, frame, eye)": [
    "eye",
    "frame",
    "layer"
  ],
  "XRWebGLBinding/getViewSubImage(layer, view)": [
    "layer",
    "view"
  ],
  "XRWebGLDepthInformation": [
    "getDepthInformation(view)",
    "imageIndex",
    "texture",
    "textureType"
  ],
  "XRWebGLLayer": [
    "XRWebGLLayer(session, context)",
    "XRWebGLLayer(session, context, layerInit)",
    "antialias",
    "composition enabled",
    "constructor(session, context)",
    "constructor(session, context, layerInit)",
    "context",
    "fixedFoveation",
    "framebuffer",
    "framebufferHeight",
    "framebufferWidth",
    "getNativeFramebufferScaleFactor(session)",
    "getViewport(view)",
    "ignoreDepthValues",
    "session",
    "target framebuffer"
  ],
  "XRWebGLLayer/XRWebGLLayer(session, context)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/XRWebGLLayer(session, context, layerInit)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/constructor(session, context)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/constructor(session, context, layerInit)": [
    "context",
    "layerInit",
    "session"
  ],
  "XRWebGLLayer/getNativeFramebufferScaleFactor(session)": [
    "session"
  ],
  "XRWebGLLayer/getViewport(view)": [
    "view"
  ],
  "XRWebGLLayerInit": [
    "alpha",
    "antialias",
    "depth",
    "framebufferScaleFactor",
    "ignoreDepthValues",
    "stencil"
  ],
  "XRWebGLSubImage": [
    "colorTexture",
    "colorTextureHeight",
    "colorTextureWidth",
    "depthStencilTexture",
    "depthStencilTextureHeight",
    "depthStencilTextureWidth",
    "imageIndex",
    "motionVectorTexture",
    "motionVectorTextureHeight",
    "motionVectorTextureWidth"
  ],
  "XRWorldMeshFeature": [
    "breadth",
    "height",
    "quality",
    "width"
  ],
  "XRWorldMeshFeature/breadth": [
    "breadth"
  ],
  "XRWorldMeshFeature/height": [
    "height"
  ],
  "XRWorldMeshFeature/quality": [
    "quality"
  ],
  "XRWorldMeshFeature/width": [
    "width"
  ],
  "XSLTProcessor": [
    "XSLTProcessor()",
    "clearParameters()",
    "constructor()",
    "getParameter(namespaceURI, localName)",
    "importStylesheet(style)",
    "removeParameter(namespaceURI, localName)",
    "reset()",
    "setParameter(namespaceURI, localName, value)",
    "transformToDocument(source)",
    "transformToFragment(source, output)"
  ],
  "XSLTProcessor/getParameter(namespaceURI, localName)": [
    "localName",
    "namespaceURI"
  ],
  "XSLTProcessor/importStylesheet(style)": [
    "style"
  ],
  "XSLTProcessor/removeParameter(namespaceURI, localName)": [
    "localName",
    "namespaceURI"
  ],
  "XSLTProcessor/setParameter(namespaceURI, localName, value)": [
    "localName",
    "namespaceURI",
    "value"
  ],
  "XSLTProcessor/transformToDocument(source)": [
    "source"
  ],
  "XSLTProcessor/transformToFragment(source, output)": [
    "output",
    "source"
  ],
  "a": [
    "attributionsrc",
    "charset",
    "coords",
    "download",
    "href",
    "hreflang",
    "methods",
    "name",
    "ping",
    "referrerpolicy",
    "rel",
    "requiredextensions",
    "rev",
    "shape",
    "systemlanguage",
    "target",
    "type",
    "urn",
    "xlink:href",
    "xlink:title"
  ],
  "a/rel": [
    "alternate",
    "author",
    "bookmark",
    "external",
    "help",
    "license",
    "next",
    "nofollow",
    "noopener",
    "noreferrer",
    "opener",
    "prev",
    "privacy-policy",
    "search",
    "tag",
    "terms-of-service"
  ],
  "abbr": [
    "title"
  ],
  "accent-color": [
    "auto"
  ],
  "accept-ch-cache": [
    "client hints set",
    "origin"
  ],
  "access": [
    "read",
    "read_write",
    "write"
  ],
  "action": [
    "icon resource",
    "icon url",
    "name",
    "title"
  ],
  "active buffer mapping": [
    "data",
    "mode",
    "range",
    "views"
  ],
  "ad descriptor": [
    "size",
    "url"
  ],
  "ad keyword replacement": [
    "match",
    "replacement"
  ],
  "ad size": [
    "height",
    "height units",
    "width",
    "width units"
  ],
  "adapter": [
    "[[fallback]]",
    "[[features]]",
    "[[limits]]",
    "[[state]]"
  ],
  "adapter/[[state]]": [
    "\"consumed\"",
    "\"expired\"",
    "\"valid\""
  ],
  "address spaces": [
    "function",
    "handle",
    "private",
    "storage",
    "uniform",
    "workgroup"
  ],
  "agent": [
    "event loop"
  ],
  "aggregatable attribution report": [
    "aggregation coordinator",
    "attribution debug info",
    "contributions",
    "effective attribution destination",
    "filtering id max bytes",
    "is null report",
    "report id",
    "report time",
    "reporting origin",
    "required aggregatable budget",
    "shared info",
    "source identifier",
    "source registration time configuration",
    "source time",
    "trigger context id"
  ],
  "aggregatable contribution": [
    "filtering id",
    "key",
    "value"
  ],
  "aggregatable debug rate-limit record": [
    "consumed budget",
    "context site",
    "reporting site",
    "time"
  ],
  "aggregatable debug report": [
    "aggregation coordinator",
    "contributions",
    "effective attribution destination",
    "report id",
    "report time",
    "reporting origin",
    "required aggregatable budget"
  ],
  "aggregatable debug reporting config": [
    "aggregation coordinator",
    "debug data",
    "key piece"
  ],
  "aggregatable dedup key": [
    "dedup key",
    "filters",
    "negated filters"
  ],
  "aggregatable key value": [
    "filtering id",
    "value"
  ],
  "aggregatable report": [
    "aggregation coordinator",
    "api",
    "context id",
    "contributions",
    "debug details",
    "debug mode",
    "effective attribution destination",
    "filtering id max bytes",
    "original report time",
    "plaintext payload",
    "queued",
    "report id",
    "report time",
    "reporting origin",
    "required aggregatable budget",
    "shared info"
  ],
  "aggregatable source registration time configuration": [
    "exclude",
    "include"
  ],
  "aggregatable trigger data": [
    "filters",
    "key piece",
    "negated filters",
    "source keys"
  ],
  "aggregatable values configuration": [
    "filters",
    "negated filters",
    "values"
  ],
  "aggregatable-debug-reporting JSON key": [
    "aggregation_coordinator_origin",
    "debug_data",
    "key_piece",
    "types",
    "value"
  ],
  "align-content": [
    "baseline",
    "center",
    "end",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "normal",
    "space-around",
    "space-between",
    "space-evenly",
    "start",
    "stretch"
  ],
  "align-items": [
    "anchor-center",
    "auto",
    "baseline",
    "center",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "participates in baseline alignment",
    "stretch"
  ],
  "align-self": [
    "anchor-center",
    "auto",
    "baseline",
    "center",
    "end",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "normal",
    "participates in baseline alignment",
    "self-end",
    "self-start",
    "start",
    "stretch"
  ],
  "alignment-baseline": [
    "alphabetic",
    "baseline",
    "central",
    "ideographic",
    "mathematical",
    "middle",
    "text-after-edge",
    "text-before-edge",
    "text-bottom",
    "text-top"
  ],
  "all": [
    "inherit",
    "initial",
    "revert",
    "revert-layer",
    "unset"
  ],
  "allowed signed exchange link info": [
    "header integrity",
    "target",
    "variant key",
    "variants"
  ],
  "alternate signed exchange link info": [
    "context",
    "target",
    "variant key",
    "variants"
  ],
  "alternate signed exchange preload info": [
    "link",
    "prefetched alternate exchange",
    "target"
  ],
  "anchor()": [
    "bottom",
    "center",
    "end",
    "implicit",
    "inside",
    "left",
    "outside",
    "right",
    "self-end",
    "self-start",
    "start",
    "top"
  ],
  "anchor-name": [
    "<dashed-ident>#",
    "none"
  ],
  "anchor-scope": [
    "all",
    "none"
  ],
  "anchor-size()": [
    "block",
    "height",
    "inline",
    "self-block",
    "self-inline",
    "width"
  ],
  "animate": [
    "accumulate",
    "additive",
    "attributename",
    "begin",
    "dur",
    "end",
    "fill",
    "from",
    "href",
    "keypoints",
    "keysplines",
    "keytimes",
    "max",
    "min",
    "onbegin",
    "onend",
    "onrepeat",
    "origin",
    "repeatcount",
    "repeatdur",
    "requiredextensions",
    "restart",
    "rotate",
    "systemlanguage",
    "values"
  ],
  "animateMotion": [
    "calcmode",
    "onbegin",
    "onend",
    "onrepeat",
    "path",
    "requiredextensions",
    "systemlanguage"
  ],
  "animateTransform": [
    "onbegin",
    "onend",
    "onrepeat",
    "requiredextensions",
    "systemlanguage",
    "type"
  ],
  "animation": [
    "associated effect",
    "auto-aligned start time",
    "calculating an auto-aligned start time",
    "current time",
    "document for timing",
    "hold time",
    "play state",
    "progress",
    "relevant",
    "reset an animation's pending tasks",
    "set the associated effect of an animation",
    "set the current time",
    "set the timeline of an animation",
    "silently set the current time",
    "start time"
  ],
  "animation effect": [
    "active phase",
    "after phase",
    "associated animation",
    "before phase",
    "effect easing function",
    "end time",
    "idle phase",
    "playback rate"
  ],
  "animation-direction": [
    "alternate",
    "alternate-reverse",
    "normal",
    "reverse"
  ],
  "animation-duration": [
    "auto"
  ],
  "animation-fill-mode": [
    "backwards",
    "both",
    "forwards",
    "none"
  ],
  "animation-iteration-count": [
    "infinite"
  ],
  "animation-name": [
    "<keyframes-name>",
    "none"
  ],
  "animation-play-state": [
    "paused",
    "running"
  ],
  "animation-range-end": [
    "<timeline-range-name> <length-percentage>?",
    "normal"
  ],
  "animation-range-start": [
    "<timeline-range-name> <length-percentage>?",
    "normal"
  ],
  "animation-timeline": [
    "auto",
    "none"
  ],
  "animation-timeline-range": [
    "contain",
    "cover",
    "entry",
    "entry-crossing",
    "exit",
    "exit-crossing"
  ],
  "animator definition": [
    "stateful flag"
  ],
  "annotated types": [
    "inner type"
  ],
  "annotation": [
    "encoding"
  ],
  "annotation-xml": [
    "encoding"
  ],
  "appearance": [
    "<compat-auto>",
    "<compat-special>",
    "auto",
    "button",
    "checkbox",
    "listbox",
    "menulist",
    "menulist-button",
    "meter",
    "none",
    "progress-bar",
    "push-button",
    "radio",
    "searchfield",
    "slider-horizontal",
    "square-button",
    "textarea",
    "textfield"
  ],
  "application manifest": [
    "processing extension-point"
  ],
  "arc": [
    "ccw",
    "cw",
    "large",
    "small"
  ],
  "area": [
    "alt",
    "coords",
    "download",
    "href",
    "hreflang",
    "nohref",
    "ping",
    "referrerpolicy",
    "rel",
    "shape",
    "target",
    "type"
  ],
  "area/rel": [
    "alternate",
    "author",
    "bookmark",
    "external",
    "help",
    "license",
    "next",
    "nofollow",
    "noopener",
    "noreferrer",
    "opener",
    "prev",
    "privacy-policy",
    "search",
    "tag",
    "terms-of-service"
  ],
  "area/shape": [
    "circle state",
    "default state",
    "polygon state",
    "rectangle state"
  ],
  "ascent-override!!descriptor": [
    "normal"
  ],
  "aspect": [
    "color",
    "depth",
    "stencil"
  ],
  "aspect-ratio": [
    "auto",
    "auto && <ratio>"
  ],
  "assertionCreationData": [
    "assertionattestation",
    "authenticatordataresult",
    "clientdatajsonresult",
    "clientextensionresults",
    "credentialidresult",
    "signatureresult",
    "userhandleresult"
  ],
  "attr()": [
    "<dimension-unit>",
    "angle",
    "color",
    "flex",
    "frequency",
    "ident",
    "length",
    "number",
    "percentage",
    "string",
    "substitution value",
    "time"
  ],
  "attribute": [
    "align",
    "binding",
    "blend_src",
    "builtin",
    "compute",
    "const",
    "diagnostic",
    "fragment",
    "group",
    "id",
    "interpolate",
    "invariant",
    "location",
    "must_use",
    "size",
    "vertex",
    "workgroup_size"
  ],
  "attribution debug info": [
    "source debug key",
    "trigger debug key"
  ],
  "attribution rate-limit record": [
    "attribution destination",
    "deactivated for unexpired destination limit",
    "destination limit priority",
    "entity id",
    "expiry time",
    "reporting origin",
    "scope",
    "source site",
    "time"
  ],
  "attribution report": [
    "report id",
    "report time",
    "reporting origin"
  ],
  "attribution scopes": [
    "limit",
    "max event states",
    "values"
  ],
  "attribution source": [
    "aggregatable debug reporting config",
    "aggregatable dedup keys",
    "aggregatable report window",
    "aggregation keys",
    "attribution destinations",
    "attribution scopes",
    "debug cookie set",
    "debug key",
    "debug reporting enabled",
    "dedup keys",
    "destination limit priority",
    "event id",
    "event-level attributable",
    "event-level epsilon",
    "expiry",
    "expiry time",
    "fenced",
    "filter data",
    "max number of event-level reports",
    "number of aggregatable attribution reports",
    "number of aggregatable debug reports",
    "number of event-level reports",
    "priority",
    "randomized response",
    "randomized trigger rate",
    "remaining aggregatable attribution budget",
    "remaining aggregatable debug budget",
    "reporting origin",
    "source identifier",
    "source origin",
    "source site",
    "source time",
    "source type",
    "trigger specs",
    "trigger-data matching mode"
  ],
  "attribution trigger": [
    "aggregatable debug reporting config",
    "aggregatable dedup keys",
    "aggregatable filtering id max bytes",
    "aggregatable source registration time configuration",
    "aggregatable trigger data",
    "aggregatable values configurations",
    "aggregation coordinator",
    "attribution destination",
    "attribution scopes",
    "debug key",
    "debug reporting enabled",
    "event-level trigger configurations",
    "fenced",
    "filters",
    "negated filters",
    "reporting origin",
    "trigger context id",
    "trigger time"
  ],
  "auction config": [
    "all buyer experiment group id",
    "all buyers cumulative timeout",
    "all buyers currency",
    "all buyers group limit",
    "all buyers multi-bid limit",
    "all buyers priority signals",
    "all buyers timeout",
    "all slots requested sizes",
    "auction nonce",
    "auction report buyer debug details",
    "auction report buyer keys",
    "auction report buyers",
    "auction signals",
    "batching scope map",
    "component auctions",
    "config idl",
    "decision logic url",
    "deprecated render url replacements",
    "direct from seller signals header ad slot",
    "expects additional bids",
    "interest group buyers",
    "max trusted scoring signals url length",
    "pending promise count",
    "per buyer cumulative timeouts",
    "per buyer currencies",
    "per buyer experiment group ids",
    "per buyer group limits",
    "per buyer multi-bid limits",
    "per buyer priority signals",
    "per buyer real time reporting config",
    "per buyer signals",
    "per buyer timeouts",
    "per-bid or seller on event contribution cache",
    "permissions policy state",
    "requested size",
    "required seller capabilities",
    "resolve to config",
    "seller",
    "seller currency",
    "seller experiment group id",
    "seller private aggregation coordinator",
    "seller real time reporting config",
    "seller signals",
    "seller timeout",
    "server response",
    "server response id",
    "trusted scoring signals url"
  ],
  "auction report info": [
    "debug loss report urls",
    "debug win report urls",
    "real time reporting contributions map"
  ],
  "audio": [
    "autoplay",
    "controls",
    "crossorigin",
    "loop",
    "muted",
    "preload",
    "requiredextensions",
    "src",
    "systemlanguage"
  ],
  "audio/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "audio/preload": [
    "auto",
    "metadata",
    "none"
  ],
  "augmented certificate": [
    "certificate",
    "ocsp response",
    "sct"
  ],
  "authConfig": [
    "forcechangepin",
    "minpinlengthrpids",
    "newminpinlength",
    "vendorcommandid"
  ],
  "authData": [
    "attestedcredentialdata",
    "extensions",
    "flags",
    "rpidhash",
    "signcount"
  ],
  "authData/attestedCredentialData": [
    "aaguid",
    "credentialid",
    "credentialidlength",
    "credentialpublickey"
  ],
  "authData/flags": [
    "at",
    "be",
    "bs",
    "ed",
    "up",
    "uv"
  ],
  "authenticator": [
    "credentials map"
  ],
  "authenticator data": [
    "perform the following steps to generate an authenticator data structure"
  ],
  "authenticatorClientPIN": [
    "pinuvauthprotocol",
    "rpid"
  ],
  "automatic beacon data": [
    "crossoriginexposed",
    "destination",
    "eventdata",
    "once"
  ],
  "automatic beacon event": [
    "attributionreportingcontextorigin",
    "attributionreportingenabled",
    "data",
    "type"
  ],
  "automatic beacon event type": [
    "reserved.top_navigation",
    "reserved.top_navigation_commit",
    "reserved.top_navigation_start"
  ],
  "background fetch": [
    "abort all flag",
    "display",
    "download total",
    "failure reason",
    "icons",
    "id",
    "paused flag",
    "records",
    "records available flag",
    "result",
    "service worker registration",
    "stored body bytes total",
    "title",
    "update handling queue",
    "upload total",
    "uploaded"
  ],
  "background fetch record": [
    "request",
    "response data"
  ],
  "background fetch response": [
    "bytes",
    "exposed",
    "response",
    "result"
  ],
  "background text style values": [
    "dark",
    "light"
  ],
  "background-attachment": [
    "fixed",
    "local",
    "scroll"
  ],
  "background-clip": [
    "border-area",
    "border-box",
    "content-box",
    "padding-box",
    "text"
  ],
  "background-image": [
    "<uri>",
    "none"
  ],
  "background-origin": [
    "border-box",
    "content-box",
    "padding-box"
  ],
  "background-position": [
    "bottom",
    "center",
    "left",
    "right",
    "top"
  ],
  "background-repeat": [
    "no-repeat",
    "repeat",
    "repeat-x",
    "repeat-y",
    "round",
    "space"
  ],
  "background-repeat-block": [
    "no-repeat",
    "repeat",
    "round",
    "space"
  ],
  "background-repeat-inline": [
    "no-repeat",
    "repeat",
    "round",
    "space"
  ],
  "background-repeat-x": [
    "no-repeat",
    "repeat",
    "round",
    "space"
  ],
  "background-repeat-y": [
    "no-repeat",
    "repeat",
    "round",
    "space"
  ],
  "background-size": [
    "auto",
    "contain",
    "cover"
  ],
  "badge": [
    "clear",
    "cleared",
    "clearing",
    "set",
    "setting",
    "values"
  ],
  "base": [
    "href",
    "target"
  ],
  "base-palette": [
    "<integer>",
    "dark",
    "light"
  ],
  "baseline-shift": [
    "baseline",
    "bottom",
    "center",
    "sub",
    "super",
    "top"
  ],
  "baseline-source": [
    "auto",
    "first",
    "last"
  ],
  "basic URL parser": [
    "authority state",
    "file host state",
    "file slash state",
    "file state",
    "fragment state",
    "host state",
    "hostname state",
    "no scheme state",
    "opaque path state",
    "path or authority state",
    "path start state",
    "path state",
    "port state",
    "query state",
    "relative slash state",
    "relative state",
    "scheme start state",
    "scheme state",
    "special authority ignore slashes state",
    "special authority slashes state",
    "special relative or authority state",
    "state override",
    "url"
  ],
  "bid debug reporting info": [
    "bidder debug loss report url",
    "bidder debug win report url",
    "component seller",
    "ids",
    "interest group owner",
    "seller debug loss report url",
    "seller debug win report url",
    "top level seller debug loss report url",
    "top level seller debug win report url"
  ],
  "bid with currency": [
    "currency",
    "value"
  ],
  "bidding signals per interest group data": [
    "updateifolderthanms"
  ],
  "binary": [
    "<minus/>",
    "<root/>"
  ],
  "bit debit": [
    "bits",
    "expired",
    "timestamp"
  ],
  "blob URL entry": [
    "environment",
    "object"
  ],
  "blob url": [
    "lifetime",
    "lifetime stipulation"
  ],
  "blob url store": [
    "add an entry",
    "add an entry to the blob url store",
    "add the entry",
    "add the entry to the blob url store",
    "adding an entry to the blob url store",
    "remove an entry",
    "remove an entry from the blob url store",
    "remove the entry",
    "remove the entry from the blob url store"
  ],
  "block-ellipsis": [
    "auto",
    "none"
  ],
  "block-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "block-step-align": [
    "auto",
    "center",
    "down",
    "end",
    "nearest",
    "start",
    "up"
  ],
  "block-step-insert": [
    "margin",
    "padding"
  ],
  "blockquote": [
    "cite"
  ],
  "body": [
    "alink",
    "bgcolor",
    "bottommargin",
    "clone",
    "fully read",
    "incrementally read",
    "leftmargin",
    "length",
    "link",
    "marginheight",
    "marginwidth",
    "rightmargin",
    "source",
    "stream",
    "text",
    "topmargin",
    "vlink"
  ],
  "body with type": [
    "body",
    "type"
  ],
  "bookmark-label": [
    "<content-list>"
  ],
  "bookmark-level": [
    "none"
  ],
  "bookmark-state": [
    "closed",
    "open"
  ],
  "border": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "medium",
    "none",
    "outset",
    "ridge",
    "solid",
    "thick",
    "thin"
  ],
  "border-bottom-color": [
    "<color>",
    "transparent"
  ],
  "border-bottom-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-bottom-width": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-collapse": [
    "collapse",
    "separate"
  ],
  "border-color": [
    "<color>",
    "logical",
    "transparent"
  ],
  "border-image-repeat": [
    "repeat",
    "round",
    "space",
    "stretch"
  ],
  "border-image-slice": [
    "fill"
  ],
  "border-image-width": [
    "auto"
  ],
  "border-left-color": [
    "<color>",
    "transparent"
  ],
  "border-left-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-left-width": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-limit": [
    "all",
    "bottom",
    "corners",
    "left",
    "right",
    "sides",
    "top"
  ],
  "border-right-color": [
    "<color>",
    "transparent"
  ],
  "border-right-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-right-width": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "logical",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-top-color": [
    "<color>",
    "transparent"
  ],
  "border-top-style": [
    "dashed",
    "dotted",
    "double",
    "groove",
    "hidden",
    "inset",
    "none",
    "outset",
    "ridge",
    "solid"
  ],
  "border-top-width": [
    "<length>",
    "medium",
    "thick",
    "thin"
  ],
  "border-width": [
    "<length>",
    "logical",
    "medium",
    "thick",
    "thin"
  ],
  "bottom": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "bounce tracking record": [
    "bounce set",
    "final host",
    "initial host",
    "storage access set"
  ],
  "boundary point": [
    "after",
    "before",
    "equal",
    "node",
    "offset",
    "position"
  ],
  "box": [
    "[[layoutChildMap]]",
    "box edge",
    "edge"
  ],
  "box-decoration-break": [
    "clone",
    "slice"
  ],
  "box-shadow": [
    "1st <length>",
    "2nd <length>",
    "3rd <length [0,∞]>",
    "4th <length>",
    "blur radius",
    "horizontal offset",
    "inner box-shadow",
    "inset",
    "none",
    "outer box-shadow",
    "spread distance",
    "vertical offset"
  ],
  "box-shadow-offset": [
    "1st <length>",
    "2nd <length>",
    "horizontal offset",
    "none",
    "vertical offset"
  ],
  "box-shadow-position": [
    "inner box-shadow",
    "inset",
    "outer box-shadow",
    "outset"
  ],
  "box-sizing": [
    "border-box",
    "content-box"
  ],
  "box-snap": [
    "baseline",
    "block-end",
    "block-start",
    "center",
    "first-baseline",
    "last-baseline",
    "none"
  ],
  "br": [
    "clear"
  ],
  "break-after": [
    "all",
    "always",
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region",
    "column",
    "left",
    "page",
    "recto",
    "region",
    "right",
    "verso"
  ],
  "break-before": [
    "all",
    "always",
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region",
    "column",
    "left",
    "page",
    "recto",
    "region",
    "right",
    "verso"
  ],
  "break-inside": [
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region"
  ],
  "browsing context": [
    "fenced frame config instance",
    "required csp",
    "top-level traversable"
  ],
  "browsing topics types": [
    "configuration version",
    "epoch",
    "maximum version string length",
    "model",
    "model version",
    "taxonomy",
    "taxonomy version",
    "topic ids",
    "topic with caller domains",
    "topics caller context",
    "topics history entry",
    "user topics state",
    "version"
  ],
  "browsing-topic": [
    "code unit less than"
  ],
  "built-in values": [
    "clip_distances",
    "frag_depth",
    "front_facing",
    "global_invocation_id",
    "instance_index",
    "local_invocation_id",
    "local_invocation_index",
    "num_workgroups",
    "position",
    "sample_index",
    "sample_mask",
    "vertex_index",
    "workgroup_id"
  ],
  "button": [
    "action",
    "autocomplete",
    "disabled",
    "enctype",
    "form",
    "form owner",
    "formaction",
    "formenctype",
    "formmethod",
    "formnovalidate",
    "formtarget",
    "method",
    "name",
    "novalidate",
    "target",
    "type",
    "value"
  ],
  "button/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "button/enctype": [
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
  ],
  "button/formmethod": [
    "dialog",
    "get",
    "post"
  ],
  "button/type": [
    "button",
    "reset",
    "submit"
  ],
  "byte": [
    "percent-encode",
    "value"
  ],
  "byte sequence": [
    "as a body",
    "length",
    "percent-decode",
    "prefix",
    "start with",
    "starts with"
  ],
  "cache batch operation": [
    "options",
    "request",
    "response",
    "type"
  ],
  "cache entry": [
    "byte-serialized origin",
    "credentials",
    "header name",
    "ip address space",
    "key",
    "max-age",
    "method",
    "url"
  ],
  "calc()": [
    "-infinity",
    "calculation",
    "e",
    "infinity",
    "nan",
    "pi"
  ],
  "calc-size()": [
    "any",
    "canonicalize for interpolation",
    "size"
  ],
  "calculation tree": [
    "calc-operator nodes",
    "operator nodes"
  ],
  "callback function": [
    "parent task"
  ],
  "calling site": [
    "remaining navigation budget"
  ],
  "canvas": [
    "height",
    "requiredextensions",
    "systemlanguage",
    "width"
  ],
  "caption": [
    "align"
  ],
  "caption-side": [
    "bottom",
    "top"
  ],
  "captured element": [
    "class list",
    "containing group name",
    "group animation name rule",
    "group keyframes",
    "group styles rule",
    "image animation name rule",
    "image pair isolation rule",
    "new element",
    "old backdrop-filter",
    "old color-scheme",
    "old direction",
    "old height",
    "old image",
    "old mix-blend-mode",
    "old text-orientation",
    "old transform",
    "old width",
    "old writing-mode",
    "style definitions",
    "transform from snapshot containing block"
  ],
  "caret-animation": [
    "auto",
    "manual"
  ],
  "caret-color": [
    "auto"
  ],
  "caret-shape": [
    "auto",
    "bar",
    "block",
    "underscore"
  ],
  "certificate": [
    "extensions",
    "public key"
  ],
  "certificate chain": [
    "does not have a trusted leaf",
    "has a trusted leaf",
    "leaf"
  ],
  "chrome": [
    "unifiedplatform"
  ],
  "circle": [
    "requiredextensions",
    "systemlanguage"
  ],
  "clamp()": [
    "none"
  ],
  "clear": [
    "all",
    "block-end",
    "block-start",
    "both",
    "both-block",
    "both-inline",
    "bottom",
    "inline-end",
    "inline-start",
    "left",
    "none",
    "right",
    "top"
  ],
  "client": [
    "endpoint-groups",
    "origin"
  ],
  "client mode": [
    "auto",
    "focus-existing",
    "navigate-existing",
    "navigate-new"
  ],
  "clip": [
    "<bottom>",
    "<left>",
    "<right>",
    "<top>",
    "auto",
    "rect()"
  ],
  "clip-path": [
    "fill-box",
    "stroke-box",
    "view-box"
  ],
  "clip-rule": [
    "evenodd",
    "nonzero"
  ],
  "clipPath": [
    "clippathunits",
    "requiredextensions",
    "systemlanguage"
  ],
  "clipPathUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "code point": [
    "utf-8 percent-encode",
    "value"
  ],
  "col": [
    "align",
    "char",
    "charoff",
    "span",
    "valign",
    "width"
  ],
  "colgroup": [
    "span"
  ],
  "collection": [
    "live collection",
    "represented by the collection",
    "static collection"
  ],
  "color()": [
    "a98-rgb",
    "alpha",
    "b",
    "display-p3",
    "g",
    "prophoto-rgb",
    "r",
    "rec2020",
    "srgb",
    "srgb-linear",
    "x",
    "xyz",
    "xyz-d50",
    "xyz-d65",
    "y",
    "z"
  ],
  "color-interpolation-filters": [
    "auto",
    "linearrgb",
    "srgb"
  ],
  "color-scheme": [
    "dark",
    "light",
    "normal",
    "only"
  ],
  "color_scheme": [
    "auto",
    "dark",
    "light"
  ],
  "column-count": [
    "auto"
  ],
  "column-fill": [
    "auto",
    "balance",
    "balance-all"
  ],
  "column-gap": [
    "normal"
  ],
  "column-span": [
    "all",
    "auto",
    "none"
  ],
  "column-width": [
    "auto",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content"
  ],
  "combined buffer layout": [
    "allocationsize",
    "computedlayouts"
  ],
  "command": [
    "command name",
    "command parameters",
    "command type",
    "result type"
  ],
  "commands": [
    "browser.close",
    "browser.createusercontext",
    "browser.getusercontexts",
    "browser.removeusercontext",
    "browsingcontext.activate",
    "browsingcontext.capturescreenshot",
    "browsingcontext.close",
    "browsingcontext.create",
    "browsingcontext.gettree",
    "browsingcontext.handleuserprompt",
    "browsingcontext.locatenodes",
    "browsingcontext.navigate",
    "browsingcontext.print",
    "browsingcontext.reload",
    "browsingcontext.setviewport",
    "browsingcontext.traversehistory",
    "input.performactions",
    "input.releaseactions",
    "input.setfiles",
    "network.addintercept",
    "network.continuerequest",
    "network.continueresponse",
    "network.continuewithauth",
    "network.failrequest",
    "network.provideresponse",
    "network.removeintercept",
    "network.setcachebehavior",
    "script.addpreloadscript",
    "script.callfunction",
    "script.disown",
    "script.evaluate",
    "script.getrealms",
    "script.removepreloadscript",
    "session.end",
    "session.new",
    "session.status",
    "session.subscribe",
    "session.unsubscribe",
    "storage.deletecookies",
    "storage.getcookies",
    "storage.setcookie"
  ],
  "component": [
    "group name list",
    "has regexp groups",
    "pattern string",
    "regular expression"
  ],
  "computational graph": [
    "constants",
    "input"
  ],
  "compute shader stage": [
    "workgroup"
  ],
  "compute the connection status": [
    "connected",
    "disconnected"
  ],
  "computed plane layout": [
    "destinationoffset",
    "destinationstride",
    "sourceheight",
    "sourceleftbytes",
    "sourcetop",
    "sourcewidthbytes"
  ],
  "configuration point": [
    "default value",
    "name",
    "range",
    "type"
  ],
  "conic-gradient()": [
    "gradient center"
  ],
  "connection": [
    "close pending flag",
    "closed",
    "credentials",
    "ip address space",
    "key",
    "object store set",
    "origin",
    "timing info",
    "version"
  ],
  "connection timing info": [
    "alpn negotiated protocol",
    "connection end time",
    "connection start time",
    "domain lookup end time",
    "domain lookup start time",
    "secure connection start time"
  ],
  "console": [
    "assert()",
    "assert(condition)",
    "assert(condition, ...data)",
    "clear()",
    "count()",
    "count(label)",
    "countReset()",
    "countReset(label)",
    "debug()",
    "debug(...data)",
    "dir()",
    "dir(item)",
    "dir(item, options)",
    "dirxml()",
    "dirxml(...data)",
    "error()",
    "error(...data)",
    "group()",
    "group(...data)",
    "groupCollapsed()",
    "groupCollapsed(...data)",
    "groupEnd()",
    "info()",
    "info(...data)",
    "log()",
    "log(...data)",
    "table()",
    "table(tabularData)",
    "table(tabularData, properties)",
    "time()",
    "time(label)",
    "timeEnd()",
    "timeEnd(label)",
    "timeLog()",
    "timeLog(label)",
    "timeLog(label, ...data)",
    "trace()",
    "trace(...data)",
    "warn()",
    "warn(...data)"
  ],
  "console/assert()": [
    "condition",
    "data"
  ],
  "console/assert(condition)": [
    "condition",
    "data"
  ],
  "console/assert(condition, ...data)": [
    "condition",
    "data"
  ],
  "console/count()": [
    "label"
  ],
  "console/count(label)": [
    "label"
  ],
  "console/countReset()": [
    "label"
  ],
  "console/countReset(label)": [
    "label"
  ],
  "console/debug()": [
    "data"
  ],
  "console/debug(...data)": [
    "data"
  ],
  "console/dir()": [
    "item",
    "options"
  ],
  "console/dir(item)": [
    "item",
    "options"
  ],
  "console/dir(item, options)": [
    "item",
    "options"
  ],
  "console/dirxml()": [
    "data"
  ],
  "console/dirxml(...data)": [
    "data"
  ],
  "console/error()": [
    "data"
  ],
  "console/error(...data)": [
    "data"
  ],
  "console/group()": [
    "data"
  ],
  "console/group(...data)": [
    "data"
  ],
  "console/groupCollapsed()": [
    "data"
  ],
  "console/groupCollapsed(...data)": [
    "data"
  ],
  "console/info()": [
    "data"
  ],
  "console/info(...data)": [
    "data"
  ],
  "console/log()": [
    "data"
  ],
  "console/log(...data)": [
    "data"
  ],
  "console/table()": [
    "properties",
    "tabularData"
  ],
  "console/table(tabularData)": [
    "properties",
    "tabularData"
  ],
  "console/table(tabularData, properties)": [
    "properties",
    "tabularData"
  ],
  "console/time()": [
    "label"
  ],
  "console/time(label)": [
    "label"
  ],
  "console/timeEnd()": [
    "label"
  ],
  "console/timeEnd(label)": [
    "label"
  ],
  "console/timeLog()": [
    "data",
    "label"
  ],
  "console/timeLog(label)": [
    "data",
    "label"
  ],
  "console/timeLog(label, ...data)": [
    "data",
    "label"
  ],
  "console/trace()": [
    "data"
  ],
  "console/trace(...data)": [
    "data"
  ],
  "console/warn()": [
    "data"
  ],
  "console/warn(...data)": [
    "data"
  ],
  "constrainable object": [
    "[[Capabilities]]",
    "[[Constraints]]",
    "[[Settings]]"
  ],
  "constructor": [
    "<interval>"
  ],
  "constructor string parser": [
    "component start",
    "group depth",
    "hostname ipv6 bracket depth",
    "input",
    "protocol matches a special scheme flag",
    "result",
    "state",
    "token increment",
    "token index",
    "token list"
  ],
  "constructor string parser/state": [
    "authority",
    "done",
    "hash",
    "hostname",
    "init",
    "password",
    "pathname",
    "port",
    "protocol",
    "search",
    "username"
  ],
  "contacts source": [
    "available contacts",
    "supported properties"
  ],
  "contain": [
    "content",
    "inline-size",
    "layout",
    "none",
    "paint",
    "size",
    "strict",
    "style"
  ],
  "contain-intrinsic-block-size": [
    "auto",
    "auto && <length>",
    "none"
  ],
  "contain-intrinsic-height": [
    "auto",
    "auto && <length>",
    "none"
  ],
  "contain-intrinsic-inline-size": [
    "auto",
    "auto && <length>",
    "none"
  ],
  "contain-intrinsic-size": [
    "auto",
    "auto && <length>",
    "none"
  ],
  "contain-intrinsic-width": [
    "auto",
    "auto && <length>",
    "none"
  ],
  "container-name": [
    "none"
  ],
  "container-type": [
    "inline-size",
    "normal",
    "size"
  ],
  "content": [
    "/ [ <string> | <counter> ]+",
    "/ [ <string> | <counter> | <attr()> ]+",
    "<content-list>",
    "<content-replacement>",
    "<counter>",
    "<string>",
    "<uri>",
    "attr()",
    "attr(x)",
    "close-quote",
    "contents",
    "leader()",
    "no-close-quote",
    "no-open-quote",
    "none",
    "normal",
    "open-quote"
  ],
  "content index entry": [
    "description",
    "icons",
    "launch url",
    "service worker registration"
  ],
  "content security policy object": [
    "intersection"
  ],
  "content size": [
    "value",
    "visibility"
  ],
  "content()": [
    "after",
    "before",
    "first-letter",
    "marker",
    "text"
  ],
  "content-visibility": [
    "auto",
    "hidden",
    "visible"
  ],
  "context type": [
    "default",
    "webgpu"
  ],
  "context validation result": [
    "errors",
    "validated",
    "validateddocument",
    "warnings"
  ],
  "continue": [
    "-webkit-discard",
    "auto",
    "discard",
    "fragments",
    "overflow",
    "paginate"
  ],
  "contrast ratio": [
    "high contrast ratio"
  ],
  "contrast-color()": [
    "text",
    "wcag2",
    "wcag2()"
  ],
  "contribution cache entry": [
    "batching scope",
    "contribution",
    "debug details",
    "debug scope"
  ],
  "cookie": [
    "creation-time",
    "domain",
    "expiry-time",
    "host-only-flag",
    "http-only-flag",
    "last-access-time",
    "maximum attribute value size",
    "maximum name/value pair size",
    "name",
    "path",
    "persistent-flag",
    "same-site-flag",
    "secure-only-flag",
    "value"
  ],
  "cookie change subscription": [
    "name",
    "url"
  ],
  "core-attributes": [
    "autofocus",
    "class",
    "id",
    "lang",
    "style",
    "tabindex",
    "xml:space"
  ],
  "corner-shape": [
    "angle",
    "round"
  ],
  "counter()": [
    "list-item"
  ],
  "counter-increment": [
    "<counter-name> <integer>?",
    "list-item",
    "none"
  ],
  "counter-reset": [
    "<counter-name> <integer>?",
    "<reversed-counter-name> <integer>?",
    "list-item",
    "none"
  ],
  "counter-set": [
    "<counter-name> <integer>?",
    "list-item",
    "none"
  ],
  "counter-set counter-increment": [
    "<counter-name> <integer>?",
    "none"
  ],
  "counters()": [
    "list-item"
  ],
  "create": [
    "candidate authenticator",
    "selected authenticator"
  ],
  "credential": [
    "credential type",
    "effective"
  ],
  "credential id": [
    "looking up"
  ],
  "credential record": [
    "attestationClientDataJSON",
    "attestationObject",
    "authenticatorDisplayName",
    "backupEligible",
    "backupState",
    "device-bound key record",
    "devicePubKeys",
    "id",
    "publicKey",
    "signCount",
    "transports",
    "type",
    "uvInitialized"
  ],
  "credential store": [
    "Modify a credential",
    "Retrieve a list of credentials",
    "Store a credential"
  ],
  "credential type registry": [
    "appropriate interface object",
    "create permissions policy",
    "credential type",
    "get permissions policy",
    "options member identifier"
  ],
  "credentialCreationData": [
    "attestationconveyancepreferenceoption",
    "attestationobjectresult",
    "clientdatajsonresult",
    "clientextensionresults"
  ],
  "cross-origin prefetch IP anonymization policy": [
    "origin"
  ],
  "css": [
    "ignored",
    "invalid"
  ],
  "cursor": [
    "<url-set>",
    "alias",
    "all-scroll",
    "auto",
    "cell",
    "col-resize",
    "context-menu",
    "copy",
    "crosshair",
    "default",
    "direction",
    "e-resize",
    "effective key",
    "effective object store",
    "ew-resize",
    "got value flag",
    "grab",
    "grabbing",
    "help",
    "key",
    "key only flag",
    "move",
    "n-resize",
    "ne-resize",
    "nesw-resize",
    "no-drop",
    "none",
    "not-allowed",
    "ns-resize",
    "nw-resize",
    "nwse-resize",
    "object store position",
    "pointer",
    "position",
    "progress",
    "range",
    "request",
    "row-resize",
    "s-resize",
    "se-resize",
    "source",
    "sw-resize",
    "text",
    "transaction",
    "value",
    "vertical-text",
    "w-resize",
    "wait",
    "zoom-in",
    "zoom-out"
  ],
  "custom element definition": [
    "constructor",
    "disable shadow",
    "local name",
    "name"
  ],
  "data": [
    "value"
  ],
  "data: URL struct": [
    "body",
    "mime type"
  ],
  "database": [
    "name",
    "upgrade transaction",
    "version"
  ],
  "debug details": [
    "enabled",
    "key"
  ],
  "declared policy": [
    "declarations",
    "reporting configuration"
  ],
  "decoded additional bid": [
    "bid",
    "negative target interest group names",
    "negative target joining origin"
  ],
  "decomposition": [
    "base"
  ],
  "default allowlist": [
    "'self'",
    "*"
  ],
  "default asynchronous iterator object": [
    "is finished",
    "kind",
    "ongoing promise",
    "target"
  ],
  "default iterator object": [
    "index",
    "kind",
    "target"
  ],
  "del": [
    "cite",
    "datetime"
  ],
  "descent-override!!descriptor": [
    "normal"
  ],
  "destination": [
    "translate"
  ],
  "destination enum event": [
    "attributionreportingcontextorigin",
    "attributionreportingenabled",
    "data",
    "type"
  ],
  "destination limit record": [
    "attribution destination",
    "priority",
    "source identifier",
    "time"
  ],
  "destination rate-limit result": [
    "allowed",
    "hit global limit",
    "hit reporting limit"
  ],
  "details": [
    "name",
    "open"
  ],
  "determine-topics-calculation-input-data-header": [
    "topics calculation input data"
  ],
  "device": [
    "[[adapter]]",
    "[[content device]]",
    "[[features]]",
    "[[limits]]"
  ],
  "device posture change steps": [
    "disallowrecursion",
    "document"
  ],
  "device sensor": [
    "maximum sampling frequency",
    "minimum sampling frequency"
  ],
  "devicePubKey record": [
    "aaguid",
    "attStmt",
    "dpk",
    "fmt",
    "scope"
  ],
  "dfn": [
    "title"
  ],
  "diagnostic": [
    "conflict",
    "severity",
    "triggering location",
    "triggering rule"
  ],
  "dialog": [
    "open"
  ],
  "dictionary": [
    "inherit"
  ],
  "dictionary member": [
    "default value",
    "optional",
    "required"
  ],
  "digital credential": [
    "exchange protocol",
    "query"
  ],
  "direct from seller signals": [
    "auction signals",
    "per buyer signals",
    "seller signals"
  ],
  "direct from seller signals key": [
    "ad slot",
    "seller"
  ],
  "direction": [
    "ltr",
    "rtl"
  ],
  "directive": [
    "contains",
    "initialization",
    "inline check",
    "name",
    "navigation response check",
    "post-request check",
    "pre-navigation check",
    "pre-request check",
    "value",
    "webrtc pre-connect check"
  ],
  "directive state": [
    "value"
  ],
  "directory": [
    "name"
  ],
  "directory entry": [
    "children"
  ],
  "discard": [
    "onbegin",
    "onend",
    "onrepeat",
    "requiredextensions",
    "systemlanguage"
  ],
  "disconnect_endpoint_request": [
    "account_hint",
    "client_id"
  ],
  "display": [
    "block",
    "contents",
    "flex",
    "flow",
    "flow-root",
    "grid",
    "inline",
    "inline-block",
    "inline-flex",
    "inline-grid",
    "inline-table",
    "layout()",
    "list-item",
    "none",
    "ruby",
    "ruby-base",
    "ruby-base-container",
    "ruby-text",
    "ruby-text-container",
    "run-in",
    "table",
    "table-caption",
    "table-cell",
    "table-column",
    "table-column-group",
    "table-footer-group",
    "table-header-group",
    "table-row",
    "table-row-group"
  ],
  "display mode": [
    "borderless",
    "browser",
    "fullscreen",
    "minimal-ui",
    "standalone",
    "tabbed",
    "window-controls-overlay"
  ],
  "display surface": [
    "browser",
    "monitor",
    "window"
  ],
  "div": [
    "align"
  ],
  "dl": [
    "compact"
  ],
  "document": [
    "active view transition",
    "can initiate outbound view transition",
    "default document timeline",
    "dynamic view transition style sheet",
    "inbound view transition params",
    "interaction task id to interaction data",
    "last interaction task id",
    "list of pending external speculation rule resources",
    "list of speculation rule sets",
    "potential soft navigation task ids",
    "rendering suppression for view transitions",
    "scripting policy",
    "show view transition tree",
    "task id to interaction task id",
    "text directive user activation"
  ],
  "document animator definition": [
    "stateful flag"
  ],
  "document layout definition": [
    "child input properties",
    "input properties",
    "layout options"
  ],
  "document load timing info": [
    "dom complete time",
    "dom content loaded event end time",
    "dom content loaded event start time",
    "dom interactive time",
    "load event end time",
    "load event start time",
    "navigation start time"
  ],
  "document paint definition": [
    "input argument syntaxes",
    "input properties",
    "paintrenderingcontext2dsettings object"
  ],
  "document policy directive": [
    "directive name"
  ],
  "document rule CSS selector predicate": [
    "selectors"
  ],
  "document rule URL pattern predicate": [
    "patterns"
  ],
  "document rule conjunction": [
    "clauses"
  ],
  "document rule disjunction": [
    "clauses"
  ],
  "document rule negation": [
    "clause"
  ],
  "document rule predicate": [
    "matches"
  ],
  "document unload timing info": [
    "unload event end time",
    "unload event start time"
  ],
  "document-id-header": [
    "document id"
  ],
  "dominant-baseline": [
    "alphabetic",
    "auto",
    "central",
    "hanging",
    "ideographic",
    "mathematical",
    "middle",
    "text-bottom",
    "text-top"
  ],
  "dynamic-range-limit": [
    "constrained-high",
    "high",
    "standard"
  ],
  "easing-function": [
    "linear"
  ],
  "edgeMode": [
    "duplicate",
    "wrap"
  ],
  "effect target": [
    "target element",
    "target pseudo-selector"
  ],
  "effective enabled permissions": [
    "value",
    "visibility"
  ],
  "effective overload set tuple": [
    "callable"
  ],
  "effective sandbox flags": [
    "value",
    "visibility"
  ],
  "element": [
    "forwarded part name list",
    "hidden",
    "hidden from all users",
    "hide from all users",
    "part name list",
    "part name map"
  ],
  "eligibility": [
    "empty",
    "event-source",
    "event-source-or-trigger",
    "navigation-source",
    "trigger",
    "unset"
  ],
  "eligible key": [
    "event-source",
    "navigation-source",
    "trigger"
  ],
  "ellipse": [
    "requiredextensions",
    "systemlanguage"
  ],
  "embed": [
    "align",
    "height",
    "hspace",
    "name",
    "src",
    "type",
    "vspace",
    "width"
  ],
  "embedder policy": [
    "report only reporting endpoint",
    "report only value",
    "reporting endpoint",
    "value"
  ],
  "embedder policy value": [
    "credentialless",
    "require-corp",
    "unsafe-none"
  ],
  "embellished operator": [
    "core operator",
    "largeop",
    "lspace",
    "minsize",
    "movablelimits",
    "rspace",
    "stretch axis",
    "stretchy",
    "symmetric"
  ],
  "empty-cells": [
    "hide",
    "show"
  ],
  "encoder state": [
    "ended",
    "locked",
    "open"
  ],
  "encoding": [
    "label",
    "name"
  ],
  "endpoint": [
    "failures",
    "name",
    "url"
  ],
  "endpoint group": [
    "creation",
    "endpoints",
    "expired",
    "name",
    "subdomains",
    "ttl"
  ],
  "endpointNumber": [
    "endpointNumber(alternate, endpointNumber, direction)"
  ],
  "entpAttstn": [
    "pre-configured rp id list"
  ],
  "entry": [
    "file system",
    "key",
    "name",
    "root",
    "value struct"
  ],
  "entry list": [
    "create an entry",
    "entry"
  ],
  "entry list/entry": [
    "name",
    "value"
  ],
  "env()": [
    "safe-area-inset-bottom",
    "safe-area-inset-left",
    "safe-area-inset-right",
    "safe-area-inset-top",
    "viewport-segment-bottom",
    "viewport-segment-height",
    "viewport-segment-left",
    "viewport-segment-right",
    "viewport-segment-top",
    "viewport-segment-width"
  ],
  "environment": [
    "active service worker",
    "creation url",
    "execution ready flag",
    "has storage access",
    "id",
    "partition nonce",
    "target browsing context",
    "top-level creation url",
    "top-level origin"
  ],
  "environment settings object": [
    "api base url",
    "client hints set",
    "cross-origin isolated capability",
    "current monotonic time",
    "current relative timestamp",
    "current wall time",
    "global object",
    "module map",
    "origin",
    "policy container",
    "realm",
    "realm execution context",
    "responsible event loop",
    "scripting policy",
    "service worker object map",
    "service worker registration object map",
    "time origin"
  ],
  "epoch": [
    "config version",
    "model version",
    "taxonomy",
    "taxonomy version",
    "time",
    "top 5 topics with caller domains"
  ],
  "errors": [
    "no such handle",
    "no such history entry",
    "no such intercept",
    "no such node",
    "no such request",
    "no such script",
    "no such storage partition",
    "no such user context",
    "unable to close browser",
    "unable to set cookie",
    "unable to set file input",
    "underspecified storage partition"
  ],
  "event": [
    "event name",
    "event parameters.",
    "event type",
    "global event set",
    "in the default event set",
    "navigable event map",
    "remote end event trigger",
    "remote end subscribe steps",
    "subscribe priority"
  ],
  "event handler": [
    "listener",
    "value"
  ],
  "event listener": [
    "callback",
    "capture",
    "once",
    "passive",
    "removed",
    "signal",
    "type"
  ],
  "event loop": [
    "current scheduling state",
    "next enqueue order"
  ],
  "event-level report": [
    "attribution debug info",
    "attribution destinations",
    "event id",
    "is lower-priority than",
    "randomized trigger rate",
    "report id",
    "report time",
    "reporting origin",
    "source identifier",
    "source type",
    "trigger data",
    "trigger priority",
    "trigger time"
  ],
  "event-level trigger configuration": [
    "dedup key",
    "filters",
    "negated filters",
    "priority",
    "trigger data",
    "value"
  ],
  "event-level-report-replacement result": [
    "add-new-report",
    "drop-new-report-low-priority",
    "drop-new-report-none-to-replace"
  ],
  "exception": [
    "create",
    "throw"
  ],
  "exchange": [
    "request url",
    "response"
  ],
  "exchange record": [
    "request",
    "response"
  ],
  "exchange signature": [
    "certificate chain",
    "certsha256",
    "date",
    "does not establish cross-origin trust",
    "establishes cross-origin trust",
    "expiration time",
    "integrity header",
    "is not valid",
    "is valid",
    "signature",
    "validityurl",
    "validityurlbytes"
  ],
  "exfiltration budget metadata": [
    "amount to debit",
    "origin",
    "value",
    "visibility"
  ],
  "exfiltration budget metadata reference": [
    "amount to debit reference",
    "origin"
  ],
  "extended attribute": [
    "takes a named argument list",
    "takes a wildcard",
    "takes an argument list",
    "takes an identifier",
    "takes an identifier list",
    "takes no arguments"
  ],
  "extended attributes": [
    "applicable to types"
  ],
  "extension": [
    "clip_distances",
    "dual_source_blending",
    "f16"
  ],
  "extension commands": [
    "add mock camera",
    "add mock microphone",
    "delete mock camera",
    "delete mock capture device",
    "get capture prompt result",
    "get mock capture devices",
    "reset mock capture devices",
    "set capture prompt result",
    "set default mock microphone device",
    "set permission"
  ],
  "external application resource": [
    "fingerprints",
    "id",
    "min_version",
    "platform",
    "url"
  ],
  "feBlend": [
    "in2",
    "mode",
    "no-composite"
  ],
  "feColorMatrix": [
    "type",
    "values"
  ],
  "feComponentTransfer": [
    "amplitude",
    "exponent",
    "intercept",
    "offset",
    "slope",
    "tablevalues",
    "type"
  ],
  "feComposite": [
    "in2",
    "k1",
    "k2",
    "k3",
    "k4",
    "operator"
  ],
  "feComposite/operator": [
    "arithmetic",
    "atop",
    "in",
    "lighter",
    "out",
    "over",
    "xor"
  ],
  "feConvolveMatrix": [
    "bias",
    "divisor",
    "edgemode",
    "kernelmatrix",
    "kernelunitlength",
    "order",
    "preservealpha",
    "targetx",
    "targety"
  ],
  "feDiffuseLighting": [
    "diffuseconstant",
    "kernelunitlength",
    "surfacescale"
  ],
  "feDisplacementMap": [
    "in2",
    "scale",
    "xchannelselector",
    "ychannelselector"
  ],
  "feDistantLight": [
    "azimuth",
    "elevation"
  ],
  "feDropShadow": [
    "dx",
    "dy",
    "stddeviation"
  ],
  "feGaussianBlur": [
    "edgemode",
    "stddeviation"
  ],
  "feGaussianBlur/edgeMode": [
    "duplicate",
    "wrap"
  ],
  "feGuassianBlur/edgeMode": [
    "mirror"
  ],
  "feImage": [
    "crossorigin",
    "href",
    "preserveaspectratio",
    "xlink:href"
  ],
  "feMorphology": [
    "operator",
    "radius"
  ],
  "feOffset": [
    "dx",
    "dy"
  ],
  "fePointLight": [
    "x",
    "y",
    "z"
  ],
  "feSpecularLighting": [
    "kernelunitlength",
    "specularconstant",
    "specularexponent",
    "surfacescale"
  ],
  "feSpotLight": [
    "limitingconeangle",
    "pointsatx",
    "pointsaty",
    "pointsatz",
    "specularexponent",
    "x",
    "y",
    "z"
  ],
  "feTurbulence": [
    "basefrequency",
    "numoctaves",
    "seed",
    "stitchtiles",
    "type"
  ],
  "feature descriptor": [
    "depth-sorted-layers",
    "dom-overlay",
    "hand-tracking",
    "layers",
    "light-estimation",
    "space-warp"
  ],
  "fenced frame config": [
    "container size",
    "content size",
    "cross-origin reporting allowed",
    "effective enabled permissions",
    "effective sandbox flags",
    "embedder shared storage context",
    "exfiltration budget metadata",
    "fenced frame reporting metadata",
    "interest group descriptor",
    "is ad component",
    "mapped url",
    "nested configs",
    "on navigate callback"
  ],
  "fenced frame config instance": [
    "container size",
    "content size",
    "cross-origin reporting allowed",
    "effective enabled permissions",
    "effective sandbox flags",
    "embedder shared storage context",
    "exfiltration budget metadata reference",
    "fenced frame reporter",
    "interest group descriptor",
    "is ad component",
    "mapped url",
    "nested configs",
    "on navigate callback",
    "partition nonce"
  ],
  "fenced frame config mapping": [
    "finalize a pending config",
    "finalized config mapping",
    "find a config",
    "maximum number of configs",
    "nested config mapping",
    "pending config mapping",
    "store a pending config",
    "store nested configs"
  ],
  "fenced frame reporter": [
    "fenced frame reporting metadata reference"
  ],
  "fenced frame reporting metadata": [
    "allowed reporting origins",
    "attempted custom url report to disallowed origin",
    "direct seller is seller",
    "fenced frame reporting map",
    "value",
    "visibility"
  ],
  "fenced navigable container": [
    "fenced navigable"
  ],
  "fencedframe": [
    "allow",
    "config",
    "height",
    "width"
  ],
  "fencedframeconfig": [
    "containerheight",
    "containerwidth",
    "contentheight",
    "contentwidth",
    "sharedstoragecontext",
    "url",
    "urn",
    "visibility"
  ],
  "fencedframetype": [
    "automatic beacon data",
    "automatic beacon event",
    "automatic beacon event type",
    "destination enum event",
    "destination event",
    "destination url event",
    "exfiltration budget metadata",
    "exfiltration budget metadata reference",
    "exhaustive set of sandbox flags",
    "fenced frame reporter",
    "fenced frame reporting map",
    "fenced frame reporting metadata",
    "interest group descriptor",
    "pending event",
    "reporting destination info",
    "size"
  ],
  "fencedframeutil": [
    "substitute macros"
  ],
  "fetch": [
    "fetch group",
    "processearlyhintsresponse",
    "processrequestbodychunklength",
    "processrequestendofbody",
    "processresponse",
    "processresponseconsumebody",
    "processresponseendofbody",
    "resumed",
    "suspend",
    "useparallelqueue"
  ],
  "fetch controller": [
    "abort",
    "extract full timing info",
    "full timing info",
    "next manual redirect steps",
    "process the next manual redirect",
    "report timing",
    "report timing steps",
    "serialized abort reason",
    "state",
    "terminate"
  ],
  "fetch group": [
    "fetch record",
    "terminated"
  ],
  "fetch params": [
    "aborted",
    "canceled",
    "controller",
    "cross-origin isolated capability",
    "preloaded response candidate",
    "process early hints response",
    "process request body chunk length",
    "process request end-of-body",
    "process response",
    "process response consume body",
    "process response end-of-body",
    "request",
    "task destination",
    "timing info"
  ],
  "fetch record": [
    "controller",
    "request"
  ],
  "fetch timing info": [
    "end time",
    "final connection timing info",
    "final network-request start time",
    "final network-response start time",
    "final service worker start time",
    "first interim network-response start time",
    "post-redirect start time",
    "redirect end time",
    "redirect start time",
    "render-blocking",
    "server-timing headers",
    "start time"
  ],
  "fetching scripts": [
    "istoplevel",
    "perform the fetch hook",
    "processcustomfetchresponse"
  ],
  "field-sizing": [
    "content",
    "fixed"
  ],
  "fieldset": [
    "autocomplete",
    "disabled",
    "form",
    "form owner",
    "name"
  ],
  "fieldset/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "file": [
    "name"
  ],
  "file entry": [
    "binary data",
    "lock",
    "modification timestamp",
    "shared lock count"
  ],
  "file entry/lock": [
    "release",
    "take"
  ],
  "file handler": [
    "accept",
    "action",
    "icons",
    "launch_type",
    "name"
  ],
  "file system": [
    "name",
    "root"
  ],
  "file system access result": [
    "error name",
    "permission state"
  ],
  "file system entry": [
    "name",
    "parent",
    "query access",
    "request access",
    "the same entry as"
  ],
  "file system locator": [
    "kind",
    "path",
    "resolve",
    "root",
    "the same locator as"
  ],
  "file system path": [
    "the same path as"
  ],
  "fill mode": [
    "backwards",
    "both",
    "forwards",
    "none"
  ],
  "fill-origin": [
    "border-box",
    "content-box",
    "fill-box",
    "match-parent",
    "padding-box",
    "stroke-box"
  ],
  "fill-rule": [
    "evenodd",
    "nonzero"
  ],
  "filter": [
    "<url>",
    "blur()",
    "brightness()",
    "contrast()",
    "drop-shadow()",
    "filterres",
    "filterunits",
    "grayscale()",
    "height",
    "hue-rotate()",
    "invert()",
    "opacity()",
    "primitiveunits",
    "saturate()",
    "sepia()",
    "width",
    "x",
    "y"
  ],
  "filter config": [
    "lookback window",
    "map"
  ],
  "filter-primitive": [
    "height",
    "in",
    "result",
    "width",
    "x",
    "y"
  ],
  "filterUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "filtered response": [
    "internal response"
  ],
  "fingerprint": [
    "type",
    "value"
  ],
  "firefox": [
    "devicecompat"
  ],
  "flex": [
    "-webkit-box",
    "-webkit-flex",
    "-webkit-inline-box",
    "-webkit-inline-flex",
    "<'flex-basis'>",
    "<'flex-grow'>",
    "<'flex-shrink'>",
    "flex basis",
    "flex grow factor",
    "flex shrink factor",
    "none"
  ],
  "flex-basis": [
    "auto",
    "content"
  ],
  "flex-direction": [
    "column",
    "column-reverse",
    "row",
    "row-reverse"
  ],
  "flex-wrap": [
    "nowrap",
    "wrap",
    "wrap-reverse"
  ],
  "float": [
    "block-end",
    "block-start",
    "bottom",
    "footnote",
    "inline-end",
    "inline-start",
    "left",
    "none",
    "right",
    "snap-block",
    "snap-block()",
    "snap-block(<length> [, start | end | near ]?)",
    "snap-inline",
    "snap-inline()",
    "snap-inline(<length> [, left | right | near ]?)",
    "top"
  ],
  "float-reference": [
    "column",
    "inline",
    "page",
    "region"
  ],
  "font": [
    "caption",
    "icon",
    "menu",
    "message-box",
    "small-caption",
    "status-bar"
  ],
  "font representation": [
    "data bytes",
    "family name",
    "full name",
    "postscript name",
    "style name"
  ],
  "font-family": [
    "cursive",
    "fantasy",
    "generic(fangsong)",
    "generic(kai)",
    "generic(nastaliq)",
    "math",
    "monospace",
    "sans-serif",
    "serif",
    "system-ui",
    "ui-monospace",
    "ui-rounded",
    "ui-sans-serif",
    "ui-serif",
    "xxx"
  ],
  "font-feature-settings": [
    "<feature-tag-value>",
    "normal"
  ],
  "font-kerning": [
    "auto",
    "none",
    "normal"
  ],
  "font-language override": [
    "normal"
  ],
  "font-optical-sizing": [
    "auto",
    "none"
  ],
  "font-palette": [
    "<palette-identifier>",
    "<palette-mix()>",
    "dark",
    "light",
    "normal"
  ],
  "font-size": [
    "large",
    "math",
    "medium",
    "small",
    "x-large",
    "x-small",
    "xx-large",
    "xx-small"
  ],
  "font-size-adjust": [
    "aspect value",
    "cap-height",
    "ch-width",
    "ex-height",
    "ex-height | cap-height | ch-width | ic-width | ic-height",
    "from-font",
    "ic-height",
    "ic-width",
    "none"
  ],
  "font-style": [
    "italic",
    "normal",
    "oblique",
    "oblique <angle [-90deg,90deg]>?",
    "small-caps"
  ],
  "font-synthesis-position": [
    "auto",
    "none"
  ],
  "font-synthesis-small-caps": [
    "auto",
    "none"
  ],
  "font-synthesis-style": [
    "auto",
    "none"
  ],
  "font-synthesis-weight": [
    "auto",
    "none"
  ],
  "font-variant": [
    "none",
    "normal"
  ],
  "font-variant-alternates": [
    "annotation(<feature-value-name>)",
    "character-variant(<feature-value-name>#)",
    "historical-forms",
    "normal",
    "ornaments(<feature-value-name>)",
    "styleset(<feature-value-name>#)",
    "stylistic(<feature-value-name>)",
    "swash(<feature-value-name>)"
  ],
  "font-variant-caps": [
    "all-petite-caps",
    "all-small-caps",
    "normal",
    "petite-caps",
    "small-caps",
    "titling-caps",
    "unicase"
  ],
  "font-variant-east-asian": [
    "full-width",
    "jis04",
    "jis78",
    "jis83",
    "jis90",
    "normal",
    "proportional-width",
    "ruby",
    "simplified",
    "traditional"
  ],
  "font-variant-emoji": [
    "emoji",
    "normal",
    "text",
    "unicode"
  ],
  "font-variant-ligatures": [
    "common-ligatures",
    "contextual",
    "discretionary-ligatures",
    "historical-ligatures",
    "no-common-ligatures",
    "no-contextual",
    "no-discretionary-ligatures",
    "no-historical-ligatures",
    "none",
    "normal"
  ],
  "font-variant-numeric": [
    "diagonal-fractions",
    "lining-nums",
    "normal",
    "oldstyle-nums",
    "ordinal",
    "proportional-nums",
    "slashed-zero",
    "stacked-fractions",
    "tabular-nums"
  ],
  "font-variant-position": [
    "normal",
    "sub",
    "super"
  ],
  "font-weight": [
    "bold",
    "bolder",
    "lighter",
    "normal"
  ],
  "font-width": [
    "condensed",
    "expanded",
    "extra-condensed",
    "extra-expanded",
    "normal",
    "semi-condensed",
    "semi-expanded",
    "ultra-condensed",
    "ultra-expanded"
  ],
  "footnote-display": [
    "block",
    "compact",
    "inline"
  ],
  "footnote-policy": [
    "auto",
    "block",
    "line"
  ],
  "forced-color-adjust": [
    "auto",
    "none",
    "preserve-parent-color"
  ],
  "foreignObject": [
    "requiredextensions",
    "systemlanguage"
  ],
  "form": [
    "accept",
    "accept-charset",
    "action",
    "autocomplete",
    "enctype",
    "formaction",
    "formenctype",
    "formmethod",
    "formnovalidate",
    "formtarget",
    "method",
    "name",
    "novalidate",
    "rel",
    "target"
  ],
  "form-associated custom element": [
    "form owner"
  ],
  "form-associated custom elements": [
    "readonly"
  ],
  "form/autocomplete": [
    "off",
    "on"
  ],
  "form/enctype": [
    "application/x-www-form-urlencoded",
    "multipart/form-data",
    "text/plain"
  ],
  "form/method": [
    "dialog",
    "get",
    "post"
  ],
  "form/rel": [
    "external",
    "help",
    "license",
    "next",
    "nofollow",
    "noopener",
    "noreferrer",
    "opener",
    "prev",
    "search"
  ],
  "frame timing info": [
    "current task start time",
    "end time",
    "first ui event timestamp",
    "pending script",
    "scripts",
    "start time",
    "style and layout start time",
    "task durations",
    "update the rendering start time"
  ],
  "from I/O queue": [
    "convert"
  ],
  "function": [
    "function"
  ],
  "g": [
    "requiredextensions",
    "systemlanguage"
  ],
  "gap": [
    "normal"
  ],
  "generate an attribution report URL": [
    "isdebugreport"
  ],
  "generate null attribution reports": [
    "report"
  ],
  "generated bid": [
    "ad",
    "ad component descriptors",
    "ad cost",
    "ad descriptor",
    "bid",
    "bid ad",
    "bid duration",
    "bid in seller currency",
    "component seller",
    "for k-anon auction",
    "id",
    "interest group",
    "modeling signals",
    "modified bid",
    "number of mandatory ad components",
    "provided as additional bid",
    "target number of ad components"
  ],
  "getAssert": [
    "allowlist",
    "applicable credentials list",
    "extensions",
    "input parameters",
    "option key",
    "options",
    "pinuvauthparam",
    "pinuvauthprotocol",
    "rk",
    "rpid",
    "up",
    "uv"
  ],
  "getInfo": [
    "aaguid",
    "alwaysuv",
    "authenticatorgetinfo response structure",
    "authnrcfg",
    "bioenroll",
    "certifications",
    "clientpin",
    "credentialmgmtpreview",
    "credmgmt",
    "ep",
    "extensions",
    "forcepinchange",
    "largeblobs",
    "makecreduvnotrqd",
    "maxcredbloblength",
    "maxserializedlargeblobarray",
    "minpinlength",
    "nomcgapermissionswithclientpin",
    "options",
    "pinuvauthprotocols",
    "pinuvauthtoken",
    "preferredplatformuvattempts",
    "rk",
    "setminpinlength",
    "transports",
    "userverificationmgmtpreview",
    "uv",
    "uvacfg",
    "uvbioenroll",
    "vendorprototypeconfigcommands",
    "versions"
  ],
  "global": [
    "class",
    "id",
    "slot"
  ],
  "global object": [
    "csp list",
    "in error reporting mode",
    "realm"
  ],
  "globalThis": [
    "%decodeURI%",
    "%decodeURIComponent%",
    "%encodeURI%",
    "%encodeURIComponent%",
    "%eval%",
    "%isFinite%",
    "%isNaN%",
    "%parseFloat%",
    "%parseInt%",
    "Infinity",
    "NaN",
    "decodeURI(encodedURI)",
    "decodeURIComponent(encodedURIComponent)",
    "encodeURI(uri)",
    "encodeURIComponent(uriComponent)",
    "escape(string)",
    "eval(x)",
    "globalThis",
    "isFinite(number)",
    "isNaN(number)",
    "msFromTime(t)",
    "parseFloat(string)",
    "parseInt(string, radix)",
    "undefined",
    "unescape(string)"
  ],
  "grid": [
    "<'grid-template-rows'> / [ auto-flow && dense? ] <'grid-auto-columns'>?",
    "[ auto-flow && dense? ] <'grid-auto-rows'>? / <'grid-template-columns'>"
  ],
  "grid-auto-flow": [
    "column",
    "dense",
    "row"
  ],
  "grid-column-end": [
    "<grid-line>"
  ],
  "grid-column-start": [
    "<grid-line>"
  ],
  "grid-row-end": [
    "<grid-line>"
  ],
  "grid-row-start": [
    "<grid-line>"
  ],
  "grid-template": [
    "<'grid-template-rows'> / <'grid-template-columns'>",
    "[ <line-names>? <string> <track-size>? <line-names>? ]+ [ / <explicit-track-list> ]?",
    "none"
  ],
  "grid-template-areas": [
    "<string>+",
    "named cell token",
    "none",
    "null cell token",
    "trash token"
  ],
  "grid-template-columns": [
    "<flex [0,∞]>",
    "<flex>",
    "<track-list> | <auto-track-list>",
    "auto",
    "fit-content()",
    "flex factor",
    "max-content",
    "min-content",
    "minmax()",
    "none",
    "sizing function",
    "subgrid",
    "subgrid <line-name-list>?",
    "track sizing function"
  ],
  "grid-template-rows": [
    "<flex [0,∞]>",
    "<flex>",
    "<track-list> | <auto-track-list>",
    "auto",
    "fit-content()",
    "flex factor",
    "max-content",
    "min-content",
    "minmax()",
    "none",
    "sizing function",
    "subgrid",
    "subgrid <line-name-list>?",
    "track sizing function"
  ],
  "h1": [
    "align"
  ],
  "h2": [
    "align"
  ],
  "h3": [
    "align"
  ],
  "h4": [
    "align"
  ],
  "h5": [
    "align"
  ],
  "h6": [
    "align"
  ],
  "hanging-punctuation": [
    "allow-end",
    "first",
    "force-end",
    "last",
    "none"
  ],
  "head": [
    "profile"
  ],
  "header": [
    "name",
    "value"
  ],
  "header errors debug data type": [
    "header-parsing-error"
  ],
  "header list": [
    "append",
    "combine",
    "contains",
    "delete",
    "does not contain",
    "extract a length",
    "extract a mime type",
    "extracting a length",
    "extracting a mime type",
    "get",
    "get a structured field value",
    "get, decode, and split",
    "getting, decoding, and splitting",
    "set",
    "set a structured field value",
    "sort and combine"
  ],
  "header value": [
    "get, decode, and split",
    "getting, decoding, and splitting",
    "normalize"
  ],
  "height": [
    "auto",
    "calc-size()",
    "contain",
    "fit-content",
    "fit-content()",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "host": [
    "equal",
    "public suffix",
    "registrable domain"
  ],
  "hr": [
    "align",
    "color",
    "noshade",
    "size",
    "width"
  ],
  "hsl()": [
    "alpha",
    "h",
    "hsl",
    "l",
    "s"
  ],
  "html": [
    "manifest",
    "version"
  ],
  "html-global": [
    "accesskey",
    "autocapitalize",
    "autofocus",
    "contenteditable",
    "dir",
    "draggable",
    "enterkeyhint",
    "exportparts",
    "hidden",
    "inputmode",
    "is",
    "itemid",
    "itemprop",
    "itemref",
    "itemscope",
    "itemtype",
    "lang",
    "part",
    "popover",
    "popovertarget",
    "popovertargetaction",
    "spellcheck",
    "style",
    "title",
    "translate",
    "writingsuggestions"
  ],
  "html-global/autocapitalize": [
    "characters",
    "none",
    "off",
    "on",
    "sentences",
    "words"
  ],
  "html-global/contenteditable": [
    "false",
    "plaintext-only",
    "true"
  ],
  "html-global/dir": [
    "auto",
    "ltr",
    "rtl"
  ],
  "html-global/draggable": [
    "false",
    "true"
  ],
  "html-global/enterkeyhint": [
    "done",
    "enter",
    "go",
    "next",
    "previous",
    "search",
    "send"
  ],
  "html-global/hidden": [
    "hidden",
    "until-found"
  ],
  "html-global/inputmode": [
    "decimal",
    "email",
    "none",
    "numeric",
    "search",
    "tel",
    "text",
    "url"
  ],
  "html-global/popover": [
    "auto",
    "manual"
  ],
  "html-global/popovertargetaction": [
    "hide",
    "show",
    "toggle"
  ],
  "html-global/spellcheck": [
    "false",
    "true"
  ],
  "html-global/translate": [
    "no",
    "yes"
  ],
  "html-global/writingsuggestions": [
    "false",
    "true"
  ],
  "htmlinputelement": [
    "capture"
  ],
  "htmlsvg-global": [
    "nonce",
    "tabindex"
  ],
  "hwb()": [
    "alpha",
    "b",
    "h",
    "hwb",
    "w"
  ],
  "hyphenate-character": [
    "auto"
  ],
  "hyphenate-limit-chars": [
    "auto"
  ],
  "hyphenate-limit-lines": [
    "always",
    "column",
    "none",
    "page",
    "spread"
  ],
  "hyphens": [
    "auto",
    "manual",
    "none"
  ],
  "icon purpose": [
    "any",
    "maskable",
    "monochrome"
  ],
  "id_assertion_endpoint_request": [
    "account_id",
    "client_id",
    "disclosure_text_shown",
    "nonce"
  ],
  "iframe": [
    "adauctionheaders",
    "align",
    "allow",
    "allowfullscreen",
    "allowtransparency",
    "browsingtopics",
    "csp",
    "frameborder",
    "framespacing",
    "height",
    "hspace",
    "loading",
    "longdesc",
    "marginheight",
    "marginwidth",
    "name",
    "policy object",
    "privatetoken",
    "referrerpolicy",
    "requiredextensions",
    "sandbox",
    "scrolling",
    "sharedstoragewritable",
    "src",
    "srcdoc",
    "systemlanguage",
    "vspace",
    "width"
  ],
  "iframe/csp": [
    "valid attribute value"
  ],
  "iframe/loading": [
    "eager",
    "lazy"
  ],
  "iframe/sandbox": [
    "allow-downloads",
    "allow-forms",
    "allow-modals",
    "allow-orientation-lock",
    "allow-pointer-lock",
    "allow-popups",
    "allow-popups-to-escape-sandbox",
    "allow-presentation",
    "allow-same-origin",
    "allow-scripts",
    "allow-storage-access-by-user-activation",
    "allow-top-navigation",
    "allow-top-navigation-by-user-activation",
    "allow-top-navigation-to-custom-protocols"
  ],
  "image": [
    "crossorigin",
    "href",
    "requiredextensions",
    "systemlanguage",
    "xlink:href",
    "xlink:title"
  ],
  "image request": [
    "current url",
    "image data",
    "state"
  ],
  "image resource": [
    "label",
    "sizes",
    "src",
    "type"
  ],
  "image-orientation": [
    "<angle>",
    "flip",
    "from-image",
    "none"
  ],
  "image-rendering": [
    "auto",
    "crisp-edges",
    "high-quality",
    "pixelated",
    "smooth"
  ],
  "image-resolution": [
    "from-image",
    "snap"
  ],
  "image-set()": [
    "type()"
  ],
  "img": [
    "align",
    "alt",
    "attributionsrc",
    "border",
    "crossorigin",
    "decoding",
    "fetchpriority",
    "form owner",
    "height",
    "hspace",
    "ismap",
    "loading",
    "longdesc",
    "lowsrc",
    "name",
    "referrerpolicy",
    "sharedstoragewritable",
    "sizes",
    "src",
    "srcset",
    "usemap",
    "vspace",
    "width"
  ],
  "img/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "img/decoding": [
    "async",
    "auto",
    "sync"
  ],
  "img/fetchpriority": [
    "auto",
    "high",
    "low"
  ],
  "img/loading": [
    "eager",
    "lazy"
  ],
  "in": [
    "backgroundalpha",
    "backgroundimage",
    "fillpaint",
    "sourcealpha",
    "sourcegraphic",
    "strokepaint"
  ],
  "index": [
    "key path",
    "keys",
    "list of records",
    "multientry flag",
    "name",
    "records",
    "referenced",
    "referenced value",
    "references",
    "unique flag",
    "values"
  ],
  "index-handle": [
    "index",
    "name",
    "object store handle",
    "transaction"
  ],
  "initial-letter": [
    "drop",
    "initial letter sink",
    "initial letter size",
    "normal",
    "raise"
  ],
  "initial-letter-align": [
    "alphabetic",
    "border-box",
    "hanging",
    "ideographic",
    "leading"
  ],
  "initial-letter-wrap": [
    "all",
    "first",
    "grid",
    "none"
  ],
  "inline-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "inline-sizing": [
    "normal",
    "stretch"
  ],
  "input": [
    "accept",
    "align",
    "alt",
    "autocomplete",
    "border",
    "button",
    "capture",
    "checkbox",
    "checked",
    "color",
    "date",
    "dirname",
    "disabled",
    "email",
    "file upload",
    "form",
    "form owner",
    "hidden",
    "hspace",
    "image button",
    "ismap",
    "list",
    "local date and time",
    "max",
    "maxlength",
    "min",
    "minlength",
    "month",
    "multiple",
    "name",
    "number",
    "password",
    "pattern",
    "placeholder",
    "radio button",
    "range",
    "readonly",
    "required",
    "reset button",
    "search",
    "size",
    "src",
    "step",
    "submit button",
    "telephone",
    "text",
    "time",
    "title",
    "type",
    "url",
    "usemap",
    "value",
    "vspace",
    "week"
  ],
  "input-security": [
    "auto",
    "none"
  ],
  "input/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "input/formmethod": [
    "dialog",
    "get",
    "post"
  ],
  "input/type": [
    "button",
    "checkbox",
    "color",
    "date",
    "datetime-local",
    "email",
    "file",
    "hidden",
    "image",
    "month",
    "number",
    "password",
    "radio",
    "range",
    "reset",
    "search",
    "submit",
    "tel",
    "text",
    "time",
    "url",
    "week"
  ],
  "ins": [
    "cite",
    "datetime"
  ],
  "insecure requests policy": [
    "do not upgrade",
    "upgrade"
  ],
  "inset": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset()": [
    "equivalent path"
  ],
  "inset-area": [
    "<inset-area>",
    "block-end",
    "block-self-end",
    "block-self-start",
    "block-start",
    "bottom",
    "center",
    "end",
    "inline-end",
    "inline-self-end",
    "inline-self-start",
    "inline-start",
    "left",
    "none",
    "right",
    "self-end",
    "self-start",
    "span-all",
    "span-block-end",
    "span-block-start",
    "span-bottom",
    "span-end",
    "span-inline-end",
    "span-inline-start",
    "span-start",
    "span-top",
    "span-x-end",
    "span-x-start",
    "span-y-end",
    "span-y-start",
    "start",
    "top",
    "x-end",
    "x-self-end",
    "x-self-start",
    "x-start",
    "y-end",
    "y-self-end",
    "y-self-start",
    "y-start"
  ],
  "inset-block": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-block-end": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-block-start": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-inline": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-inline-end": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "inset-inline-start": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "installed app": [
    "fingerprints",
    "id",
    "relatedurls",
    "version"
  ],
  "intent": [
    "application",
    "number"
  ],
  "interaction data": [
    "contentful paint",
    "emitted",
    "same document commit",
    "start time",
    "url"
  ],
  "interest group": [
    "ad components",
    "ad sizes",
    "additional bid key",
    "ads",
    "all sellers capabilities",
    "bid counts",
    "bidding url",
    "bidding wasm helper url",
    "enable bidding signals prioritization",
    "estimated size",
    "execution mode",
    "expiry",
    "join counts",
    "join time",
    "joining origin",
    "last updated",
    "max trusted bidding signals url length",
    "name",
    "next update after",
    "owner",
    "previous wins",
    "priority",
    "priority signals overrides",
    "priority vector",
    "private aggregation coordinator",
    "seller capabilities",
    "size groups",
    "trusted bidding signals keys",
    "trusted bidding signals slot size mode",
    "trusted bidding signals url",
    "update url",
    "user bidding signals"
  ],
  "interest group ad": [
    "ad render id",
    "allowed reporting origins",
    "buyer and seller reporting id",
    "buyer reporting id",
    "metadata",
    "render url",
    "size group"
  ],
  "interest group descriptor": [
    "name",
    "owner",
    "value",
    "visibility"
  ],
  "interface": [
    "include",
    "inclusive inherited interfaces",
    "inherit"
  ],
  "intermediate memory breakdown entry": [
    "bytes",
    "realms",
    "types"
  ],
  "internal usage": [
    "attachment",
    "attachment-read",
    "constant",
    "input",
    "storage",
    "storage-read"
  ],
  "interpolate-size": [
    "allow-keywords",
    "numeric-only"
  ],
  "interpolation sampling": [
    "center",
    "centroid",
    "either",
    "first",
    "sample"
  ],
  "interpolation type": [
    "flat",
    "linear",
    "perspective"
  ],
  "iteration": [
    "break",
    "continue",
    "while"
  ],
  "job": [
    "client",
    "containing job queue",
    "force bypass cache flag",
    "job promise",
    "job type",
    "list of equivalent jobs",
    "referrer",
    "scope url",
    "script url",
    "storage key",
    "update via cache mode",
    "worker type"
  ],
  "justify-content": [
    "center",
    "end",
    "flex-end",
    "flex-start",
    "left",
    "normal",
    "right",
    "space-around",
    "space-between",
    "space-evenly",
    "start",
    "stretch"
  ],
  "justify-items": [
    "anchor-center",
    "baseline",
    "first",
    "first baseline",
    "last",
    "last baseline",
    "left",
    "legacy",
    "right"
  ],
  "justify-self": [
    "anchor-center",
    "auto",
    "baseline",
    "center",
    "end",
    "first",
    "first baseline",
    "flex-end",
    "flex-start",
    "last",
    "last baseline",
    "left",
    "normal",
    "right",
    "self-end",
    "self-start",
    "start",
    "stretch"
  ],
  "kana": [
    "full-size",
    "full-size kana",
    "small",
    "small kana"
  ],
  "key": [
    "maximum length",
    "type",
    "value"
  ],
  "key generator": [
    "current number"
  ],
  "key range": [
    "lower bound",
    "lower open flag",
    "upper bound",
    "upper open flag"
  ],
  "keyframe effect": [
    "effect target"
  ],
  "lab()": [
    "a",
    "alpha",
    "b",
    "l",
    "lab"
  ],
  "label": [
    "for"
  ],
  "language_extension": [
    "packed_4x8_integer_dot_product",
    "pointer_composite_access",
    "readonly_and_readwrite_storage_textures",
    "unrestricted_pointer_parameters"
  ],
  "largest contentful paint candidate": [
    "element",
    "request"
  ],
  "layers": [
    "initialize the render state",
    "update the pending layers state"
  ],
  "layout API context": [
    "mode",
    "unique id",
    "work queue"
  ],
  "layout api work task": [
    "child break token",
    "layout child",
    "layout constraints",
    "promise",
    "task type"
  ],
  "layout definition": [
    "child input properties",
    "class constructor",
    "constructor valid flag",
    "input properties",
    "intrinsic sizes function",
    "intrinsic sizes generator function",
    "layout function",
    "layout generator function",
    "layout options"
  ],
  "lch()": [
    "alpha",
    "c",
    "h",
    "l",
    "lch"
  ],
  "leader()": [
    "dotted",
    "solid",
    "space"
  ],
  "leading bid info": [
    "at most one top bid owner",
    "auction config",
    "bidding data version",
    "buyer reporting result",
    "component seller",
    "component seller reporting result",
    "highest scoring other bid",
    "highest scoring other bid owner",
    "highest scoring other bids count",
    "leading bid",
    "leading non-k-anon-enforced bid",
    "scoring data version",
    "second highest score",
    "seller reporting result",
    "top bids count",
    "top level seller",
    "top level seller signals",
    "top non-k-anon-enforced bids count",
    "top non-k-anon-enforced score",
    "top score"
  ],
  "left": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "legacy platform object": [
    "getownproperty"
  ],
  "legend": [
    "align"
  ],
  "letter-spacing": [
    "<length-percentage>",
    "<length>",
    "normal"
  ],
  "li": [
    "type",
    "value"
  ],
  "limit": [
    "better",
    "default"
  ],
  "limit class": [
    "alignment",
    "maximum"
  ],
  "line": [
    "requiredextensions",
    "systemlanguage",
    "x1",
    "x2",
    "y1",
    "y2"
  ],
  "line-break": [
    "anywhere",
    "auto",
    "loose",
    "normal",
    "strict"
  ],
  "line-clamp": [
    "<block-ellipsis>",
    "<integer [1,∞]> <block-ellipsis>?",
    "none"
  ],
  "line-fit-edge": [
    "alphabetic",
    "cap",
    "ex",
    "ideographic",
    "ideographic-ink",
    "leading",
    "text"
  ],
  "line-gap-override!!descriptor": [
    "normal"
  ],
  "line-grid": [
    "create",
    "match-parent"
  ],
  "line-height": [
    "normal"
  ],
  "line-snap": [
    "baseline",
    "contain",
    "none"
  ],
  "linear easing function": [
    "points",
    "serialized computed value"
  ],
  "linear easing point": [
    "input",
    "output"
  ],
  "linearGradient": [
    "gradienttransform",
    "gradientunits",
    "href",
    "spreadmethod",
    "x1",
    "x2",
    "xlink:href",
    "xlink:title",
    "y1",
    "y2"
  ],
  "link": [
    "as",
    "blocking",
    "charset",
    "color",
    "crossorigin",
    "disabled",
    "fetchpriority",
    "header-integrity",
    "href",
    "hreflang",
    "imagesizes",
    "imagesrcset",
    "integrity",
    "media",
    "methods",
    "referrerpolicy",
    "rel",
    "rev",
    "sizes",
    "target",
    "title",
    "type",
    "urn",
    "variant-key",
    "variants"
  ],
  "link/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "link/fetchpriority": [
    "auto",
    "high",
    "low"
  ],
  "link/rel": [
    "allowed-alt-sxg",
    "alternate",
    "author",
    "canonical",
    "dns-prefetch",
    "expect",
    "help",
    "icon",
    "license",
    "manifest",
    "modulepreload",
    "next",
    "pingback",
    "preconnect",
    "prefetch",
    "preload",
    "prev",
    "privacy-policy",
    "search",
    "stylesheet",
    "terms-of-service"
  ],
  "list": [
    "append",
    "clone",
    "contain",
    "empty",
    "exist",
    "extend",
    "for each",
    "get the indices",
    "indices",
    "insert",
    "is empty",
    "is not empty",
    "item",
    "iterate",
    "prepend",
    "remove",
    "replace",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order"
  ],
  "list-style-image": [
    "none"
  ],
  "list-style-position": [
    "inside",
    "outside"
  ],
  "list-style-type": [
    "armenian",
    "circle",
    "decimal",
    "decimal-leading-zero",
    "disc",
    "georgian",
    "lower-alpha",
    "lower-greek",
    "lower-latin",
    "lower-roman",
    "none",
    "square",
    "upper-alpha",
    "upper-latin",
    "upper-roman"
  ],
  "listener": [
    "host",
    "port",
    "secure flag"
  ],
  "live range": [
    "clone the contents",
    "cloning the contents",
    "contained",
    "extract",
    "insert",
    "partially contained",
    "root"
  ],
  "local storage bucket": [
    "mode"
  ],
  "lock manager": [
    "held lock set",
    "lock request queue map"
  ],
  "lock request": [
    "agent",
    "callback",
    "clientid",
    "manager",
    "mode",
    "name",
    "promise",
    "signal"
  ],
  "lock-concept": [
    "agent",
    "clientid",
    "manager",
    "mode",
    "name",
    "released promise",
    "waiting promise"
  ],
  "logical-page": [
    "recto",
    "verso"
  ],
  "logical-page-selector": [
    ":recto",
    ":verso"
  ],
  "maction": [
    "actiontype",
    "selection"
  ],
  "makeCred": [
    "enterpriseattestation",
    "excludelist",
    "extensions",
    "input parameters",
    "option key",
    "options",
    "pinuvauthparam",
    "pinuvauthprotocol",
    "pubkeycredparams",
    "rk",
    "rp.id",
    "up",
    "uv"
  ],
  "manifest": [
    "background_color",
    "categories",
    "client_mode",
    "description",
    "dir",
    "display",
    "display_override",
    "file_handlers",
    "iarc_rating_id",
    "icons",
    "id",
    "lang",
    "launch_handler",
    "name",
    "navigation scope",
    "navigation scope of a manifest",
    "orientation",
    "prefer_related_applications",
    "protocol_handlers",
    "related_applications",
    "scope",
    "screenshots",
    "share_target",
    "short_name",
    "shortcuts",
    "start_url",
    "theme_color",
    "within scope"
  ],
  "manifest image resource": [
    "purpose"
  ],
  "mantissa": [
    "significant"
  ],
  "map": [
    "clear",
    "clone",
    "contain",
    "entry",
    "exist",
    "for each",
    "get",
    "get the keys",
    "get the value",
    "get the values",
    "getting the keys",
    "getting the values",
    "is empty",
    "is not empty",
    "iterate",
    "key",
    "keys",
    "name",
    "remove",
    "set",
    "set the value",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order",
    "value",
    "values"
  ],
  "mapped url": [
    "value",
    "visibility"
  ],
  "margin": [
    "logical"
  ],
  "margin-break": [
    "auto",
    "discard",
    "keep"
  ],
  "margin-trim": [
    "block",
    "block-end",
    "block-start",
    "inline",
    "inline-end",
    "inline-start",
    "none"
  ],
  "marker": [
    "markerheight",
    "markerunits",
    "markerwidth",
    "orient",
    "refx",
    "refy"
  ],
  "marker-side": [
    "match-parent",
    "match-self"
  ],
  "marquee": [
    "behavior",
    "direction",
    "loop",
    "truespeed"
  ],
  "mask": [
    "height",
    "maskcontentunits",
    "maskunits",
    "requiredextensions",
    "systemlanguage",
    "width",
    "x",
    "y"
  ],
  "mask-border-mode": [
    "alpha",
    "luminance"
  ],
  "mask-border-slice": [
    "fill"
  ],
  "mask-clip": [
    "border-box",
    "content-box",
    "fill-box",
    "no-clip",
    "padding-box",
    "stroke-box",
    "view-box"
  ],
  "mask-composite": [
    "add",
    "exclude",
    "intersect",
    "subtract"
  ],
  "mask-image": [
    "<url>"
  ],
  "mask-mode": [
    "alpha",
    "luminance",
    "match-source"
  ],
  "mask-origin": [
    "border-box",
    "content-box",
    "fill-box",
    "padding-box",
    "stroke-box",
    "view-box"
  ],
  "mask-type": [
    "alpha",
    "luminance"
  ],
  "maskContentUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "maskUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "match an attribution source against a filter config": [
    "isnegated"
  ],
  "match an attribution source against filters": [
    "isnegated"
  ],
  "math": [
    "alttext",
    "display"
  ],
  "matrix": [
    "is 2d",
    "m11 element",
    "m12 element",
    "m13 element",
    "m14 element",
    "m21 element",
    "m22 element",
    "m23 element",
    "m24 element",
    "m31 element",
    "m32 element",
    "m33 element",
    "m34 element",
    "m41 element",
    "m42 element",
    "m43 element",
    "m44 element",
    "validate and fixup",
    "validate and fixup (2d)"
  ],
  "max-block-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "max-height": [
    "calc-size()",
    "contain",
    "fit-content",
    "fit-content()",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "none",
    "stretch"
  ],
  "max-inline-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "max-lines": [
    "none"
  ],
  "max-width": [
    "calc-size()",
    "contain",
    "fit-content",
    "fit-content()",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "none",
    "stretch"
  ],
  "media element": [
    "muted",
    "potentially playing"
  ],
  "media key session": [
    "closed"
  ],
  "media session action source": [
    "target"
  ],
  "mediastreamconstraints": [
    "peeridentity"
  ],
  "mediastreamtrack": [
    "isolated",
    "onisolationchange"
  ],
  "memory attribution token": [
    "container",
    "cross-origin aggregated flag"
  ],
  "menu": [
    "compact",
    "label",
    "type"
  ],
  "meta": [
    "charset",
    "content",
    "http-equiv",
    "media",
    "name",
    "scheme"
  ],
  "meta/http-equiv": [
    "content-language",
    "content-security-policy",
    "content-type",
    "default-style",
    "refresh",
    "set-cookie",
    "x-ua-compatible"
  ],
  "meta/name": [
    "application-name",
    "author",
    "color-scheme",
    "description",
    "generator",
    "keywords",
    "referrer",
    "theme-color"
  ],
  "meter": [
    "high",
    "low",
    "max",
    "min",
    "optimum",
    "value"
  ],
  "method": [
    "normalize"
  ],
  "mfrac": [
    "linethickness"
  ],
  "min-block-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "min-height": [
    "auto",
    "calc-size()",
    "contain",
    "fit-content",
    "fit-content()",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "min-inline-size": [
    "contain",
    "fit-content",
    "stretch"
  ],
  "min-intrinsic-size": [
    "legacy",
    "zero-if-extrinsic",
    "zero-if-scroll"
  ],
  "min-intrinsic-sizing": [
    "legacy",
    "zero-if-extrinsic",
    "zero-if-scroll"
  ],
  "min-width": [
    "auto",
    "calc-size()",
    "contain",
    "fit-content",
    "fit-content()",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "mo": [
    "fence",
    "form",
    "largeop",
    "lspace",
    "maxsize",
    "minsize",
    "movablelimits",
    "rspace",
    "separator",
    "stretchy",
    "symmetric"
  ],
  "model": [
    "autoplay",
    "controls",
    "crossorigin",
    "height",
    "interactive",
    "loading",
    "loop",
    "muted",
    "poster",
    "src",
    "width"
  ],
  "module": [
    "module name"
  ],
  "modules": [
    "browser",
    "browsingcontext",
    "input",
    "log",
    "network",
    "script",
    "session",
    "storage"
  ],
  "monotonic clock": [
    "unsafe current time"
  ],
  "mover": [
    "accent",
    "accentunder"
  ],
  "mpadded": [
    "depth",
    "height",
    "lspace",
    "voffset",
    "width"
  ],
  "mpath": [
    "href"
  ],
  "mspace": [
    "depth",
    "height",
    "width"
  ],
  "munder": [
    "accent",
    "accentunder"
  ],
  "munderover": [
    "accent",
    "accentunder"
  ],
  "navigable": [
    "active browsing context",
    "active document",
    "active window",
    "container",
    "container document",
    "loading mode",
    "parent",
    "top-level traversable",
    "traversable navigable",
    "unfenced container document",
    "unfenced parent"
  ],
  "navigable container": [
    "content navigable"
  ],
  "navigate": [
    "documentresource",
    "exceptionsenabled",
    "formdataentrylist",
    "historyhandling",
    "navigationapistate",
    "navigationsourceeligible",
    "response"
  ],
  "navigation params": [
    "delivery type",
    "fenced frame config instance",
    "navigationsourceeligible",
    "prefetched subresource signed exchanges",
    "user involvement"
  ],
  "navigation style values": [
    "custom",
    "default"
  ],
  "nested configs": [
    "value",
    "visibility"
  ],
  "network reporting endpoint": [
    "pending",
    "priority",
    "retry_after",
    "weight"
  ],
  "network_reporting_endpoints": [
    "endpoints",
    "group",
    "include_subdomains",
    "max_age",
    "priority",
    "url",
    "weight"
  ],
  "new_tab_button": [
    "url"
  ],
  "nfc": [
    "nfc user presence maximum time limit",
    "nfc userpresent flag"
  ],
  "no-composite": [
    "no-composite"
  ],
  "node": [
    "appended by soft navigation",
    "context origin"
  ],
  "none": [
    "<link-param>+",
    "none"
  ],
  "note_taking": [
    "new_note_url"
  ],
  "notification": [
    "actions",
    "badge resource",
    "badge url",
    "body",
    "data",
    "direction",
    "icon resource",
    "icon url",
    "image resource",
    "image url",
    "language",
    "origin",
    "renotify preference",
    "require interaction preference",
    "service worker registration",
    "silent preference",
    "tag",
    "timestamp",
    "title",
    "vibration pattern"
  ],
  "nullable types": [
    "inner type"
  ],
  "object": [
    "align",
    "archive",
    "autocomplete",
    "border",
    "classid",
    "code",
    "codebase",
    "codetype",
    "data",
    "declare",
    "disabled",
    "form",
    "form owner",
    "height",
    "hspace",
    "name",
    "standby",
    "type",
    "typemustmatch",
    "usemap",
    "vspace",
    "width"
  ],
  "object-fit": [
    "contain",
    "cover",
    "fill",
    "none",
    "scale-down"
  ],
  "object-store": [
    "in-line keys",
    "key path",
    "list of records",
    "name",
    "out-of-line keys",
    "record"
  ],
  "object-store-handle": [
    "index set",
    "name",
    "object store",
    "transaction"
  ],
  "object-view-box": [
    "none"
  ],
  "object/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "observable array attribute": [
    "backing list",
    "delete an indexed value",
    "set an indexed value"
  ],
  "observable array exotic object": [
    "set the indexed value",
    "set the length",
    "setting the indexed value",
    "setting the length"
  ],
  "obtain a connection": [
    "requireunreliable"
  ],
  "obtain an event-level report": [
    "triggerdebugkey"
  ],
  "obtain and deliver debug reports on trigger registration": [
    "sourcetoattribute"
  ],
  "obtain verbose debug data body on trigger registration": [
    "report",
    "sourcetoattribute"
  ],
  "obtain verbose debug data on trigger registration": [
    "report",
    "sourcetoattribute"
  ],
  "offset-anchor": [
    "auto"
  ],
  "offset-path": [
    "<offset-path> || <coord-box>",
    "<ray()>",
    "none"
  ],
  "offset-position": [
    "auto",
    "normal"
  ],
  "offset-rotate": [
    "auto",
    "reverse"
  ],
  "offsetpath": [
    "<size>",
    "contain",
    "initial direction",
    "initial position",
    "none",
    "path()",
    "ray()"
  ],
  "oklab()": [
    "a",
    "alpha",
    "b",
    "l",
    "oklab"
  ],
  "oklch()": [
    "alpha",
    "c",
    "h",
    "l",
    "oklch"
  ],
  "ol": [
    "compact",
    "reversed",
    "start",
    "type"
  ],
  "ol/type": [
    "1",
    "a",
    "i"
  ],
  "on event contribution cache entry": [
    "batching scope",
    "contribution",
    "debug details",
    "debug scope",
    "worklet function"
  ],
  "opacity": [
    "<opacity-value>"
  ],
  "opaque framebuffer": [
    "session"
  ],
  "operator": [
    "activation",
    "activation function",
    "arithmetic",
    "atop",
    "in",
    "input",
    "label",
    "lighter",
    "out",
    "output",
    "over",
    "xor"
  ],
  "optgroup": [
    "disabled",
    "label"
  ],
  "option": [
    "disabled",
    "label",
    "name",
    "selected",
    "value"
  ],
  "optional argument": [
    "default value"
  ],
  "options": [
    "delimiter code point",
    "ignore case",
    "prefix code point"
  ],
  "origin": [
    "domain",
    "host",
    "port",
    "prevent silent access flag",
    "requires user mediation",
    "scheme"
  ],
  "origin-bound one-time code message": [
    "code",
    "embedded host",
    "explanatory text",
    "top-level host"
  ],
  "outline-color": [
    "auto",
    "invert"
  ],
  "output": [
    "autocomplete",
    "disabled",
    "for",
    "form",
    "form owner",
    "name"
  ],
  "output/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "overflow": [
    "auto",
    "clip",
    "hidden",
    "overlay",
    "scroll",
    "visible"
  ],
  "overflow-anchor": [
    "auto",
    "none"
  ],
  "overflow-block": [
    "overlay"
  ],
  "overflow-inline": [
    "overlay"
  ],
  "overflow-wrap": [
    "anywhere",
    "break-word",
    "normal"
  ],
  "overflow-x": [
    "auto",
    "clip",
    "hidden",
    "overlay",
    "scroll",
    "visible"
  ],
  "overflow-y": [
    "auto",
    "clip",
    "hidden",
    "overlay",
    "scroll",
    "visible"
  ],
  "overlay": [
    "auto",
    "none"
  ],
  "overscroll-behavior": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-block": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-inline": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-x": [
    "auto",
    "contain",
    "none"
  ],
  "overscroll-behavior-y": [
    "auto",
    "contain",
    "none"
  ],
  "p": [
    "align"
  ],
  "padding": [
    "logical"
  ],
  "page-break-after": [
    "always",
    "auto",
    "avoid",
    "left",
    "right"
  ],
  "page-break-before": [
    "always",
    "auto",
    "avoid",
    "left",
    "right"
  ],
  "page-break-inside": [
    "always",
    "auto",
    "avoid",
    "avoid-column",
    "avoid-page",
    "avoid-region",
    "left",
    "right"
  ],
  "page-orientation": [
    "rotate-left",
    "rotate-right",
    "upright"
  ],
  "paint definition": [
    "class constructor",
    "constructor valid flag",
    "input properties",
    "paint function",
    "paintrenderingcontext2dsettings object"
  ],
  "parallel queue": [
    "enqueue steps",
    "enqueue the following steps"
  ],
  "parsed payment method manifest": [
    "default applications",
    "supported origins"
  ],
  "part": [
    "modifier",
    "name",
    "prefix",
    "suffix",
    "type",
    "value"
  ],
  "part/modifier": [
    "none",
    "one-or-more",
    "optional",
    "zero-or-more"
  ],
  "part/type": [
    "fixed-text",
    "full-wildcard",
    "regexp",
    "segment-wildcard"
  ],
  "path": [
    "requiredextensions",
    "systemlanguage"
  ],
  "pattern": [
    "height",
    "href",
    "patterncontentunits",
    "patterntransform",
    "patternunits",
    "width",
    "x",
    "xlink:href",
    "xlink:title",
    "y"
  ],
  "pattern parser": [
    "encoding callback",
    "index",
    "next numeric name",
    "part list",
    "pending fixed value",
    "segment wildcard regexp",
    "token list"
  ],
  "pattern string": [
    "well formed"
  ],
  "pause-after": [
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "pause-before": [
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "payment handler": [
    "payment method changed algorithm"
  ],
  "peak brightness": [
    "high peak brightness"
  ],
  "pending abort request": [
    "promise",
    "reason",
    "was already erroring"
  ],
  "pending event": [
    "destination",
    "event"
  ],
  "pending external speculation rule resource": [
    "cancel and discard",
    "controller",
    "fetch",
    "url"
  ],
  "pending image record": [
    "element",
    "loadtime",
    "request"
  ],
  "pending processor construction data": [
    "node reference",
    "transferred port"
  ],
  "periodic sync registration": [
    "anchor time",
    "minimum interval",
    "service worker registration",
    "state",
    "tag"
  ],
  "periodic sync scheduler": [
    "time of last fire"
  ],
  "periodicsync event": [
    "in the background"
  ],
  "permission": [
    "\"denied\"",
    "\"granted\"",
    "\"prompt\"",
    "denied",
    "grant",
    "granted",
    "lifetime",
    "prompt",
    "state",
    "states"
  ],
  "permission key": [
    "is equal to",
    "requester",
    "top-level"
  ],
  "permission store entry": [
    "descriptor",
    "key",
    "state"
  ],
  "permissions policy": [
    "declared policy",
    "inherited policy"
  ],
  "permissions policy state": [
    "private aggregation enabled"
  ],
  "perms-param": [
    "permissions"
  ],
  "perspective": [
    "none"
  ],
  "perspective()": [
    "none"
  ],
  "perspective-origin": [
    "bottom",
    "center",
    "left",
    "right",
    "top"
  ],
  "physical address": [
    "address line",
    "city",
    "country",
    "dependent locality",
    "organization",
    "phone number",
    "postal code",
    "recipient",
    "region",
    "sorting code"
  ],
  "pinUvAuthProtocol": [
    "authenticate",
    "beginusingpinuvauthtoken",
    "clearpinuvauthtokenpermissionsexceptlbw",
    "clearuserpresentflag",
    "clearuserverifiedflag",
    "decapsulate",
    "decrypt",
    "encapsulate",
    "encrypt",
    "getpublickey",
    "getuserpresentflagvalue",
    "getuserverifiedflagvalue",
    "initialize",
    "pinuvauthtokenusagetimerobserver",
    "regenerate",
    "resetpinuvauthtoken",
    "stopusingpinuvauthtoken",
    "verify"
  ],
  "pixel": [
    "color depth"
  ],
  "platform collector": [
    "activated",
    "associated pressure source"
  ],
  "platform object": [
    "[[Detached]]",
    "post-prerendering activation steps list"
  ],
  "play state": [
    "finished",
    "idle",
    "paused",
    "running"
  ],
  "playback direction": [
    "alternate",
    "alternate-reverse",
    "normal",
    "reverse"
  ],
  "point": [
    "w perspective",
    "x coordinate",
    "y coordinate",
    "z coordinate"
  ],
  "pointer-events": [
    "auto",
    "none"
  ],
  "policy": [
    "directive set",
    "disposition",
    "self-origin",
    "source",
    "subsume",
    "subsumed by"
  ],
  "policy configuration": [
    "reporting endpoint",
    "value"
  ],
  "policy container": [
    "csp list",
    "embedder policy",
    "ip address space",
    "referrer policy"
  ],
  "policy-controlled feature": [
    "bluetooth",
    "default allowlist",
    "default allowlists",
    "direct-sockets",
    "private-state-token-issuance",
    "private-state-token-redemption",
    "serial",
    "smart-card"
  ],
  "polygon": [
    "points",
    "requiredextensions",
    "systemlanguage"
  ],
  "polyline": [
    "points",
    "requiredextensions",
    "systemlanguage"
  ],
  "popover visibility state": [
    "hidden",
    "showing"
  ],
  "portal": [
    "referrerpolicy",
    "src"
  ],
  "position": [
    "absolute",
    "fixed",
    "relative",
    "static",
    "sticky"
  ],
  "position-area": [
    "<position-area>",
    "block-end",
    "block-self-end",
    "block-self-start",
    "block-start",
    "bottom",
    "center",
    "end",
    "inline-end",
    "inline-self-end",
    "inline-self-start",
    "inline-start",
    "left",
    "none",
    "right",
    "self-end",
    "self-start",
    "span-all",
    "span-block-end",
    "span-block-start",
    "span-bottom",
    "span-end",
    "span-inline-end",
    "span-inline-start",
    "span-start",
    "span-top",
    "span-x-end",
    "span-x-start",
    "span-y-end",
    "span-y-start",
    "start",
    "top",
    "x-end",
    "x-self-end",
    "x-self-start",
    "x-start",
    "y-end",
    "y-self-end",
    "y-self-start",
    "y-start"
  ],
  "position-try-fallbacks": [
    "<'position-area'>",
    "<dashed-ident> || <try-tactic>",
    "<try-tactic>",
    "flip-block",
    "flip-inline",
    "flip-start",
    "none"
  ],
  "position-try-options": [
    "<dashed-ident> || <try-tactic>",
    "<try-tactic>",
    "flip-block",
    "flip-inline",
    "flip-start",
    "inset-area( <'inset-area'> )",
    "none"
  ],
  "position-try-order": [
    "most-block-size",
    "most-height",
    "most-inline-size",
    "most-width",
    "normal"
  ],
  "position-visibility": [
    "always",
    "anchors-valid",
    "anchors-visible",
    "no-overflow"
  ],
  "powerful feature": [
    "aspects",
    "default permission state",
    "extra permission data",
    "extra permission data constraints",
    "extra permission data type",
    "name",
    "permission descriptor type",
    "permission key comparison algorithm",
    "permission key generation algorithm",
    "permission key type",
    "permission query algorithm",
    "permission result type",
    "permission revocation algorithm",
    "permission state constraints"
  ],
  "pre": [
    "width"
  ],
  "pre-specified report parameters": [
    "context id",
    "filtering id max bytes"
  ],
  "prefetch IP anonymization policy": [
    "requires anonymity"
  ],
  "prefetch candidate": [
    "anonymization policy",
    "continues",
    "eagerness",
    "no-vary-search hint",
    "referrer policy",
    "url"
  ],
  "prefetch record": [
    "anonymization policy",
    "cancel and discard",
    "complete",
    "expiry time",
    "fetch controller",
    "had conflicting credentials",
    "is expected to match a url",
    "isolated partition key",
    "label",
    "matches a url",
    "no-vary-search hint",
    "redirect chain",
    "referrer policy",
    "response",
    "sandboxing flag set",
    "source partition key",
    "start time",
    "state",
    "url"
  ],
  "prerender candidate": [
    "eagerness",
    "no-vary-search hint",
    "referrer policy",
    "target navigable name hint",
    "url"
  ],
  "prerender record": [
    "is expected to match a url",
    "matches a url",
    "no-vary-search hint",
    "prerendering traversable",
    "start time",
    "starting url"
  ],
  "prerendering navigable": [
    "prerender-scoped accept-ch cache"
  ],
  "prerendering traversable": [
    "activate",
    "finalize activation",
    "prerender initial response search variance",
    "remove from referrer",
    "update the successor for activation"
  ],
  "prescan a byte stream to determine its encoding": [
    "end condition"
  ],
  "pressure source": [
    "latest sample"
  ],
  "pressure source sample": [
    "data",
    "timestamp"
  ],
  "previous win": [
    "ad json",
    "time"
  ],
  "primitiveUnits": [
    "objectboundingbox",
    "userspaceonuse"
  ],
  "print-color-adjust": [
    "economy",
    "exact"
  ],
  "processor construction data": [
    "name",
    "node",
    "options",
    "port"
  ],
  "progress": [
    "max",
    "value"
  ],
  "promise": [
    "react",
    "reacting"
  ],
  "prompt handler configuration": [
    "handler",
    "notify"
  ],
  "property": [
    "scoped",
    "scoped properties",
    "scoped property",
    "scoped to a sub-tree",
    "scoped to an element",
    "scoped to an element's sub-tree",
    "scoped to the element",
    "scoped to the element's sub-tree",
    "scoped to the sub-tree"
  ],
  "protocol": [
    "webtransport session",
    "webtransport stream"
  ],
  "protocol handler description": [
    "protocol",
    "url"
  ],
  "public key": [
    "algorithm"
  ],
  "public key credential source": [
    "id",
    "managing authenticator",
    "mutable item",
    "otherui",
    "privatekey",
    "rpid",
    "type",
    "userhandle"
  ],
  "pull-into descriptor": [
    "buffer",
    "buffer byte length",
    "byte length",
    "byte offset",
    "bytes filled",
    "element size",
    "minimum fill",
    "reader type",
    "view constructor"
  ],
  "q": [
    "cite"
  ],
  "quadrilateral": [
    "point 1",
    "point 2",
    "point 3",
    "point 4"
  ],
  "qualifier": [
    "<interval>"
  ],
  "queue": [
    "clone",
    "contain",
    "dequeue",
    "empty",
    "enqueue",
    "exist",
    "get the indices",
    "indices",
    "is empty",
    "is not empty",
    "item",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order"
  ],
  "quotes": [
    "[<string> <string>]+",
    "auto",
    "match-parent",
    "none"
  ],
  "race response": [
    "value"
  ],
  "radial-gradient()": [
    "<length [0,∞]>",
    "<length-percentage [0,∞]>{2}",
    "<radial-shape>",
    "<radial-size>",
    "closest-corner",
    "closest-side",
    "farthest-corner",
    "farthest-side",
    "gradient center"
  ],
  "radialGradient": [
    "cx",
    "cy",
    "fr",
    "fx",
    "fy",
    "gradienttransform",
    "gradientunits",
    "href",
    "r",
    "spreadmethod",
    "xlink:href",
    "xlink:title"
  ],
  "randomized response output configuration": [
    "max attributions per source",
    "trigger specs"
  ],
  "range": [
    "collapsed",
    "end",
    "end node",
    "end offset",
    "select",
    "start",
    "start node",
    "start offset"
  ],
  "rate-limit scope": [
    "aggregatable-attribution",
    "event-attribution",
    "source"
  ],
  "ray()": [
    "<ray-size>",
    "at <position>",
    "contain",
    "origin"
  ],
  "read buffer": [
    "bytes",
    "dump",
    "read",
    "reader",
    "reading up to",
    "stream"
  ],
  "read request": [
    "chunk steps",
    "close steps",
    "error steps"
  ],
  "read-into request": [
    "chunk steps",
    "close steps",
    "error steps"
  ],
  "readable byte stream queue entry": [
    "buffer",
    "byte length",
    "byte offset"
  ],
  "reading-flow": [
    "flex-flow",
    "flex-visual",
    "grid-columns",
    "grid-order",
    "grid-rows",
    "normal"
  ],
  "real time reporting contribution": [
    "bucket",
    "latency threshold",
    "priority weight"
  ],
  "realm": [
    "agent",
    "change",
    "global object",
    "is global prototype chain mutable",
    "settings object"
  ],
  "rect": [
    "requiredextensions",
    "systemlanguage"
  ],
  "rect()": [
    "equivalent path"
  ],
  "rectangle": [
    "height dimension",
    "origin",
    "width dimension",
    "x coordinate",
    "y coordinate"
  ],
  "recursive descent syntax": [
    "additive_operator",
    "argument_expression_list",
    "assignment_statement/0.1",
    "attribute",
    "bitwise_expression.post.unary_expression",
    "bool_literal",
    "case_selector",
    "component_or_swizzle_specifier",
    "compound_assignment_operator",
    "compound_statement",
    "compute_attr",
    "const_attr",
    "core_lhs_expression",
    "decimal_float_literal",
    "decimal_int_literal",
    "diagnostic_control",
    "diagnostic_rule_name",
    "expression",
    "float_literal",
    "for_init",
    "for_update",
    "fragment_attr",
    "func_call_statement.post.ident",
    "global_decl",
    "global_directive",
    "global_value_decl",
    "hex_float_literal",
    "ident",
    "int_literal",
    "interpolate_attr",
    "invariant_attr",
    "lhs_expression",
    "literal",
    "member_ident",
    "multiplicative_operator",
    "must_use_attr",
    "optionally_typed_ident",
    "param",
    "primary_expression",
    "relational_expression.post.unary_expression",
    "shift_expression.post.unary_expression",
    "statement",
    "switch_clause",
    "swizzle_name",
    "template_arg_expression",
    "template_elaborated_ident.post.ident",
    "translation_unit",
    "type_specifier",
    "unary_expression",
    "variable_decl",
    "variable_or_value_statement",
    "variable_updating_statement",
    "vertex_attr",
    "workgroup_size_attr"
  ],
  "redirect chain": [
    "update the response"
  ],
  "registered observer": [
    "observer",
    "options"
  ],
  "registrar": [
    "os",
    "web"
  ],
  "registration info": [
    "preferred platform",
    "report header errors"
  ],
  "related website set": [
    "associatedsites",
    "cctlds",
    "primary",
    "servicesites"
  ],
  "relevant global object": [
    "[[explicitlyGrantedAudioOutputDevices]]"
  ],
  "render pass layout": [
    "equal",
    "equals"
  ],
  "repeat()": [
    "auto-fill",
    "auto-fit"
  ],
  "repeating-conic-gradient()": [
    "gradient center"
  ],
  "repeating-radial-gradient()": [
    "<length [0,∞]>",
    "<length-percentage [0,∞]>{2}",
    "<radial-shape>",
    "<radial-size>",
    "closest-corner",
    "closest-side",
    "farthest-corner",
    "farthest-side",
    "gradient center"
  ],
  "report": [
    "attempts",
    "body",
    "destination",
    "timestamp",
    "type",
    "url",
    "user agent"
  ],
  "report window": [
    "end",
    "start"
  ],
  "report window list": [
    "total window"
  ],
  "reporting destination info": [
    "reporting macro map",
    "reporting url map"
  ],
  "reporting result": [
    "report url",
    "reporting beacon map",
    "reporting macro map"
  ],
  "representation": [
    "data",
    "iscustom",
    "mime type"
  ],
  "request": [
    "add a range header",
    "attribution reporting eligibility",
    "body",
    "cache mode",
    "capture-ad-auction-headers",
    "client",
    "clone",
    "credentials mode",
    "cryptographic nonce metadata",
    "current url",
    "destination",
    "determine the network partition key",
    "done flag",
    "effective directive",
    "error",
    "header list",
    "history-navigation flag",
    "initiator",
    "initiator type",
    "integrity metadata",
    "internal priority",
    "keepalive",
    "method",
    "mode",
    "open request",
    "origin",
    "parser metadata",
    "placed",
    "policy container",
    "prevent no-cache cache-control header modification flag",
    "priority",
    "private token issuers",
    "private token operation",
    "private token refresh policy",
    "processed",
    "processed flag",
    "pstpretokens",
    "redirect count",
    "redirect mode",
    "redirect-tainted origin",
    "referrer",
    "referrer policy",
    "reload-navigation flag",
    "render-blocking",
    "replaces client id",
    "reserved client",
    "response tainting",
    "result",
    "send browsing topics header boolean",
    "service-workers mode",
    "shared storage writable",
    "source",
    "stashed exchange",
    "target ip address space",
    "text directive user activation",
    "timing allow failed flag",
    "transaction",
    "unsafe-request flag",
    "url",
    "url list",
    "use-cors-preflight flag",
    "use-url-credentials flag",
    "user-activation",
    "window"
  ],
  "request/destination": [
    "script-like"
  ],
  "response": [
    "aborted flag",
    "body",
    "body info",
    "cache state",
    "came from a signed exchange",
    "clone",
    "cors-exposed header-name list",
    "date",
    "did not come from a signed exchange",
    "has-cross-origin-redirects",
    "header integrity value",
    "header list",
    "ip address space",
    "location url",
    "range-requested flag",
    "request-includes-credentials",
    "service worker timing info",
    "signed exchange outer header list",
    "status",
    "status message",
    "timing allow passed flag",
    "type",
    "url",
    "url list"
  ],
  "response body info": [
    "content type",
    "decoded size",
    "encoded size"
  ],
  "rest-after": [
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "rest-before": [
    "medium",
    "none",
    "strong",
    "weak",
    "x-strong",
    "x-weak"
  ],
  "result": [
    "<filter-primitive-reference>"
  ],
  "rgb()": [
    "alpha",
    "b",
    "g",
    "r"
  ],
  "right": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "rotate": [
    "none",
    "x",
    "y",
    "z"
  ],
  "row-gap": [
    "normal"
  ],
  "rtcidentityassertion": [
    "idp",
    "name"
  ],
  "rtcidentityassertionresult": [
    "assertion",
    "idp"
  ],
  "rtcidentityprovider": [
    "generateassertion",
    "validateassertion"
  ],
  "rtcidentityproviderdetails": [
    "domain",
    "protocol"
  ],
  "rtcidentityproviderglobalscope": [
    "rtcidentityprovider"
  ],
  "rtcidentityprovideroptions": [
    "peeridentity",
    "protocol",
    "usernamehint"
  ],
  "rtcidentityproviderregistrar": [
    "register",
    "register()"
  ],
  "rtcidentityvalidationresult": [
    "contents",
    "identity"
  ],
  "rtcpeerconnection": [
    "getidentityassertion",
    "getidentityassertion()",
    "idperrorinfo",
    "idploginurl",
    "peeridentity",
    "setidentityprovider",
    "setidentityprovider()"
  ],
  "ruby-align": [
    "center",
    "space-around",
    "space-between",
    "start"
  ],
  "ruby-merge": [
    "auto",
    "merge",
    "separate"
  ],
  "ruby-overhang": [
    "auto",
    "none"
  ],
  "ruby-position": [
    "alternate",
    "inter-character",
    "inter-character annotation",
    "over",
    "under"
  ],
  "scalar value string": [
    "code point length",
    "length"
  ],
  "scale": [
    "none"
  ],
  "scheduler task": [
    "enqueue order",
    "older than"
  ],
  "scheduler task queue": [
    "effective priority",
    "empty",
    "first runnable task",
    "is continuation",
    "priority",
    "removal steps",
    "remove",
    "tasks"
  ],
  "scheduling state": [
    "abort source",
    "priority source"
  ],
  "scoping details": [
    "get batching scope steps",
    "get debug scope steps"
  ],
  "screen": [
    "advanced observable properties",
    "available height",
    "available screen area",
    "available screen position",
    "available width",
    "basic observable properties",
    "color depth",
    "device pixel ratio",
    "height",
    "label",
    "orientation",
    "pixels",
    "screen area",
    "screen position",
    "width"
  ],
  "script": [
    "async",
    "attributionsrc",
    "base url",
    "blocking",
    "charset",
    "crossorigin",
    "defer",
    "error to rethrow",
    "event",
    "fetch options",
    "fetchpriority",
    "for",
    "href",
    "integrity",
    "language",
    "nomodule",
    "parent task",
    "parse error",
    "parser-inserted",
    "record",
    "referrerpolicy",
    "settings object",
    "src",
    "type",
    "xlink:href",
    "xlink:title"
  ],
  "script fetch options": [
    "attribution reporting eligibility"
  ],
  "script fetcher": [
    "origins authorized for cross origin trusted signals",
    "script body"
  ],
  "script resource": [
    "has ever been evaluated flag",
    "policy container"
  ],
  "script timing info": [
    "end time",
    "event target element id",
    "event target element src attribute",
    "event type",
    "execution start time",
    "invoker name",
    "invoker type",
    "pause duration",
    "source character position",
    "source function name",
    "source url",
    "start time",
    "window"
  ],
  "script/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "script/fetchpriority": [
    "auto",
    "high",
    "low"
  ],
  "scripting policy": [
    "dynamic-loading",
    "eval",
    "integrity",
    "nonce",
    "report-to",
    "trusted-types-required-for"
  ],
  "scripting policy pair": [
    "enforced",
    "report-only"
  ],
  "scripting-policy-dict": [
    "dynamic-loading",
    "eval",
    "integrity",
    "nonce",
    "report-to",
    "trusted-types-required-for"
  ],
  "scroll()": [
    "block",
    "inline",
    "nearest",
    "root",
    "self",
    "x",
    "y"
  ],
  "scroll-anchoring": [
    "anchor node"
  ],
  "scroll-behavior": [
    "auto",
    "smooth"
  ],
  "scroll-marker-group": [
    "after",
    "before",
    "none"
  ],
  "scroll-padding": [
    "auto"
  ],
  "scroll-padding-block": [
    "auto"
  ],
  "scroll-padding-block-end": [
    "auto"
  ],
  "scroll-padding-block-start": [
    "auto"
  ],
  "scroll-padding-inline": [
    "auto"
  ],
  "scroll-padding-inline-end": [
    "auto"
  ],
  "scroll-padding-inline-start": [
    "auto"
  ],
  "scroll-snap-align": [
    "center",
    "end",
    "none",
    "start"
  ],
  "scroll-snap-stop": [
    "always",
    "normal"
  ],
  "scroll-snap-type": [
    "block",
    "both",
    "inline",
    "mandatory",
    "none",
    "proximity",
    "x",
    "y"
  ],
  "scroll-start-target": [
    "auto",
    "none"
  ],
  "scroll-start-target-block": [
    "auto",
    "none"
  ],
  "scroll-start-target-inline": [
    "auto",
    "none"
  ],
  "scroll-start-target-x": [
    "auto",
    "none"
  ],
  "scroll-start-target-y": [
    "auto",
    "none"
  ],
  "scroll-timeline-axis": [
    "block",
    "inline",
    "nearest",
    "root",
    "self",
    "x",
    "y"
  ],
  "scrollbar-color": [
    "auto"
  ],
  "scrollbar-gutter": [
    "always",
    "auto",
    "both-edges",
    "force",
    "match-parent",
    "stable"
  ],
  "scrollbar-width": [
    "auto",
    "none",
    "thin"
  ],
  "secondary view": [
    "secondary-views"
  ],
  "select": [
    "autocomplete",
    "disabled",
    "drop-down box",
    "form",
    "form owner",
    "list box",
    "multiple",
    "name",
    "required",
    "size"
  ],
  "select/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "selectURL": [
    "input url list"
  ],
  "selector": [
    "combinator",
    "subject",
    "subject of a selector",
    "subject of the selector"
  ],
  "sensor type": [
    "maximum sampling frequency",
    "minimum sampling frequency"
  ],
  "server auction browser signals": [
    "bid count",
    "join count",
    "previous wins",
    "recency ms"
  ],
  "server auction interest group": [
    "ads",
    "bidding signals keys",
    "browser signals",
    "components",
    "name",
    "user bidding signals"
  ],
  "server auction previous win": [
    "ad render id",
    "time delta"
  ],
  "server auction request context": [
    "request context",
    "request id"
  ],
  "service worker": [
    "all fetch listeners are empty flag",
    "classic scripts imported flag",
    "containing service worker registration",
    "functional events",
    "global object",
    "lifecycle events",
    "list of router rules",
    "registration",
    "running",
    "script resource",
    "script resource map",
    "script url",
    "service worker events",
    "set of event types to handle",
    "set of extended events",
    "set of used scripts",
    "skip waiting flag",
    "start status",
    "state",
    "type"
  ],
  "service worker client": [
    "dedicated worker client",
    "discarded flag",
    "origin",
    "shared worker client",
    "window client",
    "worker client"
  ],
  "service worker registration": [
    "active background fetches",
    "active background fetches edit queue",
    "active worker",
    "content index entries",
    "entry edit queue",
    "installing worker",
    "last update check time",
    "navigation preload enabled flag",
    "navigation preload header value",
    "navigationpreloadmanager",
    "scope url",
    "stale",
    "storage key",
    "task queues",
    "unregistered",
    "update via cache mode",
    "waiting worker"
  ],
  "service worker timing info": [
    "fetch event dispatch time",
    "start time"
  ],
  "session": [
    "create a bidirectional stream",
    "create an outgoing unidirectional stream",
    "draining",
    "establish",
    "receive a bidirectional stream",
    "receive a datagram",
    "receive an incoming unidirectional stream",
    "send a datagram",
    "terminate",
    "terminated"
  ],
  "session-signal": [
    "drain_webtransport_session",
    "goaway"
  ],
  "set": [
    "append",
    "clone",
    "contain",
    "difference",
    "empty",
    "equal",
    "exist",
    "for each",
    "get the indices",
    "indices",
    "insert",
    "intersection",
    "is empty",
    "is not empty",
    "item",
    "iterate",
    "onbegin",
    "onend",
    "onrepeat",
    "prepend",
    "remove",
    "replace",
    "replacing",
    "requiredextensions",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order",
    "subset",
    "superset",
    "systemlanguage",
    "to",
    "union"
  ],
  "setMinPINLength": [
    "pre-configured list of rp ids authorized to receive"
  ],
  "severity": [
    "error",
    "info",
    "off",
    "warning"
  ],
  "shadow root": [
    "part element map"
  ],
  "shape()": [
    "<arc-command>",
    "<arc-size>",
    "<arc-sweep>",
    "<by-to>",
    "<coordinate-pair>",
    "<curve-command>",
    "<hv-line-command>",
    "<line-command>",
    "<move-command>",
    "<smooth-command>",
    "arc",
    "by",
    "ccw",
    "close",
    "curve",
    "cw",
    "hline",
    "large",
    "line",
    "move",
    "small",
    "smooth",
    "to",
    "vline"
  ],
  "shape-inside": [
    "auto",
    "display",
    "outside-shape"
  ],
  "shape-outside": [
    "<basic-shape>",
    "border-box",
    "content-box",
    "margin-box",
    "none",
    "padding-box"
  ],
  "shared storage database": [
    "clear all entries in the database",
    "count entries in the database",
    "delete an entry from the database",
    "determine whether an entry is expired",
    "entry",
    "purge expired entries from the database",
    "retrieve all entries from the database",
    "retrieve an entry from the database",
    "shared storage database queue",
    "store an entry in the database"
  ],
  "she": [
    "directive state"
  ],
  "shortcut item": [
    "description",
    "icons",
    "name",
    "short_name",
    "url"
  ],
  "signal base value": [
    "bid-reject-reason",
    "highest-scoring-other-bid",
    "script-run-time",
    "signals-fetch-time",
    "winning-bid"
  ],
  "signed additional bid signature": [
    "key",
    "signature"
  ],
  "signed exchange report": [
    "cert server ip list",
    "cert url list",
    "cert_fetch_error",
    "cert_parse_error",
    "cert_verification_error",
    "inner url",
    "invalid_integrity_header",
    "mi_error",
    "non_secure_distributor",
    "ok",
    "outer request",
    "outer response",
    "parse_error",
    "result",
    "server ip",
    "signature_verification_error"
  ],
  "site": [
    "same site"
  ],
  "size": [
    "height",
    "width"
  ],
  "skeleton joint": [
    "radius"
  ],
  "slot": [
    "assigned nodes",
    "name"
  ],
  "slottable": [
    "assigned",
    "assigned slot",
    "manual slot assignment",
    "name"
  ],
  "source": [
    "height",
    "media",
    "muted",
    "sizes",
    "src",
    "srcset",
    "type",
    "width"
  ],
  "source debug data type": [
    "source-channel-capacity-limit",
    "source-destination-global-rate-limit",
    "source-destination-limit",
    "source-destination-limit-replaced",
    "source-destination-per-day-rate-limit",
    "source-destination-rate-limit",
    "source-max-event-states-limit",
    "source-noised",
    "source-reporting-origin-limit",
    "source-reporting-origin-per-site-limit",
    "source-scopes-channel-capacity-limit",
    "source-storage-limit",
    "source-success",
    "source-trigger-state-cardinality-limit",
    "source-unknown-error"
  ],
  "source expression": [
    "intersection",
    "wildcard host",
    "wildcard port"
  ],
  "source list": [
    "allows all inline behavior",
    "intersection"
  ],
  "source snapshot params": [
    "attribution reporting context origin",
    "attribution reporting enabled",
    "automatic beacon data map",
    "automatic beacons allowed",
    "environment id",
    "has storage access",
    "initiator fenced frame config instance",
    "target fenced frame config"
  ],
  "source type": [
    "event",
    "navigation"
  ],
  "source-registration JSON key": [
    "aggregatable_debug_reporting",
    "aggregatable_report_window",
    "aggregation_keys",
    "attribution_scopes",
    "budget",
    "debug_key",
    "debug_reporting",
    "destination",
    "destination_limit_priority",
    "end_times",
    "event_level_epsilon",
    "event_report_window",
    "event_report_windows",
    "expiry",
    "filter_data",
    "limit",
    "max_event_level_reports",
    "max_event_states",
    "priority",
    "source_event_id",
    "start_time",
    "summary_buckets",
    "summary_operator",
    "trigger_data",
    "trigger_data_matching",
    "trigger_specs",
    "values"
  ],
  "spatial-navigation-action": [
    "auto",
    "focus",
    "scroll"
  ],
  "spatial-navigation-contain": [
    "auto",
    "contain"
  ],
  "spatial-navigation-function": [
    "grid",
    "normal"
  ],
  "speak": [
    "always",
    "auto",
    "never"
  ],
  "speak-as": [
    "digits",
    "literal-punctuation",
    "no-punctuation",
    "normal",
    "spell-out"
  ],
  "speculation rule": [
    "eagerness",
    "no-vary-search hint",
    "predicate",
    "referrer policy",
    "requirements",
    "target navigable name hint",
    "urls"
  ],
  "speculation rule set": [
    "prefetch rules",
    "prerender rules"
  ],
  "stack": [
    "clone",
    "contain",
    "empty",
    "exist",
    "get the indices",
    "indices",
    "is empty",
    "is not empty",
    "item",
    "peek",
    "pop",
    "push",
    "size",
    "sort",
    "sort in ascending order",
    "sort in descending order",
    "sorting",
    "sorting in ascending order",
    "sorting in descending order"
  ],
  "stackframe": [
    "column number",
    "function",
    "line number",
    "script url"
  ],
  "statement": [
    "assignment",
    "break",
    "break-if",
    "continue",
    "continuing",
    "discard",
    "for",
    "if",
    "loop",
    "return",
    "switch",
    "while"
  ],
  "steps()": [
    "end",
    "jump-both",
    "jump-end",
    "jump-none",
    "jump-start",
    "start"
  ],
  "stop": [
    "offset",
    "stop-color",
    "stop-opacity"
  ],
  "storage bottle": [
    "map",
    "proxy map reference set",
    "quota"
  ],
  "storage bucket": [
    "removed",
    "storage usage"
  ],
  "storage endpoint": [
    "identifier",
    "quota",
    "types"
  ],
  "storage key": [
    "equal",
    "origin",
    "storage-key-nonce",
    "storage-key-origin"
  ],
  "storage proxy map": [
    "backing map"
  ],
  "stream": [
    "active",
    "audible",
    "bidirectional",
    "inactive",
    "inaudible",
    "incoming unidirectional",
    "outgoing unidirectional",
    "receive",
    "reset",
    "send",
    "send stop_sending"
  ],
  "stream-signal": [
    "flow control",
    "reset_stream",
    "stop_sending"
  ],
  "string": [
    "code point length",
    "concatenate",
    "concatenation",
    "convert",
    "ends with",
    "identical to",
    "is",
    "length",
    "percent-decode",
    "percent-encode after encoding",
    "position variable",
    "starts with",
    "utf-8 percent-encode"
  ],
  "string()": [
    "first",
    "first-except",
    "last",
    "start"
  ],
  "string-set": [
    "none"
  ],
  "stroke-align": [
    "center",
    "inset",
    "outset"
  ],
  "stroke-dash-corner": [
    "none"
  ],
  "stroke-dash-justify": [
    "compress",
    "dashes",
    "gaps",
    "none",
    "stretch"
  ],
  "stroke-dasharray": [
    "<length-percentage>+#",
    "none"
  ],
  "stroke-linecap": [
    "butt",
    "round",
    "square"
  ],
  "stroke-linejoin": [
    "arcs",
    "bevel",
    "crop",
    "fallback",
    "miter",
    "round"
  ],
  "stroke-origin": [
    "border-box",
    "content-box",
    "fill-box",
    "match-parent",
    "padding-box",
    "stroke-box"
  ],
  "struct": [
    "item",
    "name"
  ],
  "style": [
    "blocking",
    "media",
    "title",
    "type"
  ],
  "subscript-position-override!!descriptor": [
    "from-font",
    "normal"
  ],
  "subscript-size-override!!descriptor": [
    "from-font",
    "normal"
  ],
  "sum value": [
    "unit map",
    "value"
  ],
  "summary bucket": [
    "end",
    "start"
  ],
  "summary operator": [
    "count",
    "value_sum"
  ],
  "superscript-position-override!!descriptor": [
    "from-font",
    "normal"
  ],
  "superscript-size-override!!descriptor": [
    "from-font",
    "normal"
  ],
  "supported limits": [
    "maxBindGroups",
    "maxBindGroupsPlusVertexBuffers",
    "maxBindingsPerBindGroup",
    "maxBufferSize",
    "maxColorAttachmentBytesPerSample",
    "maxColorAttachments",
    "maxComputeInvocationsPerWorkgroup",
    "maxComputeWorkgroupSizeX",
    "maxComputeWorkgroupSizeY",
    "maxComputeWorkgroupSizeZ",
    "maxComputeWorkgroupStorageSize",
    "maxComputeWorkgroupsPerDimension",
    "maxDynamicStorageBuffersPerPipelineLayout",
    "maxDynamicUniformBuffersPerPipelineLayout",
    "maxInterStageShaderComponents",
    "maxInterStageShaderVariables",
    "maxSampledTexturesPerShaderStage",
    "maxSamplersPerShaderStage",
    "maxStorageBufferBindingSize",
    "maxStorageBuffersPerShaderStage",
    "maxStorageTexturesPerShaderStage",
    "maxTextureArrayLayers",
    "maxTextureDimension1D",
    "maxTextureDimension2D",
    "maxTextureDimension3D",
    "maxUniformBufferBindingSize",
    "maxUniformBuffersPerShaderStage",
    "maxVertexAttributes",
    "maxVertexBufferArrayStride",
    "maxVertexBuffers",
    "minStorageBufferOffsetAlignment",
    "minUniformBufferOffsetAlignment"
  ],
  "supported open() feature name": [
    "height",
    "left",
    "top",
    "width"
  ],
  "svg": [
    "preserveaspectratio",
    "requiredextensions",
    "systemlanguage",
    "viewbox",
    "zoomandpan"
  ],
  "switch": [
    "requiredextensions",
    "systemlanguage"
  ],
  "symbol": [
    "refx",
    "refy"
  ],
  "syntax": [
    "_reserved",
    "additive_expression",
    "additive_operator",
    "align_attr",
    "argument_expression_list",
    "assignment_statement",
    "attribute",
    "binary_and_expression",
    "binary_or_expression",
    "binary_xor_expression",
    "binding_attr",
    "bitwise_expression",
    "blend_src_attr",
    "bool_literal",
    "break_if_statement",
    "break_statement",
    "builtin_attr",
    "builtin_value_name",
    "call_expression",
    "call_phrase",
    "case_clause",
    "case_selector",
    "case_selectors",
    "component_or_swizzle_specifier",
    "compound_assignment_operator",
    "compound_statement",
    "compute_attr",
    "const_assert_statement",
    "const_attr",
    "continue_statement",
    "continuing_compound_statement",
    "continuing_statement",
    "core_lhs_expression",
    "decimal_float_literal",
    "decimal_int_literal",
    "decrement_statement",
    "default_alone_clause",
    "diagnostic_attr",
    "diagnostic_control",
    "diagnostic_directive",
    "diagnostic_name_token",
    "diagnostic_rule_name",
    "else_clause",
    "else_if_clause",
    "enable_directive",
    "enable_extension_list",
    "enable_extension_name",
    "expression",
    "expression_comma_list",
    "float_literal",
    "for_header",
    "for_init",
    "for_statement",
    "for_update",
    "fragment_attr",
    "func_call_statement",
    "function_decl",
    "function_header",
    "global_decl",
    "global_directive",
    "global_value_decl",
    "global_variable_decl",
    "group_attr",
    "hex_float_literal",
    "hex_int_literal",
    "id_attr",
    "ident",
    "ident_pattern_token",
    "if_clause",
    "if_statement",
    "increment_statement",
    "int_literal",
    "interpolate_attr",
    "interpolate_sampling_name",
    "interpolate_type_name",
    "invariant_attr",
    "lhs_expression",
    "literal",
    "location_attr",
    "loop_statement",
    "member_ident",
    "multiplicative_expression",
    "multiplicative_operator",
    "must_use_attr",
    "optionally_typed_ident",
    "param",
    "param_list",
    "paren_expression",
    "primary_expression",
    "relational_expression",
    "requires_directive",
    "return_statement",
    "severity_control_name",
    "shift_expression",
    "short_circuit_and_expression",
    "short_circuit_or_expression",
    "singular_expression",
    "size_attr",
    "software_extension_list",
    "software_extension_name",
    "statement",
    "struct_body_decl",
    "struct_decl",
    "struct_member",
    "switch_body",
    "switch_clause",
    "switch_statement",
    "swizzle_name",
    "template_arg_comma_list",
    "template_arg_expression",
    "template_elaborated_ident",
    "template_list",
    "translation_unit",
    "type_alias_decl",
    "type_specifier",
    "unary_expression",
    "variable_decl",
    "variable_or_value_statement",
    "variable_updating_statement",
    "vertex_attr",
    "while_statement",
    "workgroup_size_attr"
  ],
  "syntax_kw": [
    "alias",
    "break",
    "case",
    "const",
    "const_assert",
    "continue",
    "continuing",
    "default",
    "diagnostic",
    "discard",
    "else",
    "enable",
    "false",
    "fn",
    "for",
    "if",
    "let",
    "loop",
    "override",
    "requires",
    "return",
    "struct",
    "switch",
    "true",
    "var",
    "while"
  ],
  "syntax_sym": [
    "_disambiguate_template",
    "_greater_than",
    "_greater_than_equal",
    "_less_than",
    "_less_than_equal",
    "_shift_left",
    "_shift_left_assign",
    "_shift_right",
    "_shift_right_assign",
    "_template_args_end",
    "_template_args_start",
    "and",
    "and_and",
    "and_equal",
    "arrow",
    "attr",
    "bang",
    "brace_left",
    "brace_right",
    "bracket_left",
    "bracket_right",
    "colon",
    "comma",
    "division_equal",
    "equal",
    "equal_equal",
    "forward_slash",
    "greater_than",
    "greater_than_equal",
    "less_than",
    "less_than_equal",
    "minus",
    "minus_equal",
    "minus_minus",
    "modulo",
    "modulo_equal",
    "not_equal",
    "or",
    "or_equal",
    "or_or",
    "paren_left",
    "paren_right",
    "period",
    "plus",
    "plus_equal",
    "plus_plus",
    "semicolon",
    "shift_left",
    "shift_left_assign",
    "shift_right",
    "shift_right_assign",
    "star",
    "tilde",
    "times_equal",
    "underscore",
    "xor",
    "xor_equal"
  ],
  "system": [
    "symbolic"
  ],
  "system clipboard representation": [
    "data",
    "name"
  ],
  "table": [
    "align",
    "bgcolor",
    "border",
    "bordercolor",
    "cellpadding",
    "cellspacing",
    "datapagesize",
    "frame",
    "height",
    "rules",
    "summary",
    "width"
  ],
  "table-layout": [
    "auto",
    "fixed"
  ],
  "task": [
    "parent task",
    "task attribution id"
  ],
  "task handle": [
    "abort steps",
    "queue",
    "task",
    "task complete steps"
  ],
  "task scope": [
    "task"
  ],
  "tbody": [
    "align",
    "char",
    "charoff",
    "height",
    "valign"
  ],
  "td": [
    "abbr",
    "align",
    "axis",
    "bgcolor",
    "char",
    "charoff",
    "colspan",
    "headers",
    "height",
    "nowrap",
    "rowspan",
    "scope",
    "valign",
    "width"
  ],
  "template": [
    "shadowrootclonable",
    "shadowrootdelegatesfocus",
    "shadowrootmode",
    "shadowrootserializable"
  ],
  "template/shadowrootmode": [
    "closed",
    "open"
  ],
  "texel format": [
    "bgra8unorm",
    "r32float",
    "r32sint",
    "r32uint",
    "rg32float",
    "rg32sint",
    "rg32uint",
    "rgba16float",
    "rgba16sint",
    "rgba16uint",
    "rgba32float",
    "rgba32sint",
    "rgba32uint",
    "rgba8sint",
    "rgba8snorm",
    "rgba8uint",
    "rgba8unorm"
  ],
  "text": [
    "dx",
    "dy",
    "lengthadjust",
    "requiredextensions",
    "rotate",
    "systemlanguage",
    "textlength",
    "x",
    "y"
  ],
  "text directive": [
    "end",
    "prefix",
    "start",
    "suffix"
  ],
  "text style values": [
    "black",
    "white"
  ],
  "text-align": [
    "alignment character",
    "center",
    "end",
    "justify",
    "justify-all",
    "left",
    "match-parent",
    "right",
    "start"
  ],
  "text-align-last": [
    "auto"
  ],
  "text-autospace": [
    "auto",
    "ideograph-alpha",
    "ideograph-numeric",
    "insert",
    "no-autospace",
    "normal",
    "punctuation",
    "replace"
  ],
  "text-box": [
    "normal"
  ],
  "text-box-edge": [
    "auto"
  ],
  "text-box-trim": [
    "none",
    "trim-both",
    "trim-end",
    "trim-start"
  ],
  "text-combine-upright": [
    "all",
    "digits <integer [2,4]>?",
    "digits <integer>?",
    "none"
  ],
  "text-decoration": [
    "blink",
    "line-through",
    "none",
    "overline",
    "underline"
  ],
  "text-decoration-line": [
    "blink",
    "grammar-error",
    "line-through",
    "none",
    "overline",
    "spelling-error",
    "underline"
  ],
  "text-decoration-skip": [
    "auto",
    "none"
  ],
  "text-decoration-skip-box": [
    "all",
    "none"
  ],
  "text-decoration-skip-ink": [
    "all",
    "auto",
    "none"
  ],
  "text-decoration-skip-inset": [
    "auto",
    "none"
  ],
  "text-decoration-skip-self": [
    "auto",
    "no-skip",
    "none",
    "objects",
    "skip-all",
    "skip-line-through",
    "skip-overline",
    "skip-underline"
  ],
  "text-decoration-skip-spaces": [
    "all",
    "end",
    "none",
    "start"
  ],
  "text-decoration-style": [
    "wavy"
  ],
  "text-decoration-thickness": [
    "auto",
    "from-font"
  ],
  "text-direction": [
    "auto",
    "ltr",
    "rtl"
  ],
  "text-emphasis-position": [
    "left",
    "over",
    "right",
    "under"
  ],
  "text-emphasis-skip": [
    "narrow",
    "punctuation",
    "spaces",
    "symbols"
  ],
  "text-emphasis-style": [
    "circle",
    "dot",
    "double-circle",
    "filled",
    "none",
    "sesame",
    "triangle"
  ],
  "text-group-align": [
    "center",
    "end",
    "left",
    "none",
    "right",
    "start"
  ],
  "text-indent": [
    "<length>",
    "<percentage>",
    "each-line",
    "hanging"
  ],
  "text-justify": [
    "auto",
    "distribute",
    "inter-character",
    "inter-word",
    "no-compress",
    "none",
    "ruby"
  ],
  "text-orientation": [
    "mixed",
    "sideways",
    "sideways-right",
    "upright"
  ],
  "text-overflow": [
    "clip",
    "ellipsis",
    "fade",
    "fade()"
  ],
  "text-size-adjust": [
    "<percentage [0,∞]>",
    "auto",
    "none"
  ],
  "text-spacing": [
    "<autospace>",
    "<spacing-trim>",
    "auto",
    "none"
  ],
  "text-spacing-trim": [
    "auto",
    "normal",
    "space-all",
    "space-first",
    "trim-all",
    "trim-both",
    "trim-start"
  ],
  "text-text-emphasis": [
    "open"
  ],
  "text-transform": [
    "capitalize",
    "full-size-kana",
    "full-width",
    "lowercase",
    "math-auto",
    "none",
    "uppercase"
  ],
  "text-underline-offset": [
    "auto"
  ],
  "text-underline-position": [
    "auto",
    "from-font",
    "left",
    "right",
    "under"
  ],
  "text-wrap-mode": [
    "nowrap",
    "wrap"
  ],
  "text-wrap-style": [
    "auto",
    "balance",
    "pretty",
    "stable"
  ],
  "textPath": [
    "href",
    "method",
    "path",
    "requiredextensions",
    "side",
    "spacing",
    "startoffset",
    "systemlanguage",
    "xlink:href",
    "xlink:title"
  ],
  "textarea": [
    "autocomplete",
    "cols",
    "dirname",
    "disabled",
    "form",
    "form owner",
    "maxlength",
    "minlength",
    "name",
    "placeholder",
    "readonly",
    "required",
    "rows",
    "wrap"
  ],
  "textarea/autocomplete": [
    "additional-name",
    "address-level1",
    "address-level2",
    "address-level3",
    "address-level4",
    "address-line1",
    "address-line2",
    "address-line3",
    "bday",
    "bday-day",
    "bday-month",
    "bday-year",
    "billing",
    "cc-additional-name",
    "cc-csc",
    "cc-exp",
    "cc-exp-month",
    "cc-exp-year",
    "cc-family-name",
    "cc-given-name",
    "cc-name",
    "cc-number",
    "cc-type",
    "country",
    "country-name",
    "current-password",
    "email",
    "family-name",
    "fax",
    "given-name",
    "home",
    "honorific-prefix",
    "honorific-suffix",
    "impp",
    "language",
    "mobile",
    "name",
    "new-password",
    "nickname",
    "off",
    "on",
    "one-time-code",
    "organization",
    "organization-title",
    "pager",
    "photo",
    "postal-code",
    "section-",
    "sex",
    "shipping",
    "street-address",
    "tel",
    "tel-area-code",
    "tel-country-code",
    "tel-extension",
    "tel-local",
    "tel-local-prefix",
    "tel-local-suffix",
    "tel-national",
    "transaction-amount",
    "transaction-currency",
    "url",
    "username",
    "work"
  ],
  "textarea/wrap": [
    "hard",
    "soft"
  ],
  "textdirection": [
    "auto",
    "ltr",
    "rtl"
  ],
  "texture": [
    "array size",
    "arrayed",
    "dimensionality",
    "mip level count",
    "sample count",
    "size"
  ],
  "th": [
    "abbr",
    "align",
    "axis",
    "bgcolor",
    "char",
    "charoff",
    "colspan",
    "headers",
    "height",
    "nowrap",
    "rowspan",
    "scope",
    "valign",
    "width"
  ],
  "th/scope": [
    "col",
    "colgroup",
    "row",
    "rowgroup"
  ],
  "time": [
    "datetime"
  ],
  "timeline": [
    "current time"
  ],
  "timeline-scope": [
    "all",
    "none"
  ],
  "timeouts": [
    "implicit wait timeout",
    "page load timeout",
    "script timeout"
  ],
  "timer": [
    "timeout fired flag"
  ],
  "to I/O queue": [
    "convert"
  ],
  "token": [
    "index",
    "type",
    "value"
  ],
  "token stream": [
    "consume a token",
    "discard a mark",
    "discard a token",
    "discard whitespace",
    "empty",
    "index",
    "mark",
    "marked indexes",
    "next token",
    "process",
    "restore a mark",
    "tokens"
  ],
  "token/type": [
    "asterisk",
    "char",
    "close",
    "end",
    "escaped-char",
    "invalid-char",
    "name",
    "open",
    "other-modifier",
    "regexp"
  ],
  "tokenize policy": [
    "lenient",
    "strict"
  ],
  "tokenizer": [
    "code point",
    "consume a token",
    "index",
    "input",
    "next index",
    "policy",
    "token list"
  ],
  "top": [
    "<length>",
    "<percentage>",
    "auto"
  ],
  "top-level traversable": [
    "[[PostureOverride]]",
    "bounce tracking record",
    "system focus",
    "user attention"
  ],
  "topic with caller domains": [
    "caller domains",
    "topic id"
  ],
  "topics caller context": [
    "caller domain",
    "timestamp",
    "top level context domain"
  ],
  "topics history entry": [
    "document id",
    "time",
    "topics calculation input data",
    "topics caller domains"
  ],
  "tr": [
    "align",
    "bgcolor",
    "char",
    "charoff",
    "height",
    "valign"
  ],
  "track": [
    "[[frameCaptureRequested]]",
    "default",
    "kind",
    "label",
    "src",
    "srclang"
  ],
  "track update struct": [
    "frame count",
    "track index"
  ],
  "track/kind": [
    "captions",
    "chapters",
    "descriptions",
    "metadata",
    "subtitles"
  ],
  "transaction": [
    "abort",
    "aborted",
    "aborting",
    "active",
    "cleanup event loop",
    "cleanup indexed database transactions",
    "commit",
    "committed",
    "committing",
    "connection",
    "created",
    "durability hint",
    "error",
    "finished",
    "inactive",
    "lifetime",
    "live",
    "mode",
    "overlap",
    "overlapping scope",
    "read-only transaction",
    "read/write transaction",
    "request list",
    "scope",
    "start",
    "started",
    "state"
  ],
  "transform": [
    "matrix()",
    "rotate()",
    "scale()",
    "scalex()",
    "scaley()",
    "skew()",
    "skewx()",
    "skewy()",
    "translate()",
    "translatex()",
    "translatey()"
  ],
  "transform-box": [
    "border-box",
    "content-box",
    "fill-box",
    "stroke-box",
    "view-box"
  ],
  "transform-origin": [
    "bottom",
    "center",
    "left",
    "right",
    "top"
  ],
  "transient registered observer": [
    "source"
  ],
  "transition": [
    "cancel",
    "combined duration",
    "complete",
    "end time",
    "end value",
    "reversing shortening factor",
    "reversing-adjusted start value",
    "start time",
    "start value"
  ],
  "transition-property": [
    "all",
    "none"
  ],
  "transitionevent": [
    "transitioncancel",
    "transitionend",
    "transitionrun",
    "transitionstart"
  ],
  "translate": [
    "none"
  ],
  "traversable navigable": [
    "captured ad auction additional bids headers",
    "captured ad auction signals headers",
    "fenced frame config mapping",
    "saved bidding and auction request context",
    "storage shed",
    "unfenced parent"
  ],
  "traversal": [
    "active flag",
    "filter",
    "root",
    "whattoshow"
  ],
  "tree": [
    "ancestor",
    "child",
    "children",
    "descendant",
    "first child",
    "following",
    "inclusive ancestor",
    "inclusive descendant",
    "inclusive sibling",
    "index",
    "last child",
    "next sibling",
    "parent",
    "participate",
    "participate in a tree",
    "participates in a tree",
    "preceding",
    "previous sibling",
    "root",
    "sibling"
  ],
  "trigger": [
    "derivative_uniformity"
  ],
  "trigger debug data": [
    "data type",
    "report"
  ],
  "trigger debug data type": [
    "trigger-aggregate-attributions-per-source-destination-limit",
    "trigger-aggregate-deduplicated",
    "trigger-aggregate-excessive-reports",
    "trigger-aggregate-insufficient-budget",
    "trigger-aggregate-no-contributions",
    "trigger-aggregate-report-window-passed",
    "trigger-aggregate-storage-limit",
    "trigger-event-attributions-per-source-destination-limit",
    "trigger-event-deduplicated",
    "trigger-event-excessive-reports",
    "trigger-event-low-priority",
    "trigger-event-no-matching-configurations",
    "trigger-event-no-matching-trigger-data",
    "trigger-event-noise",
    "trigger-event-report-window-not-started",
    "trigger-event-report-window-passed",
    "trigger-event-storage-limit",
    "trigger-no-matching-filter-data",
    "trigger-no-matching-source",
    "trigger-reporting-origin-limit",
    "trigger-unknown-error"
  ],
  "trigger spec": [
    "event-level report windows"
  ],
  "trigger state": [
    "report window",
    "trigger data"
  ],
  "trigger-data matching mode": [
    "exact",
    "modulus"
  ],
  "trigger-registration JSON key": [
    "aggregatable_debug_reporting",
    "aggregatable_deduplication_keys",
    "aggregatable_filtering_id_max_bytes",
    "aggregatable_source_registration_time",
    "aggregatable_trigger_data",
    "aggregatable_values",
    "aggregation_coordinator_origin",
    "attribution_scopes",
    "debug_key",
    "debug_reporting",
    "deduplication_key",
    "event_trigger_data",
    "filtering_id",
    "filters",
    "key_piece",
    "not_filters",
    "priority",
    "source_keys",
    "trigger_context_id",
    "trigger_data",
    "value",
    "values"
  ],
  "triggering result": [
    "debug data",
    "status"
  ],
  "triggering status": [
    "attributed",
    "dropped",
    "noised"
  ],
  "trusted bidding signals batcher": [
    "all per interest group data",
    "all trusted bidding signals",
    "data versions",
    "ig names",
    "keys",
    "length limit",
    "no signals flags"
  ],
  "tspan": [
    "requiredextensions",
    "systemlanguage"
  ],
  "tuple": [
    "item",
    "name"
  ],
  "type": [
    "abstract",
    "concrete",
    "depth texture",
    "discrete",
    "external texture",
    "gamma",
    "huerotate",
    "identity",
    "linear",
    "luminancetoalpha",
    "matrix",
    "multisampled texture",
    "read-only storage texture",
    "read-write storage texture",
    "sampled texture",
    "sampler",
    "sampler_comparison",
    "saturate",
    "storage texture",
    "table",
    "texture_1d",
    "texture_2d",
    "texture_2d_array",
    "texture_3d",
    "texture_cube",
    "texture_cube_array",
    "texture_depth_2d",
    "texture_depth_2d_array",
    "texture_depth_cube",
    "texture_depth_cube_array",
    "texture_depth_multisampled_2d",
    "texture_external",
    "texture_multisampled_2d",
    "texture_storage_1d",
    "texture_storage_2d",
    "texture_storage_2d_array",
    "texture_storage_3d",
    "write-only storage texture"
  ],
  "ul": [
    "compact",
    "type"
  ],
  "unary": [
    "<minus/>",
    "<root/>"
  ],
  "unicode-bidi": [
    "bidi-override",
    "embed",
    "isolate",
    "isolate-override",
    "normal",
    "plaintext"
  ],
  "union": [
    "flattened member types",
    "member types"
  ],
  "unknown": [
    "requiredextensions",
    "systemlanguage"
  ],
  "url": [
    "blob url entry",
    "equal",
    "fragment",
    "host",
    "opaque path",
    "origin",
    "password",
    "path",
    "port",
    "query",
    "scheme",
    "set the password",
    "set the username",
    "username"
  ],
  "url()": [
    "local url flag"
  ],
  "url/equals": [
    "exclude fragments"
  ],
  "usage scope": [
    "Add",
    "Merge",
    "add",
    "merge"
  ],
  "use": [
    "href",
    "requiredextensions",
    "systemlanguage",
    "xlink:href",
    "xlink:title"
  ],
  "user agent": [
    "brand",
    "brands",
    "configuration version",
    "equivalence class",
    "form-factors",
    "full version",
    "mobileness",
    "model",
    "model version",
    "platform architecture",
    "platform bitness",
    "platform brand",
    "platform version",
    "significant version",
    "storage shed",
    "taxonomy",
    "taxonomy version",
    "topics history storage",
    "user topics state",
    "wow64-ness"
  ],
  "user contact": [
    "addresses",
    "emails",
    "icons",
    "names",
    "numbers"
  ],
  "user context": [
    "user context id"
  ],
  "user navigation involvement": [
    "activation",
    "browser ui",
    "none"
  ],
  "user topics state": [
    "epochs",
    "hmac key"
  ],
  "user-select": [
    "all",
    "auto",
    "contain",
    "none",
    "text"
  ],
  "value": [
    "maximum length"
  ],
  "value pair": [
    "key",
    "value"
  ],
  "value struct": [
    "last updated",
    "value"
  ],
  "value-with-size": [
    "size",
    "value"
  ],
  "verbose debug data": [
    "body",
    "data type"
  ],
  "verbose debug report": [
    "data",
    "reporting origin"
  ],
  "verification result": [
    "errors",
    "media type",
    "mediatype",
    "verified",
    "verifieddocument",
    "warnings"
  ],
  "vertical-align": [
    "<length>",
    "<percentage>",
    "alphabetic",
    "auto",
    "baseline",
    "bottom",
    "center",
    "central",
    "first",
    "ideographic",
    "last",
    "mathematical",
    "middle",
    "sub",
    "super",
    "text-bottom",
    "text-top",
    "top"
  ],
  "video": [
    "autoplay",
    "controls",
    "crossorigin",
    "height",
    "loop",
    "muted",
    "playsinline",
    "poster",
    "preload",
    "requiredextensions",
    "src",
    "systemlanguage",
    "width"
  ],
  "video/crossorigin": [
    "anonymous",
    "use-credentials"
  ],
  "video/preload": [
    "auto",
    "metadata",
    "none"
  ],
  "view": [
    "active",
    "current viewport scale",
    "eye",
    "projection matrix",
    "requested viewport scale",
    "viewport modifiable"
  ],
  "view transition params": [
    "initial snapshot containing block size",
    "named elements"
  ],
  "view-timeline-axis": [
    "block",
    "inline",
    "nearest",
    "root",
    "self",
    "x",
    "y"
  ],
  "view-timeline-inset": [
    "auto"
  ],
  "view-transition-class": [
    "<custom-ident>+",
    "none"
  ],
  "view-transition-group": [
    "contain",
    "nearest",
    "normal"
  ],
  "view-transition-name": [
    "none"
  ],
  "viewport": [
    "perform a scroll"
  ],
  "viewport-fit": [
    "auto",
    "contain",
    "cover"
  ],
  "violation": [
    "column number",
    "disposition",
    "effective directive",
    "element",
    "global object",
    "line number",
    "policy",
    "referrer",
    "resource",
    "sample",
    "source file",
    "status",
    "url"
  ],
  "virtual pressure source": [
    "can provide samples",
    "connected platform collectors"
  ],
  "virtual sensor": [
    "can provide readings flag",
    "maximum sampling frequency",
    "minimum sampling frequency",
    "requested sampling frequency"
  ],
  "virtual sensor metadata": [
    "reading parsing algorithm"
  ],
  "visibility": [
    "collapse",
    "hidden",
    "opaque",
    "transparent",
    "visible"
  ],
  "visualviewport": [
    "associated document"
  ],
  "voice-balance": [
    "center",
    "left",
    "leftwards",
    "right",
    "rightwards"
  ],
  "voice-duration": [
    "auto"
  ],
  "voice-family": [
    "<age>",
    "<gender>",
    "child",
    "female",
    "male",
    "neutral",
    "old",
    "preserve",
    "young"
  ],
  "voice-pitch": [
    "<semitones>",
    "absolute",
    "high",
    "low",
    "medium",
    "semitone",
    "x-high",
    "x-low"
  ],
  "voice-range": [
    "<semitones>",
    "absolute",
    "high",
    "low",
    "medium",
    "x-high",
    "x-low"
  ],
  "voice-rate": [
    "fast",
    "medium",
    "normal",
    "slow",
    "x-fast",
    "x-slow"
  ],
  "voice-stress": [
    "moderate",
    "none",
    "normal",
    "reduced",
    "strong"
  ],
  "voice-volume": [
    "<decibel>",
    "loud",
    "medium",
    "silent",
    "soft",
    "x-loud",
    "x-soft"
  ],
  "wall clock": [
    "unsafe current time"
  ],
  "white-space": [
    "break-spaces",
    "normal",
    "nowrap",
    "pre",
    "pre-line",
    "pre-wrap"
  ],
  "white-space-collapse": [
    "break-spaces",
    "collapse",
    "discard",
    "preserve",
    "preserve-breaks",
    "preserve-spaces"
  ],
  "white-space-trim": [
    "discard-after",
    "discard-before",
    "discard-inner"
  ],
  "width": [
    "auto",
    "calc-size()",
    "contain",
    "fit-content",
    "fit-content()",
    "fit-content(<length-percentage>)",
    "max-content",
    "min-content",
    "stretch"
  ],
  "will-change": [
    "auto",
    "contents",
    "scroll-position"
  ],
  "word-break": [
    "auto-phrase",
    "break-all",
    "break-word",
    "keep-all",
    "manual",
    "normal"
  ],
  "word-space-transform": [
    "auto-phrase",
    "ideographic-space",
    "none",
    "space"
  ],
  "word-spacing": [
    "<length-percentage>",
    "<length>",
    "normal"
  ],
  "worklet function": [
    "generate-bid",
    "report-result",
    "report-win",
    "score-ad"
  ],
  "wrap-after": [
    "auto",
    "avoid",
    "avoid-flex",
    "avoid-line",
    "flex",
    "line"
  ],
  "wrap-before": [
    "auto",
    "avoid",
    "avoid-flex",
    "avoid-line",
    "flex",
    "line"
  ],
  "wrap-flow": [
    "auto",
    "both",
    "clear",
    "end",
    "maximum",
    "minimum",
    "start"
  ],
  "wrap-inside": [
    "auto",
    "avoid"
  ],
  "wrap-through": [
    "none",
    "wrap"
  ],
  "writing-mode": [
    "horizontal-tb",
    "sideways-lr",
    "sideways-rl",
    "vertical-lr",
    "vertical-rl"
  ],
  "writing-system": [
    "chinese",
    "japanese",
    "known",
    "korean",
    "unknown"
  ],
  "xywh()": [
    "equivalent path"
  ],
  "z-index": [
    "auto"
  ]
}