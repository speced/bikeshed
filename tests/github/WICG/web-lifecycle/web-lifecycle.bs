<pre class='metadata'>
Title: Web Lifecycle
Group: webperf
Shortname: web-lifecycle
Level: 1
ED: 
TR: 
Status: ED
Editor: Shubhie Panicker, Google https://google.com, panicker@google.com
Editor: Domenic Denicola, Google https://google.com, domenic@chromium.org
Repository: wicg/web-lifecycle
Abstract: This document defines an API that supports browsers' ability to manage lifecycle of web pages.
Default Highlight: js
</pre>

Introduction {#intro}
=====================
With large numbers of web apps (and tabs) running, critical resources such as memory, CPU, battery, network etc easily get oversubscribed, leading to a bad end user experience. Application lifecycle is a key way that modern OSs manage resources. 

For a platform to support application lifecycle, it needs to:
    * provide developers with signals about transitions between the lifecycle states
    * provide lifecycle-compatible APIs that allow key capabilities to work even when the app is backgrounded or stopped.

This proposal attempts to define what the lifecycle of a web page is and add needed extensions to enable web applications to respond to two important lifecycle events commonly performed by user agents:
    * Tab discarding (for memory saving)
    * CPU suspension (for battery, data, CPU saving)

Lifecycle States {#sec-lifecycle-states}
==============================

This spec defines what the lifecycle of a web page is and adds extensions to enable web applications to respond to two important lifecycle events commonly performed by user agents:
    * CPU suspension (for conserving battery, data, CPU)
    * Tab discarding (for memory saving)

This spec formalizes two new lifecycle states to support the above:
    * <dfn export>FROZEN</dfn>: lifecycle state for CPU suspension. Normally HIDDEN pages will be FROZEN to conserve resources.
    * <dfn export>DISCARDED</dfn>: lifecycle state for tab discarding. Normally FROZEN frames will be moved to DISCARDED to conserve resources. 

TODO: Insert diagram

API {#sec-api}
=======================================

Web Lifecycle involves the following additions:

<pre class="idl">
    partial interface Document {
        attribute EventHandler  onfreeze;
        attribute EventHandler  onresume;
        readonly attribute boolean wasDiscarded;
    };
</pre>

    NOTE: these are added on Document, instead of on Window, for consistency with the <a href="https://w3c.github.io/page-visibility/">page visibility API</a>; we expect these APIs to be used in tandem with that existing one.

    NOTE: In addition <a href="https://github.com/whatwg/html/issues/3378">clientId and discardedClientId</a> will be added to Window, to support restoring view state when user revisits a discarded page, causing a reload. We expect those to be used by code that reacts to these events.

Usage example {#example}
------------------------

Example of handling freeze and resume:
<pre class="example highlight">
    TODO: Add code samples here.

</pre>

Example of restoring view state after discard:
<pre class="example highlight">
    TODO: Add code samples here.

</pre>

Example to show how existing onvisibilitychange API works together with new Lifecycle APIs:
<pre class="example highlight">
    TODO: Add code samples here.

</pre>

Processing model {#sec-processing-model}
========================================

Modifications to HTML specifications {#mod}
--------------------------------------------


Additions to Web Lifecycle spec
--------------------------------------------


<!-- ============================================================ -->
<h2 id=acknowledgements>Acknowledgements</h2>
<!-- ============================================================ -->

Special thanks to <a href="">all the contributors</a> for their technical input and suggestions that led to improvements to this
specification.
