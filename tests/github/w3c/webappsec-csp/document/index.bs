<h1>Content Security Policy: Document Features</h1>
<pre class="metadata">
Status: ED
ED: https://w3c.github.io/webappsec-csp/document/
Shortname: csp-document
Group: webappsec
Level: 1
Editor: Mike West 56384, Google Inc., mkwst@google.com
Abstract:
  This document defines a number of Content Security Policy directives which
  allow developers to lock down particular features of a Document (or Worker)
  environment.
Version History: https://github.com/w3c/webappsec-csp/commits/master/document/index.src.html
!Participate: <a href="https://github.com/w3c/webappsec-csp/issues/new">File an issue</a> (<a href="https://github.com/w3c/webappsec-csp/issues">open issues</a>)
Indent: 2
Markup Shorthands: css off, markdown on
Boilerplate: omit conformance, omit feedback-header
</pre>
<pre class="anchors">
spec: CSP; urlPrefix: https://w3c.github.io/webappsec-csp
  type: dfn
    text: content-security-policy; url: content-security-policy-header-field
    text: content security policy; url: security-policy
    text: content-security-policy-report-only; url: content-security-policy-report-only-header-field
    text: parse a serialized policy; url: parse-serialized-policy 
    text: policy
    text: directive set; for: policy
    text: disposition; for: policy
    text: CSP list; for: global object; url: global-object-csp-list
    text: source lists
    text: directive
    for: directive
      text: name
      text: value
      text: pre-request check
      text: post-request check
      text: response check
      text: initialization
    for: violation
      text: resource; url: violation-resource
  type: grammar
    text: serialized-policy; url: grammardef-serialized-policy
    text: serialized-source-list; url: grammardef-serialized-source-list
    text: 'none'; url: grammardef-none
    text: 'self'; url: grammardef-self
    text: host-source; url: grammardef-host-source
    text: scheme-source; url: grammardef-scheme-source
spec: FETCH; urlPrefix: https://fetch.spec.whatwg.org/
  type: dfn
    text: request; url: concept-request
    for: request
      text: target browsing context; url: concept-request-target-browsing-context
      text: destination; url: concept-request-destination
    text: response; url: concept-response
    text: CSP list; for: response; url: concept-response-policy-list
spec: HTML; urlPrefix: https://html.spec.whatwg.org/
  type: dfn
    text: navigate
    text: active document
    text: ancestor browsing context
    text: browsing context
    text: nested browsing context
    text: browsing context container
    text: set the frozen base url
    text: global object
    text: forced sandboxing flag set
    text: parse a sandboxing directive
    text: initialising a new document object; url: initialise-the-document-object
    text: CSP list; for: document; url: concept-document-csp-list
    text: sandboxed scripts browsing context flag
    text: sandboxed origin browsing context flag
  type: element
    text: frame
spec: URL; urlPrefix: https://url.spec.whatwg.org/
  type: dfn
    text: URL parser; url: concept-url-parser
  type: interface
    text: URL; url: concept-url
spec: RFC6454; urlPrefix: https://tools.ietf.org/html/rfc6454
  type: dfn
    text: unicode serialization; url: section-6.1
spec: RFC7230; urlPrefix: https://tools.ietf.org/html/rfc7230
  type: grammar
    text: RWS; url: section-3.2.3
    text: token; url: section-3.2.6
</pre>
<pre class="biblio">
{
  "CSP-DIRECTIVE-REGISTRY": {
    "authors": [ "Mike West" ],
    "href": "https://tools.ietf.org/html/draft-west-webappsec-csp-reg",
    "title": "Initial Assignment for a Content Security Policy Directive Registry",
    "publisher": "IETF"
  }
}
</pre>
<pre class="link-defaults">
spec:dom-ls; type:interface; text:Document
</pre>
<style>
  ul.toc ul ul ul {
    margin: 0 0 0 2em;
  }
  ul.toc ul ul ul span.secno {
    margin-left: -9em;
  }
</style>
<!--
████ ██    ██ ████████ ████████   ███████
 ██  ███   ██    ██    ██     ██ ██     ██
 ██  ████  ██    ██    ██     ██ ██     ██
 ██  ██ ██ ██    ██    ████████  ██     ██
 ██  ██  ████    ██    ██   ██   ██     ██
 ██  ██   ███    ██    ██    ██  ██     ██
████ ██    ██    ██    ██     ██  ███████
-->
<section>
  <h2 id="intro">Introduction</h2>

  <em>This section is not normative.</em>

  This document defines a module of Content Security Policy which allows
  developers to lock down properties of the environment in which a policy
  applies.
</section>

<section>
  <h2 id="directives">Directives</h2>

  <h3 id="directives-features">Feature Directives</h3>


  <h4 id="directive-disable">`disable`</h4>

  The <dfn>disable</dfn> directive allows a developer to turn off certain
  features for a {{Document}} or {{Worker}}. The syntax for the directive's
  name and value is described by the following ABNF:

  <pre dfn-type="grammar" link-type="grammar">
    directive-name  = "disable"
    directive-value = <a grammar>token</a> *( <a>RWS</a> <a>token</a> )
  </pre>

  The directive recognizes a number of potential token values:

  * `cookie` disables `document.cookie`
  * `domain` disables `document.domain`
  * `geolocation` disables [[GEOLOCATION-API]]
  * `midi` disables [[WEBMIDI]]
  * `notifications` disables [[NOTIFICATIONS]]
  * `push` disables [[PUSH-API]]
  * `webrtc` disables [[WEBRTC]]

  ISSUE: Moar. Also, do we need an `enable` counterpart to whitelist rather than
  blacklist?

  ISSUE: Define an algorithm and monkey-patch the relevant specs.


  <h3 id="directives-navigation">Navigation Directives</h3>

</section>

<section>
  <h2 id="integrations">Integrations</h2>

  <h3 id="html-integration">Integration with HTML</h3>

  1.  [[#allow-base-for-document]] is called during <{base}>'s <a>set the frozen
      base URL</a> algorithm to ensure that the <{base/href}> attribute's value
      is valid.

      ISSUE: Need to add this to HTML.

</section>

<section>
  <h2 id="security-considerations">Security Considerations</h2>

  TODO.
</section>

<section>
  <h2 id="privacy-considerations">Privacy Considerations</h2>

  <h3 id="ancestor-origin-leakage">Ancestor Origin Leakage</h3>

  The <a>`frame-ancestors`</a> directive allows a resource to gain knowlege of
  its ancestors' origins through brute force. 
</section>

<section>
  <h2 id="iana-considerations">IANA Considerations</h2>

  The Content Security Policy Directive registry should be updated with the
  following directives and references [[!CSP-DIRECTIVE-REGISTRY]]:

  :   <a>`base-uri`</a>
  ::  This document (see [[#directive-base-uri]])
  :   <a>`form-action`</a>
  ::  This document (see [[#directive-form-action]])
  :   <a>`frame-ancestors`</a>
  ::  This document (see [[#directive-frame-ancestors]])
  :   <a>`plugin-types`</a>
  ::  This document (see [[#directive-plugin-types]])
  :   <a>`sandbox`</a>
  ::  This document (see [[#directive-sandbox]])
</section>
