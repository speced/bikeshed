<pre class='metadata'>
Title: SVG Native
Shortname: svg-native
Level: 1
Status: ED
Group: SVG
URL: http://www.w3.org/TR/svg-native
Editor: Myles C. Maxfield, Apple Inc https://apple.com, mmaxfield@apple.com
Editor: Sairus Patel, Adobe https://adobe.com, sppatel@adobe.com
Abstract: SVG Native is a profile of SVG 1.1 designed for interoperability with native apps and system libraries that execute outside the Web environment, and thus cannot rely on features such as linking, interactivity, animation, or the Web security model.
Boilerplate: repository-issue-tracking off
</pre>

<p boilerplate="copyright">
<a href="http://www.w3.org/Consortium/Legal/ipr-notice#Copyright">Copyright</a> © 2019 <a href="http://www.w3.org/"><abbr title="World Wide Web Consortium">W3C</abbr></a><sup>®</sup> (<a href="http://www.csail.mit.edu/"><abbr title="Massachusetts Institute of Technology">MIT</abbr></a>, <a href="http://www.ercim.eu/"><abbr title="European Research Consortium for Informatics and Mathematics">ERCIM</abbr></a>, <a href="http://www.keio.ac.jp/">Keio</a>, <a href="https://ev.buaa.edu.cn/">Beihang</a>). W3C <a href="http://www.w3.org/Consortium/Legal/ipr-notice#Legal_Disclaimer">liability</a>, <a href="http://www.w3.org/Consortium/Legal/ipr-notice#W3C_Trademarks">trademark</a> and <a href="http://www.w3.org/Consortium/Legal/copyright-documents">document use</a> rules apply. This document includes material copied from or derived from the <a href="https://www.w3.org/TR/SVG2/">Scalable Vector Graphics (SVG) 2.0 Specification</a>. Copyright 2018 W3C® (MIT, ERCIM, Keio, Beihang). It is subject to the <a href="https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document">W3C Software Document Notice and License</a>.
</p>

Introduction {#intro}
=====================

<em>This section is non-normative</em>

SVG Native is a profile of SVG designed with the requirements of native apps. The environment native apps run in is different than the environment of Web browsers in a few fundamental ways:

1. <b>Security</b>: Web content is usually sandboxed, and has only a fraction of the capabilities that a native app has. One of the reasons for this sandboxing is to mitigate security risks that SVG content may contain. However, native apps are usually either not sandboxed or have a more permissive sandbox than Web content. Therefore, code that runs in a native app must be held to a higher standard of security.
2. <b>Performance</b>: Web content is usually run in a separate process, which means the performace of that process has only an indirect affect on the performance of the entire app. If this separate process stalls, the entire app can continue and gracefully degrade behavior. However, native code runs in the app's process, which requires more stringent performance targets.

SVG Native aims to adhere to the native app environment by meeting the above requirements.

SVG Native also has one additional goal:

3. <b>Ubiquity</b>: SVG Native should be implementable as a system component on any modern computing environment. This means it should be small, lightweight, and only have few dependencies. The dependencies it does have should be standard components that already exist in most computing environments.

To meet these goals, SVG Native is a subset of SVG 1.1, which removes animation, interactivity, linking, remote resource loading, scripting, and CSS (among others).

Use Cases {#usecases}
---------------------

<em>This section is non-normative</em>

SVG Native is designed to fit a number of use cases.

1. <b>Icons</b>: Icons are often small vector graphics containing few graphical elements.
2. <b>Emoji</b>: Emoji are often represented as small vector graphics.
3. <b>Color Fonts</b>: Each glyph in a font is represented as a series of vector contours. Color fonts allow the glyphs to include color, in addition to their contours.
4. <b>Drawings and sketches</b>: Drawings and sketches may be created with vector artwork tools. Depending on the complexity of the artwork, representing it using a series of vector drawing elements may result in a smaller file size than a raster format such as [[!PNG]]. Drawings and sketches often need to be viewed outside of the Web platform.

Basics {#basics}
----------------

SVG Native is presented as a series of modifications of [[!SVG11]]. These modifications are applied as differences from that specification.

Note: This spec will likely be rebased on [[!SVG2]] in the near future.

If the engine encounters an element or attribute that is forbidden, not supported, or not included in this specification, that element or attribute must be disregarded.

SVG Native is a standalone file type, expected to be rendered with a dedicated-purpose renderer. Therefore, SVG Native content must not be present as part of a larger XML (or HTML) document. If it is present as part of a larger XML (or HTML) document, the content should be interpreted as SVG proper.

Note: This means that browsers encounting a SVG Native root element within the DOM must not interpret it as SVG Native, even if it has the 'baseAttribute' attribute set to <code>native</code>. If a Web author desires to use SVG Native on the Web, the <{img}> element may be used instead. This matches other native image formats such as [[!PNG]]. A Web browser should implement SVG Native by linking with the system's SVG Native facilities. This matches the implementation of other native image formats.

The root element of an SVG Native document must have the 'baseAttribute' attribute set to <code>native</code> and the 'version' attribute set to <code>1.1</code>.

The file extension for SVG Native is <code>.svn</code>. The UTI for SVG Native is <code>public.svg.native</code>. The MIME type for SVG Native is <code>image/svgnative+xml</code>.

User agents may limit the reference depth of references to implementation-dependent maximas. However, this limit must be greater than or equal to 1 reference.

XSL Processing is forbidden.

XML Entities and CDATA sections may be present.

ISSUE: Is it worth mentioning the 'HTML dialect' of SVG?

Concepts {#concepts}
====================

Chapter is unchanged.

Rendering Model {#render}
=========================

Chapter is unchanged.

Basic Data Types and Interfaces {#types}
========================================

Chapter is unchanged.

Note: Because this specification removes some elements and attributes, not all of the syntax productions in this chapter are referenced by other sections of this specification. Therefore, not all of the productions in this chapter need to be implemented.

Document Structure {#struct}
============================

The root element must be an <{svg}> element, and all other <{svg}> elements are forbidden.

Section 5.8 "Conditional Processing" is deleted.

<{image}> elements must only contain base64-encoded <code>data:</code> URLs of [[!JPEG]] or [[!PNG]] images. [[!APNG]] images must be rendered without animation, using standard backward-compatibility with static [[!PNG]] images. All other image formats must be ignored.

All external resource loading is forbidden.

Styling {#styling}
==================

The <{style}> element and the 'style' attribute are forbidden.

Using ''calc()'', ''env()'', or ''var()'' is forbidden.

Note: Other environments may relax these rules and allow these functions as necessary. For example, the [[!OPENTYPE]] spec might allow ''env()'' or ''var()'' in color fonts to support font color palettes.

The CSS 'all' property is forbidden.

All the global CSS keywords are forbidden. These include:

1. ''initial''
2. ''inherit''
3. ''unset''
4. ''revert''

Coordinate Systems, Transformations, and Units {#coords}
========================================================

Only the following units are supported:
- (unitless)
- ''px''
- ''pt''
- ''pc''
- ''mm''
- ''cm''
- ''in''

Paths {#paths}
==============

The 'pathLength' attribute on the <{path}> element is forbidden.

Basic Shapes {#shapes}
======================

Chapter is unchanged.

Text {#text}
============

Entire chapter is deleted.

Note: This means that all text facilities are forbidden in SVG Native.

Painting: Filling, Stroking, and Marker Symbols {#painting}
===========================================================

The 'display' attribute is forbidden. Hiding elements can be achieved with the 'visibility' attribute.

Delete section 11.6.2 The <{marker}> element.

The 'color-interpolation' attribute is forbidden. All color interpolation occurs in the sRGB color space.

Color {#color}
==============

Delete section 12.2: The 'color' property.

Note: In some environments, the ''currentColor'' keyword is used to provide surrounding context to the SVG graphic. For example, in a color font glyph, ''currentColor'' may represent the text color of the surrounding line. Therefore, support of ''currentColor'' is required, but support of the 'color' property to change ''currentColor'' is not supported.

Delete section 12.3: Color profile descriptions.

Note: This specification will likely adopt [[!SVG2]]'s syntax for specifying colors outside of sRGB.

ISSUE: What should we do about non-sRGB color spaces?

Gradients and Patterns {#pservers}
==================================

The following attributes are forbidden:
- 'gradientUnits'
- 'xlink:href' on <{linearGradient}> or <{radialGradient}>

Delete section 13.3: Patterns.

Clipping, Masking, and Compositing {#masking}
=============================================

Delete section 14.4: Masking.

The following attributes are forbidden:
- 'clipPathUnits'
- 'clip'

The ''scroll'' value on the 'overflow' property behaves identically to 'hidden'.

The 'clip-path' attribute must not be present on a <{clipPath}> element.

Every <{clipPath}> element must have either exactly zero or exactly one child.

The ''scroll'' and the ''auto'' values of the 'overflow' property are forbidden.

Filter Effects {#filters}
=========================

Entire chapter is deleted.

Note: This means that all filter facilities are forbidden in SVG Native.

Interactivity {#interact}
==============================

Entire chapter is deleted.

Note: This means that all interactivity facilities are forbidden in SVG Native.

Linking {#linking}
==================

All external resource loading is forbidden.

Delete section 17.2: Links out of SVG content: the <{a}> element.

Delete section 17.3.3: Predefined views: the <{view}> element.

Scripting {#script}
===================

Entire chapter is deleted.

Note: This means that all scripting facilities are forbidden in SVG Native.

Animation {#animate}
====================

Entire chapter is deleted.

Note: This means that all animation facilities are forbidden in SVG Native.

Fonts {#fonts}
==============

Entire chapter is deleted.

Note: This means that all font facilities are forbidden in SVG Native.

Metadata {#metadata}
====================

Entire chapter is deleted.

Note: This means that all metadata facilities are forbidden in SVG Native. Because the engine must ignore document constructs that aren't included in this specification, it means metadata is ignored. This may be what the author intends.

Backwards Compatibility {#backward}
===================================

Entire chapter is deleted.

Extensibility {#extend}
=======================

Delete section 23.3: The <{foreignObject}> element.
