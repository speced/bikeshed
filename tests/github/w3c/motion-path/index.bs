<h1>Motion Path Module Level 1</h1>
<pre class='metadata'>
Level: 1
Status: ED
ED: http://dev.w3.org/fxtf/motion-1/
Shortname: motion
Group: fxtf
Link Defaults: css-shapes-1 (type) <basic-shape>, css-transforms-1 (property) transform/transform-origin
Editor: Dirk Schulze, Adobe Systems Inc., dschulze@adobe.com
Abstract: Motion paths allow authors to animate any graphical object along an author specified path.
</pre>

<h2 id="intro">Introduction</h2>

<em>This section is not normative.</em>

Authors have possibilities to position objects like elements, boxes or containers relative to each other or absolutely in their own coordinate system. CSS Transforms extend these possibilities with a set of transform functions allowing authors to mutate the object's local coordinate system. With CSS Animations and CSS Transitions, these static placements can change over a given period of time. Both kind of animations are powerful to express transitions in time but not suitable to describe transitions of location of an object over time.

This specification allows authors to specify an <a>motion path</a>. The object can be transitioned along this motion path over a given period of time. The time may be static if no animation was specified.

<div class="example">
  <p>In the following example, a schematic of an air plane is animated along a motion path. The plane faces in the direction of the motion path at each position on the path.
  <div class=figure>
    <img src="images/motion-path.svg" width="470" height="120" alt="Example Motion Path">
    <p class=caption>A black plane at different positions on a blue dotted motion path, rotated in the direction of the path.</p>
  </div>
</div>

A motion path may consist of a <<basic-shape>> like <<circle()>>, <<inset()>> or <<polygon()>>. To allow authors to specify curves and sub-paths, this specification adds the <<path()>> function in addition to the existing <<basic-shape>> functions. The <<path()>> function takes an SVG Path string as input [[!SVG11]]. As a third option, authors can reference an SVG <a href="">graphics element</a> by <<url>> which is used as motion path.

<h2 id="placement">Module interactions</h2>

This specification defines a set of CSS properties that affect the visual rendering of elements to which those properties are applied. These effects are applied after elements have been sized and positioned according to the <a href="http://www.w3.org/TR/CSS2/visuren.html" title="Visual formatting model">Visual formatting model</a> from [[!CSS21]]. Some values of these properties result in the creation of a <a spec="css21">stacking context</a>.

Some CSS properties in this specification manipulate the user coordinate system of the element by transformations. These transformations are pre-multiplied to transformations specified by the 'transform' property or deriving properties.

The term <a href="">object bounding box</a> follows the definition in SVG 1.1 [[!SVG11]].

<h2 id="values">Values</h2>

This specification follows the <a href="http://www.w3.org/TR/CSS21/about.html#property-defs">CSS property definition conventions</a> from [[!CSS21]]. Basic shapes are defined in CSS Shapes Module Level 1 [[!CSS-SHAPES]]. Value types not defined in these specifications are defined in CSS Values and Units Module Level 3 [[!CSS3VAL]]. Basic shapes are extended by the <<path()>> basic shape function.

In addition to the property-specific values listed in their definitions, all properties defined in this specification also accept CSS-wide keywords such as <a href="http://www.w3.org/TR/CSS21/cascade.html#value-def-inherit">inherit</a> as their property value [[!CSS3VAL]]. For readability it has not been repeated explicitly.

<h2 id="motion-paths-overview">Motion Paths</h2>

ISSUE: Add more details and examples.

<h3 id="motion-path-property">Motion path: The 'motion-path' property</h3>

<pre class='propdef'>
Name: motion-path
Value: <<url>> | [ <<basic-shape>> | <<path()>> ] || <<geometry-box>> | none
Initial: none
Applies to: All elements. In SVG, it applies to <a href="">container elements</a> excluding the <a href="">defs</a> element and all <a href="">graphics elements</a>
Inherited: no
Percentages: n/a
Computed value: as specified
Media: visual
Animatable: no
</pre>

Specifies the <a>motion path</a> the element gets positioned at. The exact element's position on the motion path is determined by the 'motion-position' property. A <dfn>motion path</dfn> is either a specified path with one or multiple sub-paths or the geometry of a not styled basic shape. Each shape or path must define an <dfn>initial position</dfn> and an <dfn>initial direction</dfn>.

In this specification a direction (or rotation) of 0 degree is equivalent to the direction of the positive x-axis, so 0 degree points to the right side.

Values have the following meanings:

<dl dfn-for="motion-path">
  <dt><<basic-shape>></dt>
  <dd>
    The motion path is a basic shape as specified in CSS Shapes [[!CSS-SHAPES]]. The initial position and the initial direction for basic shapes are defined as follows:
    <dl>
      <dt><<circle()>></dt>
      <dt><<ellipse()>></dt>
      <dd>The initial position is defined by the point where a virtual tangent to the circle/ellipse would reach the top vertical position. The initial direction is 0 degree.</dd>
      <dt><<inset()>></dt>
      <dd>The initial position is defined by the left top corner of the rectangle. The initial direction is 0 degree.</dd>
      <dt><<polygon()>></dt>
      <dd>The initial position is defined by the first coordinate pair of the polygon. The initial direction is defined by the vector connecting the initial position with the next following coordinate pair that isn't equal to the initial position. If there is no such unequal coordinate pair, the initial direction is defined with 0 degree.</dd>
    </dl>
  </dd>
  <dt><dfn>path()</dfn> = path([ <<fill-rule>> ,]? <<string>>)</dt>
  <dd>
    <p>The <<string>> represents an SVG Path data string. The path data string must be conform to the grammar and parsing rules of SVG 1.1 [[!SVG11]]. The initial position is defined by the first “move to” argument in the path string. For the initial direction follow SVG 1.1 [[!SVG11]].
    <p><<fill-rule>> - The filling rule used to determine the interior of the path. See 'fill-rule' property in SVG for details. Possible values are ''nonzero'' or ''evenodd''. Default value when omitted is ''nonzero''.
    <p class="issue">There have been requests to support <<length>> and <<percentage>> units for coordinates as well. Should we support them?
  </dd>
  <dt><<url>></dt>
  <dd>
    References an SVG <a href="">graphics element</a> and uses it's geometry as motion path. See SVG 1.1 for more information about the initial position and initial direction [[!SVG11]].
  </dd>
  <dt dfn-type=value><dfn>none</dfn></dt>
  <dd>No motion path gets created.</dd>
</dl>

A computed value of other than ''none'' results in the creation of a <a spec="css21">stacking context</a> [[!CSS21]] the same way that CSS 'opacity' [[CSS3COLOR]] does for values other than ''1'', unless the element is an SVG element with out an associated CSS layout box.

A reference that fails to download, is not a reference to an SVG <a href="">graphics element</a> element, or is non-existent is ignored. No motion path and no stacking context is created.

See the section <a href="#motion-processing">“Motion processing”</a> for how to process a motion path.

For SVG elements without associated CSS layout box, the <a>used value</a> for <a value for=mask-clip>content-box</a>, <a value for=mask-clip>padding-box</a>, <a value for=mask-clip>border-box</a> and <a value for=mask-clip>margin-box</a> is <a value for=clip-path>fill-box</a>.

For elements with associated CSS layout box, the <a>used value</a> for <a value for=clip-path>fill-box</a>, <a value for=clip-path>stroke-box</a> and <a value for=clip-path>view-box</a> is <a value for=mask-clip>border-box</a>.

<h3 id="motion-position">Position on motion path: The 'motion-position' property</h3>

<pre class='propdef'>
Name: motion-position
Value: <<length>> | <<percentage>>
Initial: 0
Applies to: All elements. In SVG, it applies to <a href="">container elements</a> excluding the <a href="">defs</a> element and all <a href="">graphics elements</a>
Inherited: no
Percentages: refer to the total path length
Computed value: as specified
Media: visual
Animatable: yes
</pre>

A distance that describes the position along the specified <a>motion path</a>.

ISSUE: Should the property be renamed to motion-distance instead? After all, the author defines a distance and not a point, even though the result will be an element positioned at the distance on the motion path.

<dl dfn-for="motion-position" dfn-type="value">
  <dt><<percentage>></dt>
  <dt><<length>></dt>
  <dd>The distance from the <a>initial position</a> of the shape or path to the position of the element. Percentages are relative to the total path length including all sub-paths.</dd>
</dl>

<div class="issue">
What happens if the position is negative or exceeds the <a>motion path</a> length?
<ul>
  <li>Cutting-off values to be between 0% and 100%.</li>
  <li>Use negative distance from the end of the path and jump to 0 after that. Continue till the end of the path and continue from the beginning again.</li>
  <li>Adjust the time the same way as we adjust radial gradients on negative color stop offsets and position at beginning/end of path.</li>
</ul>
</div>

See the section <a href="#motion-processing">“Motion processing”</a> for how to process a motion position.

<h3 id="motion-rotation">Rotation at point: The 'motion-rotation' property</h3>

<pre class='propdef'>
Name: motion-rotation
Value: [ auto | reverse ] && <<angle>>
Initial: auto
Applies to: All elements. In SVG, it applies to <a href="">container elements</a> excluding the <a href="">defs</a> element and all <a href="">graphics elements</a>
Inherited: no
Percentages: n/a
Computed value: as specified
Media: visual
Animatable: yes
</pre>

Defines the direction of the element while positioning along the <a>motion path</a>.

Values have the following meanings:

<dl dfn-for="mask-rotation" dfn-type="value">
  <dt><dfn>auto</dfn></dt>
  <dd>Indicates that the object is rotated (over time if 'motion-position' is animated) by the angle of the direction (i.e., directional tangent vector) of the <a>motion path</a>. If specified in combination with <<angle>>, the computed value of <<angle>> is added to the computed value of ''auto''.</dd>
  <dt><dfn>reverse</dfn></dt>
  <dd>
    <p>Indicates that the object is rotated (over time if 'motion-position' is animated) by the angle of the direction (i.e., directional tangent vector) of the <a>motion path</a> plus 180 degrees. If specified in combination with <<angle>>, the computed value of <<angle>> is added to the computed value of ''reverse''.
      <p class="note">This is the same as specifying ''auto 180deg''.
  </dd>
  <dt><<angle>></dt>
  <dd>Indicates that the element has a constant rotation transformation applied to it by the specified rotation angle. See definitions of ''auto'' or ''reverse'' if specified in combination with either one of the keywords. For the purpose of this argument, ''0deg'' points to the right side in the direction of the positive x-axis, and positive angles represent clockwise rotation, so ''90deg'' point toward the bottom.</dd>
</dl>

Note: The rotation described here does not override or replace any rotation defined by the 'transform' property.

<div class="example">
  The following three examples use the shape of a plane. The red dot in the middle of the shape indicates the origin of the shape.
  <div class=figure>
    <img src="images/plane.svg" width="160" height="140" alt="Shape with its origin">
    <p class=caption>A red dot in the middle of a plane shape indicates the shape's origin.</p>
  </div>
  <p>In the first example, the 'motion-rotation' property is set to ''auto''. The shape's point of origin is placed at different positions along the motion path. The shape is rotated based on the gradient at the current position and faces the direction of the motion path at this position.</p>
  <div class=figure>
    <img src="images/motion-path.svg" width="470" height="120" alt="Motion Path with auto rotation">
    <p class=caption>A black plane at different positions on a blue dotted motion path, rotated in the direction of the path.</p>
  </div>
  <p>In this example, the 'motion-rotation' property is set to ''reverse''. The plane faces the opposite direction of the motion path at each position on the motion path.
  <div class=figure>
    <img src="images/motion-rotation-reverse.svg" width="470" height="120" alt="Motion Path with reverse auto rotation">
    <p class=caption>A black plane at different positions on a blue dotted motion path, rotated in the opposite direction of the path.</p>
  </div>
  <p>The last example sets the 'motion-rotation' property to ''-45deg''. The shape is rotated by -45 degree once and keeps the rotation at each position on the motion path.
  <div class=figure>
    <img src="images/motion-rotation-45.svg" width="470" height="120" alt="Motion Path with fixed rotation">
    <p class=caption>A black plane at different positions on a blue dotted path, rotated by a fixed amount of degree.</p>
  </div>
</div>

ISSUE: More natural names requested for ''auto'' and ''reverse''.

See the section <a href="#motion-processing">“Motion processing”</a> for how to process a motion rotation.

<h3 id="motion-shorthand">Motion shorthand: The 'motion' property</h3>

<pre class='propdef'>
Name: motion
Value: &lt;'motion-path'> && &lt;'motion-position'> && &lt;'motion-rotation'>
Initial: see individual properties
Applies to: All elements. In SVG, it applies to <a href="">container elements</a> excluding the <a href="">defs</a> element and all <a href="">graphics elements</a>
Inherited: no
Percentages: see individual properties
Computed value: see individual properties
Media: visual
Animatable: see individual properties
</pre>

This is a shorthand property for setting 'motion-path', 'motion-position' and 'motion-rotation'. Omitted values are set to their initial values.

<h3 id="motion-processing">Motion processing</h3>

<dl class="switch">
<dt>If 'motion-path' specifies a valid basic shape, path or references a valid SVG <a href="">graphics element</a>:</dt>
<dd>
  <ol>
    <li>Let <var>path</var> be the geometry of the specified basic shape, path or SVG <a href="">graphics element</a> reference.</li>
    <li>Let <var>totalLength</var> be the total length of <var>path</var> with all sub-paths.</li>
    <li>Let <var>distance</var> be the compute value of 'motion-position':
      <dl class="switch">
        <dt>If <var>distance</var> is &lt; 0:</dt>
        <dd>Set <var>distance</var> to 0.</dd>
        <dt>If <var>distance</var> is > <var>totalLength</var>:</dt>
        <dd>Set <var>distance</var> to <var>totalLength</var>.</dd>
      </dl>
    </li>
    <li>
      <p>Let <var>position</var> be the coordinate pair at the distance <var>distance</var> on <var>path</var>.
      <p class="issue">Do we need to say how to get the position in more detail?</p>
    </li>
    <li>Create the supplemental transformation matrix <var>transform</var> to the local coordinate system of the element.</li>
    <li>Translate <var>transform</var> by <var>position</var>.</li>
    <li>
      <p>Let <var>rotate</var> be the computed value of 'motion-rotation' due to <var>path</var>.
      <p class="issue">This should be far more explicit.</p>
    </li>
    <li>Post-multiply the rotation <var>rotate</var> to <var>transform</var>.</li>
    <li>Post-multiply <var>transform</var> to the local coordinate system of the element.</li>
  </ol>
</dd>
<dt>Otherwise:</dt>
<dd>Do nothing.</dd>
</dl>

ISSUE: Do we need to specify an origin of the element in motion so that it can be positioned accordingly before the motion? Something like motion-origin? Should we reuse 'transform-origin'? (Probably not since the ''z'' coordinate doesn't make any sense.)
