LINE 74:6: Saw '''. This is probably a typo intended to be a double apostrophe, starting a CSS maybe autolink; if not, please escape some of the apostrophes.
LINE 74:24: Saw '''. This is probably a typo intended to be a double apostrophe, starting a CSS maybe autolink; if not, please escape some of the apostrophes.
LINE 226: The var 'keyArg' (in algorithm 'to register a custom highlight') is only used once.
If this is not a typo, please add an ignore='' attribute to the <var>.
LINE 227: The var 'valueArg' (in algorithm 'to register a custom highlight') is only used once.
If this is not a typo, please add an ignore='' attribute to the <var>.
LINE 225: No 'dfn' refs found for 'context object' that are marked for export.
[=context object=]
LINE 233: Multiple possible 'identifier' dfn refs.
Arbitrarily chose https://drafts.csswg.org/css-values-4/#css-css-identifier
To auto-select one of the following refs, insert one of these lines into a <pre class=link-defaults> block:
spec:css-values-4; type:dfn; text:identifier
spec:webidl; type:dfn; text:identifier
[=identifier=]
LINE 262: No 'property' refs found for 'foo'.
'foo'
LINE 262: No 'property' refs found for 'bar'.
'bar'
LINE 266: No 'property' refs found for 'foo'.
'foo'
LINE 266: No 'property' refs found for 'bar'.
'bar'
LINE 267: No 'property' refs found for 'bar'.
'bar'
LINE 490: No 'dfn' refs found for 'highlight regsitry'.
[=highlight regsitry=]
LINE 186: Couldn't find section '#es-add-delete' in spec 'webidl':
[[webidl#es-add-delete]]
LINE 224: Couldn't find section '#es-map-set' in spec 'webidl':
[[webidl#es-map-set]]
LINE 533: W3C policy requires Privacy Considerations and Security Considerations to be separate sections, but you appear to have them combined into one.
LINE 240: Couldn't find target document section styling-problems-with-multiple-names-per-highlight:
[[#styling-problems-with-multiple-names-per-highlight]]
LINE 232: RFC2119 keyword in non-normative section (use: might, can, has to, or override with <span class=allow-2119>): , authors are recommended to use a
	
<p bs-line-number="232" class="note"><span class="marker">Note:</span> When registering a <a bs-line-number="232" bs-autolink-syntax="[=custom highlight=]" data-link-type="dfn" data-lt="custom highlight" href="#custom-highlight" id="ref-for-custom-highlight⑧" data-silently-dedup="">custom highlight</a>, authors are recommended to use a
	<a bs-line-number="233" bs-autolink-syntax="[=custom highlight name=]" data-link-type="dfn" data-lt="custom highlight name" href="#custom-highlight-name" id="ref-for-custom-highlight-name①" data-silently-dedup="">custom highlight name</a> that is a valid CSS <a bs-line-number="233" bs-autolink-syntax="[=identifier=]" data-link-type="dfn" data-lt="identifier" href="https://drafts.csswg.org/css-values-4/#css-css-identifier" id="ref-for-css-css-identifier" data-silently-dedup="">identifier</a>. Using a name that is not a valid
	identifier can make the highlight hard, and in some cases impossible, to style via CSS.</p>
LINE 236: RFC2119 keyword in non-normative section (use: might, can, has to, or override with <span class=allow-2119>): . This may be limiting for authors and may cause confusing painting behavior
	(see the 
<p bs-line-number="236" class="note"><span class="marker">Note:</span> It is possible to <a bs-line-number="236" bs-autolink-syntax="[=register=]" data-link-type="dfn" data-lt="register" href="#registered" id="ref-for-registered⑤" data-silently-dedup="">register</a> a <a bs-line-number="236" bs-autolink-syntax="[=custom highlight=]" data-link-type="dfn" data-lt="custom highlight" href="#custom-highlight" id="ref-for-custom-highlight⑨" data-silently-dedup="">custom highlight</a> with more than one <a bs-line-number="236" bs-autolink-syntax="[=custom highlight name=]" data-link-type="dfn" data-lt="custom highlight name" href="#custom-highlight-name" id="ref-for-custom-highlight-name②" data-silently-dedup="">custom highlight name</a>.
	However, using more than one name to style a highlight will assign the highlight multiple different sets
	of styles, without a way to control the stacking order of conflicting styles within these sets
	during <a bs-line-number="239" bs-autolink-syntax="[[#painting]]" href="#painting" data-section="">painting</a>. This may be limiting for authors and may cause confusing painting behavior
	(see the <a bs-line-number="240" bs-autolink-syntax="[[#styling-problems-with-multiple-names-per-highlight]]" href="#styling-problems-with-multiple-names-per-highlight" data-section="">example</a> below for more context). Therefore,
	<b bs-line-number="241">it is recommended that authors only use one name per highlight during styling</b>.</p>
LINE 241: RFC2119 keyword in non-normative section (use: might, can, has to, or override with <span class=allow-2119>): it is recommended that authors only use one name per highlight during styling
<b bs-line-number="241">it is recommended that authors only use one name per highlight during styling</b>
LINE 262: RFC2119 keyword in non-normative section (use: might, can, has to, or override with <span class=allow-2119>): , authors may
		expect the last rule to win in cascading order and the highlighted content to be green. However, each highlight
		name gets an independent set of highlight styles, and the highlight will be painted once per name. In
		this case, because 
<p bs-line-number="262">In the example above, the same <a bs-line-number="262" bs-autolink-syntax="[=custom highlight=]" data-link-type="dfn" data-lt="custom highlight" href="#custom-highlight" id="ref-for-custom-highlight①⓪" data-silently-dedup="">custom highlight</a> object is <a bs-line-number="262" bs-autolink-syntax="[=registered=]" data-link-type="dfn" data-lt="registered" href="#registered" id="ref-for-registered⑥" data-silently-dedup="">registered</a> under the names <a bs-line-number="262" bs-autolink-syntax="'foo'" data-link-type="property" data-lt="foo" class="property">foo</a> and <span bs-line-number="262" bs-autolink-syntax="'bar'" data-lt="bar" class="property">bar</span>.
		Since each of the <a bs-line-number="263" bs-autolink-syntax="[=style rules=]" data-link-type="dfn" data-lt="style rules" href="https://drafts.csswg.org/css-syntax-3/#style-rule" id="ref-for-style-rule" data-silently-dedup="">style rules</a> target the same highlight and have the same <a bs-line-number="263" bs-autolink-syntax="[=specificity=]" data-link-type="dfn" data-lt="specificity" href="https://drafts.csswg.org/selectors-4/#specificity" id="ref-for-specificity" data-silently-dedup="">specificity</a>, authors may
		expect the last rule to win in cascading order and the highlighted content to be green. However, each highlight
		name gets an independent set of highlight styles, and the highlight will be painted once per name. In
		this case, because <span bs-line-number="266" bs-autolink-syntax="'foo'" data-lt="foo" class="property">foo</span> was registered before <span bs-line-number="266" bs-autolink-syntax="'bar'" data-lt="bar" class="property">bar</span>, the highlight will be first painted with <span bs-line-number="266" bs-autolink-syntax="'foo'" data-lt="foo" class="property">foo</span>’s
		color (green) and then with <span bs-line-number="267" bs-autolink-syntax="'bar'" data-lt="bar" class="property">bar</span>’s color (red). As a result, the highlighted content will appear red.</p>
