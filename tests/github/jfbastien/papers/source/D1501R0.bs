<pre class='metadata'>
Title: Feedback on <code>std::audio</code>
Shortname: D1501
Revision: 0
!Draft Revision: 0
Audience: SG13
Status: D
Group: WG21
URL: http://wg21.link/D1501R0
!Source: <a href="https://github.com/jfbastien/papers/blob/master/source/D1501R0.bs">github.com/jfbastien/papers/blob/master/source/D1501R0.bs</a>
Editor: Richard Powell, Apple, richardp@apple.com
Editor: Sophia Poirier, Apple, spoirier@apple.com
Editor: Dan Klingler, Apple, dklingler@apple.com
Editor: Tony Guetta, Apple, aguetta@apple.com
No abstract: true
Date: 2019-02-21
Markup Shorthands: markdown yes
</pre>

We’ve gathered input from a variety of folks involved in audio at Apple, and
here is our joint, considered position regarding the `std::audio` proposal in
[[P1386R0]].

Audio is important to the Apple ecosystem. The type system, and determinism of
C++ lends itself well to the audio software domain. In the proposal we like the
formalization of data types and algorithms that are common in the audio domain.
However, we are concerned about the audio device interfaces and requiring C++
systems to have a specific implementation.

Creating a good interface between software and audio hardware is something that
on the surface seems straightforward, but on a practical system is challenging
to implement correctly. This area has typically been fairly platform-specific or
handled by specialist libraries, and may not be immediately amenable to
standardization. We think it’s best not to standardize audio hardware I/O.

Instead of attempting to standardize the interface and mechanism of audio
hardware, providing a common representation of audio data could be an area of
exploration that is suited to the language.
